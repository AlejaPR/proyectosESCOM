{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\jeiso\\\\Desktop\\\\REACT\\\\proyectosESCOM\\\\frontend\\\\ESCOM-view\\\\src\\\\SuperAdministrador\\\\componentes\\\\color.js\";\nimport React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Stepper from '@material-ui/core/Stepper';\nimport Step from '@material-ui/core/Step';\nimport StepButton from '@material-ui/core/StepButton';\nimport Button from '@material-ui/core/Button';\nimport Typography from '@material-ui/core/Typography';\nimport { SketchPicker } from 'react-color';\nexport default class Configuracion extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      activeStep: 0,\n      completed: {}\n    };\n\n    this.completedSteps = () => {\n      return Object.keys(this.state.completed).length;\n    };\n\n    this.allStepsCompleted = () => {\n      return this.completedSteps() === this.totalSteps();\n    };\n\n    this.totalSteps = () => {\n      return this.getSteps().length;\n    };\n\n    this.isLastStep = () => {\n      return this.state.activeStep === this.totalSteps() - 1;\n    };\n\n    this.useStyles = makeStyles(theme => ({\n      root: {\n        width: '100%'\n      },\n      button: {\n        marginRight: theme.spacing(1)\n      },\n      completed: {\n        display: 'inline-block'\n      },\n      instructions: {\n        marginTop: theme.spacing(1),\n        marginBottom: theme.spacing(1)\n      }\n    }));\n\n    this.handleReset = () => {\n      this.setState({\n        activeStep: 0,\n        completed: {}\n      });\n    };\n\n    this.handleComplete = () => {\n      const newCompleted = this.state.completed;\n      newCompleted[this.state.activeStep] = true;\n      this.setState({\n        completed: newCompleted\n      });\n      this.handleNext();\n    };\n\n    this.handleNext = () => {\n      const newActiveStep = this.isLastStep() && !this.allStepsCompleted() ? // It's the last step, but not all steps have been completed,\n      // find the first step that has been completed\n      this.getSteps().findIndex((step, i) => !(i in this.state.completed)) : this.state.activeStep + 1;\n      this.setState({\n        activeStep: newActiveStep\n      });\n    };\n\n    this.handleStep = step => () => {\n      this.setState({\n        activeStep: step\n      });\n    };\n\n    this.handleBack = () => {\n      let cuenta = this.state.activeStep - 1;\n      this.setState({\n        activeStep: cuenta\n      });\n    };\n  }\n\n  getSteps() {\n    return ['Color barra superior', 'Color barra lateral', 'Color de botones', 'Imagen del login', 'Imagen del logo'];\n  }\n\n  getStepContent(step) {\n    switch (step) {\n      case 0:\n        return React.createElement(SketchPicker, {\n          disableAlpha: true,\n          color: \"#FFFFFF\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 29\n          },\n          __self: this\n        });\n\n      case 1:\n        return React.createElement(SketchPicker, {\n          disableAlpha: true,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 31\n          },\n          __self: this\n        });\n\n      case 2:\n        return React.createElement(SketchPicker, {\n          disableAlpha: true,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 33\n          },\n          __self: this\n        });\n\n      case 3:\n        return React.createElement(SketchPicker, {\n          disableAlpha: true,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 35\n          },\n          __self: this\n        });\n\n      default:\n        return 'Unknown step';\n    }\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      className: this.useStyles.root,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 101\n      },\n      __self: this\n    }, React.createElement(Stepper, {\n      nonLinear: true,\n      activeStep: this.state.activeStep,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 102\n      },\n      __self: this\n    }, this.getSteps().map((label, index) => React.createElement(Step, {\n      key: label,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 104\n      },\n      __self: this\n    }, React.createElement(StepButton, {\n      onClick: this.handleStep(index),\n      completed: this.state.completed[index],\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 105\n      },\n      __self: this\n    }, label)))), React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 111\n      },\n      __self: this\n    }, this.allStepsCompleted() ? React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 113\n      },\n      __self: this\n    }, React.createElement(Typography, {\n      className: this.useStyles.instructions,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 114\n      },\n      __self: this\n    }, \"All steps completed - you're finished\"), React.createElement(Button, {\n      onClick: this.handleReset,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 117\n      },\n      __self: this\n    }, \"Reset\")) : React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 120\n      },\n      __self: this\n    }, React.createElement(Typography, {\n      className: this.useStyles.instructions,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 121\n      },\n      __self: this\n    }, this.getStepContent(this.state.activeStep)), React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 122\n      },\n      __self: this\n    }, React.createElement(Button, {\n      disabled: this.state.activeStep === 0,\n      onClick: this.handleBack,\n      className: this.useStyles.button,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 123\n      },\n      __self: this\n    }, \"Back\"), React.createElement(Button, {\n      variant: \"contained\",\n      color: \"primary\",\n      onClick: this.handleNext,\n      className: this.useStyles.button,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 126\n      },\n      __self: this\n    }, \"Next\"), this.state.activeStep !== this.getSteps().length && (this.state.completed[this.state.activeStep] ? React.createElement(Typography, {\n      variant: \"caption\",\n      className: this.useStyles.completed,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 136\n      },\n      __self: this\n    }, \"Step \", this.state.activeStep + 1, \" already completed\") : React.createElement(Button, {\n      variant: \"contained\",\n      color: \"primary\",\n      onClick: this.handleComplete,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 140\n      },\n      __self: this\n    }, this.completedSteps() === this.totalSteps() - 1 ? 'Finish' : 'Complete Step'))))));\n  }\n\n}","map":{"version":3,"sources":["C:/Users/jeiso/Desktop/REACT/proyectosESCOM/frontend/ESCOM-view/src/SuperAdministrador/componentes/color.js"],"names":["React","makeStyles","Stepper","Step","StepButton","Button","Typography","SketchPicker","Configuracion","Component","state","activeStep","completed","completedSteps","Object","keys","length","allStepsCompleted","totalSteps","getSteps","isLastStep","useStyles","theme","root","width","button","marginRight","spacing","display","instructions","marginTop","marginBottom","handleReset","setState","handleComplete","newCompleted","handleNext","newActiveStep","findIndex","step","i","handleStep","handleBack","cuenta","getStepContent","render","map","label","index"],"mappings":"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","sourcesContent":["import React from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Stepper from '@material-ui/core/Stepper';\r\nimport Step from '@material-ui/core/Step';\r\nimport StepButton from '@material-ui/core/StepButton';\r\nimport Button from '@material-ui/core/Button';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport { SketchPicker } from 'react-color';\r\n\r\n\r\nexport default class Configuracion extends React.Component {\r\n\r\n\tstate = {\r\n\t\tactiveStep: 0,\r\n\t\tcompleted: {}\r\n\t}\r\n\r\n\tgetSteps() {\r\n\t\treturn ['Color barra superior', 'Color barra lateral', 'Color de botones', 'Imagen del login', 'Imagen del logo'];\r\n\t}\r\n\r\n\tcompletedSteps = () => {\r\n\t\treturn Object.keys(this.state.completed).length;\r\n\t};\r\n\r\n\tgetStepContent(step) {\r\n\t\tswitch (step) {\r\n\t\t\tcase 0:\r\n\t\t\t\treturn (<SketchPicker disableAlpha={true} color=\"#FFFFFF\" />)\r\n\t\t\tcase 1:\r\n\t\t\t\treturn (<SketchPicker disableAlpha={true} />)\r\n\t\t\tcase 2:\r\n\t\t\t\treturn (<SketchPicker disableAlpha={true} />);\r\n\t\t\tcase 3:\r\n\t\t\t\treturn (<SketchPicker disableAlpha={true} />);\r\n\t\t\tdefault:\r\n\t\t\t\treturn 'Unknown step';\r\n\t\t}\r\n\t}\r\n\r\n\tallStepsCompleted = () => {\r\n\t\treturn this.completedSteps() === this.totalSteps();\r\n\t};\r\n\r\n\ttotalSteps = () => {\r\n\t\treturn this.getSteps().length;\r\n\t};\r\n\r\n\tisLastStep = () => {\r\n\t\treturn this.state.activeStep === this.totalSteps() - 1;\r\n\t};\r\n\r\n\tuseStyles = makeStyles(theme => ({\r\n\t\troot: {\r\n\t\t\twidth: '100%',\r\n\t\t},\r\n\t\tbutton: {\r\n\t\t\tmarginRight: theme.spacing(1),\r\n\t\t},\r\n\t\tcompleted: {\r\n\t\t\tdisplay: 'inline-block',\r\n\t\t},\r\n\t\tinstructions: {\r\n\t\t\tmarginTop: theme.spacing(1),\r\n\t\t\tmarginBottom: theme.spacing(1),\r\n\t\t},\r\n\t}));\r\n\r\n\thandleReset = () => {\r\n\t\tthis.setState({ activeStep: 0, completed: {} })\r\n\t};\r\n\r\n\thandleComplete = () => {\r\n\t\tconst newCompleted = this.state.completed;\r\n\t\tnewCompleted[this.state.activeStep] = true;\r\n\t\tthis.setState({ completed: newCompleted })\r\n\t\tthis.handleNext();\r\n\t};\r\n\r\n\thandleNext = () => {\r\n\t\tconst newActiveStep =\r\n\t\t\tthis.isLastStep() && !this.allStepsCompleted()\r\n\t\t\t\t? // It's the last step, but not all steps have been completed,\r\n\t\t\t\t// find the first step that has been completed\r\n\t\t\t\tthis.getSteps().findIndex((step, i) => !(i in this.state.completed))\r\n\t\t\t\t: this.state.activeStep + 1;\r\n\t\tthis.setState({ activeStep: newActiveStep })\r\n\t};\r\n\r\n\thandleStep = step => () => {\r\n\t\tthis.setState({ activeStep: step })\r\n\t};\r\n\r\n\thandleBack = () => {\r\n\t\tlet cuenta = this.state.activeStep - 1;\r\n\t\tthis.setState({ activeStep: cuenta })\r\n\t};\r\n\r\n\trender() {\r\n\t\treturn (\r\n\t\t\t<div className={this.useStyles.root}>\r\n\t\t\t\t<Stepper nonLinear activeStep={this.state.activeStep}>\r\n\t\t\t\t\t{this.getSteps().map((label, index) => (\r\n\t\t\t\t\t\t<Step key={label}>\r\n\t\t\t\t\t\t\t<StepButton onClick={this.handleStep(index)} completed={this.state.completed[index]}>\r\n\t\t\t\t\t\t\t\t{label}\r\n\t\t\t\t\t\t\t</StepButton>\r\n\t\t\t\t\t\t</Step>\r\n\t\t\t\t\t))}\r\n\t\t\t\t</Stepper>\r\n\t\t\t\t<div>\r\n\t\t\t\t\t{this.allStepsCompleted() ? (\r\n\t\t\t\t\t\t<div>\r\n\t\t\t\t\t\t\t<Typography className={this.useStyles.instructions}>\r\n\t\t\t\t\t\t\t\tAll steps completed - you&apos;re finished\r\n            </Typography>\r\n\t\t\t\t\t\t\t<Button onClick={this.handleReset}>Reset</Button>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t) : (\r\n\t\t\t\t\t\t\t<div>\r\n\t\t\t\t\t\t\t\t<Typography className={this.useStyles.instructions}>{this.getStepContent(this.state.activeStep)}</Typography>\r\n\t\t\t\t\t\t\t\t<div>\r\n\t\t\t\t\t\t\t\t\t<Button disabled={this.state.activeStep === 0} onClick={this.handleBack} className={this.useStyles.button}>\r\n\t\t\t\t\t\t\t\t\t\tBack\r\n              </Button>\r\n\t\t\t\t\t\t\t\t\t<Button\r\n\t\t\t\t\t\t\t\t\t\tvariant=\"contained\"\r\n\t\t\t\t\t\t\t\t\t\tcolor=\"primary\"\r\n\t\t\t\t\t\t\t\t\t\tonClick={this.handleNext}\r\n\t\t\t\t\t\t\t\t\t\tclassName={this.useStyles.button}\r\n\t\t\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t\t\tNext\r\n              </Button>\r\n\t\t\t\t\t\t\t\t\t{this.state.activeStep !== this.getSteps().length &&\r\n\t\t\t\t\t\t\t\t\t\t(this.state.completed[this.state.activeStep] ? (\r\n\t\t\t\t\t\t\t\t\t\t\t<Typography variant=\"caption\" className={this.useStyles.completed}>\r\n\t\t\t\t\t\t\t\t\t\t\t\tStep {this.state.activeStep + 1} already completed\r\n                  </Typography>\r\n\t\t\t\t\t\t\t\t\t\t) : (\r\n\t\t\t\t\t\t\t\t\t\t\t\t<Button variant=\"contained\" color=\"primary\" onClick={this.handleComplete}>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t{this.completedSteps() === this.totalSteps() - 1 ? 'Finish' : 'Complete Step'}\r\n\t\t\t\t\t\t\t\t\t\t\t\t</Button>\r\n\t\t\t\t\t\t\t\t\t\t\t))}\r\n\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t)}\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t);\r\n\t}\r\n}"]},"metadata":{},"sourceType":"module"}