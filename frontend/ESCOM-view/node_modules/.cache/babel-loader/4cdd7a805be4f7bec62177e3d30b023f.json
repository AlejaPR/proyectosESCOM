{"ast":null,"code":"import axios from 'axios';\nimport { encriptar, desencriptar } from '../componentes/general/Encriptar.js';\nexport const MOSTRAR_USUARIOS = 'MOSTRAR_USUARIOS';\nexport const AGREGAR_USUARIO = 'AGREGAR_USUARIO';\nexport const INFORMACION_USUARIO = 'INFORMACION_USUARIO';\nexport const ANADIR_CEDULA_EDITAR = \"ANADIR_CEDULA_EDITAR\";\nexport const EDITAR_USUARIO = \"EDITAR_USUARIO\";\nexport const ACTUALIZAR_USUARIOS = 'ACTUALIZAR_USUARIOS';\nexport const LOGIN_USUARIO = 'LOGIN_USUARIO';\nexport function actionLoginUsuario(correo, contrasena, cambiar) {\n  var bcrypt = require('bcryptjs');\n\n  return (dispatch, getState) => {\n    axios.get(\"http://localhost:9090/proyectosESCOM-web/api/login/\" + correo).then(response => {\n      if (response.status == 200) {\n        if (bcrypt.compareSync(contrasena, response.data.contrasena)) {\n          var token = encriptar(response.data.token);\n          localStorage.setItem('Token', token);\n          dispatch({\n            type: LOGIN_USUARIO,\n            token: token\n          });\n          cambiar('e');\n        }\n      }\n    });\n  };\n}\nexport function actionConsultarUsuarios() {\n  return (dispatch, getState) => {\n    axios.get(\"http://localhost:9090/SuperadministradorESCOM-web/api/usu/\").then(response => {\n      dispatch({\n        type: MOSTRAR_USUARIOS,\n        respuesta: response.data\n      });\n    });\n  };\n}\nexport function actionAgregarUsuario(usuario, token) {\n  var tokenRequest = desencriptar(token);\n  const headers = {\n    'Content-Type': 'application/json',\n    'TokenAuto': tokenRequest\n  };\n  return (dispatch, getState) => {\n    axios.post(\"http://localhost:9090/proyectosESCOM-web/api/usuario\", usuario, {\n      headers: headers\n    }).then(response => {\n      dispatch({\n        type: AGREGAR_USUARIO,\n        usuarioARegistrar: usuario\n      });\n    });\n  };\n}\nexport function actionCargarInformacionDeUsuario(cedula) {\n  return (dispatch, getState) => {\n    axios.get(\"http://localhost:9090/SuperadministradorESCOM-web/api/usu/\" + cedula).then(response => {\n      dispatch({\n        type: INFORMACION_USUARIO,\n        informacionUsuario: response.data\n      });\n    });\n  };\n}\nexport function actionAsignarCedula(cedula) {\n  return (dispatch, getState) => {\n    dispatch({\n      type: ANADIR_CEDULA_EDITAR,\n      cedula: cedula\n    });\n  };\n}\nexport function actionActualizarUsuarios(usuario) {\n  return (dispatch, getState) => {\n    dispatch({\n      type: ACTUALIZAR_USUARIOS,\n      usuario: usuario\n    });\n  };\n}\nexport function actionEditarUsuario(usuario, cedula) {\n  return (dispatch, getState) => {\n    axios.put(\"http://localhost:9090/SuperadministradorESCOM-web/api/usu/\" + cedula, usuario).then(response => {\n      console.log(\"RESULTADO\", response.status);\n    });\n    ;\n    dispatch({\n      type: EDITAR_USUARIO,\n      payload: usuario\n    });\n  };\n}","map":{"version":3,"sources":["C:\\Users\\jeiso\\Desktop\\REACT\\proyectosESCOM\\frontend\\ESCOM-view\\src\\SuperAdministrador\\actions\\actionsUsuario.js"],"names":["axios","encriptar","desencriptar","MOSTRAR_USUARIOS","AGREGAR_USUARIO","INFORMACION_USUARIO","ANADIR_CEDULA_EDITAR","EDITAR_USUARIO","ACTUALIZAR_USUARIOS","LOGIN_USUARIO","actionLoginUsuario","correo","contrasena","cambiar","bcrypt","require","dispatch","getState","get","then","response","status","compareSync","data","token","localStorage","setItem","type","actionConsultarUsuarios","respuesta","actionAgregarUsuario","usuario","tokenRequest","headers","post","usuarioARegistrar","actionCargarInformacionDeUsuario","cedula","informacionUsuario","actionAsignarCedula","actionActualizarUsuarios","actionEditarUsuario","put","console","log","payload"],"mappings":"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","sourcesContent":["import axios from 'axios';\r\nimport { encriptar,desencriptar } from '../componentes/general/Encriptar.js';\r\n\r\nexport const MOSTRAR_USUARIOS = 'MOSTRAR_USUARIOS'\r\nexport const AGREGAR_USUARIO = 'AGREGAR_USUARIO'\r\nexport const INFORMACION_USUARIO = 'INFORMACION_USUARIO'\r\nexport const ANADIR_CEDULA_EDITAR = \"ANADIR_CEDULA_EDITAR\"\r\nexport const EDITAR_USUARIO = \"EDITAR_USUARIO\"\r\nexport const ACTUALIZAR_USUARIOS = 'ACTUALIZAR_USUARIOS';\r\nexport const LOGIN_USUARIO = 'LOGIN_USUARIO';\r\n\r\n\r\nexport function actionLoginUsuario(correo, contrasena,cambiar) {\r\n    var bcrypt = require('bcryptjs');\r\n    return (dispatch, getState) => {\r\n        axios.get(\"http://localhost:9090/proyectosESCOM-web/api/login/\" + correo)\r\n            .then(response => {\r\n                if (response.status == 200) {\r\n                    if (bcrypt.compareSync(contrasena, response.data.contrasena)) {\r\n                        var token = encriptar(response.data.token);\r\n                        localStorage.setItem('Token', token);\r\n                        dispatch({\r\n                            type: LOGIN_USUARIO,\r\n                            token: token\r\n                        });\r\n                        cambiar('e');\r\n                    }\r\n                }\r\n            });\r\n    };\r\n}\r\n\r\nexport function actionConsultarUsuarios() {\r\n    return (dispatch, getState) => {\r\n        axios.get(\"http://localhost:9090/SuperadministradorESCOM-web/api/usu/\")\r\n            .then(response => {\r\n                dispatch({\r\n                    type: MOSTRAR_USUARIOS,\r\n                    respuesta: response.data\r\n                });\r\n            });\r\n    };\r\n}\r\n\r\nexport function actionAgregarUsuario(usuario,token) {\r\n    var tokenRequest=desencriptar(token);\r\n    const headers = {\r\n        'Content-Type': 'application/json',\r\n        'TokenAuto': tokenRequest\r\n      }\r\n    return (dispatch, getState) => {\r\n        axios.post(\"http://localhost:9090/proyectosESCOM-web/api/usuario\", usuario,{headers:headers})\r\n            .then(response => {\r\n                dispatch({\r\n                    type: AGREGAR_USUARIO,\r\n                    usuarioARegistrar: usuario\r\n                });\r\n            });\r\n    }\r\n}\r\n\r\nexport function actionCargarInformacionDeUsuario(cedula) {\r\n    return (dispatch, getState) => {\r\n        axios.get(\"http://localhost:9090/SuperadministradorESCOM-web/api/usu/\" + cedula)\r\n            .then(response => {\r\n                dispatch({\r\n                    type: INFORMACION_USUARIO,\r\n                    informacionUsuario: response.data\r\n                });\r\n            });\r\n    };\r\n}\r\n\r\nexport function actionAsignarCedula(cedula) {\r\n    return (dispatch, getState) => {\r\n        dispatch({\r\n            type: ANADIR_CEDULA_EDITAR,\r\n            cedula: cedula\r\n        });\r\n    }\r\n}\r\n\r\nexport function actionActualizarUsuarios(usuario) {\r\n    return (dispatch, getState) => {\r\n        dispatch({\r\n            type: ACTUALIZAR_USUARIOS,\r\n            usuario: usuario\r\n        });\r\n    }\r\n}\r\n\r\nexport function actionEditarUsuario(usuario, cedula) {\r\n    return (dispatch, getState) => {\r\n        axios.put(\"http://localhost:9090/SuperadministradorESCOM-web/api/usu/\" + cedula, usuario).then(response => {\r\n            console.log(\"RESULTADO\", response.status);\r\n        });;\r\n\r\n        dispatch({\r\n            type: EDITAR_USUARIO,\r\n            payload: usuario\r\n        });\r\n    }\r\n}\r\n"]},"metadata":{},"sourceType":"module"}