{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\jeiso\\\\Desktop\\\\proyectosESCOM\\\\frontend\\\\ESCOM-view\\\\src\\\\ModuloDocumental\\\\components\\\\ProcessUser\\\\userActivity.js\";\nimport React from 'react';\nimport { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { withRouter } from 'react-router-dom';\nimport { getListActivitiesInfo, getActivityId, getListActivitiesAnnex } from '../../redux/actions/activityA.js';\nimport { getConditionId } from '../../redux/actions/conditionA.js';\nimport Alert from '@material-ui/lab/Alert';\nimport AlertTitle from '@material-ui/lab/AlertTitle';\nimport MaterialTable from 'material-table';\nimport VisibilityIcon from '@material-ui/icons/Visibility';\n\nclass ProcessCondition extends Component {\n  componentWillMount() {\n    this.props.getConditionId(localStorage.getItem('Token'), sessionStorage.getItem('condition'));\n    this.props.getListActivitiesInfo(localStorage.getItem('Token'), sessionStorage.getItem('condition'));\n    this.props.getListActivitiesAnnex(localStorage.getItem('Token'), sessionStorage.getItem('condition'));\n  }\n\n  save(id) {\n    sessionStorage.setItem('activity', id);\n    this.props.history.push('/AddInformation');\n  }\n\n  saveAnnex(id) {\n    sessionStorage.setItem('activity', id);\n    this.props.history.push('/AddAnnex');\n  }\n\n  loadCondition() {\n    return React.createElement(\"div\", {\n      className: \"pg\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 31\n      },\n      __self: this\n    }, React.createElement(\"h5\", {\n      className: \"text-center\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 32\n      },\n      __self: this\n    }, React.createElement(\"strong\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 32\n      },\n      __self: this\n    }, this.props.conditionPro.name)), React.createElement(\"h6\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 33\n      },\n      __self: this\n    }, React.createElement(\"strong\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 33\n      },\n      __self: this\n    }, \"Descripci\\xF3n:\")), React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 34\n      },\n      __self: this\n    }, this.props.conditionPro.description));\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      className: \"container color\",\n      style: {\n        width: \"90%\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 43\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"text-left titulo\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 44\n      },\n      __self: this\n    }, React.createElement(\"h4\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 45\n      },\n      __self: this\n    }, \"Informaci\\xF3n de la condici\\xF3n\")), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 47\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      className: \"shadow\",\n      style: {\n        background: \"#FFFFFF\",\n        padding: \"30px\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 48\n      },\n      __self: this\n    }, this.props.enabledI || this.props.enabledA ? React.createElement(\"div\", {\n      className: \"col-sm-12\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 50\n      },\n      __self: this\n    }, React.createElement(Alert, {\n      severity: \"error\",\n      variant: \"outlined\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 51\n      },\n      __self: this\n    }, React.createElement(AlertTitle, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 52\n      },\n      __self: this\n    }, \"Sin permiso\"), \"No tiene permisos suficientes para listar las condiciones\")) : React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 55\n      },\n      __self: this\n    }, this.loadCondition(), React.createElement(\"hr\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 57\n      },\n      __self: this\n    }), React.createElement(MaterialTable, {\n      title: \"Lista actividades informativas\",\n      localization: {\n        header: {\n          actions: ' '\n        },\n        pagination: {\n          nextTooltip: 'Siguiente ',\n          previousTooltip: 'Anterior',\n          labelDisplayedRows: '{from}-{to} de {count}',\n          lastTooltip: 'Ultima pagina',\n          firstTooltip: 'Primera pagina',\n          labelRowsSelect: 'Registros',\n          firstAriaLabel: 'oooo'\n        },\n        body: {\n          emptyDataSourceMessage: 'Aun no hay ninguna actividad registrada'\n        },\n        toolbar: {\n          searchTooltip: 'Buscar',\n          searchPlaceholder: 'Buscar'\n        }\n      },\n      columns: [{\n        title: '#',\n        field: 'number'\n      }, {\n        title: 'Nombre de la actividad',\n        field: 'name'\n      }, {\n        title: 'Estado',\n        field: 'state',\n        render: rowData => {\n          if (rowData.state === 1) {\n            return 'Activo';\n          } else if (rowData.state === 2) {\n            return 'Finalizado';\n          } else {\n            return React.createElement(\"strong\", {\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 92\n              },\n              __self: this\n            }, \"Por aprobaci\\xF3n\");\n          }\n        }\n      }, {\n        title: '',\n        field: 'id',\n        render: rowData => {\n          return React.createElement(\"div\", {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 100\n            },\n            __self: this\n          }, React.createElement(\"a\", {\n            onClick: () => this.save(rowData.id),\n            \"data-toggle\": \"modal\",\n            \"data-target\": \"#viewModal\",\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 101\n            },\n            __self: this\n          }, React.createElement(VisibilityIcon, {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 102\n            },\n            __self: this\n          })));\n        }\n      }],\n      data: this.props.listActivityInfo,\n      options: {\n        search: true\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 58\n      },\n      __self: this\n    }), React.createElement(\"hr\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 115\n      },\n      __self: this\n    }), React.createElement(MaterialTable, {\n      title: \"Lista de actividades de anexo\",\n      localization: {\n        header: {\n          actions: ' '\n        },\n        pagination: {\n          nextTooltip: 'Siguiente ',\n          previousTooltip: 'Anterior',\n          labelDisplayedRows: '{from}-{to} de {count}',\n          lastTooltip: 'Ultima pagina',\n          firstTooltip: 'Primera pagina',\n          labelRowsSelect: 'Registros',\n          firstAriaLabel: 'oooo'\n        },\n        body: {\n          emptyDataSourceMessage: 'Aun no hay ninguna actividad registrada'\n        },\n        toolbar: {\n          searchTooltip: 'Buscar',\n          searchPlaceholder: 'Buscar'\n        }\n      },\n      columns: [{\n        title: 'Nombre de la actividad',\n        field: 'name'\n      }, {\n        title: 'DescripciÃ³n',\n        field: 'description'\n      }, {\n        title: 'Estado',\n        field: 'state',\n        render: rowData => {\n          if (rowData.state === 1) {\n            return 'Activo';\n          } else if (rowData.state === 2) {\n            return 'Finalizado';\n          } else {\n            return React.createElement(\"strong\", {\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 150\n              },\n              __self: this\n            }, \"Por aprobaci\\xF3n\");\n          }\n        }\n      }, {\n        title: '',\n        field: 'id',\n        render: rowData => {\n          return React.createElement(\"div\", {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 158\n            },\n            __self: this\n          }, React.createElement(\"a\", {\n            onClick: () => this.saveAnnex(rowData.id),\n            \"data-toggle\": \"modal\",\n            \"data-target\": \"#viewModal\",\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 159\n            },\n            __self: this\n          }, React.createElement(VisibilityIcon, {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 160\n            },\n            __self: this\n          })));\n        }\n      }],\n      data: this.props.listActivityAnnex,\n      options: {\n        search: true\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 116\n      },\n      __self: this\n    }))));\n  }\n\n}\n\nfunction mapStateToProps(state) {\n  return {\n    conditionPro: state.condition.conditionR,\n    listActivityInfo: state.activity.listActivityInfoR,\n    listActivityAnnex: state.activity.listActivityAnnexR,\n    enabledI: state.activity.stateActivityList,\n    enabledA: state.activity.stateActivityAnnex\n  };\n}\n\nexport default withRouter(connect(mapStateToProps, {\n  getConditionId,\n  getListActivitiesInfo,\n  getListActivitiesAnnex,\n  getActivityId\n})(ProcessCondition));","map":{"version":3,"sources":["C:/Users/jeiso/Desktop/proyectosESCOM/frontend/ESCOM-view/src/ModuloDocumental/components/ProcessUser/userActivity.js"],"names":["React","Component","connect","withRouter","getListActivitiesInfo","getActivityId","getListActivitiesAnnex","getConditionId","Alert","AlertTitle","MaterialTable","VisibilityIcon","ProcessCondition","componentWillMount","props","localStorage","getItem","sessionStorage","save","id","setItem","history","push","saveAnnex","loadCondition","conditionPro","name","description","render","width","background","padding","enabledI","enabledA","header","actions","pagination","nextTooltip","previousTooltip","labelDisplayedRows","lastTooltip","firstTooltip","labelRowsSelect","firstAriaLabel","body","emptyDataSourceMessage","toolbar","searchTooltip","searchPlaceholder","title","field","rowData","state","listActivityInfo","search","listActivityAnnex","mapStateToProps","condition","conditionR","activity","listActivityInfoR","listActivityAnnexR","stateActivityList","stateActivityAnnex"],"mappings":"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","sourcesContent":["import React from 'react';\r\nimport { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { withRouter } from 'react-router-dom';\r\nimport { getListActivitiesInfo, getActivityId, getListActivitiesAnnex } from '../../redux/actions/activityA.js';\r\nimport { getConditionId } from '../../redux/actions/conditionA.js';\r\n\r\nimport Alert from '@material-ui/lab/Alert';\r\nimport AlertTitle from '@material-ui/lab/AlertTitle';\r\nimport MaterialTable from 'material-table';\r\nimport VisibilityIcon from '@material-ui/icons/Visibility';\r\n\r\nclass ProcessCondition extends Component {\r\n    componentWillMount() {\r\n        this.props.getConditionId(localStorage.getItem('Token'), sessionStorage.getItem('condition'))\r\n        this.props.getListActivitiesInfo(localStorage.getItem('Token'), sessionStorage.getItem('condition'))\r\n        this.props.getListActivitiesAnnex(localStorage.getItem('Token'), sessionStorage.getItem('condition'))\r\n    }\r\n\r\n    save(id) {\r\n        sessionStorage.setItem('activity', id)\r\n        this.props.history.push('/AddInformation')\r\n    }\r\n    saveAnnex(id) {\r\n        sessionStorage.setItem('activity', id)\r\n        this.props.history.push('/AddAnnex')\r\n    }\r\n\r\n    loadCondition() {\r\n        return (\r\n            <div className=\"pg\">\r\n                <h5 className=\"text-center\"><strong>{this.props.conditionPro.name}</strong></h5>\r\n                <h6><strong>DescripciÃ³n:</strong></h6>\r\n                <p>\r\n                    {this.props.conditionPro.description}\r\n                </p>\r\n            </div>\r\n        )\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"container color\" style={{ width: \"90%\" }}>\r\n                <div className=\"text-left titulo\">\r\n                    <h4>InformaciÃ³n de la condiciÃ³n</h4>\r\n                </div>\r\n                <br />\r\n                <div className=\"shadow\" style={{ background: \"#FFFFFF\", padding: \"30px\" }}>\r\n                    {\r\n                        this.props.enabledI || this.props.enabledA ? <div className=\"col-sm-12\">\r\n                            <Alert severity=\"error\" variant=\"outlined\">\r\n                                <AlertTitle>Sin permiso</AlertTitle>\r\n                            No tiene permisos suficientes para listar las condiciones</Alert>\r\n                        </div> :\r\n                            <div>\r\n                                {this.loadCondition()}\r\n                                <hr />\r\n                                <MaterialTable\r\n                                    title=\"Lista actividades informativas\"\r\n                                    localization={{\r\n                                        header: {\r\n                                            actions: ' '\r\n                                        },\r\n                                        pagination: {\r\n                                            nextTooltip: 'Siguiente ',\r\n                                            previousTooltip: 'Anterior',\r\n                                            labelDisplayedRows: '{from}-{to} de {count}',\r\n                                            lastTooltip: 'Ultima pagina',\r\n                                            firstTooltip: 'Primera pagina',\r\n                                            labelRowsSelect: 'Registros',\r\n                                            firstAriaLabel: 'oooo'\r\n                                        },\r\n                                        body: {\r\n                                            emptyDataSourceMessage: 'Aun no hay ninguna actividad registrada'\r\n                                        },\r\n                                        toolbar: {\r\n                                            searchTooltip: 'Buscar',\r\n                                            searchPlaceholder: 'Buscar'\r\n                                        }\r\n                                    }}\r\n                                    columns={[\r\n                                        { title: '#', field: 'number' },\r\n                                        { title: 'Nombre de la actividad', field: 'name' },\r\n                                        {\r\n                                            title: 'Estado', field: 'state',\r\n                                            render: rowData => {\r\n                                                if (rowData.state === 1) {\r\n                                                    return 'Activo'\r\n                                                } else if (rowData.state === 2) {\r\n                                                    return 'Finalizado'\r\n                                                } else {\r\n                                                    return (<strong>Por aprobaciÃ³n</strong>)\r\n                                                }\r\n                                            }\r\n                                        },\r\n                                        {\r\n                                            title: '', field: 'id',\r\n                                            render: rowData => {\r\n                                                return (\r\n                                                    <div>\r\n                                                        <a onClick={() => this.save(rowData.id)} data-toggle=\"modal\" data-target=\"#viewModal\">\r\n                                                            <VisibilityIcon />\r\n                                                        </a>\r\n                                                    </div>\r\n                                                )\r\n                                            }\r\n                                        }\r\n                                    ]}\r\n                                    data={this.props.listActivityInfo}\r\n                                    options={{\r\n                                        search: true\r\n                                    }}\r\n\r\n                                />\r\n                                <hr />\r\n                                <MaterialTable\r\n                                    title=\"Lista de actividades de anexo\"\r\n                                    localization={{\r\n                                        header: {\r\n                                            actions: ' '\r\n                                        },\r\n                                        pagination: {\r\n                                            nextTooltip: 'Siguiente ',\r\n                                            previousTooltip: 'Anterior',\r\n                                            labelDisplayedRows: '{from}-{to} de {count}',\r\n                                            lastTooltip: 'Ultima pagina',\r\n                                            firstTooltip: 'Primera pagina',\r\n                                            labelRowsSelect: 'Registros',\r\n                                            firstAriaLabel: 'oooo'\r\n                                        },\r\n                                        body: {\r\n                                            emptyDataSourceMessage: 'Aun no hay ninguna actividad registrada'\r\n                                        },\r\n                                        toolbar: {\r\n                                            searchTooltip: 'Buscar',\r\n                                            searchPlaceholder: 'Buscar'\r\n                                        }\r\n                                    }}\r\n                                    columns={[\r\n                                        { title: 'Nombre de la actividad', field: 'name' },\r\n                                        { title: 'DescripciÃ³n', field: 'description' },\r\n                                        {\r\n                                            title: 'Estado', field: 'state',\r\n                                            render: rowData => {\r\n                                                if (rowData.state === 1) {\r\n                                                    return 'Activo'\r\n                                                } else if (rowData.state === 2) {\r\n                                                    return 'Finalizado'\r\n                                                } else {\r\n                                                    return (<strong>Por aprobaciÃ³n</strong>)\r\n                                                }\r\n                                            }\r\n                                        },\r\n                                        {\r\n                                            title: '', field: 'id',\r\n                                            render: rowData => {\r\n                                                return (\r\n                                                    <div>\r\n                                                        <a onClick={() => this.saveAnnex(rowData.id)} data-toggle=\"modal\" data-target=\"#viewModal\">\r\n                                                            <VisibilityIcon />\r\n                                                        </a>\r\n                                                    </div>\r\n                                                )\r\n                                            }\r\n                                        }\r\n                                    ]}\r\n                                    data={this.props.listActivityAnnex}\r\n                                    options={{\r\n                                        search: true\r\n                                    }}\r\n\r\n                                />\r\n                            </div>\r\n                    }\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nfunction mapStateToProps(state) {\r\n    return {\r\n        conditionPro: state.condition.conditionR,\r\n        listActivityInfo: state.activity.listActivityInfoR,\r\n        listActivityAnnex: state.activity.listActivityAnnexR,\r\n        enabledI: state.activity.stateActivityList,\r\n        enabledA: state.activity.stateActivityAnnex\r\n    }\r\n}\r\n\r\nexport default withRouter(connect(mapStateToProps, { getConditionId, getListActivitiesInfo, getListActivitiesAnnex, getActivityId })(ProcessCondition));"]},"metadata":{},"sourceType":"module"}