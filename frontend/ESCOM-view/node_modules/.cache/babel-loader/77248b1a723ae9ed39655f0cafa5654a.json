{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\jeiso\\\\Desktop\\\\proyectosESCOM\\\\frontend\\\\ESCOM-view\\\\src\\\\SuperAdministrador\\\\componentes\\\\popup\\\\PopUpUsuario.js\";\nimport React from 'react'; //estilos\n\nimport 'react-notifications/lib/notifications.css'; //componentes\n\nimport Button from '@material-ui/core/Button';\nimport { Modal, ModalHeader, ModalBody, ModalFooter } from 'reactstrap';\nimport { NotificationContainer, NotificationManager } from 'react-notifications';\nimport { reduxForm, Field } from 'redux-form';\nimport { withRouter } from 'react-router-dom';\nimport { generarInput, ReduxFormSelect, generarDate } from '../../utilitario/GenerarInputs.js';\nimport AddIcon from '@material-ui/icons/Add';\nimport SaveAltIcon from '@material-ui/icons/SaveAlt';\nimport CancelIcon from '@material-ui/icons/Cancel'; //redux\n\nimport { actionAgregarUsuario, actionConsultarDocumentos, actualizarMensajeRegistrar } from '../../actions/actionsUsuario.js';\nimport { connect } from 'react-redux';\nimport { fechaNacimiento, seleccione, nombre, apellido, contrasena, correo, documentoIdentificacion, requerido } from '../../utilitario/validacionCampos.js';\n\nclass PopUpUsuario extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.handleSubmit = formValues => {\n      try {\n        var crypto = require('crypto');\n\n        var contrasenaEncryp = crypto.createHmac('sha256', formValues.correo).update(formValues.contrasena).digest('hex');\n        let date = new Date(formValues.fechaNacimiento);\n        debugger;\n        let usuario = {\n          'nombre': formValues.nombre,\n          'apellido': formValues.apellido,\n          'tipoDocumento': formValues.tipoDocumento,\n          'numeroDocumento': formValues.numeroDocumento,\n          'correoElectronico': formValues.correo,\n          'contrasena': contrasenaEncryp,\n          'fechaNacimiento': date,\n          'estado': 'Activo',\n          'datosSolicitud': null\n        };\n        this.props.actionAgregarUsuario(usuario, localStorage.getItem('Token'));\n        this.props.reset();\n      } catch (error) {\n        console.log(error);\n        NotificationManager.error('Ingrese todos los datos');\n      }\n    };\n\n    this.opciones = () => {\n      let respuesta = [];\n      this.props.documentos.forEach(documento => {\n        const idTipoDocumento = documento.idTipoDocumento,\n              tipoDocumento = documento.tipoDocumento;\n        let objeto = {\n          label: tipoDocumento,\n          value: idTipoDocumento\n        };\n        respuesta.push(objeto);\n      });\n      return respuesta;\n    };\n\n    this.state = {\n      modal: false\n    };\n    this.toggle = this.toggle.bind(this);\n  }\n\n  toggle() {\n    this.setState(prevState => ({\n      modal: !prevState.modal\n    }));\n    this.props.reset();\n  }\n\n  componentDidUpdate() {\n    if (this.props.mensaje !== '') {\n      switch (this.props.mensaje) {\n        case 'Usuario registrado':\n          NotificationManager.success('Usuario registrado correctamente');\n          this.props.actualizarMensajeRegistrar('');\n          break;\n\n        case 'Sin permiso':\n          NotificationManager.error('No tiene los permisos suficientes para registrar un usuario');\n          this.props.reset();\n          this.props.actualizarMensajeRegistrar('');\n          break;\n\n        case 'Ya existen los datos registrados previamente':\n          NotificationManager.error('El correo o numero de identificacion ya estan registrados');\n          this.props.reset();\n          this.props.actualizarMensajeRegistrar('');\n          break;\n\n        case 'Servidor fuera de servicio temporalmente':\n          NotificationManager.error('Servidor fuera de servicio temporalmente');\n          this.props.reset();\n          this.props.actualizarMensajeRegistrar('');\n          break;\n\n        default:\n          this.props.history.push('/');\n          break;\n      }\n    }\n  }\n\n  componentWillMount() {\n    this.props.actionConsultarDocumentos(localStorage.getItem('Token'));\n  }\n\n  cargarDocumentos() {\n    return this.props.documentos.map((documento, index) => {\n      const idTipoDocumento = documento.idTipoDocumento,\n            tipoDocumento = documento.tipoDocumento;\n      return React.createElement(\"option\", {\n        className: \"letra\",\n        style: {\n          height: \"35px\",\n          fontSize: \"13px\"\n        },\n        value: idTipoDocumento,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 117\n        },\n        __self: this\n      }, tipoDocumento);\n    });\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 125\n      },\n      __self: this\n    }, React.createElement(Button, {\n      style: {\n        background: this.props.configuracion.botones,\n        fontSize: \"14px\",\n        textTransform: \"none\"\n      },\n      startIcon: React.createElement(AddIcon, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 126\n        },\n        __self: this\n      }),\n      className: \"btn btn-dark\",\n      variant: \"contained\",\n      onClick: this.toggle,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 126\n      },\n      __self: this\n    }, \"Registrar usuario\"), React.createElement(Modal, {\n      isOpen: this.state.modal,\n      toggle: this.toggle,\n      style: {\n        width: \"400px\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 127\n      },\n      __self: this\n    }, React.createElement(ModalHeader, {\n      toggle: this.toggle,\n      style: {\n        height: \"50px\",\n        width: \"400px\"\n      },\n      className: \"center\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 130\n      },\n      __self: this\n    }, \"Crear usuario\"), React.createElement(ModalBody, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 131\n      },\n      __self: this\n    }, React.createElement(\"form\", {\n      onSubmit: this.props.handleSubmit(this.handleSubmit),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 132\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"contenedor-inputs\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 133\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"row\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 134\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"col-sm-12\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 135\n      },\n      __self: this\n    }, React.createElement(Field, {\n      name: \"nombre\",\n      type: \"text\",\n      validate: [requerido, nombre],\n      component: generarInput,\n      label: \"Nombre\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 136\n      },\n      __self: this\n    }))), React.createElement(\"div\", {\n      className: \"row\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 140\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"col-sm-12\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 141\n      },\n      __self: this\n    }, React.createElement(Field, {\n      name: \"apellido\",\n      type: \"text\",\n      validate: [requerido, apellido],\n      component: generarInput,\n      label: \"Apellido\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 142\n      },\n      __self: this\n    }))), React.createElement(\"div\", {\n      className: \"row\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 146\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"col-sm-7\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 147\n      },\n      __self: this\n    }, React.createElement(Field, {\n      name: \"tipoDocumento\",\n      validate: [seleccione],\n      component: ReduxFormSelect,\n      options: this.opciones(),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 148\n      },\n      __self: this\n    }))), React.createElement(\"div\", {\n      className: \"row\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 152\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"col-sm-12\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 153\n      },\n      __self: this\n    }, React.createElement(Field, {\n      name: \"numeroDocumento\",\n      type: \"number\",\n      validate: [requerido, documentoIdentificacion],\n      component: generarInput,\n      label: \"Numero de documento\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 154\n      },\n      __self: this\n    }))), React.createElement(\"div\", {\n      className: \"row\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 158\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"col-sm-12\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 159\n      },\n      __self: this\n    }, React.createElement(Field, {\n      name: \"correo\",\n      type: \"text\",\n      validate: [requerido, correo],\n      component: generarInput,\n      label: \"Correo electronico\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 160\n      },\n      __self: this\n    }))), React.createElement(\"div\", {\n      className: \"row\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 164\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"col-sm-12\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 165\n      },\n      __self: this\n    }, React.createElement(Field, {\n      name: \"contrasena\",\n      validate: [requerido, contrasena],\n      type: \"password\",\n      component: generarInput,\n      label: \"Contrase\\xF1a\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 166\n      },\n      __self: this\n    }))), React.createElement(\"div\", {\n      className: \"row\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 170\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"col-sm-12\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 171\n      },\n      __self: this\n    }, React.createElement(Field, {\n      name: \"fechaNacimiento\",\n      type: \"date\",\n      validate: [requerido, fechaNacimiento],\n      component: generarDate,\n      label: \"Fecha de nacimiento\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 172\n      },\n      __self: this\n    }))), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 175\n      },\n      __self: this\n    })), React.createElement(ModalFooter, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 177\n      },\n      __self: this\n    }, React.createElement(Button, {\n      style: {\n        background: this.props.configuracion.botones,\n        fontSize: \"13px\",\n        fontFamily: \"sans-serif\",\n        textTransform: \"none\"\n      },\n      className: \"btn btn-dark\",\n      variant: \"contained\",\n      startIcon: React.createElement(SaveAltIcon, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 178\n        },\n        __self: this\n      }),\n      type: \"submit\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 178\n      },\n      __self: this\n    }, \"Registrar\"), '', React.createElement(Button, {\n      style: fondoBotonCancelar,\n      className: \"btn btn-dark\",\n      variant: \"contained\",\n      startIcon: React.createElement(CancelIcon, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 179\n        },\n        __self: this\n      }),\n      onClick: this.toggle,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 179\n      },\n      __self: this\n    }, \"Cancelar\"))))), React.createElement(NotificationContainer, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 184\n      },\n      __self: this\n    }));\n  }\n\n}\n\nconst fondoBotonCancelar = {\n  background: \"gray\",\n  fontSize: \"13px\",\n  fontFamily: \"sans-serif\",\n  textTransform: \"none\"\n};\n\nfunction mapStateToProps(state) {\n  return {\n    users: state.user.list,\n    token: state.user.token,\n    documentos: state.user.tiposDocumento,\n    mensaje: state.user.mensajeRegistrar,\n    configuracion: state.conf.configuracion\n  };\n}\n\nlet formulario = reduxForm({\n  form: 'registrarUsuario'\n})(PopUpUsuario);\nexport default withRouter(connect(mapStateToProps, {\n  actionAgregarUsuario,\n  actionConsultarDocumentos,\n  actualizarMensajeRegistrar\n})(formulario));","map":{"version":3,"sources":["C:/Users/jeiso/Desktop/proyectosESCOM/frontend/ESCOM-view/src/SuperAdministrador/componentes/popup/PopUpUsuario.js"],"names":["React","Button","Modal","ModalHeader","ModalBody","ModalFooter","NotificationContainer","NotificationManager","reduxForm","Field","withRouter","generarInput","ReduxFormSelect","generarDate","AddIcon","SaveAltIcon","CancelIcon","actionAgregarUsuario","actionConsultarDocumentos","actualizarMensajeRegistrar","connect","fechaNacimiento","seleccione","nombre","apellido","contrasena","correo","documentoIdentificacion","requerido","PopUpUsuario","Component","constructor","props","handleSubmit","formValues","crypto","require","contrasenaEncryp","createHmac","update","digest","date","Date","usuario","tipoDocumento","numeroDocumento","localStorage","getItem","reset","error","console","log","opciones","respuesta","documentos","forEach","documento","idTipoDocumento","objeto","label","value","push","state","modal","toggle","bind","setState","prevState","componentDidUpdate","mensaje","success","history","componentWillMount","cargarDocumentos","map","index","height","fontSize","render","background","configuracion","botones","textTransform","width","fontFamily","fondoBotonCancelar","mapStateToProps","users","user","list","token","tiposDocumento","mensajeRegistrar","conf","formulario","form"],"mappings":"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","sourcesContent":["import React from 'react';\r\n\r\n//estilos\r\nimport 'react-notifications/lib/notifications.css';\r\n\r\n//componentes\r\nimport Button from '@material-ui/core/Button';\r\nimport { Modal, ModalHeader, ModalBody, ModalFooter } from 'reactstrap';\r\nimport { NotificationContainer, NotificationManager } from 'react-notifications';\r\nimport { reduxForm, Field } from 'redux-form';\r\nimport { withRouter } from 'react-router-dom';\r\nimport { generarInput, ReduxFormSelect, generarDate} from '../../utilitario/GenerarInputs.js'\r\nimport AddIcon from '@material-ui/icons/Add';\r\nimport SaveAltIcon from '@material-ui/icons/SaveAlt';\r\nimport CancelIcon from '@material-ui/icons/Cancel';\r\n\r\n//redux\r\nimport { actionAgregarUsuario, actionConsultarDocumentos, actualizarMensajeRegistrar } from '../../actions/actionsUsuario.js'\r\nimport { connect } from 'react-redux';\r\nimport { fechaNacimiento, seleccione, nombre, apellido, contrasena, correo, documentoIdentificacion, requerido } from '../../utilitario/validacionCampos.js';\r\n\r\nclass PopUpUsuario extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      modal: false\r\n    }\r\n    this.toggle = this.toggle.bind(this);\r\n  }\r\n\r\n  toggle() {\r\n    this.setState(prevState => ({\r\n      modal: !prevState.modal\r\n    }));\r\n    this.props.reset();\r\n  }\r\n\r\n\r\n  componentDidUpdate() {\r\n    if (this.props.mensaje !== '') {\r\n      switch (this.props.mensaje) {\r\n        case 'Usuario registrado':\r\n          NotificationManager.success('Usuario registrado correctamente');\r\n          this.props.actualizarMensajeRegistrar('');\r\n          break;\r\n        case 'Sin permiso':\r\n          NotificationManager.error('No tiene los permisos suficientes para registrar un usuario');\r\n          this.props.reset();\r\n          this.props.actualizarMensajeRegistrar('');\r\n          break;\r\n        case 'Ya existen los datos registrados previamente':\r\n          NotificationManager.error('El correo o numero de identificacion ya estan registrados');\r\n          this.props.reset();\r\n          this.props.actualizarMensajeRegistrar('');\r\n          break;\r\n        case 'Servidor fuera de servicio temporalmente':\r\n          NotificationManager.error('Servidor fuera de servicio temporalmente');\r\n          this.props.reset();\r\n          this.props.actualizarMensajeRegistrar('');\r\n          break;\r\n        default:\r\n          this.props.history.push('/');\r\n          break;\r\n      }\r\n    }\r\n  }\r\n\r\n  componentWillMount() {\r\n    this.props.actionConsultarDocumentos(localStorage.getItem('Token'));\r\n  }\r\n\r\n\r\n  handleSubmit = formValues => {\r\n    try {\r\n      var crypto = require('crypto');\r\n      var contrasenaEncryp = crypto.createHmac('sha256', formValues.correo).update(formValues.contrasena).digest('hex');\r\n      let date = new Date(formValues.fechaNacimiento);\r\n      debugger;\r\n      let usuario = {\r\n        'nombre': formValues.nombre,\r\n        'apellido': formValues.apellido,\r\n        'tipoDocumento': formValues.tipoDocumento,\r\n        'numeroDocumento': formValues.numeroDocumento,\r\n        'correoElectronico': formValues.correo,\r\n        'contrasena': contrasenaEncryp,\r\n        'fechaNacimiento': date,\r\n        'estado': 'Activo',\r\n        'datosSolicitud': null\r\n      };\r\n      this.props.actionAgregarUsuario(usuario, localStorage.getItem('Token'));\r\n      this.props.reset();\r\n    } catch (error) {\r\n      console.log(error)\r\n      NotificationManager.error('Ingrese todos los datos');\r\n    }\r\n  }\r\n\r\n  opciones = () => {\r\n    let respuesta = [];\r\n    this.props.documentos.forEach(\r\n        documento => {\r\n          const { idTipoDocumento, tipoDocumento } = documento\r\n            let objeto = {\r\n                label: tipoDocumento,\r\n                value:idTipoDocumento,\r\n            }\r\n            respuesta.push(objeto);\r\n        }\r\n    )\r\n    return respuesta;\r\n}\r\n\r\n  cargarDocumentos() {\r\n    return this.props.documentos.map((documento, index) => {\r\n      const { idTipoDocumento, tipoDocumento } = documento\r\n      return (\r\n        <option className=\"letra\" style={{ height: \"35px\", fontSize: \"13px\" }} value={idTipoDocumento}>{tipoDocumento}</option>\r\n      )\r\n    })\r\n  }\r\n\r\n\r\n  render() {\r\n    return (\r\n      <div>\r\n        <Button style={{ background: this.props.configuracion.botones, fontSize: \"14px\", textTransform: \"none\" }} startIcon={<AddIcon />} className=\"btn btn-dark\" variant=\"contained\" onClick={this.toggle}>Registrar usuario</Button>\r\n        <Modal isOpen={this.state.modal}\r\n          toggle={this.toggle}\r\n          style={{ width: \"400px\" }}>\r\n          <ModalHeader toggle={this.toggle} style={{ height: \"50px\", width: \"400px\" }} className=\"center\">Crear usuario</ModalHeader>\r\n          <ModalBody>\r\n            <form onSubmit={this.props.handleSubmit(this.handleSubmit)}>\r\n              <div className=\"contenedor-inputs\">\r\n                <div className=\"row\">\r\n                  <div className=\"col-sm-12\">\r\n                    <Field name=\"nombre\" type=\"text\" validate={[requerido, nombre]} component={generarInput} label=\"Nombre\" />\r\n                  </div>\r\n                </div>\r\n\r\n                <div className=\"row\">\r\n                  <div className=\"col-sm-12\">\r\n                    <Field name=\"apellido\" type=\"text\" validate={[requerido, apellido]} component={generarInput} label=\"Apellido\" />\r\n                  </div>\r\n                </div>\r\n\r\n                <div className=\"row\">\r\n                  <div className=\"col-sm-7\">\r\n                  <Field name=\"tipoDocumento\" validate={[seleccione]} component={ReduxFormSelect} options={this.opciones()} />\r\n\r\n                  </div>\r\n                </div>\r\n                <div className=\"row\">\r\n                  <div className=\"col-sm-12\">\r\n                    <Field name=\"numeroDocumento\" type=\"number\" validate={[requerido, documentoIdentificacion]} component={generarInput} label=\"Numero de documento\" />\r\n                  </div>\r\n                </div>\r\n\r\n                <div className=\"row\">\r\n                  <div className=\"col-sm-12\">\r\n                    <Field name=\"correo\" type=\"text\" validate={[requerido, correo]} component={generarInput} label=\"Correo electronico\" />\r\n                  </div>\r\n                </div>\r\n\r\n                <div className=\"row\">\r\n                  <div className=\"col-sm-12\">\r\n                    <Field name=\"contrasena\" validate={[requerido, contrasena]} type=\"password\" component={generarInput} label=\"Contraseña\" />\r\n                  </div>\r\n                </div>\r\n\r\n                <div className=\"row\">\r\n                  <div className=\"col-sm-12\">\r\n                    <Field name=\"fechaNacimiento\" type='date'   validate={[requerido,fechaNacimiento]} component={generarDate} label=\"Fecha de nacimiento\" />\r\n                  </div>\r\n                </div>\r\n                <br />\r\n              </div>\r\n              <ModalFooter>\r\n                <Button style={{ background: this.props.configuracion.botones, fontSize: \"13px\", fontFamily: \"sans-serif\", textTransform: \"none\" }} className=\"btn btn-dark\" variant=\"contained\" startIcon={<SaveAltIcon />} type=\"submit\">Registrar</Button>{''}\r\n                <Button style={fondoBotonCancelar} className=\"btn btn-dark\" variant=\"contained\" startIcon={<CancelIcon />} onClick={this.toggle}>Cancelar</Button>\r\n              </ModalFooter>\r\n            </form>\r\n          </ModalBody>\r\n        </Modal>\r\n        <NotificationContainer />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\n\r\nconst fondoBotonCancelar = {\r\n  background: \"gray\",\r\n  fontSize: \"13px\",\r\n  fontFamily: \"sans-serif\",\r\n  textTransform: \"none\"\r\n}\r\n\r\nfunction mapStateToProps(state) {\r\n  return {\r\n    users: state.user.list,\r\n    token: state.user.token,\r\n    documentos: state.user.tiposDocumento,\r\n    mensaje: state.user.mensajeRegistrar,\r\n    configuracion: state.conf.configuracion\r\n  }\r\n}\r\n\r\nlet formulario = reduxForm({\r\n  form: 'registrarUsuario'\r\n})(PopUpUsuario)\r\n\r\nexport default withRouter(connect(mapStateToProps, { actionAgregarUsuario, actionConsultarDocumentos, actualizarMensajeRegistrar })(formulario));\r\n"]},"metadata":{},"sourceType":"module"}