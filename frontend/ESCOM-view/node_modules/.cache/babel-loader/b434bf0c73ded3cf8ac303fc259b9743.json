{"ast":null,"code":"import axios from 'axios';\nimport { desencriptar } from '../../../SuperAdministrador/componentes/general/Encriptar.js';\nimport { URL_BASE } from '../../../SuperAdministrador/utilitario/Configuracion.js';\nexport const GET_LIST_CONDITIONS_USER = 'GET_LIST_CONDITIONS_USER';\nexport const GET_LIST_USERS_CONDITION = 'GET_LIST_USERS_CONDITION';\nexport const GET_LIST_USERS = 'GET_LIST_USERS';\nexport const ASSOCIATE_USER_CONDITION = 'ASSOCIATE_USER_CONDITION';\nexport const DELETE_USER_CONDITION = 'DELETE_USER_CONDITION';\nexport const STATE_CONDITIONS_USER = 'STATE_CONDITIONS_USER';\nexport const STATE_USERS_CONDITION = 'STATE_USERS_CONDITION';\nexport const STATE_USERS = 'STATE_USERS';\nexport const PERMIT_LIST_USERS = 'MD_Prueba';\nexport const PERMIT_LIST_CONDITIONS_USER = 'MD_Prueba';\nexport const PERMIT_LIST_USERS_CONDITION = 'MD_Prueba';\nexport const PERMIT_ASSOCIATE_USER_CONDITION = 'MD_Prueba';\nexport const PERMIT_DELETE_USER_CONDITION = 'MD_Prueba';\nexport const ADD_MESSAGE_ASSOCIATE = 'ADD_MESSAGE_ASSOCIATE';\nexport const ADD_MESSAGE_DELETE = 'ADD_MESSAGE_DELETE';\nexport const ADD_MESSAGE = 'ADD_MESSAGE';\nexport function addMessageAssociate(mensaje) {\n  return (dispatch, getState) => {\n    dispatch({\n      type: ADD_MESSAGE_ASSOCIATE,\n      mensaje: mensaje\n    });\n  };\n}\nexport function addMessageDeleteUser(mensaje) {\n  return (dispatch, getState) => {\n    dispatch({\n      type: ADD_MESSAGE_DELETE,\n      mensaje: mensaje\n    });\n  };\n} //MD_Lista condiciones usuario\n\nexport function getConditionsUser(token, id) {\n  const headers = {\n    'Content-Type': 'application/json',\n    'TokenAuto': desencriptar(token),\n    'Permiso': PERMIT_LIST_CONDITIONS_USER\n  };\n  return (dispatch, getState) => {\n    axios.get(`${URL_BASE}/proyectosESCOM-web/api/userCondition/list/` + id, {\n      headers: headers\n    }).then(response => {\n      dispatch({\n        type: GET_LIST_CONDITIONS_USER,\n        payload: response.data\n      });\n    }).catch(error => {\n      if (error.request.response === '') {\n        dispatch({\n          type: ADD_MESSAGE,\n          payload: 'error server'\n        });\n      } else {\n        if (error.request) {\n          var data = JSON.parse(error.request.response);\n          let respuesta = data.respuesta;\n\n          if (respuesta === 'Sin permiso') {\n            dispatch({\n              type: STATE_CONDITIONS_USER,\n              payload: true\n            });\n          } else {\n            dispatch({\n              type: ADD_MESSAGE,\n              payload: respuesta\n            });\n          }\n        }\n      }\n    });\n  };\n} //MD_Lista usuarios\n\nexport function getListUser(token) {\n  const headers = {\n    'Content-Type': 'application/json',\n    'TokenAuto': desencriptar(token),\n    'Permiso': PERMIT_LIST_USERS\n  };\n  return (dispatch, getState) => {\n    axios.get(`${URL_BASE}/proyectosESCOM-web/api/userCondition/listUsers/`, {\n      headers: headers\n    }).then(response => {\n      dispatch({\n        type: GET_LIST_USERS,\n        payload: response.data\n      });\n    }).catch(error => {\n      if (error.request.response === '') {\n        dispatch({\n          type: ADD_MESSAGE,\n          payload: 'error server'\n        });\n      } else {\n        if (error.request) {\n          var data = JSON.parse(error.request.response);\n          let respuesta = data.respuesta;\n\n          if (respuesta === 'Sin permiso') {\n            dispatch({\n              type: STATE_USERS,\n              payload: true\n            });\n          } else {\n            dispatch({\n              type: ADD_MESSAGE,\n              payload: respuesta\n            });\n          }\n        }\n      }\n    });\n  };\n} //MD_Lista usuarios condicion\n\nexport function getListUsersCondition(token, id) {\n  const headers = {\n    'Content-Type': 'application/json',\n    'TokenAuto': desencriptar(token),\n    'Permiso': PERMIT_LIST_USERS_CONDITION\n  };\n  return (dispatch, getState) => {\n    axios.get(`${URL_BASE}/proyectosESCOM-web/api/userCondition/listUsersC/` + id, {\n      headers: headers\n    }).then(response => {\n      dispatch({\n        type: GET_LIST_USERS_CONDITION,\n        payload: response.data\n      });\n    }).catch(error => {\n      if (error.request.response === '') {\n        dispatch({\n          type: ADD_MESSAGE,\n          payload: 'error server'\n        });\n      } else {\n        if (error.request) {\n          var data = JSON.parse(error.request.response);\n          let respuesta = data.respuesta;\n\n          if (respuesta === 'Sin permiso') {\n            dispatch({\n              type: STATE_USERS_CONDITION,\n              payload: true\n            });\n          } else {\n            dispatch({\n              type: ADD_MESSAGE,\n              payload: respuesta\n            });\n          }\n        }\n      }\n    });\n  };\n} //MD_Asociar usuario condicion\n\nexport function associateUserCondition(token, userCondition) {\n  const headers = {\n    'Content-Type': 'application/json; charset= UTF-8',\n    'TokenAuto': desencriptar(token),\n    'Permiso': PERMIT_ASSOCIATE_USER_CONDITION\n  };\n  userCondition.requestData = {\n    'ip': localStorage.getItem('Ip'),\n    'token': desencriptar(token),\n    'operacion': PERMIT_ASSOCIATE_USER_CONDITION\n  };\n  return (dispatch, getState) => {\n    axios.post(`${URL_BASE}/proyectosESCOM-web/api/userCondition/associate`, userCondition, {\n      headers: headers\n    }).then(response => {\n      dispatch({\n        type: ASSOCIATE_USER_CONDITION,\n        payload: response.data.respuesta\n      });\n    }).catch(error => {\n      if (error.request.response === '') {\n        dispatch({\n          type: ADD_MESSAGE_ASSOCIATE,\n          payload: 'error server'\n        });\n      } else {\n        if (error.request) {\n          var data = JSON.parse(error.request.response);\n          let respuesta = data.respuesta;\n          dispatch({\n            type: ADD_MESSAGE_ASSOCIATE,\n            payload: respuesta\n          });\n        }\n      }\n    });\n  };\n} //MD_Eliminar usuario condicion\n\nexport function deleteUserCondition(token, userCondition) {\n  const headers = {\n    'Content-Type': 'application/json',\n    'TokenAuto': desencriptar(token),\n    'Permiso': PERMIT_DELETE_USER_CONDITION\n  };\n  userCondition.requestData = {\n    'ip': localStorage.getItem('Ip'),\n    'token': desencriptar(token),\n    'operacion': PERMIT_DELETE_USER_CONDITION\n  };\n  return (dispatch, getState) => {\n    axios.post(`${URL_BASE}/proyectosESCOM-web/api/userCondition/delete`, userCondition, {\n      headers: headers\n    }).then(response => {\n      dispatch({\n        type: DELETE_USER_CONDITION,\n        payload: response.data.respuesta\n      });\n    }).catch(error => {\n      if (error.request.response === '') {\n        dispatch({\n          type: ADD_MESSAGE_DELETE,\n          payload: 'error server'\n        });\n      } else {\n        if (error.request) {\n          var data = JSON.parse(error.request.response);\n          let respuesta = data.respuesta;\n          dispatch({\n            type: ADD_MESSAGE_DELETE,\n            payload: respuesta\n          });\n        }\n      }\n    });\n  };\n}","map":{"version":3,"sources":["C:/Users/hashy/Desktop/proyectosESCOM/frontend/ESCOM-view/src/ModuloDocumental/redux/actions/userConditionA.js"],"names":["axios","desencriptar","URL_BASE","GET_LIST_CONDITIONS_USER","GET_LIST_USERS_CONDITION","GET_LIST_USERS","ASSOCIATE_USER_CONDITION","DELETE_USER_CONDITION","STATE_CONDITIONS_USER","STATE_USERS_CONDITION","STATE_USERS","PERMIT_LIST_USERS","PERMIT_LIST_CONDITIONS_USER","PERMIT_LIST_USERS_CONDITION","PERMIT_ASSOCIATE_USER_CONDITION","PERMIT_DELETE_USER_CONDITION","ADD_MESSAGE_ASSOCIATE","ADD_MESSAGE_DELETE","ADD_MESSAGE","addMessageAssociate","mensaje","dispatch","getState","type","addMessageDeleteUser","getConditionsUser","token","id","headers","get","then","response","payload","data","catch","error","request","JSON","parse","respuesta","getListUser","getListUsersCondition","associateUserCondition","userCondition","requestData","localStorage","getItem","post","deleteUserCondition"],"mappings":"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","sourcesContent":["import axios from 'axios';\r\n\r\nimport { desencriptar } from '../../../SuperAdministrador/componentes/general/Encriptar.js';\r\nimport { URL_BASE } from '../../../SuperAdministrador/utilitario/Configuracion.js';\r\n\r\nexport const GET_LIST_CONDITIONS_USER = 'GET_LIST_CONDITIONS_USER';\r\nexport const GET_LIST_USERS_CONDITION = 'GET_LIST_USERS_CONDITION';\r\nexport const GET_LIST_USERS = 'GET_LIST_USERS';\r\nexport const ASSOCIATE_USER_CONDITION = 'ASSOCIATE_USER_CONDITION';\r\nexport const DELETE_USER_CONDITION = 'DELETE_USER_CONDITION';\r\nexport const STATE_CONDITIONS_USER = 'STATE_CONDITIONS_USER';\r\nexport const STATE_USERS_CONDITION = 'STATE_USERS_CONDITION';\r\nexport const STATE_USERS = 'STATE_USERS';\r\n\r\nexport const PERMIT_LIST_USERS = 'MD_Prueba';\r\nexport const PERMIT_LIST_CONDITIONS_USER = 'MD_Prueba';\r\nexport const PERMIT_LIST_USERS_CONDITION = 'MD_Prueba';\r\nexport const PERMIT_ASSOCIATE_USER_CONDITION = 'MD_Prueba';\r\nexport const PERMIT_DELETE_USER_CONDITION = 'MD_Prueba';\r\n\r\nexport const ADD_MESSAGE_ASSOCIATE = 'ADD_MESSAGE_ASSOCIATE';\r\nexport const ADD_MESSAGE_DELETE = 'ADD_MESSAGE_DELETE';\r\nexport const ADD_MESSAGE = 'ADD_MESSAGE';\r\n\r\nexport function addMessageAssociate(mensaje) {\r\n    return (dispatch, getState) => {\r\n        dispatch({\r\n            type: ADD_MESSAGE_ASSOCIATE,\r\n            mensaje: mensaje\r\n        });\r\n    };\r\n}\r\n\r\nexport function addMessageDeleteUser(mensaje) {\r\n    return (dispatch, getState) => {\r\n        dispatch({\r\n            type: ADD_MESSAGE_DELETE,\r\n            mensaje: mensaje\r\n        });\r\n    };\r\n}\r\n\r\n//MD_Lista condiciones usuario\r\nexport function getConditionsUser(token, id) {\r\n    const headers = {\r\n        'Content-Type': 'application/json',\r\n        'TokenAuto': desencriptar(token),\r\n        'Permiso': PERMIT_LIST_CONDITIONS_USER\r\n    }\r\n    return (dispatch, getState) => {\r\n        axios.get(`${URL_BASE}/proyectosESCOM-web/api/userCondition/list/` + id, { headers: headers })\r\n            .then(response => {\r\n                dispatch({\r\n                    type: GET_LIST_CONDITIONS_USER,\r\n                    payload: response.data\r\n                });\r\n            }).catch(error => {\r\n                if (error.request.response === '') {\r\n                    dispatch({\r\n                        type: ADD_MESSAGE,\r\n                        payload: 'error server'\r\n                    });\r\n                } else {\r\n                    if (error.request) {\r\n                        var data = JSON.parse(error.request.response);\r\n                        let respuesta = data.respuesta;\r\n                        if (respuesta === 'Sin permiso') {\r\n                            dispatch({\r\n                                type: STATE_CONDITIONS_USER,\r\n                                payload: true\r\n                            });\r\n                        } else {\r\n                            dispatch({\r\n                                type: ADD_MESSAGE,\r\n                                payload: respuesta\r\n                            });\r\n                        }\r\n                    }\r\n                }\r\n            });\r\n    }\r\n}\r\n\r\n//MD_Lista usuarios\r\nexport function getListUser(token) {\r\n    const headers = {\r\n        'Content-Type': 'application/json',\r\n        'TokenAuto': desencriptar(token),\r\n        'Permiso': PERMIT_LIST_USERS\r\n    }\r\n    return (dispatch, getState) => {\r\n        axios.get(`${URL_BASE}/proyectosESCOM-web/api/userCondition/listUsers/`, { headers: headers })\r\n            .then(response => {\r\n                dispatch({\r\n                    type: GET_LIST_USERS,\r\n                    payload: response.data\r\n                });\r\n            }).catch(error => {\r\n                if (error.request.response === '') {\r\n                    dispatch({\r\n                        type: ADD_MESSAGE,\r\n                        payload: 'error server'\r\n                    });\r\n                } else {\r\n                    if (error.request) {\r\n                        var data = JSON.parse(error.request.response);\r\n                        let respuesta = data.respuesta;\r\n                        if (respuesta === 'Sin permiso') {\r\n                            dispatch({\r\n                                type: STATE_USERS,\r\n                                payload: true\r\n                            });\r\n                        } else {\r\n                            dispatch({\r\n                                type: ADD_MESSAGE,\r\n                                payload: respuesta\r\n                            });\r\n                        }\r\n                    }\r\n                }\r\n            });\r\n    }\r\n}\r\n\r\n//MD_Lista usuarios condicion\r\nexport function getListUsersCondition(token, id) {\r\n    const headers = {\r\n        'Content-Type': 'application/json',\r\n        'TokenAuto': desencriptar(token),\r\n        'Permiso': PERMIT_LIST_USERS_CONDITION\r\n    }\r\n    return (dispatch, getState) => {\r\n        axios.get(`${URL_BASE}/proyectosESCOM-web/api/userCondition/listUsersC/` + id, { headers: headers })\r\n            .then(response => {\r\n                dispatch({\r\n                    type: GET_LIST_USERS_CONDITION,\r\n                    payload: response.data\r\n                });\r\n            }).catch(error => {\r\n                if (error.request.response === '') {\r\n                    dispatch({\r\n                        type: ADD_MESSAGE,\r\n                        payload: 'error server'\r\n                    });\r\n                } else {\r\n                    if (error.request) {\r\n                        var data = JSON.parse(error.request.response);\r\n                        let respuesta = data.respuesta;\r\n                        if (respuesta === 'Sin permiso') {\r\n                            dispatch({\r\n                                type: STATE_USERS_CONDITION,\r\n                                payload: true\r\n                            });\r\n                        } else {\r\n                            dispatch({\r\n                                type: ADD_MESSAGE,\r\n                                payload: respuesta\r\n                            });\r\n                        }\r\n                    }\r\n                }\r\n            });\r\n    }\r\n}\r\n\r\n\r\n//MD_Asociar usuario condicion\r\nexport function associateUserCondition(token, userCondition) {\r\n    const headers = {\r\n        'Content-Type': 'application/json; charset= UTF-8',\r\n        'TokenAuto': desencriptar(token),\r\n        'Permiso': PERMIT_ASSOCIATE_USER_CONDITION\r\n    }\r\n    userCondition.requestData = {\r\n        'ip': localStorage.getItem('Ip'),\r\n        'token': desencriptar(token),\r\n        'operacion': PERMIT_ASSOCIATE_USER_CONDITION\r\n    };\r\n    return (dispatch, getState) => {\r\n        axios.post(`${URL_BASE}/proyectosESCOM-web/api/userCondition/associate`, userCondition, { headers: headers })\r\n            .then(response => {\r\n                dispatch({\r\n                    type: ASSOCIATE_USER_CONDITION,\r\n                    payload: response.data.respuesta\r\n                });\r\n            }).catch(error => {\r\n                if (error.request.response === '') {\r\n                    dispatch({\r\n                        type: ADD_MESSAGE_ASSOCIATE,\r\n                        payload: 'error server'\r\n                    });\r\n                } else {\r\n                    if (error.request) {\r\n                        var data = JSON.parse(error.request.response);\r\n                        let respuesta = data.respuesta;\r\n                        dispatch({\r\n                            type: ADD_MESSAGE_ASSOCIATE,\r\n                            payload: respuesta\r\n                        });\r\n                    }\r\n                }\r\n            });\r\n    }\r\n}\r\n\r\n//MD_Eliminar usuario condicion\r\nexport function deleteUserCondition(token, userCondition) {\r\n    const headers = {\r\n        'Content-Type': 'application/json',\r\n        'TokenAuto': desencriptar(token),\r\n        'Permiso': PERMIT_DELETE_USER_CONDITION\r\n    }\r\n    userCondition.requestData = {\r\n        'ip': localStorage.getItem('Ip'),\r\n        'token': desencriptar(token),\r\n        'operacion': PERMIT_DELETE_USER_CONDITION\r\n    };\r\n    return (dispatch, getState) => {\r\n        axios.post(`${URL_BASE}/proyectosESCOM-web/api/userCondition/delete`, userCondition, { headers: headers })\r\n            .then(response => {\r\n                dispatch({\r\n                    type: DELETE_USER_CONDITION,\r\n                    payload: response.data.respuesta\r\n                });\r\n            }).catch(error => {\r\n                if (error.request.response === '') {\r\n                    dispatch({\r\n                        type: ADD_MESSAGE_DELETE,\r\n                        payload: 'error server'\r\n                    });\r\n                } else {\r\n                    if (error.request) {\r\n                        var data = JSON.parse(error.request.response);\r\n                        let respuesta = data.respuesta;\r\n                        dispatch({\r\n                            type: ADD_MESSAGE_DELETE,\r\n                            payload: respuesta\r\n                        });\r\n                    }\r\n                }\r\n            });\r\n    }\r\n}"]},"metadata":{},"sourceType":"module"}