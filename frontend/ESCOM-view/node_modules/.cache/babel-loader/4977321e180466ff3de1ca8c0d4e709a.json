{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\jeiso\\\\Desktop\\\\REACT\\\\proyectosESCOM\\\\frontend\\\\ESCOM-view\\\\src\\\\SuperAdministrador\\\\componentes\\\\color.js\";\nimport React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Stepper from '@material-ui/core/Stepper';\nimport Step from '@material-ui/core/Step';\nimport StepButton from '@material-ui/core/StepButton';\nimport Button from '@material-ui/core/Button';\nimport Typography from '@material-ui/core/Typography';\nimport { SketchPicker } from 'react-color';\nimport { Field } from \"redux-form\";\nimport PropTypes from \"prop-types\";\nexport default class Configuracion extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      activeStep: 0,\n      completed: {}\n    };\n\n    this.completedSteps = () => {\n      return Object.keys(this.state.completed).length;\n    };\n\n    this.allStepsCompleted = () => {\n      return this.completedSteps() === this.totalSteps();\n    };\n\n    this.totalSteps = () => {\n      return this.getSteps().length;\n    };\n\n    this.isLastStep = () => {\n      return this.state.activeStep === this.totalSteps() - 1;\n    };\n\n    this.useStyles = makeStyles(theme => ({\n      root: {\n        width: '100%'\n      },\n      button: {\n        marginRight: theme.spacing(1)\n      },\n      completed: {\n        display: 'inline-block'\n      },\n      instructions: {\n        marginTop: theme.spacing(1),\n        marginBottom: theme.spacing(1)\n      }\n    }));\n\n    this.handleReset = () => {\n      this.setState({\n        activeStep: 0,\n        completed: {}\n      });\n    };\n\n    this.handleComplete = () => {\n      const newCompleted = this.state.completed;\n      newCompleted[this.state.activeStep] = true;\n      this.setState({\n        completed: newCompleted\n      });\n      this.handleNext();\n    };\n\n    this.handleNext = () => {\n      const newActiveStep = this.isLastStep() && !this.allStepsCompleted() ? // It's the last step, but not all steps have been completed,\n      // find the first step that has been completed\n      this.getSteps().findIndex((step, i) => !(i in this.state.completed)) : this.state.activeStep + 1;\n      this.setState({\n        activeStep: newActiveStep\n      });\n    };\n\n    this.handleStep = step => () => {\n      this.setState({\n        activeStep: step\n      });\n    };\n\n    this.handleBack = () => {\n      let cuenta = this.state.activeStep - 1;\n      this.setState({\n        activeStep: cuenta\n      });\n    };\n\n    this.validateImageWeight = imageFile => {\n      if (imageFile && imageFile.size) {\n        const imageFileKb = imageFile.size / 1024;\n        const pesoMaximo = this.props.pesoMaximo;\n\n        if (imageFileKb > pesoMaximo) {\n          return `El tamaÃ±o de la imagen debe ser menor o igual a ${pesoMaximo}kb`;\n        }\n      }\n    };\n\n    this.validateImageWidth = imageFile => {\n      if (imageFile) {\n        const anchuraMaxima = this.props.anchuraMaxima;\n\n        if (imageFile.width > anchuraMaxima) {\n          return `El ancho de la imagen debe ser menor o igual a ${anchuraMaxima}px`;\n        }\n      }\n    };\n\n    this.validateImageHeight = imageFile => {\n      if (imageFile) {\n        const alturaMaxima = this.props.alturaMaxima;\n\n        if (imageFile.height > alturaMaxima) {\n          return `La altura de la imagen debe ser menor o igual a ${alturaMaxima}px`;\n        }\n      }\n    };\n\n    this.validateImageFormat = imageFile => {\n      if (imageFile) {\n        const tipoDeImagen = this.props.tipoDeImagen;\n\n        if (!tipoDeImagen.includes(imageFile.type)) {\n          return `El tipo de imagen debe ser ${tipoDeImagen}`;\n        }\n      }\n    };\n\n    this.handlePreview = imageUrl => {\n      const previewImageDom = document.querySelector(\".preview-image\");\n      previewImageDom.src = imageUrl;\n    };\n\n    this.handleChange = (event, input) => {\n      event.preventDefault();\n      let imageFile = event.target.files[0];\n      const tipoDeImagen = this.props.tipoDeImagen;\n\n      if (imageFile) {\n        if (!tipoDeImagen.includes(imageFile.type)) {\n          NotificationManager.error('Seleccione un archivo de imagen .jpg o .png');\n          event.target.value = null;\n        } else {\n          const localImageUrl = URL.createObjectURL(imageFile);\n          const imageObject = new window.Image();\n\n          imageObject.onload = () => {\n            imageFile.width = imageObject.naturalWidth;\n            imageFile.height = imageObject.naturalHeight;\n            input.onChange(imageFile);\n            URL.revokeObjectURL(imageFile);\n          };\n\n          imageObject.src = localImageUrl;\n          this.handlePreview(localImageUrl);\n        }\n      }\n    };\n\n    this.renderFileInput = ({\n      input,\n      type,\n      meta\n    }) => {\n      const tipoDeImagen = this.props.tipoDeImagen;\n      const touched = meta.touched,\n            error = meta.error,\n            warning = meta.warning;\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 200\n        },\n        __self: this\n      }, React.createElement(\"input\", {\n        name: input.name,\n        type: type,\n        accept: tipoDeImagen,\n        onChange: event => this.handleChange(event, input),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 201\n        },\n        __self: this\n      }), touched && (error && React.createElement(\"span\", {\n        className: \"text-danger letra form-group\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 207\n        },\n        __self: this\n      }, error) || warning && React.createElement(\"span\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 207\n        },\n        __self: this\n      }, warning)));\n    };\n  }\n\n  getSteps() {\n    return ['Color barra superior', 'Color barra lateral', 'Color de botones', 'Imagen del login', 'Imagen del logo'];\n  }\n\n  //\n  getStepContent(step) {\n    switch (step) {\n      case 0:\n        return React.createElement(SketchPicker, {\n          disableAlpha: true,\n          color: \"#7D8A62\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 31\n          },\n          __self: this\n        });\n\n      case 1:\n        return React.createElement(SketchPicker, {\n          disableAlpha: true,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 33\n          },\n          __self: this\n        });\n\n      case 2:\n        return React.createElement(SketchPicker, {\n          disableAlpha: true,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 35\n          },\n          __self: this\n        });\n\n      case 3:\n        return React.createElement(SketchPicker, {\n          disableAlpha: true,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 37\n          },\n          __self: this\n        });\n\n      case 4:\n        return React.createElement(Field, {\n          name: \"image\",\n          type: \"file\",\n          validate: [this.validateImageWeight, this.validateImageWidth, this.validateImageHeight, this.validateImageFormat],\n          component: this.renderFileInput,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 39\n          },\n          __self: this\n        });\n\n      default:\n        return 'Unknown step';\n    }\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      className: this.useStyles.root,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 215\n      },\n      __self: this\n    }, React.createElement(Stepper, {\n      nonLinear: true,\n      activeStep: this.state.activeStep,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 216\n      },\n      __self: this\n    }, this.getSteps().map((label, index) => React.createElement(Step, {\n      key: label,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 218\n      },\n      __self: this\n    }, React.createElement(StepButton, {\n      onClick: this.handleStep(index),\n      completed: this.state.completed[index],\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 219\n      },\n      __self: this\n    }, label)))), React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 225\n      },\n      __self: this\n    }, this.allStepsCompleted() ? React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 227\n      },\n      __self: this\n    }, React.createElement(Typography, {\n      className: this.useStyles.instructions,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 228\n      },\n      __self: this\n    }, \"All steps completed - you're finished\"), React.createElement(Button, {\n      onClick: this.handleReset,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 231\n      },\n      __self: this\n    }, \"Reset\")) : React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 234\n      },\n      __self: this\n    }, React.createElement(Typography, {\n      className: this.useStyles.instructions,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 235\n      },\n      __self: this\n    }, this.getStepContent(this.state.activeStep)), React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 236\n      },\n      __self: this\n    }, React.createElement(Button, {\n      disabled: this.state.activeStep === 0,\n      onClick: this.handleBack,\n      className: this.useStyles.button,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 237\n      },\n      __self: this\n    }, \"Back\"), React.createElement(Button, {\n      variant: \"contained\",\n      color: \"primary\",\n      onClick: this.handleNext,\n      className: this.useStyles.button,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 240\n      },\n      __self: this\n    }, \"Next\"), this.state.activeStep !== this.getSteps().length && (this.state.completed[this.state.activeStep] ? React.createElement(Typography, {\n      variant: \"caption\",\n      className: this.useStyles.completed,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 250\n      },\n      __self: this\n    }, \"Step \", this.state.activeStep + 1, \" already completed\") : React.createElement(Button, {\n      variant: \"contained\",\n      color: \"primary\",\n      onClick: this.handleComplete,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 254\n      },\n      __self: this\n    }, this.completedSteps() === this.totalSteps() - 1 ? 'Finish' : 'Complete Step'))))));\n  }\n\n}\nConfiguracion.propTypes = {\n  previewLogoUrl: PropTypes.string,\n  tipoDeImagen: PropTypes.string,\n  pesoMaximo: PropTypes.number,\n  anchuraMaxima: PropTypes.number,\n  alturaMaxima: PropTypes.number,\n  handleSubmit: PropTypes.func.isRequired\n};\nConfiguracion.defaultProps = {\n  previewLogoUrl: \"https://imgplaceholder.com/400x300\",\n  tipoDeImagen: \"image/jpeg, image/png\",\n  pesoMaximo: 100,\n  anchuraMaxima: 100,\n  alturaMaxima: 100\n};","map":{"version":3,"sources":["C:/Users/jeiso/Desktop/REACT/proyectosESCOM/frontend/ESCOM-view/src/SuperAdministrador/componentes/color.js"],"names":["React","makeStyles","Stepper","Step","StepButton","Button","Typography","SketchPicker","Field","PropTypes","Configuracion","Component","state","activeStep","completed","completedSteps","Object","keys","length","allStepsCompleted","totalSteps","getSteps","isLastStep","useStyles","theme","root","width","button","marginRight","spacing","display","instructions","marginTop","marginBottom","handleReset","setState","handleComplete","newCompleted","handleNext","newActiveStep","findIndex","step","i","handleStep","handleBack","cuenta","validateImageWeight","imageFile","size","imageFileKb","pesoMaximo","props","validateImageWidth","anchuraMaxima","validateImageHeight","alturaMaxima","height","validateImageFormat","tipoDeImagen","includes","type","handlePreview","imageUrl","previewImageDom","document","querySelector","src","handleChange","event","input","preventDefault","target","files","NotificationManager","error","value","localImageUrl","URL","createObjectURL","imageObject","window","Image","onload","naturalWidth","naturalHeight","onChange","revokeObjectURL","renderFileInput","meta","touched","warning","name","getStepContent","render","map","label","index","propTypes","previewLogoUrl","string","number","handleSubmit","func","isRequired","defaultProps"],"mappings":"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","sourcesContent":["import React from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Stepper from '@material-ui/core/Stepper';\r\nimport Step from '@material-ui/core/Step';\r\nimport StepButton from '@material-ui/core/StepButton';\r\nimport Button from '@material-ui/core/Button';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport { SketchPicker } from 'react-color';\r\nimport { Field } from \"redux-form\";\r\nimport PropTypes from \"prop-types\";\r\n\r\n\r\nexport default class Configuracion extends React.Component {\r\n\r\n\tstate = {\r\n\t\tactiveStep: 0,\r\n\t\tcompleted: {}\r\n\t}\r\n\r\n\tgetSteps() {\r\n\t\treturn ['Color barra superior', 'Color barra lateral', 'Color de botones', 'Imagen del login', 'Imagen del logo'];\r\n\t}\r\n\r\n\tcompletedSteps = () => {\r\n\t\treturn Object.keys(this.state.completed).length;\r\n\t};\r\n\t//\r\n\tgetStepContent(step) {\r\n\t\tswitch (step) {\r\n\t\t\tcase 0:\r\n\t\t\t\treturn (<SketchPicker disableAlpha={true} color=\"#7D8A62\" />)\r\n\t\t\tcase 1:\r\n\t\t\t\treturn (<SketchPicker disableAlpha={true} />)\r\n\t\t\tcase 2:\r\n\t\t\t\treturn (<SketchPicker disableAlpha={true} />);\r\n\t\t\tcase 3:\r\n\t\t\t\treturn (<SketchPicker disableAlpha={true} />);\r\n\t\t\tcase 4:\r\n\t\t\t\treturn (<Field\r\n\t\t\t\t\tname=\"image\"\r\n\t\t\t\t\ttype=\"file\"\r\n\t\t\t\t\tvalidate={[\r\n\t\t\t\t\t\tthis.validateImageWeight,\r\n\t\t\t\t\t\tthis.validateImageWidth,\r\n\t\t\t\t\t\tthis.validateImageHeight,\r\n\t\t\t\t\t\tthis.validateImageFormat\r\n\t\t\t\t\t]}\r\n\t\t\t\t\tcomponent={this.renderFileInput}\r\n\t\t\t\t/>)\r\n\t\t\tdefault:\r\n\t\t\t\treturn 'Unknown step';\r\n\t\t}\r\n\t}\r\n\r\n\tallStepsCompleted = () => {\r\n\t\treturn this.completedSteps() === this.totalSteps();\r\n\t};\r\n\r\n\ttotalSteps = () => {\r\n\t\treturn this.getSteps().length;\r\n\t};\r\n\r\n\tisLastStep = () => {\r\n\t\treturn this.state.activeStep === this.totalSteps() - 1;\r\n\t};\r\n\r\n\tuseStyles = makeStyles(theme => ({\r\n\t\troot: {\r\n\t\t\twidth: '100%',\r\n\t\t},\r\n\t\tbutton: {\r\n\t\t\tmarginRight: theme.spacing(1),\r\n\t\t},\r\n\t\tcompleted: {\r\n\t\t\tdisplay: 'inline-block',\r\n\t\t},\r\n\t\tinstructions: {\r\n\t\t\tmarginTop: theme.spacing(1),\r\n\t\t\tmarginBottom: theme.spacing(1),\r\n\t\t},\r\n\t}));\r\n\r\n\thandleReset = () => {\r\n\t\tthis.setState({ activeStep: 0, completed: {} })\r\n\t};\r\n\r\n\thandleComplete = () => {\r\n\t\tconst newCompleted = this.state.completed;\r\n\t\tnewCompleted[this.state.activeStep] = true;\r\n\t\tthis.setState({ completed: newCompleted })\r\n\t\tthis.handleNext();\r\n\t};\r\n\r\n\thandleNext = () => {\r\n\t\tconst newActiveStep =\r\n\t\t\tthis.isLastStep() && !this.allStepsCompleted()\r\n\t\t\t\t? // It's the last step, but not all steps have been completed,\r\n\t\t\t\t// find the first step that has been completed\r\n\t\t\t\tthis.getSteps().findIndex((step, i) => !(i in this.state.completed))\r\n\t\t\t\t: this.state.activeStep + 1;\r\n\t\tthis.setState({ activeStep: newActiveStep })\r\n\t};\r\n\r\n\thandleStep = step => () => {\r\n\t\tthis.setState({ activeStep: step })\r\n\t};\r\n\r\n\thandleBack = () => {\r\n\t\tlet cuenta = this.state.activeStep - 1;\r\n\t\tthis.setState({ activeStep: cuenta })\r\n\t};\r\n\r\n\tstatic propTypes = {\r\n\t\tpreviewLogoUrl: PropTypes.string,\r\n\t\ttipoDeImagen: PropTypes.string,\r\n\t\tpesoMaximo: PropTypes.number,\r\n\t\tanchuraMaxima: PropTypes.number,\r\n\t\talturaMaxima: PropTypes.number,\r\n\t\thandleSubmit: PropTypes.func.isRequired\r\n\t};\r\n\r\n\tstatic defaultProps = {\r\n\t\tpreviewLogoUrl: \"https://imgplaceholder.com/400x300\",\r\n\t\ttipoDeImagen: \"image/jpeg, image/png\",\r\n\t\tpesoMaximo: 100,\r\n\t\tanchuraMaxima: 100,\r\n\t\talturaMaxima: 100\r\n\t};\r\n\tvalidateImageWeight = imageFile => {\r\n\t\tif (imageFile && imageFile.size) {\r\n\t\t\tconst imageFileKb = imageFile.size / 1024;\r\n\t\t\tconst { pesoMaximo } = this.props;\r\n\r\n\t\t\tif (imageFileKb > pesoMaximo) {\r\n\t\t\t\treturn `El tamaÃ±o de la imagen debe ser menor o igual a ${pesoMaximo}kb`;\r\n\t\t\t}\r\n\t\t}\r\n\t};\r\n\tvalidateImageWidth = imageFile => {\r\n\t\tif (imageFile) {\r\n\t\t\tconst { anchuraMaxima } = this.props;\r\n\t\t\tif (imageFile.width > anchuraMaxima) {\r\n\t\t\t\treturn `El ancho de la imagen debe ser menor o igual a ${anchuraMaxima}px`;\r\n\t\t\t}\r\n\t\t}\r\n\t};\r\n\tvalidateImageHeight = imageFile => {\r\n\t\tif (imageFile) {\r\n\t\t\tconst { alturaMaxima } = this.props;\r\n\r\n\t\t\tif (imageFile.height > alturaMaxima) {\r\n\t\t\t\treturn `La altura de la imagen debe ser menor o igual a ${alturaMaxima}px`;\r\n\t\t\t}\r\n\t\t}\r\n\t};\r\n\r\n\tvalidateImageFormat = imageFile => {\r\n\t\tif (imageFile) {\r\n\t\t\tconst { tipoDeImagen } = this.props;\r\n\t\t\tif (!tipoDeImagen.includes(imageFile.type)) {\r\n\t\t\t\treturn `El tipo de imagen debe ser ${tipoDeImagen}`;\r\n\t\t\t}\r\n\t\t}\r\n\t};\r\n\r\n\thandlePreview = imageUrl => {\r\n\t\tconst previewImageDom = document.querySelector(\".preview-image\");\r\n\t\tpreviewImageDom.src = imageUrl;\r\n\t};\r\n\r\n\thandleChange = (event, input) => {\r\n\t\tevent.preventDefault();\r\n\t\tlet imageFile = event.target.files[0];\r\n\t\tconst { tipoDeImagen } = this.props;\r\n\t\tif (imageFile) {\r\n\t\t\tif (!tipoDeImagen.includes(imageFile.type)) {\r\n\t\t\t\tNotificationManager.error('Seleccione un archivo de imagen .jpg o .png');\r\n\t\t\t\tevent.target.value = null;\r\n\t\t\t} else {\r\n\r\n\t\t\t\tconst localImageUrl = URL.createObjectURL(imageFile);\r\n\t\t\t\tconst imageObject = new window.Image();\r\n\r\n\t\t\t\timageObject.onload = () => {\r\n\t\t\t\t\timageFile.width = imageObject.naturalWidth;\r\n\t\t\t\t\timageFile.height = imageObject.naturalHeight;\r\n\t\t\t\t\tinput.onChange(imageFile);\r\n\t\t\t\t\tURL.revokeObjectURL(imageFile);\r\n\t\t\t\t};\r\n\t\t\t\timageObject.src = localImageUrl;\r\n\t\t\t\tthis.handlePreview(localImageUrl);\r\n\t\t\t}\r\n\t\t}\r\n\t};\r\n\r\n\trenderFileInput = ({ input, type, meta }) => {\r\n\t\tconst { tipoDeImagen } = this.props;\r\n\t\tconst { touched, error, warning } = meta;\r\n\t\treturn (\r\n\t\t\t<div>\r\n\t\t\t\t<input\r\n\t\t\t\t\tname={input.name}\r\n\t\t\t\t\ttype={type}\r\n\t\t\t\t\taccept={tipoDeImagen}\r\n\t\t\t\t\tonChange={event => this.handleChange(event, input)}\r\n\t\t\t\t/>\r\n\t\t\t\t{touched && ((error && <span className=\"text-danger letra form-group\">{error}</span>) || (warning && <span>{warning}</span>))}\r\n\t\t\t</div>\r\n\t\t);\r\n\t};\r\n\r\n\r\n\trender() {\r\n\t\treturn (\r\n\t\t\t<div className={this.useStyles.root}>\r\n\t\t\t\t<Stepper nonLinear activeStep={this.state.activeStep}>\r\n\t\t\t\t\t{this.getSteps().map((label, index) => (\r\n\t\t\t\t\t\t<Step key={label}>\r\n\t\t\t\t\t\t\t<StepButton onClick={this.handleStep(index)} completed={this.state.completed[index]}>\r\n\t\t\t\t\t\t\t\t{label}\r\n\t\t\t\t\t\t\t</StepButton>\r\n\t\t\t\t\t\t</Step>\r\n\t\t\t\t\t))}\r\n\t\t\t\t</Stepper>\r\n\t\t\t\t<div>\r\n\t\t\t\t\t{this.allStepsCompleted() ? (\r\n\t\t\t\t\t\t<div>\r\n\t\t\t\t\t\t\t<Typography className={this.useStyles.instructions}>\r\n\t\t\t\t\t\t\t\tAll steps completed - you&apos;re finished\r\n            </Typography>\r\n\t\t\t\t\t\t\t<Button onClick={this.handleReset}>Reset</Button>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t) : (\r\n\t\t\t\t\t\t\t<div>\r\n\t\t\t\t\t\t\t\t<Typography className={this.useStyles.instructions}>{this.getStepContent(this.state.activeStep)}</Typography>\r\n\t\t\t\t\t\t\t\t<div>\r\n\t\t\t\t\t\t\t\t\t<Button disabled={this.state.activeStep === 0} onClick={this.handleBack} className={this.useStyles.button}>\r\n\t\t\t\t\t\t\t\t\t\tBack\r\n              </Button>\r\n\t\t\t\t\t\t\t\t\t<Button\r\n\t\t\t\t\t\t\t\t\t\tvariant=\"contained\"\r\n\t\t\t\t\t\t\t\t\t\tcolor=\"primary\"\r\n\t\t\t\t\t\t\t\t\t\tonClick={this.handleNext}\r\n\t\t\t\t\t\t\t\t\t\tclassName={this.useStyles.button}\r\n\t\t\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t\t\tNext\r\n              </Button>\r\n\t\t\t\t\t\t\t\t\t{this.state.activeStep !== this.getSteps().length &&\r\n\t\t\t\t\t\t\t\t\t\t(this.state.completed[this.state.activeStep] ? (\r\n\t\t\t\t\t\t\t\t\t\t\t<Typography variant=\"caption\" className={this.useStyles.completed}>\r\n\t\t\t\t\t\t\t\t\t\t\t\tStep {this.state.activeStep + 1} already completed\r\n                  </Typography>\r\n\t\t\t\t\t\t\t\t\t\t) : (\r\n\t\t\t\t\t\t\t\t\t\t\t\t<Button variant=\"contained\" color=\"primary\" onClick={this.handleComplete}>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t{this.completedSteps() === this.totalSteps() - 1 ? 'Finish' : 'Complete Step'}\r\n\t\t\t\t\t\t\t\t\t\t\t\t</Button>\r\n\t\t\t\t\t\t\t\t\t\t\t))}\r\n\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t)}\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t);\r\n\t}\r\n}"]},"metadata":{},"sourceType":"module"}