{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\jeiso\\\\Desktop\\\\REACT\\\\proyectosESCOM\\\\frontend\\\\ESCOM-view\\\\src\\\\SuperAdministrador\\\\componentes\\\\popup\\\\PopUpActividad.js\";\nimport React from 'react';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport 'bootstrap/dist/js/bootstrap.bundle.min'; //estilos\n\nimport '../../css/business-casual.css';\nimport '../../css/estilos.css';\nimport '../../css/bootstrap.min.css';\nimport '../../css/menu.css';\nimport Select from 'react-select';\nimport { Button, Modal, ModalHeader, ModalBody, ModalFooter } from 'reactstrap';\nimport { NotificationContainer, NotificationManager } from 'react-notifications';\nimport { reduxForm, Field } from 'redux-form';\nimport { withRouter } from 'react-router-dom';\nimport { generarInput, renderTextArea } from '../../utilitario/GenerarInputs.js';\nimport { seleccione, validacionCuarentaCaracteres, validacionDoscientosCaracteres, requerido } from '../../utilitario/validacionCampos.js';\nimport { actionConsultarModulos, actionAgregarActividad, actualizarMensajeRegistrar } from '../../actions/actionActividad.js';\nimport { connect } from 'react-redux';\n\nclass PopUpActividad extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.opciones = () => {\n      let respuesta = [];\n      this.props.modulos.map(modulo => {\n        let objeto = {\n          label: modulo.nombreModulo,\n          value: modulo.idModulo\n        };\n        respuesta.push(objeto);\n      });\n      return respuesta;\n    };\n\n    this.handleSubmit = formValues => {\n      try {\n        console.log('fofro', formValues);\n        let actividad = {\n          'nombre': formValues.nombre,\n          'descripcionActividad': formValues.descripcion,\n          'idModulo': formValues.modulo.value\n        };\n        this.props.actionAgregarActividad(actividad, localStorage.getItem('Token'));\n        this.props.reset();\n      } catch (error) {\n        NotificationManager.error('Ingrese todos los datos');\n      }\n    };\n\n    this.state = {\n      modal: false\n    };\n    this.toggle = this.toggle.bind(this);\n  }\n\n  toggle() {\n    this.setState(prevState => ({\n      modal: !prevState.modal\n    }));\n    this.props.reset();\n  }\n\n  componentWillMount() {\n    this.props.actionConsultarModulos(localStorage.getItem('Token'));\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 77\n      },\n      __self: this\n    }, React.createElement(Button, {\n      color: \"danger\",\n      className: \"btn btn-dark\",\n      style: fondoBoton,\n      onClick: this.toggle,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 78\n      },\n      __self: this\n    }, \"Crear actividad +\"), React.createElement(Modal, {\n      isOpen: this.state.modal,\n      toggle: this.toggle,\n      className: this.props.className,\n      size: \"col-md-6\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 79\n      },\n      __self: this\n    }, React.createElement(ModalHeader, {\n      toggle: this.toggle,\n      className: \"center\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 84\n      },\n      __self: this\n    }, \"Crear actividad\"), React.createElement(ModalBody, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 85\n      },\n      __self: this\n    }, React.createElement(\"form\", {\n      onSubmit: this.props.handleSubmit(this.handleSubmit),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 86\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"contenedor-inputs\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 87\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"row\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 88\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"col-sm-12\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 89\n      },\n      __self: this\n    }, React.createElement(Field, {\n      name: \"nombre\",\n      validate: [requerido, validacionCuarentaCaracteres],\n      component: generarInput,\n      label: \"Nombre\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 90\n      },\n      __self: this\n    }), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 91\n      },\n      __self: this\n    }))), React.createElement(\"div\", {\n      className: \"row\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 94\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"col-sm-12\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 95\n      },\n      __self: this\n    }, React.createElement(Field, {\n      name: \"descripcion\",\n      component: renderTextArea,\n      validate: [requerido, validacionDoscientosCaracteres],\n      label: \"descripcion\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 96\n      },\n      __self: this\n    }))), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 99\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      className: \"row\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 100\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"col-sm-12\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 101\n      },\n      __self: this\n    }, React.createElement(Field, {\n      name: \"modulo\",\n      validate: [seleccione],\n      component: ReduxFormSelect,\n      options: this.opciones(),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 102\n      },\n      __self: this\n    })))), React.createElement(ModalFooter, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 106\n      },\n      __self: this\n    }, React.createElement(Button, {\n      style: fondoBoton,\n      type: \"submit\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 107\n      },\n      __self: this\n    }, \"Registrar\"), '', React.createElement(Button, {\n      color: \"secondary\",\n      className: \"letra\",\n      onClick: this.toggle,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 108\n      },\n      __self: this\n    }, \"Cancelar\")))), React.createElement(NotificationContainer, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 112\n      },\n      __self: this\n    })));\n  }\n\n}\n\nexport const ReduxFormSelect = props => {\n  const input = props.input,\n        options = props.options;\n  const _props$meta = props.meta,\n        touched = _props$meta.touched,\n        error = _props$meta.error;\n  return React.createElement(React.Fragment, null, React.createElement(Select, Object.assign({}, input, {\n    isSearchable: false,\n    placeholder: \"Seleccione un modulo\",\n    onChange: value => input.onChange(value),\n    onBlur: () => input.onBlur(input.value),\n    noOptionsMessage: () => 'Aun no hay ningun modulo registrado',\n    options: options,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 124\n    },\n    __self: this\n  })), touched && error && React.createElement(\"span\", {\n    className: \"text-danger letra form-group\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 133\n    },\n    __self: this\n  }, error));\n};\nconst fondoBoton = {\n  background: \"#ec671d\",\n  fontSize: \"13px\",\n  fontFamily: \"sans-serif\"\n};\n\nfunction mapStateToProps(state) {\n  return {\n    modulos: state.act.modulosActividades,\n    mensaje: state.act.mensajeRegistrar\n  };\n}\n\nlet formulario = reduxForm({\n  form: 'registrarActividad'\n})(PopUpActividad);\nexport default withRouter(connect(mapStateToProps, {\n  actionConsultarModulos,\n  actionAgregarActividad,\n  actualizarMensajeRegistrar\n})(formulario));","map":{"version":3,"sources":["C:/Users/jeiso/Desktop/REACT/proyectosESCOM/frontend/ESCOM-view/src/SuperAdministrador/componentes/popup/PopUpActividad.js"],"names":["React","Select","Button","Modal","ModalHeader","ModalBody","ModalFooter","NotificationContainer","NotificationManager","reduxForm","Field","withRouter","generarInput","renderTextArea","seleccione","validacionCuarentaCaracteres","validacionDoscientosCaracteres","requerido","actionConsultarModulos","actionAgregarActividad","actualizarMensajeRegistrar","connect","PopUpActividad","Component","constructor","props","opciones","respuesta","modulos","map","modulo","objeto","label","nombreModulo","value","idModulo","push","handleSubmit","formValues","console","log","actividad","nombre","descripcion","localStorage","getItem","reset","error","state","modal","toggle","bind","setState","prevState","componentWillMount","render","fondoBoton","className","ReduxFormSelect","input","options","meta","touched","onChange","onBlur","background","fontSize","fontFamily","mapStateToProps","act","modulosActividades","mensaje","mensajeRegistrar","formulario","form"],"mappings":"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","sourcesContent":["import React from 'react';\r\n\r\n\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\nimport 'bootstrap/dist/js/bootstrap.bundle.min';\r\n\r\n\r\n//estilos\r\nimport '../../css/business-casual.css'\r\nimport '../../css/estilos.css'\r\nimport '../../css/bootstrap.min.css'\r\nimport '../../css/menu.css'\r\n\r\nimport Select from 'react-select'\r\nimport { Button, Modal, ModalHeader, ModalBody, ModalFooter } from 'reactstrap';\r\nimport { NotificationContainer, NotificationManager } from 'react-notifications';\r\nimport { reduxForm, Field } from 'redux-form';\r\nimport { withRouter } from 'react-router-dom';\r\nimport { generarInput, renderTextArea } from '../../utilitario/GenerarInputs.js'\r\nimport { seleccione, validacionCuarentaCaracteres, validacionDoscientosCaracteres, requerido } from '../../utilitario/validacionCampos.js';\r\n\r\nimport { actionConsultarModulos, actionAgregarActividad, actualizarMensajeRegistrar } from '../../actions/actionActividad.js'\r\nimport { connect } from 'react-redux';\r\n\r\nclass PopUpActividad extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            modal: false\r\n        };\r\n        this.toggle = this.toggle.bind(this);\r\n    }\r\n\r\n    toggle() {\r\n        this.setState(prevState => ({\r\n            modal: !prevState.modal\r\n        }));\r\n        this.props.reset();\r\n    }\r\n\r\n    componentWillMount() {\r\n        this.props.actionConsultarModulos(localStorage.getItem('Token'));\r\n    }\r\n\r\n    opciones = () => {\r\n        let respuesta = [];\r\n        this.props.modulos.map(\r\n            modulo => {\r\n                let objeto = {\r\n                    label: modulo.nombreModulo,\r\n                    value: modulo.idModulo,\r\n                }\r\n                respuesta.push(objeto);\r\n            }\r\n        )\r\n        return respuesta;\r\n    }\r\n\r\n    handleSubmit = formValues => {\r\n        try {\r\n            console.log('fofro', formValues)\r\n            let actividad = {\r\n                'nombre': formValues.nombre,\r\n                'descripcionActividad': formValues.descripcion,\r\n                'idModulo': formValues.modulo.value\r\n            };\r\n            this.props.actionAgregarActividad(actividad, localStorage.getItem('Token'));\r\n            this.props.reset();\r\n        } catch (error) {\r\n            NotificationManager.error('Ingrese todos los datos');\r\n        }\r\n    }\r\n\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                <Button color=\"danger\" className=\"btn btn-dark\" style={fondoBoton} onClick={this.toggle}>Crear actividad +</Button>\r\n                <Modal isOpen={this.state.modal}\r\n                    toggle={this.toggle}\r\n                    className={this.props.className}\r\n                    size=\"col-md-6\"\r\n                >\r\n                    <ModalHeader toggle={this.toggle} className=\"center\">Crear actividad</ModalHeader>\r\n                    <ModalBody>\r\n                        <form onSubmit={this.props.handleSubmit(this.handleSubmit)}>\r\n                            <div className=\"contenedor-inputs\">\r\n                                <div className=\"row\">\r\n                                    <div className=\"col-sm-12\">\r\n                                        <Field name=\"nombre\" validate={[requerido, validacionCuarentaCaracteres]} component={generarInput} label=\"Nombre\" />\r\n                                        <br />\r\n                                    </div>\r\n                                </div>\r\n                                <div className=\"row\">\r\n                                    <div className=\"col-sm-12\">\r\n                                        <Field name=\"descripcion\" component={renderTextArea} validate={[requerido, validacionDoscientosCaracteres]} label=\"descripcion\" />\r\n                                    </div>\r\n                                </div>\r\n                                <br />\r\n                                <div className=\"row\">\r\n                                    <div className=\"col-sm-12\">\r\n                                        <Field name=\"modulo\" validate={[seleccione]} component={ReduxFormSelect} options={this.opciones()} />\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                            <ModalFooter>\r\n                                <Button style={fondoBoton} type=\"submit\">Registrar</Button>{''}\r\n                                <Button color=\"secondary\" className=\"letra\" onClick={this.toggle}>Cancelar</Button>\r\n                            </ModalFooter>\r\n                        </form>\r\n                    </ModalBody>\r\n                    <NotificationContainer />\r\n                </Modal>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport const ReduxFormSelect = props => {\r\n    const { input, options } = props;\r\n    const { touched, error } = props.meta;\r\n    return (\r\n        <>\r\n            <Select\r\n                {...input}\r\n                isSearchable={false}\r\n                placeholder='Seleccione un modulo'\r\n                onChange={value => input.onChange(value)}\r\n                onBlur={() => input.onBlur(input.value)}\r\n                noOptionsMessage={() => 'Aun no hay ningun modulo registrado'}\r\n                options={options}\r\n            />\r\n            {touched && ((error && <span className=\"text-danger letra form-group\">{error}</span>))}\r\n        </>\r\n    )\r\n}\r\n\r\nconst fondoBoton = {\r\n    background: \"#ec671d\",\r\n    fontSize: \"13px\",\r\n    fontFamily: \"sans-serif\"\r\n\r\n}\r\n\r\nfunction mapStateToProps(state) {\r\n    return {\r\n        modulos: state.act.modulosActividades,\r\n        mensaje: state.act.mensajeRegistrar\r\n    }\r\n}\r\n\r\nlet formulario = reduxForm({\r\n    form: 'registrarActividad'\r\n})(PopUpActividad)\r\n\r\nexport default withRouter(connect(mapStateToProps, { actionConsultarModulos, actionAgregarActividad, actualizarMensajeRegistrar })(formulario));\r\n\r\n"]},"metadata":{},"sourceType":"module"}