{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\hashy\\\\Desktop\\\\proyectosESCOM\\\\frontend\\\\ESCOM-view\\\\src\\\\ModuloDocumental\\\\components\\\\Setting\\\\Program\\\\listProgramS.js\";\nimport React from 'react';\nimport { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { withRouter } from 'react-router-dom';\nimport { getListPrograms, getProgramId } from '../../../redux/actions/programA.js';\nimport { ToastContainer } from 'react-toastify';\nimport Add from './add.js';\nimport Edit from './edit.js';\nimport View from './view.js';\n\nclass ListPrograms extends Component {\n  componentWillMount() {\n    this.props.getListPrograms(localStorage.getItem('Token'));\n  }\n\n  save(id) {\n    this.props.getProgramId(localStorage.getItem('Token'), id);\n  }\n\n  loadTable() {\n    return this.props.listProgram.map(program => {\n      return React.createElement(\"tr\", {\n        key: program.id,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 26\n        },\n        __self: this\n      }, React.createElement(\"td\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 27\n        },\n        __self: this\n      }, program.name), React.createElement(\"td\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 28\n        },\n        __self: this\n      }, program.levelEducation), React.createElement(\"td\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 29\n        },\n        __self: this\n      }, React.createElement(\"button\", {\n        onClick: () => this.save(program.id),\n        className: \"btn btn-sm text-light naranja\",\n        \"data-toggle\": \"modal\",\n        \"data-target\": \"#viewModal\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 30\n        },\n        __self: this\n      }, React.createElement(\"i\", {\n        class: \"far fa-eye\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 31\n        },\n        __self: this\n      })), React.createElement(View, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 33\n        },\n        __self: this\n      })), React.createElement(\"td\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 35\n        },\n        __self: this\n      }, React.createElement(\"button\", {\n        onClick: () => this.save(program.id),\n        className: \"btn btn-sm text-light naranja\",\n        \"data-toggle\": \"modal\",\n        \"data-target\": \"#editModal\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 36\n        },\n        __self: this\n      }, React.createElement(\"i\", {\n        class: \"fas fa-pen\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 37\n        },\n        __self: this\n      })), React.createElement(Edit, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 39\n        },\n        __self: this\n      })));\n    });\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      className: \"container \",\n      style: {\n        width: \"90%\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 48\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"text-left titulo\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 50\n      },\n      __self: this\n    }, React.createElement(\"h4\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 51\n      },\n      __self: this\n    }, \"Lista de programas\"), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 52\n      },\n      __self: this\n    })), React.createElement(\"div\", {\n      className: \"shadow\",\n      style: {\n        background: \"#FFFFFF\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 54\n      },\n      __self: this\n    }, React.createElement(ToastContainer, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 55\n      },\n      __self: this\n    }), React.createElement(MaterialTable, {\n      title: \"\",\n      localization: {\n        header: {\n          actions: ' '\n        },\n        pagination: {\n          nextTooltip: 'Siguiente ',\n          previousTooltip: 'Anterior',\n          labelDisplayedRows: '{from}-{to} de {count}',\n          lastTooltip: 'Ultima pagina',\n          firstTooltip: 'Primera pagina',\n          labelRowsSelect: 'Registros',\n          firstAriaLabel: 'oooo'\n        },\n        body: {\n          emptyDataSourceMessage: 'Aun no hay ningun modulo registrado'\n        },\n        toolbar: {\n          searchTooltip: 'Buscar',\n          searchPlaceholder: 'Buscar'\n        }\n      },\n      columns: [{\n        title: 'Nombre del programa',\n        field: 'name'\n      }, {\n        title: 'Nivel educativo',\n        field: 'levelEducation'\n      }],\n      data: this.props.ListProgram,\n      options: {\n        search: true\n      },\n      actions: [{\n        icon: 'edit',\n        tooltip: 'Editar informacion',\n        onClick: (event, rowData) => {\n          let moduloEdit = {\n            'idModulo': rowData.idModulo,\n            'imagenModulo': rowData.imagenModulo,\n            'nombreModulo': rowData.nombreModulo,\n            'descripcionModulo': rowData.descripcionModulo,\n            'url': rowData.url.replace('/', '')\n          };\n          this.props.actionAsignarModulo(moduloEdit);\n          this.props.history.push('/editarModulo');\n        }\n      }, {\n        icon: 'restore',\n        tooltip: 'Suspender / Activar',\n        onClick: (event, rowData) => this.activarDesactivarModulo(rowData.idModulo)\n      }, {\n        icon: 'assignmentInd',\n        tooltip: 'Administrar actividades',\n        onClick: (event, rowData) => {\n          this.props.actionAsignarCodigoModulo(rowData.idModulo);\n          this.props.history.push('/asignarActividadModulo');\n        }\n      }],\n      components: {\n        Toolbar: props => React.createElement(\"div\", {\n          className: \"row\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 122\n          },\n          __self: this\n        }, React.createElement(\"div\", {\n          className: \"col-sm-4\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 123\n          },\n          __self: this\n        }, React.createElement(\"div\", {\n          style: {\n            padding: '16px'\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 124\n          },\n          __self: this\n        }, React.createElement(PopUpModulo, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 125\n          },\n          __self: this\n        }))), React.createElement(\"div\", {\n          className: \"col-sm-8\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 128\n          },\n          __self: this\n        }, React.createElement(MTableToolbar, Object.assign({}, props, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 129\n          },\n          __self: this\n        }))))\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 56\n      },\n      __self: this\n    }), React.createElement(Modal, {\n      open: open,\n      onClose: handleClose,\n      \"aria-labelledby\": \"simple-modal-title\",\n      \"aria-describedby\": \"simple-modal-description\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 154\n      },\n      __self: this\n    }, \"hola\")));\n  }\n\n}\n\nfunction mapStateToProps(state) {\n  return {\n    listProgram: state.program.listProgramR,\n    messageDisablePr: state.program.messageDisable\n  };\n}\n\nexport default withRouter(connect(mapStateToProps, {\n  getListPrograms,\n  getProgramId\n})(ListPrograms));","map":{"version":3,"sources":["C:/Users/hashy/Desktop/proyectosESCOM/frontend/ESCOM-view/src/ModuloDocumental/components/Setting/Program/listProgramS.js"],"names":["React","Component","connect","withRouter","getListPrograms","getProgramId","ToastContainer","Add","Edit","View","ListPrograms","componentWillMount","props","localStorage","getItem","save","id","loadTable","listProgram","map","program","name","levelEducation","render","width","background","header","actions","pagination","nextTooltip","previousTooltip","labelDisplayedRows","lastTooltip","firstTooltip","labelRowsSelect","firstAriaLabel","body","emptyDataSourceMessage","toolbar","searchTooltip","searchPlaceholder","title","field","ListProgram","search","icon","tooltip","onClick","event","rowData","moduloEdit","idModulo","imagenModulo","nombreModulo","descripcionModulo","url","replace","actionAsignarModulo","history","push","activarDesactivarModulo","actionAsignarCodigoModulo","Toolbar","padding","open","handleClose","mapStateToProps","state","listProgramR","messageDisablePr","messageDisable"],"mappings":"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","sourcesContent":["import React from 'react';\r\nimport { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { withRouter } from 'react-router-dom';\r\nimport { getListPrograms, getProgramId } from '../../../redux/actions/programA.js';\r\nimport { ToastContainer } from 'react-toastify';\r\nimport Add from './add.js';\r\nimport Edit from './edit.js';\r\nimport View from './view.js';\r\n\r\n\r\nclass ListPrograms extends Component {\r\n\r\n    componentWillMount() {\r\n        this.props.getListPrograms(localStorage.getItem('Token'))\r\n    }\r\n\r\n    save(id) {\r\n        this.props.getProgramId(localStorage.getItem('Token'), id)\r\n    }\r\n\r\n\r\n    loadTable() {\r\n        return this.props.listProgram.map((program) => {\r\n            return (\r\n                <tr key={program.id}>\r\n                    <td>{program.name}</td>\r\n                    <td>{program.levelEducation}</td>\r\n                    <td>\r\n                        <button onClick={() => this.save(program.id)} className=\"btn btn-sm text-light naranja\" data-toggle=\"modal\" data-target=\"#viewModal\">\r\n                            <i class=\"far fa-eye\"></i>\r\n                        </button>\r\n                        <View />\r\n                    </td>\r\n                    <td>\r\n                        <button onClick={() => this.save(program.id)} className=\"btn btn-sm text-light naranja\" data-toggle=\"modal\" data-target=\"#editModal\">\r\n                            <i class=\"fas fa-pen\"></i>\r\n                        </button>\r\n                        <Edit />\r\n                    </td>\r\n                </tr>\r\n            )\r\n        })\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"container \" style={{ width: \"90%\" }}>\r\n\r\n                <div className=\"text-left titulo\">\r\n                    <h4>Lista de programas</h4>\r\n                    <br />\r\n                </div>\r\n                <div className=\"shadow\" style={{ background: \"#FFFFFF\" }}>\r\n                    <ToastContainer />\r\n                    <MaterialTable\r\n                        title=\"\"\r\n                        localization={{\r\n                            header: {\r\n                                actions: ' '\r\n                            },\r\n                            pagination: {\r\n                                nextTooltip: 'Siguiente ',\r\n                                previousTooltip: 'Anterior',\r\n                                labelDisplayedRows: '{from}-{to} de {count}',\r\n                                lastTooltip: 'Ultima pagina',\r\n                                firstTooltip: 'Primera pagina',\r\n                                labelRowsSelect: 'Registros',\r\n                                firstAriaLabel: 'oooo'\r\n                            },\r\n                            body: {\r\n                                emptyDataSourceMessage: 'Aun no hay ningun modulo registrado'\r\n                            },\r\n                            toolbar: {\r\n                                searchTooltip: 'Buscar',\r\n                                searchPlaceholder: 'Buscar'\r\n                            }\r\n                        }}\r\n                        columns={[\r\n                            { title: 'Nombre del programa', field: 'name' },\r\n                            { title: 'Nivel educativo', field: 'levelEducation' }\r\n                        ]}\r\n                        data={this.props.ListProgram}\r\n                        options={{\r\n                            search: true\r\n\r\n                        }}\r\n                        actions={[\r\n                            {\r\n                                icon: 'edit',\r\n                                tooltip: 'Editar informacion',\r\n                                onClick: (event, rowData) => {\r\n\r\n                                    let moduloEdit = {\r\n                                        'idModulo': rowData.idModulo,\r\n                                        'imagenModulo': rowData.imagenModulo,\r\n                                        'nombreModulo': rowData.nombreModulo,\r\n                                        'descripcionModulo': rowData.descripcionModulo,\r\n                                        'url': rowData.url.replace('/', '')\r\n                                    }\r\n                                    this.props.actionAsignarModulo(moduloEdit);\r\n                                    this.props.history.push('/editarModulo');\r\n                                }\r\n                            },\r\n                            {\r\n                                icon: 'restore',\r\n                                tooltip: 'Suspender / Activar',\r\n                                onClick: (event, rowData) => this.activarDesactivarModulo(rowData.idModulo)\r\n                            },\r\n                            {\r\n                                icon: 'assignmentInd',\r\n                                tooltip: 'Administrar actividades',\r\n                                onClick: (event, rowData) => {\r\n                                    this.props.actionAsignarCodigoModulo(rowData.idModulo);\r\n                                    this.props.history.push('/asignarActividadModulo')\r\n                                }\r\n                            }\r\n                        ]}\r\n\r\n                        components={{\r\n                            Toolbar: props => (\r\n                                <div className=\"row\">\r\n                                    <div className=\"col-sm-4\">\r\n                                        <div style={{ padding: '16px' }}>\r\n                                            <PopUpModulo />\r\n                                        </div>\r\n                                    </div>\r\n                                    <div className=\"col-sm-8\">\r\n                                        <MTableToolbar {...props} />\r\n                                    </div>\r\n                                </div>\r\n                            ),\r\n                        }}\r\n\r\n                    />\r\n                    {/*}\r\n                    <div>\r\n                        <Add />\r\n                    </div>\r\n                    <table class=\"table border table-striped\">\r\n                        <thead class=\"colorBlue text-light\">\r\n                            <tr>\r\n                                <th scope=\"col\">Programa</th>\r\n                                <th scope=\"col\">Nivel Educativo</th>\r\n                                <th scope=\"col\"></th>\r\n                                <th scope=\"col\"></th>\r\n                            </tr>\r\n                        </thead>\r\n                        <tbody>\r\n                            {this.loadTable()}\r\n                        </tbody>\r\n                    </table>\r\n                    */}\r\n                    <Modal\r\n                        open={open}\r\n                        onClose={handleClose}\r\n                        aria-labelledby=\"simple-modal-title\"\r\n                        aria-describedby=\"simple-modal-description\"\r\n                    >\r\n                        hola\r\n                    </Modal>\r\n                </div>\r\n            </div>\r\n\r\n        )\r\n    }\r\n\r\n}\r\n\r\nfunction mapStateToProps(state) {\r\n    return {\r\n        listProgram: state.program.listProgramR,\r\n        messageDisablePr: state.program.messageDisable\r\n\r\n    }\r\n}\r\n\r\nexport default withRouter(connect(mapStateToProps, { getListPrograms, getProgramId })(ListPrograms));\r\n"]},"metadata":{},"sourceType":"module"}