{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\jeiso\\\\Desktop\\\\REACT\\\\proyectosESCOM\\\\frontend\\\\ESCOM-view\\\\src\\\\SuperAdministrador\\\\componentes\\\\color.js\";\nimport React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Stepper from '@material-ui/core/Stepper';\nimport Step from '@material-ui/core/Step';\nimport StepButton from '@material-ui/core/StepButton';\nimport Button from '@material-ui/core/Button';\nimport Typography from '@material-ui/core/Typography';\nimport { SketchPicker } from 'react-color';\nimport { Field, reduxForm } from \"redux-form\";\nimport PropTypes from \"prop-types\";\nimport Defecto from '../imagenes/defecto.jpg';\n\nclass Configuracion extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      activeStep: 0,\n      completed: {}\n    };\n\n    this.completedSteps = () => {\n      return Object.keys(this.state.completed).length;\n    };\n\n    this.handleChangeComplete = color => {\n      this.props.actionActualizarBarraLateral(color.hex);\n    };\n\n    this.handleChangeCompleteSuperior = color => {\n      this.props.actionActualizarBarraSuperior(color.hex);\n    };\n\n    this.handleChangeCompleteBotones = color => {\n      this.props.actionActualizarBotones(color.hex);\n    };\n\n    this.allStepsCompleted = () => {\n      return this.completedSteps() === this.totalSteps();\n    };\n\n    this.totalSteps = () => {\n      return this.getSteps().length;\n    };\n\n    this.isLastStep = () => {\n      return this.state.activeStep === this.totalSteps() - 1;\n    };\n\n    this.useStyles = makeStyles(theme => ({\n      root: {\n        width: '100%'\n      },\n      button: {\n        marginRight: theme.spacing(1)\n      },\n      completed: {\n        display: 'inline-block'\n      },\n      instructions: {\n        marginTop: theme.spacing(1),\n        marginBottom: theme.spacing(1)\n      }\n    }));\n\n    this.handleReset = () => {\n      this.setState({\n        activeStep: 0,\n        completed: {}\n      });\n    };\n\n    this.handleComplete = () => {\n      const newCompleted = this.state.completed;\n      newCompleted[this.state.activeStep] = true;\n      this.setState({\n        completed: newCompleted\n      });\n      this.handleNext();\n    };\n\n    this.handleNext = () => {\n      const newActiveStep = this.isLastStep() && !this.allStepsCompleted() ? // It's the last step, but not all steps have been completed,\n      // find the first step that has been completed\n      this.getSteps().findIndex((step, i) => !(i in this.state.completed)) : this.state.activeStep + 1;\n      this.setState({\n        activeStep: newActiveStep\n      });\n    };\n\n    this.handleStep = step => () => {\n      this.setState({\n        activeStep: step\n      });\n    };\n\n    this.handleBack = () => {\n      let cuenta = this.state.activeStep - 1;\n      this.setState({\n        activeStep: cuenta\n      });\n    };\n\n    this.validateImageWeight = imageFile => {\n      if (imageFile && imageFile.size) {\n        const imageFileKb = imageFile.size / 1024;\n        const pesoMaximo = this.props.pesoMaximo;\n\n        if (imageFileKb > pesoMaximo) {\n          return `El tamaÃ±o de la imagen debe ser menor o igual a ${pesoMaximo}kb`;\n        }\n      }\n    };\n\n    this.validateImageWidth = imageFile => {\n      if (imageFile) {\n        const anchuraMaxima = this.props.anchuraMaxima;\n\n        if (imageFile.width > anchuraMaxima) {\n          return `El ancho de la imagen debe ser menor o igual a ${anchuraMaxima}px`;\n        }\n      }\n    };\n\n    this.validateImageHeight = imageFile => {\n      if (imageFile) {\n        const alturaMaxima = this.props.alturaMaxima;\n\n        if (imageFile.height > alturaMaxima) {\n          return `La altura de la imagen debe ser menor o igual a ${alturaMaxima}px`;\n        }\n      }\n    };\n\n    this.validateImageFormat = imageFile => {\n      if (imageFile) {\n        const tipoDeImagen = this.props.tipoDeImagen;\n\n        if (!tipoDeImagen.includes(imageFile.type)) {\n          return `El tipo de imagen debe ser ${tipoDeImagen}`;\n        }\n      }\n    };\n\n    this.handlePreview = imageUrl => {\n      const previewImageDom = document.querySelector(\".preview-image\");\n      previewImageDom.src = imageUrl;\n    };\n\n    this.handleChange = (event, input) => {\n      event.preventDefault();\n      let imageFile = event.target.files[0];\n      const tipoDeImagen = this.props.tipoDeImagen;\n\n      if (imageFile) {\n        if (!tipoDeImagen.includes(imageFile.type)) {\n          // NotificationManager.error('Seleccione un archivo de imagen .jpg o .png');\n          event.target.value = null;\n        } else {\n          const localImageUrl = URL.createObjectURL(imageFile);\n          const imageObject = new window.Image();\n\n          imageObject.onload = () => {\n            imageFile.width = imageObject.naturalWidth;\n            imageFile.height = imageObject.naturalHeight;\n            input.onChange(imageFile);\n            URL.revokeObjectURL(imageFile);\n          };\n\n          imageObject.src = localImageUrl;\n          this.handlePreview(localImageUrl);\n        }\n      }\n    };\n\n    this.renderFileInput = ({\n      input,\n      type,\n      meta\n    }) => {\n      const tipoDeImagen = this.props.tipoDeImagen;\n      const touched = meta.touched,\n            error = meta.error,\n            warning = meta.warning;\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 238\n        },\n        __self: this\n      }, React.createElement(\"input\", {\n        name: input.name,\n        type: type,\n        accept: tipoDeImagen,\n        onChange: event => this.handleChange(event, input),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 239\n        },\n        __self: this\n      }), touched && (error && React.createElement(\"span\", {\n        className: \"text-danger letra form-group\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 245\n        },\n        __self: this\n      }, error) || warning && React.createElement(\"span\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 245\n        },\n        __self: this\n      }, warning)));\n    };\n\n    this.handleSubmitForm = values => {\n      console.log('formvalues', values);\n    };\n  }\n\n  getSteps() {\n    return ['Color barra superior', 'Color barra lateral', 'Color de botones', 'Imagen del login', 'Imagen del logo'];\n  }\n\n  //\n  getStepContent(step) {\n    switch (step) {\n      case 0:\n        return React.createElement(SketchPicker, {\n          disableAlpha: true,\n          color: \"#7D8A62\",\n          onChangeComplete: this.handleChangeComplete,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 43\n          },\n          __self: this\n        });\n\n      case 1:\n        return React.createElement(SketchPicker, {\n          disableAlpha: true,\n          color: \"#7D8362\",\n          onChangeComplete: this.handleChangeCompleteSuperior,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 45\n          },\n          __self: this\n        });\n\n      case 2:\n        return React.createElement(SketchPicker, {\n          disableAlpha: true,\n          onChangeComplete: this.handleChangeCompleteBotones,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 47\n          },\n          __self: this\n        });\n\n      case 3:\n        return React.createElement(React.Fragment, null, React.createElement(\"div\", {\n          style: {\n            padding: \"30px 30px 30px 77px\"\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 50\n          },\n          __self: this\n        }, React.createElement(\"img\", {\n          src: Defecto,\n          alt: \"preview\",\n          className: \"preview-image\",\n          style: {\n            height: \"200px\",\n            width: \"200px\",\n            borderRadius: \"50%\",\n            objectFit: \"cover\"\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 51\n          },\n          __self: this\n        })), React.createElement(Field, {\n          name: \"image\",\n          type: \"file\",\n          validate: [this.validateImageWeight, this.validateImageWidth, this.validateImageHeight, this.validateImageFormat],\n          component: this.renderFileInput,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 55\n          },\n          __self: this\n        }));\n\n      case 4:\n        return React.createElement(React.Fragment, null, React.createElement(\"div\", {\n          style: {\n            padding: \"30px 30px 30px 77px\"\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 70\n          },\n          __self: this\n        }, React.createElement(\"img\", {\n          src: Defecto,\n          alt: \"preview\",\n          className: \"preview-image\",\n          style: {\n            height: \"200px\",\n            width: \"200px\",\n            borderRadius: \"50%\",\n            objectFit: \"cover\"\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 71\n          },\n          __self: this\n        })), React.createElement(Field, {\n          name: \"image\",\n          type: \"file\",\n          validate: [this.validateImageWeight, this.validateImageWidth, this.validateImageHeight, this.validateImageFormat],\n          component: this.renderFileInput,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 75\n          },\n          __self: this\n        }));\n\n      default:\n        return 'Unknown step';\n    }\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      className: this.useStyles.root,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 257\n      },\n      __self: this\n    }, React.createElement(Stepper, {\n      nonLinear: true,\n      activeStep: this.state.activeStep,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 258\n      },\n      __self: this\n    }, this.getSteps().map((label, index) => React.createElement(Step, {\n      key: label,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 260\n      },\n      __self: this\n    }, React.createElement(StepButton, {\n      onClick: this.handleStep(index),\n      completed: this.state.completed[index],\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 261\n      },\n      __self: this\n    }, label)))), React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 267\n      },\n      __self: this\n    }, React.createElement(\"form\", {\n      onSubmit: this.props.handleSubmit(this.handleSubmitForm),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 268\n      },\n      __self: this\n    }, this.allStepsCompleted() ? React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 270\n      },\n      __self: this\n    }, React.createElement(Typography, {\n      className: this.useStyles.instructions,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 271\n      },\n      __self: this\n    }, \"All steps completed - you're finished\"), React.createElement(Button, {\n      onClick: this.handleReset,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 274\n      },\n      __self: this\n    }, \"Reset\")) : React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 277\n      },\n      __self: this\n    }, React.createElement(Typography, {\n      className: this.useStyles.instructions,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 278\n      },\n      __self: this\n    }, this.getStepContent(this.state.activeStep)), React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 279\n      },\n      __self: this\n    }, React.createElement(Button, {\n      disabled: this.state.activeStep === 0,\n      onClick: this.handleBack,\n      className: this.useStyles.button,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 280\n      },\n      __self: this\n    }, \"Back\"), React.createElement(Button, {\n      variant: \"contained\",\n      color: \"primary\",\n      onClick: this.handleNext,\n      className: this.useStyles.button,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 283\n      },\n      __self: this\n    }, \"Next\"), this.state.activeStep !== this.getSteps().length && (this.state.completed[this.state.activeStep] ? React.createElement(Typography, {\n      variant: \"caption\",\n      className: this.useStyles.completed,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 293\n      },\n      __self: this\n    }, \"Step \", this.state.activeStep + 1, \" already completed\") : React.createElement(Button, {\n      variant: \"contained\",\n      type: \"submit\",\n      color: \"primary\",\n      onClick: this.handleComplete,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 297\n      },\n      __self: this\n    }, this.completedSteps() === this.totalSteps() - 1 ? 'Finish' : 'Complete Step')))))));\n  }\n\n}\n\nConfiguracion.propTypes = {\n  previewLogoUrl: PropTypes.string,\n  tipoDeImagen: PropTypes.string,\n  pesoMaximo: PropTypes.number,\n  anchuraMaxima: PropTypes.number,\n  alturaMaxima: PropTypes.number,\n  handleSubmit: PropTypes.func.isRequired\n};\nConfiguracion.defaultProps = {\n  previewLogoUrl: \"https://imgplaceholder.com/400x300\",\n  tipoDeImagen: \"image/jpeg, image/png\",\n  pesoMaximo: 100,\n  anchuraMaxima: 100,\n  alturaMaxima: 100\n};\nlet formularioModulo = reduxForm({\n  form: \"pruebaColor\"\n})(Configuracion);\nexport default formularioModulo;","map":{"version":3,"sources":["C:/Users/jeiso/Desktop/REACT/proyectosESCOM/frontend/ESCOM-view/src/SuperAdministrador/componentes/color.js"],"names":["React","makeStyles","Stepper","Step","StepButton","Button","Typography","SketchPicker","Field","reduxForm","PropTypes","Defecto","Configuracion","Component","state","activeStep","completed","completedSteps","Object","keys","length","handleChangeComplete","color","props","actionActualizarBarraLateral","hex","handleChangeCompleteSuperior","actionActualizarBarraSuperior","handleChangeCompleteBotones","actionActualizarBotones","allStepsCompleted","totalSteps","getSteps","isLastStep","useStyles","theme","root","width","button","marginRight","spacing","display","instructions","marginTop","marginBottom","handleReset","setState","handleComplete","newCompleted","handleNext","newActiveStep","findIndex","step","i","handleStep","handleBack","cuenta","validateImageWeight","imageFile","size","imageFileKb","pesoMaximo","validateImageWidth","anchuraMaxima","validateImageHeight","alturaMaxima","height","validateImageFormat","tipoDeImagen","includes","type","handlePreview","imageUrl","previewImageDom","document","querySelector","src","handleChange","event","input","preventDefault","target","files","value","localImageUrl","URL","createObjectURL","imageObject","window","Image","onload","naturalWidth","naturalHeight","onChange","revokeObjectURL","renderFileInput","meta","touched","error","warning","name","handleSubmitForm","values","console","log","getStepContent","padding","borderRadius","objectFit","render","map","label","index","handleSubmit","propTypes","previewLogoUrl","string","number","func","isRequired","defaultProps","formularioModulo","form"],"mappings":"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","sourcesContent":["import React from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Stepper from '@material-ui/core/Stepper';\r\nimport Step from '@material-ui/core/Step';\r\nimport StepButton from '@material-ui/core/StepButton';\r\nimport Button from '@material-ui/core/Button';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport { SketchPicker } from 'react-color';\r\nimport { Field, reduxForm } from \"redux-form\";\r\nimport PropTypes from \"prop-types\";\r\nimport Defecto from '../imagenes/defecto.jpg';\r\n\r\nclass Configuracion extends React.Component {\r\n\r\n\tstate = {\r\n\t\tactiveStep: 0,\r\n\t\tcompleted: {}\r\n\t}\r\n\r\n\tgetSteps() {\r\n\t\treturn ['Color barra superior', 'Color barra lateral', 'Color de botones', 'Imagen del login', 'Imagen del logo'];\r\n\t}\r\n\r\n\tcompletedSteps = () => {\r\n\t\treturn Object.keys(this.state.completed).length;\r\n\t};\r\n\r\n\thandleChangeComplete = (color) => {\r\n        this.props.actionActualizarBarraLateral(color.hex);\r\n    };\r\n\r\n    handleChangeCompleteSuperior = (color) => {\r\n        this.props.actionActualizarBarraSuperior(color.hex);\r\n    };\r\n\r\n    handleChangeCompleteBotones = (color) => {\r\n        this.props.actionActualizarBotones(color.hex);\r\n    };\r\n\t//\r\n\tgetStepContent(step) {\r\n\t\tswitch (step) {\r\n\t\t\tcase 0:\r\n\t\t\t\treturn (<SketchPicker disableAlpha={true} color=\"#7D8A62\" onChangeComplete={this.handleChangeComplete} />)\r\n\t\t\tcase 1:\r\n\t\t\t\treturn (<SketchPicker disableAlpha={true} color=\"#7D8362\" onChangeComplete={this.handleChangeCompleteSuperior}/>)\r\n\t\t\tcase 2:\r\n\t\t\t\treturn (<SketchPicker disableAlpha={true} onChangeComplete={this.handleChangeCompleteBotones} />);\r\n\t\t\tcase 3:\r\n\t\t\t\treturn (<>\r\n\t\t\t\t\t<div style={{ padding: \"30px 30px 30px 77px\" }}>\r\n\t\t\t\t\t\t<img src={Defecto} alt=\"preview\"\r\n\t\t\t\t\t\t\tclassName=\"preview-image\"\r\n\t\t\t\t\t\t\tstyle={{ height: \"200px\", width: \"200px\", borderRadius: \"50%\", objectFit: \"cover\" }} />\r\n\t\t\t\t\t</div>\r\n\t\t\t\t\t<Field\r\n\t\t\t\t\t\tname=\"image\"\r\n\t\t\t\t\t\ttype=\"file\"\r\n\t\t\t\t\t\tvalidate={[\r\n\t\t\t\t\t\t\tthis.validateImageWeight,\r\n\t\t\t\t\t\t\tthis.validateImageWidth,\r\n\t\t\t\t\t\t\tthis.validateImageHeight,\r\n\t\t\t\t\t\t\tthis.validateImageFormat\r\n\t\t\t\t\t\t]}\r\n\t\t\t\t\t\tcomponent={this.renderFileInput}\r\n\t\t\t\t\t/>\r\n\t\t\t\t</>);\r\n\t\t\tcase 4:\r\n\t\t\t\treturn (\r\n\t\t\t\t\t<>\r\n\t\t\t\t\t\t<div style={{ padding: \"30px 30px 30px 77px\" }}>\r\n\t\t\t\t\t\t\t<img src={Defecto} alt=\"preview\"\r\n\t\t\t\t\t\t\t\tclassName=\"preview-image\"\r\n\t\t\t\t\t\t\t\tstyle={{ height: \"200px\", width: \"200px\", borderRadius: \"50%\", objectFit: \"cover\" }} />\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t<Field\r\n\t\t\t\t\t\t\tname=\"image\"\r\n\t\t\t\t\t\t\ttype=\"file\"\r\n\t\t\t\t\t\t\tvalidate={[\r\n\t\t\t\t\t\t\t\tthis.validateImageWeight,\r\n\t\t\t\t\t\t\t\tthis.validateImageWidth,\r\n\t\t\t\t\t\t\t\tthis.validateImageHeight,\r\n\t\t\t\t\t\t\t\tthis.validateImageFormat\r\n\t\t\t\t\t\t\t]}\r\n\t\t\t\t\t\t\tcomponent={this.renderFileInput}\r\n\t\t\t\t\t\t/>\r\n\t\t\t\t\t</>)\r\n\r\n\t\t\tdefault:\r\n\t\t\t\treturn 'Unknown step';\r\n\t\t}\r\n\t}\r\n\r\n\tallStepsCompleted = () => {\r\n\t\treturn this.completedSteps() === this.totalSteps();\r\n\t};\r\n\r\n\ttotalSteps = () => {\r\n\t\treturn this.getSteps().length;\r\n\t};\r\n\r\n\tisLastStep = () => {\r\n\t\treturn this.state.activeStep === this.totalSteps() - 1;\r\n\t};\r\n\r\n\tuseStyles = makeStyles(theme => ({\r\n\t\troot: {\r\n\t\t\twidth: '100%',\r\n\t\t},\r\n\t\tbutton: {\r\n\t\t\tmarginRight: theme.spacing(1),\r\n\t\t},\r\n\t\tcompleted: {\r\n\t\t\tdisplay: 'inline-block',\r\n\t\t},\r\n\t\tinstructions: {\r\n\t\t\tmarginTop: theme.spacing(1),\r\n\t\t\tmarginBottom: theme.spacing(1),\r\n\t\t},\r\n\t}));\r\n\r\n\thandleReset = () => {\r\n\t\tthis.setState({ activeStep: 0, completed: {} })\r\n\t};\r\n\r\n\thandleComplete = () => {\r\n\t\tconst newCompleted = this.state.completed;\r\n\t\tnewCompleted[this.state.activeStep] = true;\r\n\t\tthis.setState({ completed: newCompleted })\r\n\t\tthis.handleNext();\r\n\t};\r\n\r\n\thandleNext = () => {\r\n\t\tconst newActiveStep =\r\n\t\t\tthis.isLastStep() && !this.allStepsCompleted()\r\n\t\t\t\t? // It's the last step, but not all steps have been completed,\r\n\t\t\t\t// find the first step that has been completed\r\n\t\t\t\tthis.getSteps().findIndex((step, i) => !(i in this.state.completed))\r\n\t\t\t\t: this.state.activeStep + 1;\r\n\t\tthis.setState({ activeStep: newActiveStep })\r\n\t};\r\n\r\n\thandleStep = step => () => {\r\n\t\tthis.setState({ activeStep: step })\r\n\t};\r\n\r\n\thandleBack = () => {\r\n\t\tlet cuenta = this.state.activeStep - 1;\r\n\t\tthis.setState({ activeStep: cuenta })\r\n\t};\r\n\r\n\tstatic propTypes = {\r\n\t\tpreviewLogoUrl: PropTypes.string,\r\n\t\ttipoDeImagen: PropTypes.string,\r\n\t\tpesoMaximo: PropTypes.number,\r\n\t\tanchuraMaxima: PropTypes.number,\r\n\t\talturaMaxima: PropTypes.number,\r\n\t\thandleSubmit: PropTypes.func.isRequired\r\n\t};\r\n\r\n\tstatic defaultProps = {\r\n\t\tpreviewLogoUrl: \"https://imgplaceholder.com/400x300\",\r\n\t\ttipoDeImagen: \"image/jpeg, image/png\",\r\n\t\tpesoMaximo: 100,\r\n\t\tanchuraMaxima: 100,\r\n\t\talturaMaxima: 100\r\n\t};\r\n\tvalidateImageWeight = imageFile => {\r\n\t\tif (imageFile && imageFile.size) {\r\n\t\t\tconst imageFileKb = imageFile.size / 1024;\r\n\t\t\tconst { pesoMaximo } = this.props;\r\n\r\n\t\t\tif (imageFileKb > pesoMaximo) {\r\n\t\t\t\treturn `El tamaÃ±o de la imagen debe ser menor o igual a ${pesoMaximo}kb`;\r\n\t\t\t}\r\n\t\t}\r\n\t};\r\n\tvalidateImageWidth = imageFile => {\r\n\t\tif (imageFile) {\r\n\t\t\tconst { anchuraMaxima } = this.props;\r\n\t\t\tif (imageFile.width > anchuraMaxima) {\r\n\t\t\t\treturn `El ancho de la imagen debe ser menor o igual a ${anchuraMaxima}px`;\r\n\t\t\t}\r\n\t\t}\r\n\t};\r\n\tvalidateImageHeight = imageFile => {\r\n\t\tif (imageFile) {\r\n\t\t\tconst { alturaMaxima } = this.props;\r\n\r\n\t\t\tif (imageFile.height > alturaMaxima) {\r\n\t\t\t\treturn `La altura de la imagen debe ser menor o igual a ${alturaMaxima}px`;\r\n\t\t\t}\r\n\t\t}\r\n\t};\r\n\r\n\tvalidateImageFormat = imageFile => {\r\n\t\tif (imageFile) {\r\n\t\t\tconst { tipoDeImagen } = this.props;\r\n\t\t\tif (!tipoDeImagen.includes(imageFile.type)) {\r\n\t\t\t\treturn `El tipo de imagen debe ser ${tipoDeImagen}`;\r\n\t\t\t}\r\n\t\t}\r\n\t};\r\n\r\n\thandlePreview = imageUrl => {\r\n\t\tconst previewImageDom = document.querySelector(\".preview-image\");\r\n\t\tpreviewImageDom.src = imageUrl;\r\n\t};\r\n\r\n\thandleChange = (event, input) => {\r\n\t\tevent.preventDefault();\r\n\t\tlet imageFile = event.target.files[0];\r\n\t\tconst { tipoDeImagen } = this.props;\r\n\t\tif (imageFile) {\r\n\t\t\tif (!tipoDeImagen.includes(imageFile.type)) {\r\n\t\t\t\t// NotificationManager.error('Seleccione un archivo de imagen .jpg o .png');\r\n\t\t\t\tevent.target.value = null;\r\n\t\t\t} else {\r\n\r\n\t\t\t\tconst localImageUrl = URL.createObjectURL(imageFile);\r\n\t\t\t\tconst imageObject = new window.Image();\r\n\r\n\t\t\t\timageObject.onload = () => {\r\n\t\t\t\t\timageFile.width = imageObject.naturalWidth;\r\n\t\t\t\t\timageFile.height = imageObject.naturalHeight;\r\n\t\t\t\t\tinput.onChange(imageFile);\r\n\t\t\t\t\tURL.revokeObjectURL(imageFile);\r\n\t\t\t\t};\r\n\t\t\t\timageObject.src = localImageUrl;\r\n\t\t\t\tthis.handlePreview(localImageUrl);\r\n\t\t\t}\r\n\t\t}\r\n\t};\r\n\r\n\trenderFileInput = ({ input, type, meta }) => {\r\n\t\tconst { tipoDeImagen } = this.props;\r\n\t\tconst { touched, error, warning } = meta;\r\n\t\treturn (\r\n\t\t\t<div>\r\n\t\t\t\t<input\r\n\t\t\t\t\tname={input.name}\r\n\t\t\t\t\ttype={type}\r\n\t\t\t\t\taccept={tipoDeImagen}\r\n\t\t\t\t\tonChange={event => this.handleChange(event, input)}\r\n\t\t\t\t/>\r\n\t\t\t\t{touched && ((error && <span className=\"text-danger letra form-group\">{error}</span>) || (warning && <span>{warning}</span>))}\r\n\t\t\t</div>\r\n\t\t);\r\n\t};\r\n\r\n\thandleSubmitForm = values => {\r\n\t\tconsole.log('formvalues',values);\r\n\t}\r\n\r\n\r\n\trender() {\r\n\t\treturn (\r\n\t\t\t<div className={this.useStyles.root}>\r\n\t\t\t\t<Stepper nonLinear activeStep={this.state.activeStep}>\r\n\t\t\t\t\t{this.getSteps().map((label, index) => (\r\n\t\t\t\t\t\t<Step key={label}>\r\n\t\t\t\t\t\t\t<StepButton onClick={this.handleStep(index)} completed={this.state.completed[index]}>\r\n\t\t\t\t\t\t\t\t{label}\r\n\t\t\t\t\t\t\t</StepButton>\r\n\t\t\t\t\t\t</Step>\r\n\t\t\t\t\t))}\r\n\t\t\t\t</Stepper>\r\n\t\t\t\t<div>\r\n\t\t\t\t\t<form onSubmit={this.props.handleSubmit(this.handleSubmitForm)}>\r\n\t\t\t\t\t{this.allStepsCompleted() ? (\r\n\t\t\t\t\t\t<div>\r\n\t\t\t\t\t\t\t<Typography className={this.useStyles.instructions}>\r\n\t\t\t\t\t\t\t\tAll steps completed - you&apos;re finished\r\n            </Typography>\r\n\t\t\t\t\t\t\t<Button onClick={this.handleReset}>Reset</Button>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t) : (\r\n\t\t\t\t\t\t\t<div>\r\n\t\t\t\t\t\t\t\t<Typography className={this.useStyles.instructions}>{this.getStepContent(this.state.activeStep)}</Typography>\r\n\t\t\t\t\t\t\t\t<div>\r\n\t\t\t\t\t\t\t\t\t<Button disabled={this.state.activeStep === 0} onClick={this.handleBack} className={this.useStyles.button}>\r\n\t\t\t\t\t\t\t\t\t\tBack\r\n              </Button>\r\n\t\t\t\t\t\t\t\t\t<Button\r\n\t\t\t\t\t\t\t\t\t\tvariant=\"contained\"\r\n\t\t\t\t\t\t\t\t\t\tcolor=\"primary\"\r\n\t\t\t\t\t\t\t\t\t\tonClick={this.handleNext}\r\n\t\t\t\t\t\t\t\t\t\tclassName={this.useStyles.button}\r\n\t\t\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t\t\tNext\r\n              </Button>\r\n\t\t\t\t\t\t\t\t\t{this.state.activeStep !== this.getSteps().length &&\r\n\t\t\t\t\t\t\t\t\t\t(this.state.completed[this.state.activeStep] ? (\r\n\t\t\t\t\t\t\t\t\t\t\t<Typography variant=\"caption\" className={this.useStyles.completed}>\r\n\t\t\t\t\t\t\t\t\t\t\t\tStep {this.state.activeStep + 1} already completed\r\n                  </Typography>\r\n\t\t\t\t\t\t\t\t\t\t) : (\r\n\t\t\t\t\t\t\t\t\t\t\t\t<Button variant=\"contained\" type=\"submit\" color=\"primary\" onClick={this.handleComplete}>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t{this.completedSteps() === this.totalSteps() - 1 ? 'Finish' : 'Complete Step'}\r\n\t\t\t\t\t\t\t\t\t\t\t\t</Button>\r\n\t\t\t\t\t\t\t\t\t\t\t))}\r\n\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t)}\r\n\t\t\t\t\t\t</form>\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t);\r\n\t}\r\n}\r\n\r\nlet formularioModulo = reduxForm({\r\n\tform: \"pruebaColor\"\r\n})(Configuracion);\r\n\r\nexport default formularioModulo;\r\n"]},"metadata":{},"sourceType":"module"}