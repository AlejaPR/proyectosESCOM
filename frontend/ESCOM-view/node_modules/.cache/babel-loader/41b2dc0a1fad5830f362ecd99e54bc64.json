{"ast":null,"code":"import axios from 'axios';\nimport { desencriptar } from '../../../SuperAdministrador/componentes/general/Encriptar.js';\nimport { URL_BASE } from '../../../SuperAdministrador/utilitario/Configuracion.js';\nexport const GET_LIST_PROGRAM_T = 'GET_LIST_PROGRAM_T';\nexport const GET_PROGRAM_T = 'GET_PROGRAM_T';\nexport const ADD_PROGRAM_T = 'ADD_PROGRAM_T';\nexport const EDIT_PROGRAM_T = 'EDIT_PROGRAM_T';\nexport const DELETE_PROGRAM_T = 'DELETE_PROGRAM_T';\nexport const PERMIT_LIST_PROGRAM_T = 'MD_Prueba';\nexport const PERMIT_GET_PROGRAM_T = 'MD_Prueba';\nexport const PERMIT_ADD_PROGRAM_T = 'MD_Prueba';\nexport const PERMIT_EDIT_PROGRAM_T = 'MD_Prueba';\nexport const PERMIT_DELETE_PROGRAM_T = 'MD_Prueba';\nexport const ADD_MESSAGE_ADD = 'ADD_MESSAGE_ADD';\nexport const ADD_MESSAGE_EDIT = 'ADD_MESSAGE_EDIT';\nexport const ADD_MESSAGE_DELETE = 'ADD_MESSAGE_DELETE';\nexport const ADD_MESSAGE = 'ADD_MESSAGE';\nexport function addMessageAdd(mensaje) {\n  return (dispatch, getState) => {\n    dispatch({\n      type: ADD_MESSAGE_ADD,\n      mensaje: mensaje\n    });\n  };\n}\nexport function addMessageEdit(mensaje) {\n  return (dispatch, getState) => {\n    dispatch({\n      type: ADD_MESSAGE_EDIT,\n      mensaje: mensaje\n    });\n  };\n}\nexport function addMessageDelete(mensaje) {\n  return (dispatch, getState) => {\n    dispatch({\n      type: ADD_MESSAGE_DELETE,\n      mensaje: mensaje\n    });\n  };\n} //MD_Lista programa nucleo tematico\n\nexport function getListProgramT(token, id) {\n  const headers = {\n    'Content-Type': 'application/json',\n    'TokenAuto': desencriptar(token),\n    'Permiso': PERMIT_LIST_PROGRAM_T\n  };\n  return (dispatch, getState) => {\n    axios.get(`${URL_BASE}/proyectosESCOM-web/api/programThematicCore/list/${id}`, {\n      headers: headers\n    }).then(response => {\n      dispatch({\n        type: GET_LIST_PROGRAM_T,\n        payload: response.data\n      });\n    }).catch(error => {\n      if (error.request.response === '') {\n        dispatch({\n          type: ADD_MESSAGE,\n          payload: 'error server'\n        });\n      } else {\n        if (error.request) {\n          dispatch({\n            type: ADD_MESSAGE,\n            payload: 'error server'\n          });\n        }\n      }\n    });\n  };\n} //MD_Obtener programa nucleo tematico\n\nexport function getProgramT(token, id) {\n  const headers = {\n    'Content-Type': 'application/json',\n    'TokenAuto': desencriptar(token),\n    'Permiso': PERMIT_GET_PROGRAM_T\n  };\n  return (dispatch, getState) => {\n    axios.get(`${URL_BASE}/proyectosESCOM-web/api/programThematicCore/get/${id}`, {\n      headers: headers\n    }).then(response => {\n      dispatch({\n        type: GET_PROGRAM_T,\n        payload: response.data\n      });\n    }).catch(error => {\n      if (error.request.response === '') {\n        dispatch({\n          type: ADD_MESSAGE,\n          payload: 'error server'\n        });\n      } else {\n        if (error.request) {\n          dispatch({\n            type: ADD_MESSAGE,\n            payload: 'error server'\n          });\n        }\n      }\n    });\n  };\n} //MD_Agregar nucleo tematica\n\nexport function addProgramT(token, programT) {\n  const headers = {\n    'Content-Type': 'application/json; charset= UTF-8',\n    'TokenAuto': desencriptar(token),\n    'Permiso': PERMIT_ADD_PROGRAM_T\n  };\n  programT.requestData = {\n    'ip': localStorage.getItem('Ip'),\n    'token': desencriptar(token),\n    'operacion': PERMIT_ADD_PROGRAM_T\n  };\n  return (dispatch, getState) => {\n    axios.post(`${URL_BASE}/proyectosESCOM-web/api/programThematicCore/add`, programT, {\n      headers: headers\n    }).then(response => {\n      dispatch({\n        type: ADD_PROGRAM_T,\n        payload: response.data.respuesta\n      });\n    }).catch(error => {\n      if (error.request.response === '') {\n        dispatch({\n          type: ADD_PROGRAM_T,\n          payload: 'error server'\n        });\n      } else {\n        if (error.request) {\n          dispatch({\n            type: ADD_PROGRAM_T,\n            payload: 'error server'\n          });\n        }\n      }\n    });\n  };\n} //MD_Editar nucleo tematica\n\nexport function editProgramT(token, programT) {\n  const headers = {\n    'Content-Type': 'application/json; charset= UTF-8',\n    'TokenAuto': desencriptar(token),\n    'Permiso': PERMIT_EDIT_PROGRAM_T\n  };\n  programT.requestData = {\n    'ip': localStorage.getItem('Ip'),\n    'token': desencriptar(token),\n    'operacion': PERMIT_EDIT_PROGRAM_T\n  };\n  return (dispatch, getState) => {\n    axios.put(`${URL_BASE}/proyectosESCOM-web/api/programThematicCore/edit`, programT, {\n      headers: headers\n    }).then(response => {\n      dispatch({\n        type: EDIT_PROGRAM_T,\n        payload: response.data.respuesta\n      });\n    }).catch(error => {\n      if (error.request.response === '') {\n        dispatch({\n          type: EDIT_PROGRAM_T,\n          payload: 'error server'\n        });\n      } else {\n        if (error.request) {\n          dispatch({\n            type: EDIT_PROGRAM_T,\n            payload: 'error server'\n          });\n        }\n      }\n    });\n  };\n} //MD_Eliminar nucleo tematico\n\nexport function deleteProgramT(token, programT) {\n  const headers = {\n    'Content-Type': 'application/json',\n    'TokenAuto': desencriptar(token),\n    'Permiso': PERMIT_DELETE_PROGRAM_T\n  };\n  programT.requestData = {\n    'ip': localStorage.getItem('Ip'),\n    'token': desencriptar(token),\n    'operacion': PERMIT_DELETE_PROGRAM_T\n  };\n  return (dispatch, getState) => {\n    axios.put(`${URL_BASE}/proyectosESCOM-web/api/programThematicCore/delete`, programT, {\n      headers: headers\n    }).then(response => {\n      dispatch({\n        type: DELETE_PROGRAM_T,\n        payload: response.data.respuesta\n      });\n    }).catch(error => {\n      if (error.request.response === '') {\n        dispatch({\n          type: DELETE_PROGRAM_T,\n          payload: 'error server'\n        });\n      } else {\n        if (error.request) {\n          dispatch({\n            type: DELETE_PROGRAM_T,\n            payload: 'error server'\n          });\n        }\n      }\n    });\n  };\n}","map":{"version":3,"sources":["C:/Users/hashy/Desktop/proyectosESCOM/frontend/ESCOM-view/src/ModuloDocumental/redux/actions/programThematicA.js"],"names":["axios","desencriptar","URL_BASE","GET_LIST_PROGRAM_T","GET_PROGRAM_T","ADD_PROGRAM_T","EDIT_PROGRAM_T","DELETE_PROGRAM_T","PERMIT_LIST_PROGRAM_T","PERMIT_GET_PROGRAM_T","PERMIT_ADD_PROGRAM_T","PERMIT_EDIT_PROGRAM_T","PERMIT_DELETE_PROGRAM_T","ADD_MESSAGE_ADD","ADD_MESSAGE_EDIT","ADD_MESSAGE_DELETE","ADD_MESSAGE","addMessageAdd","mensaje","dispatch","getState","type","addMessageEdit","addMessageDelete","getListProgramT","token","id","headers","get","then","response","payload","data","catch","error","request","getProgramT","addProgramT","programT","requestData","localStorage","getItem","post","respuesta","editProgramT","put","deleteProgramT"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AAEA,SAASC,YAAT,QAA6B,8DAA7B;AACA,SAASC,QAAT,QAAyB,yDAAzB;AAEA,OAAO,MAAMC,kBAAkB,GAAG,oBAA3B;AACP,OAAO,MAAMC,aAAa,GAAG,eAAtB;AACP,OAAO,MAAMC,aAAa,GAAG,eAAtB;AACP,OAAO,MAAMC,cAAc,GAAG,gBAAvB;AACP,OAAO,MAAMC,gBAAgB,GAAE,kBAAxB;AAEP,OAAO,MAAMC,qBAAqB,GAAG,WAA9B;AACP,OAAO,MAAMC,oBAAoB,GAAG,WAA7B;AACP,OAAO,MAAMC,oBAAoB,GAAE,WAA5B;AACP,OAAO,MAAMC,qBAAqB,GAAE,WAA7B;AACP,OAAO,MAAMC,uBAAuB,GAAG,WAAhC;AAEP,OAAO,MAAMC,eAAe,GAAG,iBAAxB;AACP,OAAO,MAAMC,gBAAgB,GAAG,kBAAzB;AACP,OAAO,MAAMC,kBAAkB,GAAG,oBAA3B;AACP,OAAO,MAAMC,WAAW,GAAG,aAApB;AAGP,OAAO,SAASC,aAAT,CAAuBC,OAAvB,EAAgC;AACnC,SAAO,CAACC,QAAD,EAAWC,QAAX,KAAwB;AAC3BD,IAAAA,QAAQ,CAAC;AACLE,MAAAA,IAAI,EAAER,eADD;AAELK,MAAAA,OAAO,EAAEA;AAFJ,KAAD,CAAR;AAIH,GALD;AAMH;AAED,OAAO,SAASI,cAAT,CAAwBJ,OAAxB,EAAiC;AACpC,SAAO,CAACC,QAAD,EAAWC,QAAX,KAAwB;AAC3BD,IAAAA,QAAQ,CAAC;AACLE,MAAAA,IAAI,EAAEP,gBADD;AAELI,MAAAA,OAAO,EAAEA;AAFJ,KAAD,CAAR;AAIH,GALD;AAMH;AAED,OAAO,SAASK,gBAAT,CAA0BL,OAA1B,EAAmC;AACtC,SAAO,CAACC,QAAD,EAAWC,QAAX,KAAwB;AAC3BD,IAAAA,QAAQ,CAAC;AACLE,MAAAA,IAAI,EAAEN,kBADD;AAELG,MAAAA,OAAO,EAAEA;AAFJ,KAAD,CAAR;AAIH,GALD;AAMH,C,CAED;;AACA,OAAO,SAASM,eAAT,CAAyBC,KAAzB,EAAgCC,EAAhC,EAAoC;AACvC,QAAMC,OAAO,GAAG;AACZ,oBAAgB,kBADJ;AAEZ,iBAAa1B,YAAY,CAACwB,KAAD,CAFb;AAGZ,eAAWjB;AAHC,GAAhB;AAKA,SAAO,CAACW,QAAD,EAAWC,QAAX,KAAwB;AAC3BpB,IAAAA,KAAK,CAAC4B,GAAN,CAAW,GAAE1B,QAAS,oDAAmDwB,EAAG,EAA5E,EAA+E;AAAEC,MAAAA,OAAO,EAAEA;AAAX,KAA/E,EACKE,IADL,CACUC,QAAQ,IAAI;AACdX,MAAAA,QAAQ,CAAC;AACLE,QAAAA,IAAI,EAAElB,kBADD;AAEL4B,QAAAA,OAAO,EAAED,QAAQ,CAACE;AAFb,OAAD,CAAR;AAIH,KANL,EAMOC,KANP,CAMaC,KAAK,IAAI;AACd,UAAIA,KAAK,CAACC,OAAN,CAAcL,QAAd,KAA2B,EAA/B,EAAmC;AAC/BX,QAAAA,QAAQ,CAAC;AACLE,UAAAA,IAAI,EAAEL,WADD;AAELe,UAAAA,OAAO,EAAE;AAFJ,SAAD,CAAR;AAIH,OALD,MAKO;AACH,YAAIG,KAAK,CAACC,OAAV,EAAmB;AACfhB,UAAAA,QAAQ,CAAC;AACLE,YAAAA,IAAI,EAAEL,WADD;AAELe,YAAAA,OAAO,EAAE;AAFJ,WAAD,CAAR;AAIH;AACJ;AACJ,KApBL;AAqBH,GAtBD;AAuBH,C,CAED;;AACA,OAAO,SAASK,WAAT,CAAqBX,KAArB,EAA4BC,EAA5B,EAAgC;AACnC,QAAMC,OAAO,GAAG;AACZ,oBAAgB,kBADJ;AAEZ,iBAAa1B,YAAY,CAACwB,KAAD,CAFb;AAGZ,eAAWhB;AAHC,GAAhB;AAKA,SAAO,CAACU,QAAD,EAAWC,QAAX,KAAwB;AAC3BpB,IAAAA,KAAK,CAAC4B,GAAN,CAAW,GAAE1B,QAAS,mDAAkDwB,EAAG,EAA3E,EAA8E;AAAEC,MAAAA,OAAO,EAAEA;AAAX,KAA9E,EACKE,IADL,CACUC,QAAQ,IAAI;AACdX,MAAAA,QAAQ,CAAC;AACLE,QAAAA,IAAI,EAAEjB,aADD;AAEL2B,QAAAA,OAAO,EAAED,QAAQ,CAACE;AAFb,OAAD,CAAR;AAIH,KANL,EAMOC,KANP,CAMaC,KAAK,IAAI;AACd,UAAIA,KAAK,CAACC,OAAN,CAAcL,QAAd,KAA2B,EAA/B,EAAmC;AAC/BX,QAAAA,QAAQ,CAAC;AACLE,UAAAA,IAAI,EAAEL,WADD;AAELe,UAAAA,OAAO,EAAE;AAFJ,SAAD,CAAR;AAIH,OALD,MAKO;AACH,YAAIG,KAAK,CAACC,OAAV,EAAmB;AACfhB,UAAAA,QAAQ,CAAC;AACLE,YAAAA,IAAI,EAAEL,WADD;AAELe,YAAAA,OAAO,EAAE;AAFJ,WAAD,CAAR;AAIH;AACJ;AACJ,KApBL;AAqBH,GAtBD;AAuBH,C,CAED;;AACA,OAAO,SAASM,WAAT,CAAqBZ,KAArB,EAA4Ba,QAA5B,EAAsC;AACzC,QAAMX,OAAO,GAAG;AACZ,oBAAgB,kCADJ;AAEZ,iBAAa1B,YAAY,CAACwB,KAAD,CAFb;AAGZ,eAAWf;AAHC,GAAhB;AAKA4B,EAAAA,QAAQ,CAACC,WAAT,GAAuB;AACnB,UAAMC,YAAY,CAACC,OAAb,CAAqB,IAArB,CADa;AAEnB,aAASxC,YAAY,CAACwB,KAAD,CAFF;AAGnB,iBAAaf;AAHM,GAAvB;AAKA,SAAO,CAACS,QAAD,EAAWC,QAAX,KAAwB;AAC3BpB,IAAAA,KAAK,CAAC0C,IAAN,CAAY,GAAExC,QAAS,iDAAvB,EAAyEoC,QAAzE,EAAmF;AAAEX,MAAAA,OAAO,EAAEA;AAAX,KAAnF,EACKE,IADL,CACUC,QAAQ,IAAI;AACdX,MAAAA,QAAQ,CAAC;AACLE,QAAAA,IAAI,EAAEhB,aADD;AAEL0B,QAAAA,OAAO,EAAED,QAAQ,CAACE,IAAT,CAAcW;AAFlB,OAAD,CAAR;AAIH,KANL,EAMOV,KANP,CAMaC,KAAK,IAAI;AACd,UAAIA,KAAK,CAACC,OAAN,CAAcL,QAAd,KAA2B,EAA/B,EAAmC;AAC/BX,QAAAA,QAAQ,CAAC;AACLE,UAAAA,IAAI,EAAEhB,aADD;AAEL0B,UAAAA,OAAO,EAAE;AAFJ,SAAD,CAAR;AAIH,OALD,MAKO;AACH,YAAIG,KAAK,CAACC,OAAV,EAAmB;AACfhB,UAAAA,QAAQ,CAAC;AACLE,YAAAA,IAAI,EAAEhB,aADD;AAEL0B,YAAAA,OAAO,EAAE;AAFJ,WAAD,CAAR;AAIH;AACJ;AACJ,KApBL;AAqBH,GAtBD;AAuBH,C,CAED;;AACA,OAAO,SAASa,YAAT,CAAsBnB,KAAtB,EAA6Ba,QAA7B,EAAuC;AAC1C,QAAMX,OAAO,GAAG;AACZ,oBAAgB,kCADJ;AAEZ,iBAAa1B,YAAY,CAACwB,KAAD,CAFb;AAGZ,eAAWd;AAHC,GAAhB;AAKA2B,EAAAA,QAAQ,CAACC,WAAT,GAAuB;AACnB,UAAMC,YAAY,CAACC,OAAb,CAAqB,IAArB,CADa;AAEnB,aAASxC,YAAY,CAACwB,KAAD,CAFF;AAGnB,iBAAad;AAHM,GAAvB;AAKA,SAAO,CAACQ,QAAD,EAAWC,QAAX,KAAwB;AAC3BpB,IAAAA,KAAK,CAAC6C,GAAN,CAAW,GAAE3C,QAAS,kDAAtB,EAAyEoC,QAAzE,EAAmF;AAAEX,MAAAA,OAAO,EAAEA;AAAX,KAAnF,EACKE,IADL,CACUC,QAAQ,IAAI;AACdX,MAAAA,QAAQ,CAAC;AACLE,QAAAA,IAAI,EAAEf,cADD;AAELyB,QAAAA,OAAO,EAAED,QAAQ,CAACE,IAAT,CAAcW;AAFlB,OAAD,CAAR;AAIH,KANL,EAMOV,KANP,CAMaC,KAAK,IAAI;AACd,UAAIA,KAAK,CAACC,OAAN,CAAcL,QAAd,KAA2B,EAA/B,EAAmC;AAC/BX,QAAAA,QAAQ,CAAC;AACLE,UAAAA,IAAI,EAAEf,cADD;AAELyB,UAAAA,OAAO,EAAE;AAFJ,SAAD,CAAR;AAIH,OALD,MAKO;AACH,YAAIG,KAAK,CAACC,OAAV,EAAmB;AACfhB,UAAAA,QAAQ,CAAC;AACLE,YAAAA,IAAI,EAAEf,cADD;AAELyB,YAAAA,OAAO,EAAE;AAFJ,WAAD,CAAR;AAIH;AACJ;AACJ,KApBL;AAqBH,GAtBD;AAuBH,C,CAED;;AACA,OAAO,SAASe,cAAT,CAAwBrB,KAAxB,EAA+Ba,QAA/B,EAAyC;AAC5C,QAAMX,OAAO,GAAG;AACZ,oBAAgB,kBADJ;AAEZ,iBAAa1B,YAAY,CAACwB,KAAD,CAFb;AAGZ,eAAWb;AAHC,GAAhB;AAMA0B,EAAAA,QAAQ,CAACC,WAAT,GAAuB;AACnB,UAAMC,YAAY,CAACC,OAAb,CAAqB,IAArB,CADa;AAEnB,aAASxC,YAAY,CAACwB,KAAD,CAFF;AAGnB,iBAAab;AAHM,GAAvB;AAKA,SAAO,CAACO,QAAD,EAAWC,QAAX,KAAwB;AAC3BpB,IAAAA,KAAK,CAAC6C,GAAN,CAAW,GAAE3C,QAAS,oDAAtB,EAA0EoC,QAA1E,EAAoF;AAAEX,MAAAA,OAAO,EAAEA;AAAX,KAApF,EACKE,IADL,CACUC,QAAQ,IAAI;AACdX,MAAAA,QAAQ,CAAC;AACLE,QAAAA,IAAI,EAAEd,gBADD;AAELwB,QAAAA,OAAO,EAAED,QAAQ,CAACE,IAAT,CAAcW;AAFlB,OAAD,CAAR;AAIH,KANL,EAMOV,KANP,CAMaC,KAAK,IAAI;AACd,UAAIA,KAAK,CAACC,OAAN,CAAcL,QAAd,KAA2B,EAA/B,EAAmC;AAC/BX,QAAAA,QAAQ,CAAC;AACLE,UAAAA,IAAI,EAAEd,gBADD;AAELwB,UAAAA,OAAO,EAAE;AAFJ,SAAD,CAAR;AAIH,OALD,MAKO;AACH,YAAIG,KAAK,CAACC,OAAV,EAAmB;AACfhB,UAAAA,QAAQ,CAAC;AACLE,YAAAA,IAAI,EAAEd,gBADD;AAELwB,YAAAA,OAAO,EAAE;AAFJ,WAAD,CAAR;AAIH;AACJ;AACJ,KApBL;AAqBH,GAtBD;AAuBH","sourcesContent":["import axios from 'axios';\r\n\r\nimport { desencriptar } from '../../../SuperAdministrador/componentes/general/Encriptar.js';\r\nimport { URL_BASE } from '../../../SuperAdministrador/utilitario/Configuracion.js';\r\n\r\nexport const GET_LIST_PROGRAM_T = 'GET_LIST_PROGRAM_T';\r\nexport const GET_PROGRAM_T = 'GET_PROGRAM_T';\r\nexport const ADD_PROGRAM_T = 'ADD_PROGRAM_T';\r\nexport const EDIT_PROGRAM_T = 'EDIT_PROGRAM_T';\r\nexport const DELETE_PROGRAM_T= 'DELETE_PROGRAM_T';\r\n\r\nexport const PERMIT_LIST_PROGRAM_T = 'MD_Prueba';\r\nexport const PERMIT_GET_PROGRAM_T = 'MD_Prueba';\r\nexport const PERMIT_ADD_PROGRAM_T= 'MD_Prueba';\r\nexport const PERMIT_EDIT_PROGRAM_T= 'MD_Prueba';\r\nexport const PERMIT_DELETE_PROGRAM_T = 'MD_Prueba';\r\n\r\nexport const ADD_MESSAGE_ADD = 'ADD_MESSAGE_ADD';\r\nexport const ADD_MESSAGE_EDIT = 'ADD_MESSAGE_EDIT';\r\nexport const ADD_MESSAGE_DELETE = 'ADD_MESSAGE_DELETE';\r\nexport const ADD_MESSAGE = 'ADD_MESSAGE';\r\n\r\n\r\nexport function addMessageAdd(mensaje) {\r\n    return (dispatch, getState) => {\r\n        dispatch({\r\n            type: ADD_MESSAGE_ADD,\r\n            mensaje: mensaje\r\n        });\r\n    };\r\n}\r\n\r\nexport function addMessageEdit(mensaje) {\r\n    return (dispatch, getState) => {\r\n        dispatch({\r\n            type: ADD_MESSAGE_EDIT,\r\n            mensaje: mensaje\r\n        });\r\n    };\r\n}\r\n\r\nexport function addMessageDelete(mensaje) {\r\n    return (dispatch, getState) => {\r\n        dispatch({\r\n            type: ADD_MESSAGE_DELETE,\r\n            mensaje: mensaje\r\n        });\r\n    };\r\n}\r\n\r\n//MD_Lista programa nucleo tematico\r\nexport function getListProgramT(token, id) {\r\n    const headers = {\r\n        'Content-Type': 'application/json',\r\n        'TokenAuto': desencriptar(token),\r\n        'Permiso': PERMIT_LIST_PROGRAM_T\r\n    }\r\n    return (dispatch, getState) => {\r\n        axios.get(`${URL_BASE}/proyectosESCOM-web/api/programThematicCore/list/${id}`, { headers: headers })\r\n            .then(response => {\r\n                dispatch({\r\n                    type: GET_LIST_PROGRAM_T,\r\n                    payload: response.data\r\n                });\r\n            }).catch(error => {\r\n                if (error.request.response === '') {\r\n                    dispatch({\r\n                        type: ADD_MESSAGE,\r\n                        payload: 'error server'\r\n                    });\r\n                } else {\r\n                    if (error.request) {\r\n                        dispatch({\r\n                            type: ADD_MESSAGE,\r\n                            payload: 'error server'\r\n                        });\r\n                    }\r\n                }\r\n            });\r\n    }\r\n}\r\n\r\n//MD_Obtener programa nucleo tematico\r\nexport function getProgramT(token, id) {\r\n    const headers = {\r\n        'Content-Type': 'application/json',\r\n        'TokenAuto': desencriptar(token),\r\n        'Permiso': PERMIT_GET_PROGRAM_T\r\n    }\r\n    return (dispatch, getState) => {\r\n        axios.get(`${URL_BASE}/proyectosESCOM-web/api/programThematicCore/get/${id}`, { headers: headers })\r\n            .then(response => {\r\n                dispatch({\r\n                    type: GET_PROGRAM_T,\r\n                    payload: response.data\r\n                });\r\n            }).catch(error => {\r\n                if (error.request.response === '') {\r\n                    dispatch({\r\n                        type: ADD_MESSAGE,\r\n                        payload: 'error server'\r\n                    });\r\n                } else {\r\n                    if (error.request) {\r\n                        dispatch({\r\n                            type: ADD_MESSAGE,\r\n                            payload: 'error server'\r\n                        });\r\n                    }\r\n                }\r\n            });\r\n    }\r\n}\r\n\r\n//MD_Agregar nucleo tematica\r\nexport function addProgramT(token, programT) {\r\n    const headers = {\r\n        'Content-Type': 'application/json; charset= UTF-8',\r\n        'TokenAuto': desencriptar(token),\r\n        'Permiso': PERMIT_ADD_PROGRAM_T\r\n    }\r\n    programT.requestData = {\r\n        'ip': localStorage.getItem('Ip'),\r\n        'token': desencriptar(token),\r\n        'operacion': PERMIT_ADD_PROGRAM_T\r\n    };\r\n    return (dispatch, getState) => {\r\n        axios.post(`${URL_BASE}/proyectosESCOM-web/api/programThematicCore/add`, programT, { headers: headers })\r\n            .then(response => {\r\n                dispatch({\r\n                    type: ADD_PROGRAM_T,\r\n                    payload: response.data.respuesta\r\n                });\r\n            }).catch(error => {\r\n                if (error.request.response === '') {\r\n                    dispatch({\r\n                        type: ADD_PROGRAM_T,\r\n                        payload: 'error server'\r\n                    });\r\n                } else {\r\n                    if (error.request) {\r\n                        dispatch({\r\n                            type: ADD_PROGRAM_T,\r\n                            payload: 'error server'\r\n                        });\r\n                    }\r\n                }\r\n            });\r\n    }\r\n}\r\n\r\n//MD_Editar nucleo tematica\r\nexport function editProgramT(token, programT) {\r\n    const headers = {\r\n        'Content-Type': 'application/json; charset= UTF-8',\r\n        'TokenAuto': desencriptar(token),\r\n        'Permiso': PERMIT_EDIT_PROGRAM_T\r\n    }\r\n    programT.requestData = {\r\n        'ip': localStorage.getItem('Ip'),\r\n        'token': desencriptar(token),\r\n        'operacion': PERMIT_EDIT_PROGRAM_T\r\n    };\r\n    return (dispatch, getState) => {\r\n        axios.put(`${URL_BASE}/proyectosESCOM-web/api/programThematicCore/edit`, programT, { headers: headers })\r\n            .then(response => {\r\n                dispatch({\r\n                    type: EDIT_PROGRAM_T,\r\n                    payload: response.data.respuesta\r\n                });\r\n            }).catch(error => {\r\n                if (error.request.response === '') {\r\n                    dispatch({\r\n                        type: EDIT_PROGRAM_T,\r\n                        payload: 'error server'\r\n                    });\r\n                } else {\r\n                    if (error.request) {\r\n                        dispatch({\r\n                            type: EDIT_PROGRAM_T,\r\n                            payload: 'error server'\r\n                        });\r\n                    }\r\n                }\r\n            });\r\n    }\r\n}\r\n\r\n//MD_Eliminar nucleo tematico\r\nexport function deleteProgramT(token, programT) {\r\n    const headers = {\r\n        'Content-Type': 'application/json',\r\n        'TokenAuto': desencriptar(token),\r\n        'Permiso': PERMIT_DELETE_PROGRAM_T\r\n\r\n    }\r\n    programT.requestData = {\r\n        'ip': localStorage.getItem('Ip'),\r\n        'token': desencriptar(token),\r\n        'operacion': PERMIT_DELETE_PROGRAM_T\r\n    };\r\n    return (dispatch, getState) => {\r\n        axios.put(`${URL_BASE}/proyectosESCOM-web/api/programThematicCore/delete`,programT, { headers: headers })\r\n            .then(response => {\r\n                dispatch({\r\n                    type: DELETE_PROGRAM_T,\r\n                    payload: response.data.respuesta\r\n                });\r\n            }).catch(error => {\r\n                if (error.request.response === '') {\r\n                    dispatch({\r\n                        type: DELETE_PROGRAM_T,\r\n                        payload: 'error server'\r\n                    });\r\n                } else {\r\n                    if (error.request) {\r\n                        dispatch({\r\n                            type: DELETE_PROGRAM_T,\r\n                            payload: 'error server'\r\n                        });\r\n                    }\r\n                }\r\n            });\r\n    }\r\n}"]},"metadata":{},"sourceType":"module"}