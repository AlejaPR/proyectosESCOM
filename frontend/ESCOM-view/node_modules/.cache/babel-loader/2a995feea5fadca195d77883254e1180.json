{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\jeiso\\\\Desktop\\\\REACT\\\\proyectosESCOM\\\\frontend\\\\ESCOM-view\\\\src\\\\SuperAdministrador\\\\componentes\\\\color.js\";\nimport React from 'react'; // import ImageUploader from 'react-images-upload';\n// import { NotificationContainer, NotificationManager } from 'react-notifications';\n// import 'react-notifications/lib/notifications.css';\n\nimport { browserHistory } from 'react-dom';\nimport axios from 'axios'; // var fs = require('fs')\n// var path = require('path')\n// var util = require('util')\n// class App extends React.Component {\n//     constructor(props) {\n//         super(props);\n//         this.state = { pictures: [] };\n//         this.onDrop = this.onDrop.bind(this);\n//     }\n//     onDrop(picture) {\n//         console.log('Picture ', picture);\n//         this.setState({\n//             pictures: this.state.pictures.concat(picture),\n//         });\n//     }\n//     votar = () => {\n//         NotificationManager.success('Usuario registrado');\n//         storeWithOriginalName(this.state.pictures,'public/uploads');\n//     }\n//     render() {\n//         return (\n//             <>\n//                 <ImageUploader\n//                     withIcon={true}\n//                     buttonText='Choose images'\n//                     onChange={this.onDrop}\n//                     imgExtension={['.jpg', '.gif', '.png', '.gif']}\n//                     maxFileSize={5242880}\n//                     label=\"cosasoaj\"\n//                 />\n//                 <button onClick={this.votar}>oprimir</button>\n//                 <NotificationContainer />\n//             </>\n//         );\n//     }\n// }\n// function storeWithOriginalName(file,destination) {\n//     var fullNewPath = path.join(destination,file[0].name)\n//     console.log(\"FS \",fs.rename)\n//     var rename = util.promisify(fs.rename)\n//     var pathq='public\\\\uploads\\\\cc8b951ef8ce45d6195ec787947462c3';\n//     return rename(pathq, fullNewPath)\n//         .then(() => {\n//             return file[0].name\n//         })\n// }\n\nexport default class AutoLogout extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      warningTime: 1000 * 60 * 10,\n      signoutTime: 1000 * 60 * 15\n    };\n  }\n\n  componentWillMount() {\n    console.log('llego');\n\n    var crypto = require('crypto');\n\n    let correo = \"jeisongaona@hotmail.com\";\n    let contrasena = \"Yeisonp_97\";\n    var contrasenaEncryp = crypto.createHmac('sha256', correo).update(contrasena).digest('hex');\n    axios.get('http://localhost:9090/proyectosESCOM-web/api/login/' + correo + '/' + contrasenaEncryp, {// validateStatus: function(status) {\n      //   return status < 500; // Reject only if status is greater or equal to 500\n      // }\n    }).then(res => console.log(res)).catch(err => {\n      if (err.response) {\n        // Server responded with a status other than 200 range\n        console.log(err.response.data);\n        console.log(err.response.status);\n        console.log(err.response.headers);\n\n        if (err.response.status === 404) {\n          alert('Error: Page Not Found');\n        }\n      } else if (err.request) {\n        // Request was made but no response\n        console.error(err.request);\n      } else {\n        console.error(err.message);\n      }\n    });\n    console.log(instance);\n  }\n\n  componentDidMount() {} // this.events = [\n  //   'load',\n  //   'mousemove',\n  //   'mousedown',\n  //   'click',\n  //   'scroll',\n  //   'keypress'\n  // ];\n  // for (var i in this.events) {\n  //   window.addEventListener(this.events[i], this.resetTimeout);\n  // }\n  // this.setTimeout();\n  // clearTimeoutFunc = () => {\n  //   if (this.warnTimeout) clearTimeout(this.warnTimeout);\n  //   if (this.logoutTimeout) clearTimeout(this.logoutTimeout);\n  // };\n  // setTimeout = () => {\n  //   this.warnTimeout = setTimeout(this.warn, this.state.warningTime);\n  //   this.logoutTimeout = setTimeout(this.logout, this.state.signoutTime);\n  // };\n  // resetTimeout = () => {\n  //   this.clearTimeoutFunc();\n  //   this.setTimeout();\n  // };\n  // warn = () => {\n  //   window.alert(\"You will be logged out automatically in 1 minute\")\n  //   console.log('You will be logged out automatically in 1 minute.');\n  // };\n  // logout = () => {\n  //   // Send a logout request to the API\n  //   console.log('Sending a logout request to the API...');\n  //   this.destroy();\n  // };\n  // destroy = () => {\n  //  //clear the session\n  //   browserHistory.push('/');\n  //   window.location.assign('/');\n  // };\n\n\n  render() {\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 159\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      style: {\n        background: \"black\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 160\n      },\n      __self: this\n    }));\n  }\n\n}","map":{"version":3,"sources":["C:\\Users\\jeiso\\Desktop\\REACT\\proyectosESCOM\\frontend\\ESCOM-view\\src\\SuperAdministrador\\componentes\\color.js"],"names":["React","browserHistory","axios","AutoLogout","Component","constructor","props","state","warningTime","signoutTime","componentWillMount","console","log","crypto","require","correo","contrasena","contrasenaEncryp","createHmac","update","digest","get","then","res","catch","err","response","data","status","headers","alert","request","error","message","instance","componentDidMount","render","background"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB,C,CACA;AACA;AACA;;AACA,SAASC,cAAT,QAA+B,WAA/B;AACA,OAAOC,KAAP,MAAkB,OAAlB,C,CACA;AACA;AACA;AAEA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;;AAGE,eAAe,MAAMC,UAAN,SAAyBH,KAAK,CAACI,SAA/B,CAAyC;AACtDC,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACjB,UAAMA,KAAN;AACA,SAAKC,KAAL,GAAa;AACXC,MAAAA,WAAW,EAAE,OAAO,EAAP,GAAY,EADd;AAEXC,MAAAA,WAAW,EAAE,OAAO,EAAP,GAAY;AAFd,KAAb;AAID;;AACDC,EAAAA,kBAAkB,GAAG;AACnBC,IAAAA,OAAO,CAACC,GAAR,CAAY,OAAZ;;AACA,QAAIC,MAAM,GAAGC,OAAO,CAAC,QAAD,CAApB;;AACA,QAAIC,MAAM,GAAG,yBAAb;AACA,QAAIC,UAAU,GAAG,YAAjB;AACA,QAAIC,gBAAgB,GAAGJ,MAAM,CAACK,UAAP,CAAkB,QAAlB,EAA4BH,MAA5B,EAAoCI,MAApC,CAA2CH,UAA3C,EAAuDI,MAAvD,CAA8D,KAA9D,CAAvB;AAEAlB,IAAAA,KAAK,CACNmB,GADC,CACG,wDAAwDN,MAAxD,GAAiE,GAAjE,GAAuEE,gBAD1E,EAC4F,CAC5F;AACA;AACA;AAH4F,KAD5F,EAMDK,IANC,CAMIC,GAAG,IAAIZ,OAAO,CAACC,GAAR,CAAYW,GAAZ,CANX,EAODC,KAPC,CAOKC,GAAG,IAAI;AACZ,UAAIA,GAAG,CAACC,QAAR,EAAkB;AAChB;AACAf,QAAAA,OAAO,CAACC,GAAR,CAAYa,GAAG,CAACC,QAAJ,CAAaC,IAAzB;AACAhB,QAAAA,OAAO,CAACC,GAAR,CAAYa,GAAG,CAACC,QAAJ,CAAaE,MAAzB;AACAjB,QAAAA,OAAO,CAACC,GAAR,CAAYa,GAAG,CAACC,QAAJ,CAAaG,OAAzB;;AAEA,YAAIJ,GAAG,CAACC,QAAJ,CAAaE,MAAb,KAAwB,GAA5B,EAAiC;AAC/BE,UAAAA,KAAK,CAAC,uBAAD,CAAL;AACD;AACF,OATD,MASO,IAAIL,GAAG,CAACM,OAAR,EAAiB;AACtB;AACApB,QAAAA,OAAO,CAACqB,KAAR,CAAcP,GAAG,CAACM,OAAlB;AACD,OAHM,MAGA;AACLpB,QAAAA,OAAO,CAACqB,KAAR,CAAcP,GAAG,CAACQ,OAAlB;AACD;AACF,KAvBC;AAyBAtB,IAAAA,OAAO,CAACC,GAAR,CAAYsB,QAAZ;AACD;;AACDC,EAAAA,iBAAiB,GAAG,CAiBnB,CAjBgB,CAGf;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;AAGF;AACA;AAEA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;;;AAGAC,EAAAA,MAAM,GAAG;AACP,WACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAK,MAAA,KAAK,EAAE;AAAEC,QAAAA,UAAU,EAAE;AAAd,OAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,CADF;AAKD;;AArGqD","sourcesContent":["import React from 'react';\r\n// import ImageUploader from 'react-images-upload';\r\n// import { NotificationContainer, NotificationManager } from 'react-notifications';\r\n// import 'react-notifications/lib/notifications.css';\r\nimport { browserHistory } from 'react-dom';\r\nimport axios from 'axios';\r\n// var fs = require('fs')\r\n// var path = require('path')\r\n// var util = require('util')\r\n\r\n// class App extends React.Component {\r\n\r\n//     constructor(props) {\r\n//         super(props);\r\n//         this.state = { pictures: [] };\r\n//         this.onDrop = this.onDrop.bind(this);\r\n//     }\r\n\r\n//     onDrop(picture) {\r\n//         console.log('Picture ', picture);\r\n//         this.setState({\r\n//             pictures: this.state.pictures.concat(picture),\r\n//         });\r\n//     }\r\n\r\n//     votar = () => {\r\n//         NotificationManager.success('Usuario registrado');\r\n//         storeWithOriginalName(this.state.pictures,'public/uploads');\r\n//     }\r\n\r\n//     render() {\r\n//         return (\r\n//             <>\r\n//                 <ImageUploader\r\n//                     withIcon={true}\r\n//                     buttonText='Choose images'\r\n//                     onChange={this.onDrop}\r\n//                     imgExtension={['.jpg', '.gif', '.png', '.gif']}\r\n//                     maxFileSize={5242880}\r\n//                     label=\"cosasoaj\"\r\n//                 />\r\n//                 <button onClick={this.votar}>oprimir</button>\r\n//                 <NotificationContainer />\r\n//             </>\r\n//         );\r\n//     }\r\n// }\r\n\r\n// function storeWithOriginalName(file,destination) {\r\n//     var fullNewPath = path.join(destination,file[0].name)\r\n//     console.log(\"FS \",fs.rename)\r\n//     var rename = util.promisify(fs.rename)\r\n\r\n//     var pathq='public\\\\uploads\\\\cc8b951ef8ce45d6195ec787947462c3';\r\n//     return rename(pathq, fullNewPath)\r\n//         .then(() => {\r\n//             return file[0].name\r\n//         })\r\n// }\r\n\r\n\r\n  export default class AutoLogout extends React.Component {\r\n    constructor(props) {\r\n      super(props);\r\n      this.state = {\r\n        warningTime: 1000 * 60 * 10,\r\n        signoutTime: 1000 * 60 * 15,\r\n      };\r\n    }\r\n    componentWillMount() {\r\n      console.log('llego')\r\n      var crypto = require('crypto');\r\n      let correo = \"jeisongaona@hotmail.com\";\r\n      let contrasena = \"Yeisonp_97\";\r\n      var contrasenaEncryp = crypto.createHmac('sha256', correo).update(contrasena).digest('hex');\r\n\r\n      axios\r\n    .get('http://localhost:9090/proyectosESCOM-web/api/login/' + correo + '/' + contrasenaEncryp, {\r\n      // validateStatus: function(status) {\r\n      //   return status < 500; // Reject only if status is greater or equal to 500\r\n      // }\r\n    })\r\n    .then(res => console.log(res))\r\n    .catch(err => {\r\n      if (err.response) {\r\n        // Server responded with a status other than 200 range\r\n        console.log(err.response.data);\r\n        console.log(err.response.status);\r\n        console.log(err.response.headers);\r\n\r\n        if (err.response.status === 404) {\r\n          alert('Error: Page Not Found');\r\n        }\r\n      } else if (err.request) {\r\n        // Request was made but no response\r\n        console.error(err.request);\r\n      } else {\r\n        console.error(err.message);\r\n      }\r\n    });\r\n\r\n      console.log(instance);\r\n    }\r\n    componentDidMount() {\r\n\r\n\r\n      // this.events = [\r\n      //   'load',\r\n      //   'mousemove',\r\n      //   'mousedown',\r\n      //   'click',\r\n      //   'scroll',\r\n      //   'keypress'\r\n      // ];\r\n\r\n      // for (var i in this.events) {\r\n      //   window.addEventListener(this.events[i], this.resetTimeout);\r\n      // }\r\n\r\n      // this.setTimeout();\r\n    }\r\n\r\n    // clearTimeoutFunc = () => {\r\n    //   if (this.warnTimeout) clearTimeout(this.warnTimeout);\r\n\r\n    //   if (this.logoutTimeout) clearTimeout(this.logoutTimeout);\r\n    // };\r\n\r\n    // setTimeout = () => {\r\n    //   this.warnTimeout = setTimeout(this.warn, this.state.warningTime);\r\n    //   this.logoutTimeout = setTimeout(this.logout, this.state.signoutTime);\r\n    // };\r\n\r\n    // resetTimeout = () => {\r\n    //   this.clearTimeoutFunc();\r\n    //   this.setTimeout();\r\n    // };\r\n\r\n    // warn = () => {\r\n    //   window.alert(\"You will be logged out automatically in 1 minute\")\r\n    //   console.log('You will be logged out automatically in 1 minute.');\r\n    // };\r\n\r\n    // logout = () => {\r\n    //   // Send a logout request to the API\r\n    //   console.log('Sending a logout request to the API...');\r\n    //   this.destroy();\r\n    // };\r\n\r\n    // destroy = () => {\r\n    //  //clear the session\r\n    //   browserHistory.push('/');\r\n    //   window.location.assign('/');\r\n    // };\r\n\r\n\r\n    render() {\r\n      return (\r\n        <div>\r\n          <div style={{ background: \"black\" }}></div>\r\n        </div>\r\n      );\r\n    }\r\n  }\r\n"]},"metadata":{},"sourceType":"module"}