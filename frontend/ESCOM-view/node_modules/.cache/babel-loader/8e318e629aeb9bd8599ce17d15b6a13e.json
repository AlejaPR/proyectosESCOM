{"ast":null,"code":"import _objectSpread from \"C:\\\\Users\\\\jeiso\\\\Desktop\\\\REACT\\\\proyectosESCOM\\\\frontend\\\\ESCOM-view\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/objectSpread2\";\nvar _jsxFileName = \"C:\\\\Users\\\\jeiso\\\\Desktop\\\\REACT\\\\proyectosESCOM\\\\frontend\\\\ESCOM-view\\\\src\\\\SuperAdministrador\\\\utilitario\\\\MTableToolbar.js\";\nimport Checkbox from '@material-ui/core/Checkbox';\nimport IconButton from '@material-ui/core/IconButton';\nimport InputAdornment from '@material-ui/core/InputAdornment';\nimport Menu from '@material-ui/core/Menu';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport TextField from '@material-ui/core/TextField';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport Tooltip from '@material-ui/core/Tooltip';\nimport Typography from '@material-ui/core/Typography';\nimport withStyles from '@material-ui/core/styles/withStyles';\nimport { lighten } from '@material-ui/core/styles/colorManipulator';\nimport classNames from 'classnames';\nimport { CsvBuilder } from 'filefy';\nimport PropTypes from 'prop-types';\nimport * as React from 'react';\n/* eslint-enable no-unused-vars */\n\nexport class MTableToolbar extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.defaultExportCsv = () => {\n      const columns = this.props.columns.filter(columnDef => {\n        return !columnDef.hidden && columnDef.field && columnDef.export !== false;\n      }).sort((a, b) => a.tableData.columnOrder > b.tableData.columnOrder ? 1 : -1);\n      const dataToExport = this.props.exportAllData ? this.props.data : this.props.renderData;\n      const data = dataToExport.map(rowData => columns.map(columnDef => {\n        return this.props.getFieldValue(rowData, columnDef);\n      }));\n      const builder = new CsvBuilder((this.props.exportFileName || this.props.title || 'data') + '.csv');\n      builder.setDelimeter(this.props.exportDelimiter).setColumns(columns.map(columnDef => columnDef.title)).addRows(data).exportFile();\n    };\n\n    this.exportCsv = () => {\n      if (this.props.exportCsv) {\n        this.props.exportCsv(this.props.columns, this.props.data);\n      } else {\n        this.defaultExportCsv();\n      }\n\n      this.setState({\n        exportButtonAnchorEl: null\n      });\n    };\n\n    this.state = {\n      columnsButtonAnchorEl: null,\n      exportButtonAnchorEl: null\n    };\n  }\n\n  renderSearch() {\n    const localization = _objectSpread({}, MTableToolbar.defaultProps.localization, {}, this.props.localization);\n\n    if (this.props.search) {\n      return React.createElement(TextField, {\n        className: this.props.searchFieldAlignment === 'left' && this.props.showTitle === false ? null : this.props.classes.searchField,\n        value: this.props.searchText,\n        onChange: event => this.props.onSearchChanged(event.target.value),\n        placeholder: localization.searchPlaceholder,\n        InputProps: {\n          startAdornment: React.createElement(InputAdornment, {\n            position: \"start\",\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 68\n            },\n            __self: this\n          }, React.createElement(Tooltip, {\n            title: localization.searchTooltip,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 69\n            },\n            __self: this\n          }, React.createElement(this.props.icons.Search, {\n            color: \"inherit\",\n            fontSize: \"small\",\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 70\n            },\n            __self: this\n          }))),\n          endAdornment: React.createElement(InputAdornment, {\n            position: \"end\",\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 75\n            },\n            __self: this\n          }, React.createElement(IconButton, {\n            disabled: !this.props.searchText,\n            onClick: () => this.props.onSearchChanged(\"\"),\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 76\n            },\n            __self: this\n          }, React.createElement(this.props.icons.ResetSearch, {\n            color: \"inherit\",\n            fontSize: \"small\",\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 80\n            },\n            __self: this\n          }))),\n          style: this.props.searchFieldStyle\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 61\n        },\n        __self: this\n      });\n    } else {\n      return null;\n    }\n  }\n\n  renderDefaultActions() {\n    const localization = _objectSpread({}, MTableToolbar.defaultProps.localization, {}, this.props.localization);\n\n    const classes = this.props.classes;\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 99\n      },\n      __self: this\n    }, this.props.columnsButton && React.createElement(\"span\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 101\n      },\n      __self: this\n    }, React.createElement(Tooltip, {\n      title: localization.showColumnsTitle,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 102\n      },\n      __self: this\n    }, React.createElement(IconButton, {\n      color: \"inherit\",\n      onClick: event => this.setState({\n        columnsButtonAnchorEl: event.currentTarget\n      }),\n      \"aria-label\": localization.showColumnsAriaLabel,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 103\n      },\n      __self: this\n    }, React.createElement(this.props.icons.ViewColumn, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 108\n      },\n      __self: this\n    }))), React.createElement(Menu, {\n      anchorEl: this.state.columnsButtonAnchorEl,\n      open: Boolean(this.state.columnsButtonAnchorEl),\n      onClose: () => this.setState({\n        columnsButtonAnchorEl: null\n      }),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 111\n      },\n      __self: this\n    }, React.createElement(MenuItem, {\n      key: \"text\",\n      disabled: true,\n      style: {\n        opacity: 1,\n        fontWeight: 600,\n        fontSize: 12\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 115\n      },\n      __self: this\n    }, localization.addRemoveColumns), this.props.columns.map(col => {\n      return React.createElement(\"li\", {\n        key: col.tableData.id,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 121\n        },\n        __self: this\n      }, React.createElement(MenuItem, {\n        className: classes.formControlLabel,\n        component: \"label\",\n        htmlFor: `column-toggle-${col.tableData.id}`,\n        disabled: col.removable === false,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 122\n        },\n        __self: this\n      }, React.createElement(Checkbox, {\n        checked: !col.hidden,\n        id: `column-toggle-${col.tableData.id}`,\n        onChange: () => this.props.onColumnsChanged(col, !col.hidden),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 128\n        },\n        __self: this\n      }), React.createElement(\"span\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 133\n        },\n        __self: this\n      }, col.title)));\n    }))), this.props.exportButton && React.createElement(\"span\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 143\n      },\n      __self: this\n    }, React.createElement(Tooltip, {\n      title: localization.exportTitle,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 144\n      },\n      __self: this\n    }, React.createElement(IconButton, {\n      color: \"inherit\",\n      onClick: event => this.setState({\n        exportButtonAnchorEl: event.currentTarget\n      }),\n      \"aria-label\": localization.exportAriaLabel,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 145\n      },\n      __self: this\n    }, React.createElement(this.props.icons.Export, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 149\n      },\n      __self: this\n    }))), React.createElement(Menu, {\n      anchorEl: this.state.exportButtonAnchorEl,\n      open: Boolean(this.state.exportButtonAnchorEl),\n      onClose: () => this.setState({\n        exportButtonAnchorEl: null\n      }),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 152\n      },\n      __self: this\n    }, React.createElement(MenuItem, {\n      key: \"export-csv\",\n      onClick: this.exportCsv,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 157\n      },\n      __self: this\n    }, localization.exportName))), React.createElement(\"span\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 164\n      },\n      __self: this\n    }, React.createElement(this.props.components.Actions, {\n      actions: this.props.actions && this.props.actions.filter(a => a.position === \"toolbar\"),\n      components: this.props.components,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 165\n      },\n      __self: this\n    })));\n  }\n\n  renderSelectedActions() {\n    return React.createElement(React.Fragment, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 173\n      },\n      __self: this\n    }, React.createElement(this.props.components.Actions, {\n      actions: this.props.actions.filter(a => a.position === \"toolbarOnSelect\"),\n      data: this.props.selectedRows,\n      components: this.props.components,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 174\n      },\n      __self: this\n    }));\n  }\n\n  renderActions() {\n    const classes = this.props.classes;\n    return React.createElement(\"div\", {\n      className: classes.actions,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 183\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 184\n      },\n      __self: this\n    }, this.props.selectedRows && this.props.selectedRows.length > 0 ? this.renderSelectedActions() : this.renderDefaultActions()));\n  }\n\n  renderToolbarTitle(title) {\n    const classes = this.props.classes;\n    const toolBarTitle = typeof title === 'string' ? React.createElement(Typography, {\n      variant: \"h6\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 196\n      },\n      __self: this\n    }, title) : title;\n    return React.createElement(\"div\", {\n      className: classes.title,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 199\n      },\n      __self: this\n    }, toolBarTitle);\n  }\n\n  render() {\n    const classes = this.props.classes;\n\n    const localization = _objectSpread({}, MTableToolbar.defaultProps.localization, {}, this.props.localization);\n\n    const title = this.props.showTextRowsSelected && this.props.selectedRows && this.props.selectedRows.length > 0 ? localization.nRowsSelected.replace('{0}', this.props.selectedRows.length) : this.props.showTitle ? this.props.title : null;\n    return React.createElement(Toolbar, {\n      className: classNames(classes.root, {\n        [classes.highlight]: this.props.showTextRowsSelected && this.props.selectedRows && this.props.selectedRows.length > 0\n      }),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 210\n      },\n      __self: this\n    }, title && this.renderToolbarTitle(title), this.props.searchFieldAlignment === 'left' && this.renderSearch(), this.props.toolbarButtonAlignment === 'left' && this.renderActions(), React.createElement(\"div\", {\n      className: classes.spacer,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 214\n      },\n      __self: this\n    }), this.props.searchFieldAlignment === 'right' && this.renderSearch(), this.props.toolbarButtonAlignment === 'right' && this.renderActions());\n  }\n\n}\nMTableToolbar.defaultProps = {\n  actions: [],\n  columns: [],\n  columnsButton: false,\n  localization: {\n    addRemoveColumns: 'Add or remove columns',\n    nRowsSelected: '{0} row(s) selected',\n    showColumnsTitle: 'Show Columns',\n    showColumnsAriaLabel: 'Show Columns',\n    exportTitle: 'Export',\n    exportAriaLabel: 'Export',\n    exportName: 'Export as CSV',\n    searchTooltip: 'Search',\n    searchPlaceholder: 'Search'\n  },\n  search: true,\n  showTitle: true,\n  showTextRowsSelected: true,\n  toolbarButtonAlignment: 'right',\n  searchFieldAlignment: 'right',\n  searchText: '',\n  selectedRows: [],\n  title: 'No Title!'\n};\nMTableToolbar.propTypes = {\n  actions: PropTypes.array,\n  columns: PropTypes.array,\n  columnsButton: PropTypes.bool,\n  components: PropTypes.object.isRequired,\n  getFieldValue: PropTypes.func.isRequired,\n  localization: PropTypes.object.isRequired,\n  onColumnsChanged: PropTypes.func.isRequired,\n  onSearchChanged: PropTypes.func.isRequired,\n  search: PropTypes.bool.isRequired,\n  searchFieldStyle: PropTypes.object,\n  searchText: PropTypes.string.isRequired,\n  selectedRows: PropTypes.array,\n  title: PropTypes.oneOfType([PropTypes.element, PropTypes.string]),\n  showTitle: PropTypes.bool.isRequired,\n  showTextRowsSelected: PropTypes.bool.isRequired,\n  toolbarButtonAlignment: PropTypes.string.isRequired,\n  searchFieldAlignment: PropTypes.string.isRequired,\n  renderData: PropTypes.array,\n  data: PropTypes.array,\n  exportAllData: PropTypes.bool,\n  exportButton: PropTypes.bool,\n  exportDelimiter: PropTypes.string,\n  exportFileName: PropTypes.string,\n  exportCsv: PropTypes.func,\n  classes: PropTypes.object\n};\nexport const styles = theme => ({\n  root: {\n    paddingRight: theme.spacing(1)\n  },\n  highlight: theme.palette.type === 'light' ? {\n    color: theme.palette.secondary.main,\n    backgroundColor: lighten(theme.palette.secondary.light, 0.85)\n  } : {\n    color: theme.palette.text.primary,\n    backgroundColor: theme.palette.secondary.dark\n  },\n  spacer: {\n    flex: '1 1 10%'\n  },\n  actions: {\n    color: theme.palette.text.secondary\n  },\n  title: {\n    flex: '0 0 auto'\n  },\n  searchField: {\n    paddingLeft: theme.spacing(2)\n  },\n  formControlLabel: {\n    paddingLeft: theme.spacing(1),\n    paddingRight: theme.spacing(1)\n  }\n});\nexport default withStyles(styles)(MTableToolbar);","map":{"version":3,"sources":["C:/Users/jeiso/Desktop/REACT/proyectosESCOM/frontend/ESCOM-view/src/SuperAdministrador/utilitario/MTableToolbar.js"],"names":["Checkbox","IconButton","InputAdornment","Menu","MenuItem","TextField","Toolbar","Tooltip","Typography","withStyles","lighten","classNames","CsvBuilder","PropTypes","React","MTableToolbar","Component","constructor","props","defaultExportCsv","columns","filter","columnDef","hidden","field","export","sort","a","b","tableData","columnOrder","dataToExport","exportAllData","data","renderData","map","rowData","getFieldValue","builder","exportFileName","title","setDelimeter","exportDelimiter","setColumns","addRows","exportFile","exportCsv","setState","exportButtonAnchorEl","state","columnsButtonAnchorEl","renderSearch","localization","defaultProps","search","searchFieldAlignment","showTitle","classes","searchField","searchText","event","onSearchChanged","target","value","searchPlaceholder","startAdornment","searchTooltip","endAdornment","style","searchFieldStyle","renderDefaultActions","columnsButton","showColumnsTitle","currentTarget","showColumnsAriaLabel","Boolean","opacity","fontWeight","fontSize","addRemoveColumns","col","id","formControlLabel","removable","onColumnsChanged","exportButton","exportTitle","exportAriaLabel","exportName","actions","position","components","renderSelectedActions","selectedRows","renderActions","length","renderToolbarTitle","toolBarTitle","render","showTextRowsSelected","nRowsSelected","replace","root","highlight","toolbarButtonAlignment","spacer","propTypes","array","bool","object","isRequired","func","string","oneOfType","element","styles","theme","paddingRight","spacing","palette","type","color","secondary","main","backgroundColor","light","text","primary","dark","flex","paddingLeft"],"mappings":"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","sourcesContent":["import Checkbox from '@material-ui/core/Checkbox';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport InputAdornment from '@material-ui/core/InputAdornment';\r\nimport Menu from '@material-ui/core/Menu';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Toolbar from '@material-ui/core/Toolbar';\r\nimport Tooltip from '@material-ui/core/Tooltip';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport withStyles from '@material-ui/core/styles/withStyles';\r\nimport { lighten } from '@material-ui/core/styles/colorManipulator';\r\nimport classNames from 'classnames';\r\nimport { CsvBuilder } from 'filefy';\r\nimport PropTypes from 'prop-types';\r\nimport * as React from 'react';\r\n/* eslint-enable no-unused-vars */\r\n\r\nexport class MTableToolbar extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      columnsButtonAnchorEl: null,\r\n      exportButtonAnchorEl: null\r\n    };\r\n  }\r\n\r\n  defaultExportCsv = () => {\r\n    const columns = this.props.columns\r\n      .filter(columnDef => {\r\n        return !columnDef.hidden && columnDef.field && columnDef.export !== false;\r\n      })\r\n      .sort((a, b) => (a.tableData.columnOrder > b.tableData.columnOrder) ? 1 : -1);\r\n    const dataToExport = this.props.exportAllData ? this.props.data : this.props.renderData;\r\n    const data = dataToExport.map(rowData =>\r\n      columns.map(columnDef => {\r\n        return this.props.getFieldValue(rowData, columnDef);\r\n      })\r\n    );\r\n\r\n    const builder = new CsvBuilder((this.props.exportFileName || this.props.title || 'data') + '.csv');\r\n    builder\r\n      .setDelimeter(this.props.exportDelimiter)\r\n      .setColumns(columns.map(columnDef => columnDef.title))\r\n      .addRows(data)\r\n      .exportFile();\r\n  }\r\n\r\n  exportCsv = () => {\r\n    if (this.props.exportCsv) {\r\n      this.props.exportCsv(this.props.columns, this.props.data);\r\n    } else {\r\n      this.defaultExportCsv();\r\n    }\r\n    this.setState({ exportButtonAnchorEl: null });\r\n  }\r\n\r\n  renderSearch() {\r\n    const localization = { ...MTableToolbar.defaultProps.localization, ...this.props.localization };\r\n    if (this.props.search) {\r\n      return (\r\n        <TextField\r\n          className={this.props.searchFieldAlignment === 'left' && this.props.showTitle === false ? null : this.props.classes.searchField}\r\n          value={this.props.searchText}\r\n          onChange={event => this.props.onSearchChanged(event.target.value)}\r\n          placeholder={localization.searchPlaceholder}          \r\n          InputProps={{\r\n            startAdornment: (\r\n              <InputAdornment position=\"start\">\r\n                <Tooltip title={localization.searchTooltip}>\r\n                  <this.props.icons.Search color=\"inherit\" fontSize=\"small\" />\r\n                </Tooltip>\r\n              </InputAdornment>\r\n            ),\r\n            endAdornment: (\r\n              <InputAdornment position=\"end\">\r\n                <IconButton\r\n                  disabled={!this.props.searchText}\r\n                  onClick={() => this.props.onSearchChanged(\"\")}\r\n                >\r\n                  <this.props.icons.ResetSearch color=\"inherit\" fontSize=\"small\" />\r\n                </IconButton>\r\n              </InputAdornment>\r\n            ),\r\n            style: this.props.searchFieldStyle\r\n          }}\r\n        />\r\n      );\r\n    }\r\n    else {\r\n      return null;\r\n    }\r\n  }\r\n\r\n  renderDefaultActions() {\r\n    const localization = { ...MTableToolbar.defaultProps.localization, ...this.props.localization };\r\n    const {classes} = this.props;\r\n\r\n    return (\r\n      <div>\r\n        {this.props.columnsButton &&\r\n          <span>\r\n            <Tooltip title={localization.showColumnsTitle}>\r\n              <IconButton\r\n                color=\"inherit\"\r\n                onClick={event => this.setState({ columnsButtonAnchorEl: event.currentTarget })}\r\n                aria-label={localization.showColumnsAriaLabel}>\r\n\r\n                <this.props.icons.ViewColumn />\r\n              </IconButton>\r\n            </Tooltip>\r\n            <Menu\r\n              anchorEl={this.state.columnsButtonAnchorEl}\r\n              open={Boolean(this.state.columnsButtonAnchorEl)}\r\n              onClose={() => this.setState({ columnsButtonAnchorEl: null })}>\r\n              <MenuItem key={\"text\"} disabled style={{ opacity: 1, fontWeight: 600, fontSize: 12 }}>\r\n                {localization.addRemoveColumns}\r\n              </MenuItem>\r\n              {\r\n                this.props.columns.map((col) => {\r\n                  return (\r\n                    <li key={col.tableData.id}>\r\n                      <MenuItem\r\n                        className={classes.formControlLabel}\r\n                        component=\"label\"\r\n                        htmlFor={`column-toggle-${col.tableData.id}`}\r\n                        disabled={col.removable === false}\r\n                      >\r\n                        <Checkbox\r\n                          checked={!col.hidden}\r\n                          id={`column-toggle-${col.tableData.id}`}\r\n                          onChange={() => this.props.onColumnsChanged(col, !col.hidden)}\r\n                        />\r\n                        <span>{col.title}</span>\r\n                      </MenuItem>\r\n                    </li>\r\n                  );\r\n                })\r\n              }\r\n            </Menu>\r\n          </span>\r\n        }\r\n        {this.props.exportButton &&\r\n          <span>\r\n            <Tooltip title={localization.exportTitle}>\r\n              <IconButton\r\n                color=\"inherit\"\r\n                onClick={event => this.setState({ exportButtonAnchorEl: event.currentTarget })}\r\n                aria-label={localization.exportAriaLabel}>\r\n                <this.props.icons.Export />\r\n              </IconButton>\r\n            </Tooltip>\r\n            <Menu\r\n              anchorEl={this.state.exportButtonAnchorEl}\r\n              open={Boolean(this.state.exportButtonAnchorEl)}\r\n              onClose={() => this.setState({ exportButtonAnchorEl: null })}\r\n            >\r\n              <MenuItem key=\"export-csv\" onClick={this.exportCsv}>\r\n                {localization.exportName}\r\n              </MenuItem>\r\n            </Menu>\r\n          </span>\r\n\r\n        }\r\n        <span>\r\n          <this.props.components.Actions actions={this.props.actions && this.props.actions.filter(a => a.position === \"toolbar\")} components={this.props.components} />\r\n        </span>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  renderSelectedActions() {\r\n    return (\r\n      <React.Fragment>\r\n        <this.props.components.Actions actions={this.props.actions.filter(a => a.position === \"toolbarOnSelect\")} data={this.props.selectedRows} components={this.props.components} />\r\n      </React.Fragment>\r\n    );\r\n  }\r\n\r\n  renderActions() {\r\n    const { classes } = this.props;\r\n\r\n    return (\r\n      <div className={classes.actions}>\r\n        <div>\r\n          {this.props.selectedRows && this.props.selectedRows.length > 0\r\n            ? this.renderSelectedActions()\r\n            : this.renderDefaultActions()\r\n          }\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  renderToolbarTitle(title) {\r\n    const { classes } = this.props;\r\n    const toolBarTitle = (typeof title === 'string') ? <Typography variant='h6'>{title}</Typography> : title;\r\n\r\n    return (\r\n      <div className={classes.title}>\r\n        {toolBarTitle}\r\n      </div>\r\n    );\r\n  }\r\n\r\n  render() {\r\n    const { classes } = this.props;\r\n    const localization = { ...MTableToolbar.defaultProps.localization, ...this.props.localization };\r\n    const title = this.props.showTextRowsSelected && this.props.selectedRows && this.props.selectedRows.length > 0 ? localization.nRowsSelected.replace('{0}', this.props.selectedRows.length) : this.props.showTitle ? this.props.title : null;\r\n    return (\r\n      <Toolbar className={classNames(classes.root, { [classes.highlight]: this.props.showTextRowsSelected && this.props.selectedRows && this.props.selectedRows.length > 0 })}>\r\n        { title && this.renderToolbarTitle(title)}\r\n        {this.props.searchFieldAlignment === 'left' && this.renderSearch()}\r\n        {this.props.toolbarButtonAlignment === 'left' && this.renderActions()}\r\n        <div className={classes.spacer} />\r\n        {this.props.searchFieldAlignment === 'right' && this.renderSearch()}\r\n        {this.props.toolbarButtonAlignment === 'right' && this.renderActions()}\r\n      </Toolbar >\r\n    );\r\n  }\r\n}\r\n\r\nMTableToolbar.defaultProps = {\r\n  actions: [],\r\n  columns: [],\r\n  columnsButton: false,\r\n  localization: {\r\n    addRemoveColumns: 'Add or remove columns',\r\n    nRowsSelected: '{0} row(s) selected',\r\n    showColumnsTitle: 'Show Columns',\r\n    showColumnsAriaLabel: 'Show Columns',\r\n    exportTitle: 'Export',\r\n    exportAriaLabel: 'Export',\r\n    exportName: 'Export as CSV',\r\n    searchTooltip: 'Search',\r\n    searchPlaceholder: 'Search'\r\n  },\r\n  search: true,\r\n  showTitle: true,\r\n  showTextRowsSelected: true,\r\n  toolbarButtonAlignment: 'right',\r\n  searchFieldAlignment: 'right',\r\n  searchText: '',\r\n  selectedRows: [],\r\n  title: 'No Title!'\r\n};\r\n\r\nMTableToolbar.propTypes = {\r\n  actions: PropTypes.array,\r\n  columns: PropTypes.array,\r\n  columnsButton: PropTypes.bool,\r\n  components: PropTypes.object.isRequired,\r\n  getFieldValue: PropTypes.func.isRequired,\r\n  localization: PropTypes.object.isRequired,\r\n  onColumnsChanged: PropTypes.func.isRequired,\r\n  onSearchChanged: PropTypes.func.isRequired,\r\n  search: PropTypes.bool.isRequired,\r\n  searchFieldStyle: PropTypes.object,\r\n  searchText: PropTypes.string.isRequired,\r\n  selectedRows: PropTypes.array,\r\n  title: PropTypes.oneOfType([PropTypes.element, PropTypes.string]),\r\n  showTitle: PropTypes.bool.isRequired,\r\n  showTextRowsSelected: PropTypes.bool.isRequired,\r\n  toolbarButtonAlignment: PropTypes.string.isRequired,\r\n  searchFieldAlignment: PropTypes.string.isRequired,\r\n  renderData: PropTypes.array,\r\n  data: PropTypes.array,\r\n  exportAllData: PropTypes.bool,\r\n  exportButton: PropTypes.bool,\r\n  exportDelimiter: PropTypes.string,\r\n  exportFileName: PropTypes.string,\r\n  exportCsv: PropTypes.func,\r\n  classes: PropTypes.object\r\n};\r\n\r\nexport const styles = theme => ({\r\n  root: {\r\n    paddingRight: theme.spacing(1)\r\n  },\r\n  highlight:\r\n    theme.palette.type === 'light'\r\n      ? {\r\n        color: theme.palette.secondary.main,\r\n        backgroundColor: lighten(theme.palette.secondary.light, 0.85)\r\n      }\r\n      : {\r\n        color: theme.palette.text.primary,\r\n        backgroundColor: theme.palette.secondary.dark\r\n      },\r\n  spacer: {\r\n    flex: '1 1 10%'\r\n  },\r\n  actions: {\r\n    color: theme.palette.text.secondary,\r\n  },\r\n  title: {\r\n    flex: '0 0 auto'\r\n  },\r\n  searchField: {\r\n    paddingLeft: theme.spacing(2)\r\n  },\r\n  formControlLabel: {\r\n    paddingLeft: theme.spacing(1),\r\n    paddingRight: theme.spacing(1),\r\n  }\r\n});\r\n\r\nexport default withStyles(styles)(MTableToolbar);"]},"metadata":{},"sourceType":"module"}