{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\hashy\\\\Desktop\\\\proyectosESCOM\\\\frontend\\\\ESCOM-view\\\\src\\\\ModuloDocumental\\\\components\\\\User\\\\Process\\\\userActivity.js\";\nimport React from 'react';\nimport { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { withRouter } from 'react-router-dom';\nimport { getListActivities, getActivityId } from '../../../redux/actions/activityA.js';\nimport { getConditionId } from '../../../redux/actions/conditionA.js';\n\nclass ProcessCondition extends Component {\n  componentWillMount() {\n    this.props.getConditionId(localStorage.getItem('Token'), sessionStorage.getItem('condition'));\n    this.props.getListActivities(localStorage.getItem('Token'), sessionStorage.getItem('condition'));\n  }\n\n  save(id) {\n    sessionStorage.setItem('activity', id);\n    this.props.history.push('/AddInformation');\n  }\n\n  saveAnnex(id) {\n    sessionStorage.setItem('activity', id);\n    this.props.history.push('/AddAnnex');\n  }\n\n  loadCondition() {\n    return React.createElement(\"div\", {\n      className: \"pg\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 26\n      },\n      __self: this\n    }, React.createElement(\"h2\", {\n      className: \"text-center\",\n      style: {\n        textTransform: 'uppercase'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 27\n      },\n      __self: this\n    }, this.props.conditionPro.name), React.createElement(\"h4\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 30\n      },\n      __self: this\n    }, \"Descripcion\"), React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 33\n      },\n      __self: this\n    }, this.props.conditionPro.description));\n  }\n\n  loadActivities() {\n    return this.props.listActivities.map(activity => {\n      return React.createElement(\"tr\", {\n        key: activity.id,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 43\n        },\n        __self: this\n      }, React.createElement(\"td\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 44\n        },\n        __self: this\n      }, activity.name), React.createElement(\"td\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 45\n        },\n        __self: this\n      }, activity.state), React.createElement(\"td\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 46\n        },\n        __self: this\n      }, activity.type === 1 ? 'Informativo' : 'anexo'), React.createElement(\"td\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 47\n        },\n        __self: this\n      }, activity.type === 1 ? React.createElement(\"button\", {\n        onClick: () => this.save(activity.id),\n        className: \"btn btn-sm text-light naranja\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 48\n        },\n        __self: this\n      }, \"Ver\") : React.createElement(\"button\", {\n        onClick: () => this.saveAnnex(activity.id),\n        className: \"btn btn-sm text-light naranja\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 51\n        },\n        __self: this\n      }, \"Ver\")));\n    });\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      className: \"container color\",\n      style: {\n        width: \"80%\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 63\n      },\n      __self: this\n    }, this.loadCondition(), React.createElement(\"h2\", {\n      className: \"text-center\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 65\n      },\n      __self: this\n    }, \"Lista actividades\"), React.createElement(\"div\", {\n      className: \"pg\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 68\n      },\n      __self: this\n    }, React.createElement(\"table\", {\n      class: \"table border table-striped\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 69\n      },\n      __self: this\n    }, React.createElement(\"thead\", {\n      class: \"colorBlue text-light\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 70\n      },\n      __self: this\n    }, React.createElement(\"tr\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 71\n      },\n      __self: this\n    }, React.createElement(\"th\", {\n      scope: \"col\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 72\n      },\n      __self: this\n    }, \"Actividad\"), React.createElement(\"th\", {\n      scope: \"col\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 73\n      },\n      __self: this\n    }, \"Descrpcion\"), React.createElement(\"th\", {\n      scope: \"col\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 74\n      },\n      __self: this\n    }, \"Estado\"), React.createElement(\"th\", {\n      scope: \"col\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 75\n      },\n      __self: this\n    }))), React.createElement(\"tbody\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 78\n      },\n      __self: this\n    }, this.loadActivities()))));\n  }\n\n}\n\nfunction mapStateToProps(state) {\n  return {\n    conditionPro: state.condition.conditionR,\n    listActivities: state.activity.listActivityR\n  };\n}\n\nexport default withRouter(connect(mapStateToProps, {\n  getConditionId,\n  getListActivities,\n  getActivityId\n})(ProcessCondition));","map":{"version":3,"sources":["C:/Users/hashy/Desktop/proyectosESCOM/frontend/ESCOM-view/src/ModuloDocumental/components/User/Process/userActivity.js"],"names":["React","Component","connect","withRouter","getListActivities","getActivityId","getConditionId","ProcessCondition","componentWillMount","props","localStorage","getItem","sessionStorage","save","id","setItem","history","push","saveAnnex","loadCondition","textTransform","conditionPro","name","description","loadActivities","listActivities","map","activity","state","type","render","width","mapStateToProps","condition","conditionR","listActivityR"],"mappings":"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","sourcesContent":["import React from 'react';\r\nimport { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { withRouter } from 'react-router-dom';\r\nimport { getListActivities, getActivityId } from '../../../redux/actions/activityA.js';\r\nimport { getConditionId } from '../../../redux/actions/conditionA.js';\r\n\r\n\r\nclass ProcessCondition extends Component {\r\n    componentWillMount() {\r\n        this.props.getConditionId(localStorage.getItem('Token'), sessionStorage.getItem('condition'))\r\n        this.props.getListActivities(localStorage.getItem('Token'), sessionStorage.getItem('condition'))\r\n    }\r\n\r\n    save(id) {\r\n        sessionStorage.setItem('activity', id)\r\n        this.props.history.push('/AddInformation')\r\n    }\r\n    saveAnnex(id){\r\n        sessionStorage.setItem('activity', id)\r\n        this.props.history.push('/AddAnnex')\r\n    }\r\n\r\n    loadCondition() {\r\n        return (\r\n            <div className=\"pg\">\r\n                <h2 className=\"text-center\" style={{ textTransform: 'uppercase' }}>\r\n                    {this.props.conditionPro.name}\r\n                </h2>\r\n                <h4>\r\n                    Descripcion\r\n                </h4>\r\n                <p>\r\n                    {this.props.conditionPro.description}\r\n                </p>\r\n            </div>\r\n        )\r\n    }\r\n\r\n    loadActivities() {\r\n        return this.props.listActivities.map((activity) => {\r\n            return (\r\n                <tr key={activity.id}>\r\n                    <td>{activity.name}</td>\r\n                    <td>{activity.state}</td>\r\n                    <td>{activity.type === 1 ? 'Informativo' : 'anexo'}</td>\r\n                    <td>{\r\n                        activity.type === 1 ? <button onClick={() => this.save(activity.id)} className=\"btn btn-sm text-light naranja\">\r\n                            Ver\r\n                        </button> :\r\n                        <button onClick={() => this.saveAnnex(activity.id)} className=\"btn btn-sm text-light naranja\">\r\n                                Ver\r\n                        </button>\r\n                    }\r\n                    </td>\r\n                </tr>\r\n            )\r\n        })\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"container color\" style={{ width: \"80%\" }}>\r\n                {this.loadCondition()}\r\n                <h2 className=\"text-center\">\r\n                    Lista actividades\r\n                </h2>\r\n                <div className=\"pg\">\r\n                    <table class=\"table border table-striped\">\r\n                        <thead class=\"colorBlue text-light\">\r\n                            <tr>\r\n                                <th scope=\"col\">Actividad</th>\r\n                                <th scope=\"col\">Descrpcion</th>\r\n                                <th scope=\"col\">Estado</th>\r\n                                <th scope=\"col\"></th>\r\n                            </tr>\r\n                        </thead>\r\n                        <tbody>\r\n                            {this.loadActivities()}\r\n                        </tbody>\r\n                    </table>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nfunction mapStateToProps(state) {\r\n    return {\r\n        conditionPro: state.condition.conditionR,\r\n        listActivities: state.activity.listActivityR\r\n    }\r\n}\r\n\r\nexport default withRouter(connect(mapStateToProps, { getConditionId, getListActivities, getActivityId })(ProcessCondition));"]},"metadata":{},"sourceType":"module"}