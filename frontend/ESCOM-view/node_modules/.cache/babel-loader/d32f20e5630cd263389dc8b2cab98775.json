{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\hashy\\\\Desktop\\\\proyectosESCOM\\\\frontend\\\\ESCOM-view\\\\src\\\\SuperAdministrador\\\\componentes\\\\asignar\\\\asignarActividadModulo.js\";\nimport React from 'react';\nimport { NotificationContainer, NotificationManager } from 'react-notifications';\nimport { withRouter } from 'react-router-dom';\nimport MaterialTable from 'material-table'; //componentes\n\nimport Barra from '../general/BarraDirecciones.js';\nimport Alert from '@material-ui/lab/Alert';\nimport AlertTitle from '@material-ui/lab/AlertTitle';\nimport DoneOutlineIcon from '@material-ui/icons/DoneOutline';\nimport Button from '@material-ui/core/Button';\nimport CancelIcon from '@material-ui/icons/Cancel';\nimport Divider from '@material-ui/core/Divider'; //redux\n\nimport { actionConsultarActividadesModulo, actionCambiarEstadoActividades, actualizarMensajeActividades } from '../../actions/actionsModulo';\nimport { connect } from 'react-redux';\n\nclass AsignarActividadModulo extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      actividadesSeleccionadas: [],\n      habilitado: false\n    };\n\n    this.onClickCancelar = event => {\n      event.preventDefault();\n      this.props.history.goBack();\n    };\n  }\n\n  componentDidMount() {\n    if (this.props.codigoModulo === undefined || this.props.codigoModulo.length === 0) {\n      this.props.history.push('/adminModulo');\n    } else {\n      this.props.actionConsultarActividadesModulo(this.props.codigoModulo, localStorage.getItem('Token'));\n    }\n  }\n\n  componentDidUpdate() {\n    if (this.props.mensaje !== '') {\n      switch (this.props.mensaje) {\n        case 'Operacion hecha con exito':\n          NotificationManager.success('Operacion realizada con exito');\n          this.props.actionConsultarActividadesModulo(this.props.codigoModulo, localStorage.getItem('Token'));\n          this.props.actualizarMensajeActividades('');\n          break;\n\n        case 'No se encontraron datos del modulo':\n          NotificationManager.warning('No se encontraron datos del modulo');\n          break;\n\n        case 'No se encontraron datos de la actividad':\n          NotificationManager.error('No se encontraron datos de la actividad intentelo de nuevo');\n          break;\n\n        case 'Sin permiso':\n          if (!this.state.habilitado) {\n            this.setState({\n              habilitado: true\n            });\n          }\n\n          ;\n          break;\n\n        case 'Ocurrio un error en el servidor':\n          NotificationManager.error('Ocurrio un error en el servidor');\n          break;\n\n        case 'Servidor fuera de servicio temporalmente':\n          NotificationManager.error('Servidor fuera de servicio temporalmente');\n          break;\n\n        case 'Token requerido':\n          localStorage.removeItem('Token');\n          window.location.href = \"/\";\n          break;\n\n        case 'token vencido':\n          localStorage.removeItem('Token');\n          window.location.href = \"/\";\n          break;\n\n        case 'token no registrado':\n          localStorage.removeItem('Token');\n          window.location.href = \"/\";\n          break;\n\n        case 'token incorrecto':\n          localStorage.removeItem('Token');\n          window.location.href = \"/\";\n          break;\n\n        default:\n          break;\n      }\n    }\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 89\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      class: \"text-left titulo\",\n      style: estiloLetrero,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 90\n      },\n      __self: this\n    }, React.createElement(\"h4\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 91\n      },\n      __self: this\n    }, \"Administrar actividades del modulo\")), React.createElement(Barra, {\n      texto: \"Administracion de modulos > Administrar actividades del modulo\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 93\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      className: \"col-sm-12\",\n      style: {\n        paddingTop: \"7px\",\n        paddingRight: \"40px\",\n        paddingLeft: \"40px\",\n        paddingBottom: \"20px\",\n        margin: \"0px 0px 32px\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 97\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"container shadow\",\n      style: fondoBarraSuperior,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 105\n      },\n      __self: this\n    }, React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 106\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      className: \"jumbotron p-1 jumbotron-fluid\",\n      style: fondoTabla,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 107\n      },\n      __self: this\n    }, this.state.habilitado ? React.createElement(\"div\", {\n      className: \"col-sm-12\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 109\n      },\n      __self: this\n    }, React.createElement(Alert, {\n      severity: \"error\",\n      variant: \"outlined\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 110\n      },\n      __self: this\n    }, React.createElement(AlertTitle, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 111\n      },\n      __self: this\n    }, \"Sin permiso\"), \"No tiene permisos suficientes para administrar las actividades de los modulos\"), React.createElement(\"div\", {\n      style: {\n        padding: \"25px 44px 25px 395px\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 113\n      },\n      __self: this\n    }, React.createElement(Button, {\n      style: {\n        background: this.props.configuracion.botones,\n        fontSize: \"14px\",\n        fontFamily: \"sans-serif\",\n        textTransform: \"none\"\n      },\n      className: \"btn btn-dark\",\n      variant: \"contained\",\n      onClick: this.onClickCancelar,\n      startIcon: React.createElement(DoneOutlineIcon, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 114\n        },\n        __self: this\n      }),\n      type: \"submit\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 114\n      },\n      __self: this\n    }, \"Aceptar\"), '')) : React.createElement(React.Fragment, null, React.createElement(MaterialTable, {\n      title: \"Actividades actualmente asociadas al modulo\",\n      localization: {\n        header: {\n          actions: ' '\n        },\n        pagination: {\n          nextTooltip: 'Siguiente ',\n          previousTooltip: 'Anterior',\n          labelDisplayedRows: '{from}-{to} de {count}',\n          lastTooltip: 'Ultima pagina',\n          firstTooltip: 'Primera pagina',\n          labelRowsSelect: 'Registros',\n          firstAriaLabel: 'oooo'\n        },\n        body: {\n          emptyDataSourceMessage: 'Ningun registro de actividad encontrada'\n        },\n        toolbar: {\n          searchTooltip: 'Buscar',\n          searchPlaceholder: 'Buscar',\n          nRowsSelected: '{0} actividades seleccionadas'\n        }\n      },\n      columns: [{\n        title: 'Codigo de la actividad',\n        field: 'idActividad',\n        headerStyle: estiloCabecera,\n        cellStyle: estiloFila\n      }, {\n        title: 'Nombre de la actividad',\n        field: 'nombre',\n        headerStyle: estiloCabecera,\n        cellStyle: estiloFila\n      }, {\n        title: 'Estado',\n        field: 'estado',\n        render: rowData => {\n          if (rowData.estado === 'Suspendido') {\n            return React.createElement(\"span\", {\n              className: \"label label-sm letra\",\n              style: {\n                textShadow: \"none!important\",\n                fontSize: \"12px\",\n                fontFamily: \"Open Sans,sans-serif\",\n                fontWeight: \"300\",\n                padding: \"3px 6px\",\n                color: \"#fff\",\n                background: \"#ED6B75\"\n              },\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 149\n              },\n              __self: this\n            }, rowData.estado);\n          } else {\n            return React.createElement(\"span\", {\n              className: \"label label-sm letra\",\n              style: {\n                textShadow: \"none!important\",\n                fontSize: \"12px\",\n                fontFamily: \"Open Sans,sans-serif\",\n                fontWeight: \"300\",\n                padding: \"3px 6px\",\n                color: \"#fff\",\n                background: \"#408725\"\n              },\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 160\n              },\n              __self: this\n            }, rowData.estado);\n          }\n        },\n        headerStyle: estiloCabecera,\n        cellStyle: estiloFila\n      }],\n      data: this.props.actividades,\n      options: {\n        search: true,\n        rowStyle: estiloFila,\n        selection: true\n      },\n      onSelectionChange: rows => {\n        this.setState({\n          actividadesSeleccionadas: rows\n        });\n      },\n      actions: [{\n        tooltip: 'Activar/Suspender actividades seleccionadas',\n        icon: 'restore',\n        onClick: (evt, data) => this.props.actionCambiarEstadoActividades(this.state.actividadesSeleccionadas, localStorage.getItem('Token'))\n      }],\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 118\n      },\n      __self: this\n    }), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 192\n      },\n      __self: this\n    }), React.createElement(Divider, {\n      variant: \"middle\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 193\n      },\n      __self: this\n    }), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 194\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      style: {\n        paddingLeft: \"415px\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 195\n      },\n      __self: this\n    }, React.createElement(Button, {\n      startIcon: React.createElement(CancelIcon, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 197\n        },\n        __self: this\n      }),\n      style: fondoBotonCancelar,\n      className: \"btn btn-dark\",\n      variant: \"contained\",\n      onClick: this.onClickCancelar,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 196\n      },\n      __self: this\n    }, \"Salir\"))))), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 208\n      },\n      __self: this\n    })), React.createElement(NotificationContainer, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 210\n      },\n      __self: this\n    }));\n  }\n\n}\n\nconst fondoBotonCancelar = {\n  background: \"gray\",\n  fontSize: \"14px\",\n  fontFamily: \"sans-serif\",\n  textTransform: \"none\"\n};\nconst estiloLetrero = {\n  paddingTop: \"20px\",\n  paddingRight: \"12px\",\n  paddingLeft: \"40px\",\n  paddingBottom: \"1px\"\n};\nconst estiloCabecera = {\n  fontSize: '13px',\n  fontFamily: 'sans-serif',\n  padding: '8px',\n  background: '#e7ecf1'\n};\nconst estiloFila = {\n  fontSize: '12px',\n  fontFamily: 'sans-serif',\n  padding: '8px'\n};\nconst fondoBarraSuperior = {\n  background: \"#FFFFFF\",\n  padding: \"25px\"\n};\nconst fondoTabla = {\n  background: \"white\"\n};\n\nfunction mapStateToProps(state) {\n  return {\n    codigoModulo: state.mod.codigoModulo,\n    actividades: state.mod.actividadesModulos,\n    mensaje: state.mod.mensajeActividadesModulo,\n    configuracion: state.conf.configuracion\n  };\n}\n\nexport default withRouter(connect(mapStateToProps, {\n  actionConsultarActividadesModulo,\n  actionCambiarEstadoActividades,\n  actualizarMensajeActividades\n})(AsignarActividadModulo));","map":{"version":3,"sources":["C:/Users/hashy/Desktop/proyectosESCOM/frontend/ESCOM-view/src/SuperAdministrador/componentes/asignar/asignarActividadModulo.js"],"names":["React","NotificationContainer","NotificationManager","withRouter","MaterialTable","Barra","Alert","AlertTitle","DoneOutlineIcon","Button","CancelIcon","Divider","actionConsultarActividadesModulo","actionCambiarEstadoActividades","actualizarMensajeActividades","connect","AsignarActividadModulo","Component","state","actividadesSeleccionadas","habilitado","onClickCancelar","event","preventDefault","props","history","goBack","componentDidMount","codigoModulo","undefined","length","push","localStorage","getItem","componentDidUpdate","mensaje","success","warning","error","setState","removeItem","window","location","href","render","estiloLetrero","paddingTop","paddingRight","paddingLeft","paddingBottom","margin","fondoBarraSuperior","fondoTabla","padding","background","configuracion","botones","fontSize","fontFamily","textTransform","header","actions","pagination","nextTooltip","previousTooltip","labelDisplayedRows","lastTooltip","firstTooltip","labelRowsSelect","firstAriaLabel","body","emptyDataSourceMessage","toolbar","searchTooltip","searchPlaceholder","nRowsSelected","title","field","headerStyle","estiloCabecera","cellStyle","estiloFila","rowData","estado","textShadow","fontWeight","color","actividades","search","rowStyle","selection","rows","tooltip","icon","onClick","evt","data","fondoBotonCancelar","mapStateToProps","mod","actividadesModulos","mensajeActividadesModulo","conf"],"mappings":"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","sourcesContent":["import React from 'react';\r\n\r\n\r\nimport { NotificationContainer, NotificationManager } from 'react-notifications';\r\nimport { withRouter } from 'react-router-dom';\r\nimport MaterialTable from 'material-table';\r\n\r\n//componentes\r\nimport Barra from '../general/BarraDirecciones.js';\r\nimport Alert from '@material-ui/lab/Alert';\r\nimport AlertTitle from '@material-ui/lab/AlertTitle';\r\nimport DoneOutlineIcon from '@material-ui/icons/DoneOutline';\r\nimport Button from '@material-ui/core/Button';\r\nimport CancelIcon from '@material-ui/icons/Cancel';\r\nimport Divider from '@material-ui/core/Divider';\r\n\r\n\r\n//redux\r\nimport { actionConsultarActividadesModulo, actionCambiarEstadoActividades, actualizarMensajeActividades } from '../../actions/actionsModulo'\r\nimport { connect } from 'react-redux';\r\n\r\nclass AsignarActividadModulo extends React.Component {\r\n\r\n    state = {\r\n        actividadesSeleccionadas: [],\r\n        habilitado: false\r\n    }\r\n    componentDidMount() {\r\n        if (this.props.codigoModulo === undefined || this.props.codigoModulo.length === 0) {\r\n            this.props.history.push('/adminModulo');\r\n        } else {\r\n            this.props.actionConsultarActividadesModulo(this.props.codigoModulo, localStorage.getItem('Token'));\r\n        }\r\n    }\r\n\r\n    componentDidUpdate() {\r\n        if (this.props.mensaje !== '') {\r\n            switch (this.props.mensaje) {\r\n                case 'Operacion hecha con exito':\r\n                    NotificationManager.success('Operacion realizada con exito');\r\n                    this.props.actionConsultarActividadesModulo(this.props.codigoModulo, localStorage.getItem('Token'));\r\n                    this.props.actualizarMensajeActividades('');\r\n                    break;\r\n                case 'No se encontraron datos del modulo':\r\n                    NotificationManager.warning('No se encontraron datos del modulo');\r\n                    break;\r\n                case 'No se encontraron datos de la actividad':\r\n                    NotificationManager.error('No se encontraron datos de la actividad intentelo de nuevo');\r\n                    break;\r\n                case 'Sin permiso':\r\n                    if (!this.state.habilitado) { this.setState({ habilitado: true }) };\r\n                    break;\r\n                case 'Ocurrio un error en el servidor':\r\n                    NotificationManager.error('Ocurrio un error en el servidor');\r\n                    break;\r\n                case 'Servidor fuera de servicio temporalmente':\r\n                    NotificationManager.error('Servidor fuera de servicio temporalmente');\r\n                    break;\r\n                case 'Token requerido':\r\n                    localStorage.removeItem('Token');\r\n                    window.location.href = \"/\";\r\n                    break;\r\n                case 'token vencido':\r\n                    localStorage.removeItem('Token');\r\n                    window.location.href = \"/\";\r\n                    break;\r\n                case 'token no registrado':\r\n                    localStorage.removeItem('Token');\r\n                    window.location.href = \"/\";\r\n                    break;\r\n                case 'token incorrecto':\r\n                    localStorage.removeItem('Token');\r\n                    window.location.href = \"/\";\r\n                    break;\r\n                default:\r\n                    break;\r\n            }\r\n        }\r\n    }\r\n\r\n    onClickCancelar = (event) => {\r\n        event.preventDefault();\r\n        this.props.history.goBack();\r\n    }\r\n\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                <div class=\"text-left titulo\" style={estiloLetrero}>\r\n                    <h4>Administrar actividades del modulo</h4>\r\n                </div>\r\n                <Barra texto=\"Administracion de modulos > Administrar actividades del modulo\" />\r\n\r\n\r\n\r\n                <div className=\"col-sm-12\" style={{\r\n                    paddingTop: \"7px\",\r\n                    paddingRight: \"40px\",\r\n                    paddingLeft: \"40px\",\r\n                    paddingBottom: \"20px\",\r\n                    margin: \"0px 0px 32px\"\r\n\r\n                }}>\r\n                    <div className=\"container shadow\" style={fondoBarraSuperior}>\r\n                        <br />\r\n                        <div className=\"jumbotron p-1 jumbotron-fluid\" style={fondoTabla}>\r\n                            {\r\n                                this.state.habilitado ? <div className=\"col-sm-12\">\r\n                                    <Alert severity=\"error\" variant=\"outlined\">\r\n                                        <AlertTitle>Sin permiso</AlertTitle>\r\n                                        No tiene permisos suficientes para administrar las actividades de los modulos</Alert>\r\n                                    <div style={{ padding: \"25px 44px 25px 395px\" }}>\r\n                                        <Button style={{ background: this.props.configuracion.botones, fontSize: \"14px\", fontFamily: \"sans-serif\", textTransform: \"none\" }} className=\"btn btn-dark\" variant=\"contained\" onClick={this.onClickCancelar} startIcon={<DoneOutlineIcon />} type=\"submit\">Aceptar</Button>{''}\r\n                                    </div>\r\n                                </div> :\r\n                                    <>\r\n                                        <MaterialTable\r\n                                            title=\"Actividades actualmente asociadas al modulo\"\r\n                                            localization={{\r\n                                                header: {\r\n                                                    actions: ' '\r\n                                                },\r\n                                                pagination: {\r\n                                                    nextTooltip: 'Siguiente ',\r\n                                                    previousTooltip: 'Anterior',\r\n                                                    labelDisplayedRows: '{from}-{to} de {count}',\r\n                                                    lastTooltip: 'Ultima pagina',\r\n                                                    firstTooltip: 'Primera pagina',\r\n                                                    labelRowsSelect: 'Registros',\r\n                                                    firstAriaLabel: 'oooo'\r\n                                                },\r\n                                                body: {\r\n                                                    emptyDataSourceMessage: 'Ningun registro de actividad encontrada'\r\n                                                },\r\n                                                toolbar: {\r\n                                                    searchTooltip: 'Buscar',\r\n                                                    searchPlaceholder: 'Buscar',\r\n                                                    nRowsSelected: '{0} actividades seleccionadas'\r\n                                                }\r\n                                            }}\r\n                                            columns={[\r\n                                                { title: 'Codigo de la actividad', field: 'idActividad', headerStyle: estiloCabecera, cellStyle: estiloFila },\r\n                                                { title: 'Nombre de la actividad', field: 'nombre', headerStyle: estiloCabecera, cellStyle: estiloFila },\r\n                                                {\r\n                                                    title: 'Estado', field: 'estado',\r\n                                                    render: rowData => {\r\n                                                        if (rowData.estado === 'Suspendido') {\r\n                                                            return <span className=\"label label-sm letra\"\r\n                                                                style={{\r\n                                                                    textShadow: \"none!important\",\r\n                                                                    fontSize: \"12px\",\r\n                                                                    fontFamily: \"Open Sans,sans-serif\",\r\n                                                                    fontWeight: \"300\",\r\n                                                                    padding: \"3px 6px\",\r\n                                                                    color: \"#fff\",\r\n                                                                    background: \"#ED6B75\"\r\n                                                                }}>{rowData.estado}</span>\r\n                                                        } else {\r\n                                                            return <span className=\"label label-sm letra\"\r\n                                                                style={{\r\n                                                                    textShadow: \"none!important\",\r\n                                                                    fontSize: \"12px\",\r\n                                                                    fontFamily: \"Open Sans,sans-serif\",\r\n                                                                    fontWeight: \"300\",\r\n                                                                    padding: \"3px 6px\",\r\n                                                                    color: \"#fff\",\r\n                                                                    background: \"#408725\"\r\n                                                                }}>{rowData.estado}</span>\r\n                                                        }\r\n                                                    }, headerStyle: estiloCabecera, cellStyle: estiloFila\r\n                                                }\r\n\r\n                                            ]}\r\n                                            data={this.props.actividades}\r\n                                            options={{\r\n                                                search: true,\r\n                                                rowStyle: estiloFila,\r\n                                                selection: true\r\n                                            }}\r\n                                            onSelectionChange={(rows) => {\r\n                                                this.setState({ actividadesSeleccionadas: rows });\r\n                                            }}\r\n                                            actions={[\r\n                                                {\r\n                                                    tooltip: 'Activar/Suspender actividades seleccionadas',\r\n                                                    icon: 'restore',\r\n                                                    onClick: (evt, data) => this.props.actionCambiarEstadoActividades(this.state.actividadesSeleccionadas, localStorage.getItem('Token'))\r\n                                                }\r\n                                            ]}\r\n                                        />\r\n                                        <br />\r\n                                        <Divider variant=\"middle\" />\r\n                                        <br />\r\n                                        <div style={{ paddingLeft: \"415px\" }}>\r\n                                            <Button\r\n                                                startIcon={<CancelIcon />}\r\n                                                style={fondoBotonCancelar}\r\n                                                className=\"btn btn-dark\"\r\n                                                variant=\"contained\"\r\n                                                onClick={this.onClickCancelar}>\r\n                                                Salir</Button>\r\n                                        </div>\r\n                                    </>\r\n                            }\r\n                        </div>\r\n                    </div>\r\n                    <br />\r\n                </div>\r\n                <NotificationContainer />\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\n\r\nconst fondoBotonCancelar = {\r\n    background: \"gray\",\r\n    fontSize: \"14px\",\r\n    fontFamily: \"sans-serif\",\r\n    textTransform: \"none\"\r\n\r\n}\r\n\r\n\r\nconst estiloLetrero = {\r\n    paddingTop: \"20px\",\r\n    paddingRight: \"12px\",\r\n    paddingLeft: \"40px\",\r\n    paddingBottom: \"1px\"\r\n}\r\n\r\nconst estiloCabecera = {\r\n    fontSize: '13px',\r\n    fontFamily: 'sans-serif',\r\n    padding: '8px',\r\n    background: '#e7ecf1'\r\n\r\n}\r\n\r\nconst estiloFila = {\r\n    fontSize: '12px',\r\n    fontFamily: 'sans-serif',\r\n    padding: '8px',\r\n}\r\n\r\nconst fondoBarraSuperior = {\r\n    background: \"#FFFFFF\",\r\n    padding: \"25px\"\r\n\r\n}\r\n\r\nconst fondoTabla = {\r\n    background: \"white\"\r\n}\r\n\r\n\r\nfunction mapStateToProps(state) {\r\n    return {\r\n        codigoModulo: state.mod.codigoModulo,\r\n        actividades: state.mod.actividadesModulos,\r\n        mensaje: state.mod.mensajeActividadesModulo,\r\n        configuracion: state.conf.configuracion\r\n    }\r\n}\r\n\r\nexport default withRouter(connect(mapStateToProps, { actionConsultarActividadesModulo, actionCambiarEstadoActividades, actualizarMensajeActividades })(AsignarActividadModulo));\r\n\r\n"]},"metadata":{},"sourceType":"module"}