{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\jeiso\\\\Desktop\\\\proyectosESCOM\\\\frontend\\\\ESCOM-view\\\\src\\\\SuperAdministrador\\\\componentes\\\\popup\\\\PopUpUsuario.js\";\nimport React from 'react'; //estilos\n\nimport 'react-notifications/lib/notifications.css'; //componentes\n\nimport Button from '@material-ui/core/Button';\nimport { Modal, ModalHeader, ModalBody, ModalFooter } from 'reactstrap';\nimport { NotificationContainer, NotificationManager } from 'react-notifications';\nimport { reduxForm, Field } from 'redux-form';\nimport { withRouter } from 'react-router-dom';\nimport { generarInput, generarSelect } from '../../utilitario/GenerarInputs.js';\nimport AddIcon from '@material-ui/icons/Add';\nimport SaveAltIcon from '@material-ui/icons/SaveAlt';\nimport CancelIcon from '@material-ui/icons/Cancel'; //redux\n\nimport { actionAgregarUsuario, actionConsultarDocumentos, actualizarMensajeRegistrar } from '../../actions/actionsUsuario.js';\nimport { connect } from 'react-redux';\nimport { fechaNacimiento, seleccione, nombre, apellido, contrasena, correo, documentoIdentificacion, requerido } from '../../utilitario/validacionCampos.js';\n\nclass PopUpUsuario extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.handleSubmit = formValues => {\n      try {\n        var crypto = require('crypto');\n\n        var contrasenaEncryp = crypto.createHmac('sha256', formValues.correo).update(formValues.contrasena).digest('hex');\n        let date = new Date(formValues.fechaNacimiento);\n        let usuario = {\n          'nombre': formValues.nombre,\n          'apellido': formValues.apellido,\n          'tipoDocumento': formValues.tipoDocumento,\n          'numeroDocumento': formValues.numeroDocumento,\n          'correoElectronico': formValues.correo,\n          'contrasena': contrasenaEncryp,\n          'fechaNacimiento': date,\n          'estado': 'Activo'\n        };\n        this.props.actionAgregarUsuario(usuario, localStorage.getItem('Token'));\n        this.props.reset();\n      } catch (error) {\n        NotificationManager.error('Ingrese todos los datos');\n      }\n    };\n\n    this.state = {\n      modal: false\n    };\n    this.toggle = this.toggle.bind(this);\n  }\n\n  toggle() {\n    this.setState(prevState => ({\n      modal: !prevState.modal\n    }));\n    this.props.reset();\n  }\n\n  componentDidUpdate() {\n    if (this.props.mensaje !== '') {\n      switch (this.props.mensaje) {\n        case 'Usuario registrado':\n          NotificationManager.success('Usuario registrado correctamente');\n          this.props.actualizarMensajeRegistrar('');\n          break;\n\n        case 'Sin permiso':\n          NotificationManager.error('No tiene los permisos suficientes para registrar un usuario');\n          this.props.reset();\n          this.props.actualizarMensajeRegistrar('');\n          break;\n\n        case 'Ya existen los datos registrados previamente':\n          NotificationManager.error('El correo o numero de identificacion ya estan registrados');\n          this.props.reset();\n          this.props.actualizarMensajeRegistrar('');\n          break;\n\n        case 'Servidor fuera de servicio temporalmente':\n          NotificationManager.error('Servidor fuera de servicio temporalmente');\n          this.props.reset();\n          this.props.actualizarMensajeRegistrar('');\n          break;\n\n        default:\n          this.props.history.push('/');\n          break;\n      }\n    }\n  }\n\n  componentWillMount() {\n    this.props.actionConsultarDocumentos(localStorage.getItem('Token'));\n  }\n\n  cargarDocumentos() {\n    return this.props.documentos.map((documento, index) => {\n      const idTipoDocumento = documento.idTipoDocumento,\n            tipoDocumento = documento.tipoDocumento;\n      return React.createElement(\"option\", {\n        className: \"letra\",\n        style: {\n          height: \"35px\",\n          fontSize: \"13px\"\n        },\n        value: idTipoDocumento,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 99\n        },\n        __self: this\n      }, tipoDocumento);\n    });\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 107\n      },\n      __self: this\n    }, React.createElement(Button, {\n      style: {\n        background: this.props.configuracion.botones,\n        fontSize: \"14px\",\n        textTransform: \"none\"\n      },\n      startIcon: React.createElement(AddIcon, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 108\n        },\n        __self: this\n      }),\n      className: \"btn btn-dark\",\n      variant: \"contained\",\n      onClick: this.toggle,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 108\n      },\n      __self: this\n    }, \"Registrar usuario\"), React.createElement(Modal, {\n      isOpen: this.state.modal,\n      toggle: this.toggle,\n      style: {\n        width: \"400px\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 109\n      },\n      __self: this\n    }, React.createElement(ModalHeader, {\n      toggle: this.toggle,\n      style: {\n        height: \"50px\",\n        width: \"400px\"\n      },\n      className: \"center\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 112\n      },\n      __self: this\n    }, \"Crear usuario\"), React.createElement(ModalBody, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 113\n      },\n      __self: this\n    }, React.createElement(\"form\", {\n      onSubmit: this.props.handleSubmit(this.handleSubmit),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 114\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"contenedor-inputs\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 115\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"row\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 116\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"col-sm-12\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 117\n      },\n      __self: this\n    }, React.createElement(Field, {\n      name: \"nombre\",\n      validate: [requerido, nombre],\n      component: generarInput,\n      label: \"Nombre\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 118\n      },\n      __self: this\n    }), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 119\n      },\n      __self: this\n    }), React.createElement(Field, {\n      name: \"apellido\",\n      validate: [requerido, apellido],\n      component: generarInput,\n      label: \"Apellido\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 120\n      },\n      __self: this\n    }), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 121\n      },\n      __self: this\n    }))), React.createElement(\"div\", {\n      className: \"row\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 124\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"col-sm-5\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 125\n      },\n      __self: this\n    }, React.createElement(\"span\", {\n      style: {\n        fontSize: \"13px\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 126\n      },\n      __self: this\n    }, \"Tipo de documento \")), React.createElement(\"div\", {\n      className: \"col-sm-7\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 128\n      },\n      __self: this\n    }, React.createElement(Field, {\n      name: \"tipoDocumento\",\n      validate: [seleccione],\n      style: {\n        height: \"35px\",\n        fontSize: \"13px\"\n      },\n      className: \"form-control\",\n      component: generarSelect,\n      label: \"Username\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 129\n      },\n      __self: this\n    }, React.createElement(\"option\", {\n      className: \"letra\",\n      style: {\n        height: \"35px\",\n        fontSize: \"13px\"\n      },\n      value: \"0\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 130\n      },\n      __self: this\n    }, \"Seleccione\"), this.props.documentos.map(documento => React.createElement(\"option\", {\n      key: documento.idTipoDocumento,\n      className: \"letra\",\n      style: {\n        height: \"35px\",\n        fontSize: \"13px\"\n      },\n      value: documento.idTipoDocumento,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 131\n      },\n      __self: this\n    }, documento.tipoDocumento))))), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 135\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      className: \"row\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 136\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"col-sm-12\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 137\n      },\n      __self: this\n    }, React.createElement(Field, {\n      name: \"numeroDocumento\",\n      validate: [requerido, documentoIdentificacion],\n      component: generarInput,\n      label: \"Numero de documento\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 138\n      },\n      __self: this\n    }))), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 141\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      className: \"row\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 142\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"col-sm-12\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 143\n      },\n      __self: this\n    }, React.createElement(Field, {\n      name: \"correo\",\n      validate: [requerido, correo],\n      component: generarInput,\n      label: \"Correo electronico\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 144\n      },\n      __self: this\n    }))), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 147\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      className: \"row\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 148\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"col-sm-12\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 149\n      },\n      __self: this\n    }, React.createElement(Field, {\n      name: \"contrasena\",\n      validate: [requerido, contrasena],\n      type: \"password\",\n      component: generarInput,\n      label: \"Contrase\\xF1a\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 150\n      },\n      __self: this\n    }))), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 153\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      className: \"row\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 154\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"col-sm-12\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 155\n      },\n      __self: this\n    }, React.createElement(Field, {\n      name: \"fechaNacimiento\",\n      type: \"date\",\n      validate: [requerido, fechaNacimiento],\n      component: generarInput,\n      label: \"Fecha de nacimiento\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 156\n      },\n      __self: this\n    })))), React.createElement(ModalFooter, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 160\n      },\n      __self: this\n    }, React.createElement(Button, {\n      style: {\n        background: this.props.configuracion.botones,\n        fontSize: \"13px\",\n        fontFamily: \"sans-serif\",\n        textTransform: \"none\"\n      },\n      className: \"btn btn-dark\",\n      variant: \"contained\",\n      startIcon: React.createElement(SaveAltIcon, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 161\n        },\n        __self: this\n      }),\n      type: \"submit\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 161\n      },\n      __self: this\n    }, \"Registrar\"), '', React.createElement(Button, {\n      style: fondoBotonCancelar,\n      className: \"btn btn-dark\",\n      variant: \"contained\",\n      startIcon: React.createElement(CancelIcon, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 162\n        },\n        __self: this\n      }),\n      onClick: this.toggle,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 162\n      },\n      __self: this\n    }, \"Cancelar\"))))), React.createElement(NotificationContainer, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 167\n      },\n      __self: this\n    }));\n  }\n\n}\n\nconst fondoBotonCancelar = {\n  background: \"gray\",\n  fontSize: \"13px\",\n  fontFamily: \"sans-serif\",\n  textTransform: \"none\"\n};\n\nfunction mapStateToProps(state) {\n  return {\n    users: state.user.list,\n    token: state.user.token,\n    documentos: state.user.tiposDocumento,\n    mensaje: state.user.mensajeRegistrar,\n    configuracion: state.conf.configuracion\n  };\n}\n\nlet formulario = reduxForm({\n  form: 'registrarUsuario'\n})(PopUpUsuario);\nexport default withRouter(connect(mapStateToProps, {\n  actionAgregarUsuario,\n  actionConsultarDocumentos,\n  actualizarMensajeRegistrar\n})(formulario));","map":{"version":3,"sources":["C:/Users/jeiso/Desktop/proyectosESCOM/frontend/ESCOM-view/src/SuperAdministrador/componentes/popup/PopUpUsuario.js"],"names":["React","Button","Modal","ModalHeader","ModalBody","ModalFooter","NotificationContainer","NotificationManager","reduxForm","Field","withRouter","generarInput","generarSelect","AddIcon","SaveAltIcon","CancelIcon","actionAgregarUsuario","actionConsultarDocumentos","actualizarMensajeRegistrar","connect","fechaNacimiento","seleccione","nombre","apellido","contrasena","correo","documentoIdentificacion","requerido","PopUpUsuario","Component","constructor","props","handleSubmit","formValues","crypto","require","contrasenaEncryp","createHmac","update","digest","date","Date","usuario","tipoDocumento","numeroDocumento","localStorage","getItem","reset","error","state","modal","toggle","bind","setState","prevState","componentDidUpdate","mensaje","success","history","push","componentWillMount","cargarDocumentos","documentos","map","documento","index","idTipoDocumento","height","fontSize","render","background","configuracion","botones","textTransform","width","fontFamily","fondoBotonCancelar","mapStateToProps","users","user","list","token","tiposDocumento","mensajeRegistrar","conf","formulario","form"],"mappings":"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","sourcesContent":["import React from 'react';\r\n\r\n//estilos\r\nimport 'react-notifications/lib/notifications.css';\r\n\r\n//componentes\r\nimport Button from '@material-ui/core/Button';\r\nimport { Modal, ModalHeader, ModalBody, ModalFooter } from 'reactstrap';\r\nimport { NotificationContainer, NotificationManager } from 'react-notifications';\r\nimport { reduxForm, Field } from 'redux-form';\r\nimport { withRouter } from 'react-router-dom';\r\nimport {generarInput,generarSelect} from '../../utilitario/GenerarInputs.js'\r\nimport AddIcon from '@material-ui/icons/Add';\r\nimport SaveAltIcon from '@material-ui/icons/SaveAlt';\r\nimport CancelIcon from '@material-ui/icons/Cancel';\r\n\r\n//redux\r\nimport { actionAgregarUsuario, actionConsultarDocumentos, actualizarMensajeRegistrar } from '../../actions/actionsUsuario.js'\r\nimport { connect } from 'react-redux';\r\nimport { fechaNacimiento, seleccione, nombre, apellido, contrasena, correo, documentoIdentificacion, requerido } from '../../utilitario/validacionCampos.js';\r\n\r\nclass PopUpUsuario extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      modal: false\r\n    }\r\n    this.toggle = this.toggle.bind(this);\r\n  }\r\n\r\n  toggle() {\r\n    this.setState(prevState => ({\r\n      modal: !prevState.modal\r\n    }));\r\n    this.props.reset();\r\n  }\r\n\r\n\r\n  componentDidUpdate() {\r\n    if (this.props.mensaje !== '') {\r\n      switch (this.props.mensaje) {\r\n        case 'Usuario registrado':\r\n          NotificationManager.success('Usuario registrado correctamente');\r\n          this.props.actualizarMensajeRegistrar('');\r\n          break;\r\n        case 'Sin permiso':\r\n          NotificationManager.error('No tiene los permisos suficientes para registrar un usuario');\r\n          this.props.reset();\r\n          this.props.actualizarMensajeRegistrar('');\r\n          break;\r\n        case 'Ya existen los datos registrados previamente':\r\n          NotificationManager.error('El correo o numero de identificacion ya estan registrados');\r\n          this.props.reset();\r\n          this.props.actualizarMensajeRegistrar('');\r\n          break;\r\n        case 'Servidor fuera de servicio temporalmente':\r\n          NotificationManager.error('Servidor fuera de servicio temporalmente');\r\n          this.props.reset();\r\n          this.props.actualizarMensajeRegistrar('');\r\n          break;\r\n        default:\r\n          this.props.history.push('/');\r\n          break;\r\n      }\r\n    }\r\n  }\r\n\r\n  componentWillMount() {\r\n    this.props.actionConsultarDocumentos(localStorage.getItem('Token'));\r\n  }\r\n\r\n  \r\n  handleSubmit = formValues => {\r\n    try {\r\n      var crypto = require('crypto');\r\n      var contrasenaEncryp = crypto.createHmac('sha256', formValues.correo).update(formValues.contrasena).digest('hex');\r\n      let date = new Date(formValues.fechaNacimiento);\r\n      let usuario = {\r\n        'nombre': formValues.nombre,\r\n        'apellido': formValues.apellido,\r\n        'tipoDocumento': formValues.tipoDocumento,\r\n        'numeroDocumento': formValues.numeroDocumento,\r\n        'correoElectronico': formValues.correo,\r\n        'contrasena': contrasenaEncryp,\r\n        'fechaNacimiento': date,\r\n        'estado': 'Activo'\r\n      };\r\n      this.props.actionAgregarUsuario(usuario, localStorage.getItem('Token'));\r\n      this.props.reset();\r\n    } catch (error) {\r\n      NotificationManager.error('Ingrese todos los datos');\r\n    }\r\n  }\r\n\r\n  cargarDocumentos() {\r\n    return this.props.documentos.map((documento, index) => {\r\n      const { idTipoDocumento, tipoDocumento } = documento\r\n      return (\r\n        <option className=\"letra\" style={{ height: \"35px\", fontSize: \"13px\" }} value={idTipoDocumento}>{tipoDocumento}</option>\r\n      )\r\n    })\r\n  }\r\n\r\n\r\n  render() {\r\n    return (\r\n      <div>\r\n        <Button style={{background:this.props.configuracion.botones,fontSize:\"14px\",textTransform:\"none\"}} startIcon={<AddIcon/>} className=\"btn btn-dark\" variant=\"contained\" onClick={this.toggle}>Registrar usuario</Button>\r\n        <Modal isOpen={this.state.modal}\r\n          toggle={this.toggle}\r\n          style={{ width: \"400px\" }}>\r\n          <ModalHeader toggle={this.toggle} style={{ height: \"50px\", width: \"400px\" }} className=\"center\">Crear usuario</ModalHeader>\r\n          <ModalBody>\r\n            <form onSubmit={this.props.handleSubmit(this.handleSubmit)}>\r\n              <div className=\"contenedor-inputs\">\r\n                <div className=\"row\">\r\n                  <div className=\"col-sm-12\">\r\n                    <Field name=\"nombre\" validate={[requerido, nombre]} component={generarInput} label=\"Nombre\" />\r\n                    <br />\r\n                    <Field name=\"apellido\" validate={[requerido, apellido]} component={generarInput} label=\"Apellido\" />\r\n                    <br />\r\n                  </div>\r\n                </div>\r\n                <div className=\"row\">\r\n                  <div className=\"col-sm-5\">\r\n                    <span style={{fontSize:\"13px\"}}>Tipo de documento </span>\r\n                  </div>\r\n                  <div className=\"col-sm-7\">\r\n                    <Field name=\"tipoDocumento\" validate={[seleccione]} style={{ height: \"35px\", fontSize: \"13px\" }} className=\"form-control\" component={generarSelect} label=\"Username\">\r\n                      <option className=\"letra\" style={{ height: \"35px\", fontSize: \"13px\" }} value=\"0\">Seleccione</option>\r\n                      {this.props.documentos.map(documento => <option key={documento.idTipoDocumento} className=\"letra\" style={{ height: \"35px\", fontSize: \"13px\" }} value={documento.idTipoDocumento}>{documento.tipoDocumento}</option>)}\r\n                    </Field>\r\n                  </div>\r\n                </div>\r\n                <br />\r\n                <div className=\"row\">\r\n                  <div className=\"col-sm-12\">\r\n                    <Field name=\"numeroDocumento\" validate={[requerido, documentoIdentificacion]} component={generarInput} label=\"Numero de documento\" />\r\n                  </div>\r\n                </div>\r\n                <br />\r\n                <div className=\"row\">\r\n                  <div className=\"col-sm-12\">\r\n                    <Field name=\"correo\" validate={[requerido, correo]} component={generarInput} label=\"Correo electronico\" />\r\n                  </div>\r\n                </div>\r\n                <br />\r\n                <div className=\"row\">\r\n                  <div className=\"col-sm-12\">\r\n                    <Field name=\"contrasena\" validate={[requerido, contrasena]} type=\"password\" component={generarInput} label=\"Contraseña\" />\r\n                  </div>\r\n                </div>\r\n                <br />\r\n                <div className=\"row\">\r\n                  <div className=\"col-sm-12\">\r\n                    <Field name=\"fechaNacimiento\" type=\"date\" validate={[requerido, fechaNacimiento]} component={generarInput} label=\"Fecha de nacimiento\" />\r\n                  </div>\r\n                </div>\r\n              </div>\r\n              <ModalFooter>\r\n                <Button style={{background: this.props.configuracion.botones,fontSize: \"13px\",fontFamily: \"sans-serif\",textTransform:\"none\"}} className=\"btn btn-dark\" variant=\"contained\"  startIcon={<SaveAltIcon/>} type=\"submit\">Registrar</Button>{''}\r\n                <Button style={fondoBotonCancelar} className=\"btn btn-dark\" variant=\"contained\" startIcon={<CancelIcon/>} onClick={this.toggle}>Cancelar</Button>\r\n              </ModalFooter>\r\n            </form>\r\n          </ModalBody>\r\n        </Modal>\r\n        <NotificationContainer />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\n\r\nconst fondoBotonCancelar = {\r\n  background: \"gray\",\r\n  fontSize: \"13px\",\r\n  fontFamily: \"sans-serif\",\r\n  textTransform:\"none\"\r\n}\r\n\r\nfunction mapStateToProps(state) {\r\n  return {\r\n    users: state.user.list,\r\n    token: state.user.token,\r\n    documentos: state.user.tiposDocumento,\r\n    mensaje: state.user.mensajeRegistrar,\r\n    configuracion:state.conf.configuracion\r\n  }\r\n}\r\n\r\nlet formulario = reduxForm({\r\n  form: 'registrarUsuario'\r\n})(PopUpUsuario)\r\n\r\nexport default withRouter(connect(mapStateToProps, { actionAgregarUsuario, actionConsultarDocumentos, actualizarMensajeRegistrar })(formulario));\r\n"]},"metadata":{},"sourceType":"module"}