{"ast":null,"code":"import axios from 'axios';\nimport { desencriptar } from '../../../SuperAdministrador/componentes/general/Encriptar.js';\nexport const GET_LIST_ACTIVITIES = 'GET_LIST_ACTIVITIES';\nexport const GET_ACTIVITY_ID = 'SHOW_ACTIVITY_ID';\nexport const ADD_ACTIVITY = 'ADD_ACTIVITY';\nexport const EDIT_ACTIVITY = 'EDIT_ACTIVITY';\nexport const DELETE_ACTIVITY = 'DELETE_ACTIVITY';\nexport const ADD_INFORMATION = 'ADD_INFORMATION';\nexport const GET_ALL_INFORMATION = 'GET_ALL_INFORMATION';\nexport const ADD_MESSAGE_EDIT = 'ADD_MESSAGE_EDIT';\nexport const ADD_MESSAGE_ADD = 'ADD_MESSAGE_ADD';\nexport const ADD_MESSAGE_DELETE = 'ADD_MESSAGE_DELETE';\nexport const ADD_MESSAGE = 'ADD_MESSAGE';\nconst URL_BASE = 'http://localhost:9090/proyectosESCOM-web';\nconst PERMIT_LIST_ACTIVITIES = 'MD_Lista actividades';\nconst PERMIT_GET_ACTIVITY = 'MD_Obtiene actividad';\nconst PERMIT_ADD_ACTIVITY = 'MD_Agregar actividad';\nconst PERMIT_EDIT_ACTIVITY = 'MD_Editar actividad';\nconst PERMIT_DELETE_ACTIVITY = 'MD_Eliminar actividad';\nconst PERMIT_ADD_INFORMATION = 'MD_Agregar informacion';\nconst PERMIT_ALL_INFORMATION = 'MD_toda informacion';\nexport function addMessageEdit(mensaje) {\n  return (dispatch, getState) => {\n    dispatch({\n      type: ADD_MESSAGE_EDIT,\n      mensaje: mensaje\n    });\n  };\n}\nexport function addMessageAdd(mensaje) {\n  return (dispatch, getState) => {\n    dispatch({\n      type: ADD_MESSAGE_ADD,\n      mensaje: mensaje\n    });\n  };\n}\nexport function addMessageDelete(mensaje) {\n  return (dispatch, getState) => {\n    dispatch({\n      type: ADD_MESSAGE_DELETE,\n      mensaje: mensaje\n    });\n  };\n} //MD_Lista actividades\n\nexport function getListActivities(token, id) {\n  const headers = {\n    'Content-Type': 'application/json',\n    'TokenAuto': desencriptar(token),\n    'Permiso': PERMIT_LIST_ACTIVITIES\n  };\n  return (dispatch, getState) => {\n    axios.get(`${URL_BASE}/api/activity/list/${id}`, {\n      headers: headers\n    }).then(response => {\n      dispatch({\n        type: GET_LIST_ACTIVITIES,\n        payload: response.data\n      });\n    }).catch(error => {\n      if (error.request.response === '') {\n        dispatch({\n          type: ADD_MESSAGE,\n          payload: 'error server'\n        });\n      } else {\n        if (error.request) {\n          dispatch({\n            type: ADD_MESSAGE,\n            payload: 'error server'\n          });\n        }\n      }\n    });\n  };\n} //MD_Obtiene actividad\n\nexport function getActivityId(token, id) {\n  const headers = {\n    'Content-Type': 'application/json',\n    'TokenAuto': desencriptar(token),\n    'Permiso': PERMIT_GET_ACTIVITY\n  };\n  return (dispatch, getState) => {\n    axios.get(`${URL_BASE}/api/activity/getActivity/${id}`, {\n      headers: headers\n    }).then(response => {\n      dispatch({\n        type: GET_ACTIVITY_ID,\n        payload: response.data\n      });\n    }).catch(error => {\n      if (error.request.response === '') {\n        dispatch({\n          type: ADD_MESSAGE,\n          payload: 'error server'\n        });\n      } else {\n        if (error.request) {\n          dispatch({\n            type: ADD_MESSAGE,\n            payload: 'error server'\n          });\n        }\n      }\n    });\n  };\n} //MD_Agregar actividad\n\nexport function addActivity(token, activityN) {\n  const headers = {\n    'Content-Type': 'application/json',\n    'TokenAuto': desencriptar(token),\n    'Permiso': PERMIT_ADD_ACTIVITY\n  };\n  activityN.requestData = {\n    'ip': localStorage.getItem('Ip'),\n    'token': desencriptar(token),\n    'operacion': PERMIT_ADD_ACTIVITY\n  };\n  return (dispatch, getState) => {\n    axios.post(`${URL_BASE}/api/activity/add`, activityN, {\n      headers: headers\n    }).then(response => {\n      dispatch({\n        type: ADD_ACTIVITY,\n        payload: response.data.data\n      });\n    }).catch(error => {\n      if (error.request.response === '') {\n        dispatch({\n          type: ADD_MESSAGE_ADD,\n          payload: 'error server'\n        });\n      } else {\n        if (error.request) {\n          dispatch({\n            type: ADD_MESSAGE_ADD,\n            payload: 'error server'\n          });\n        }\n      }\n    });\n  };\n} //MD_Editar actividad\n\nexport function editActivity(token, activityE) {\n  const headers = {\n    'Content-Type': 'application/json',\n    'TokenAuto': desencriptar(token),\n    'Permiso': PERMIT_EDIT_ACTIVITY\n  };\n  activityE.requestData = {\n    'ip': localStorage.getItem('Ip'),\n    'token': desencriptar(token),\n    'operacion': PERMIT_EDIT_ACTIVITY\n  };\n  return (dispatch, getState) => {\n    axios.put(`${URL_BASE}/api/activity/edit`, activityE, {\n      headers: headers\n    }).then(response => {\n      console.log(response.data);\n      dispatch({\n        type: EDIT_ACTIVITY,\n        payload: response.data.data\n      });\n    }).catch(error => {\n      if (error.request.response === '') {\n        dispatch({\n          type: ADD_MESSAGE_EDIT,\n          payload: 'error server'\n        });\n      } else {\n        if (error.request) {\n          dispatch({\n            type: ADD_MESSAGE_EDIT,\n            payload: 'error server'\n          });\n        }\n      }\n    });\n  };\n} //MD_Eliminar actividad\n\nexport function deleteActivity(token, id) {\n  const headers = {\n    'Content-Type': 'application/json',\n    'TokenAuto': desencriptar(token),\n    'Permiso': PERMIT_DELETE_ACTIVITY\n  };\n  const requestData = {\n    'ip': localStorage.getItem('Ip'),\n    'token': desencriptar(token),\n    'operacion': PERMIT_DELETE_ACTIVITY\n  };\n  return (dispatch, getState) => {\n    axios.delete(`${URL_BASE}/api/activity/delete/${id}`, requestData, {\n      headers: headers\n    }).then(response => {\n      dispatch({\n        type: DELETE_ACTIVITY,\n        payload: response.data.data\n      });\n    }).catch(error => {\n      if (error.request.response === '') {\n        dispatch({\n          type: ADD_MESSAGE_DELETE,\n          payload: 'error server'\n        });\n      } else {\n        if (error.request) {\n          dispatch({\n            type: ADD_MESSAGE_DELETE,\n            payload: 'error server'\n          });\n        }\n      }\n    });\n  };\n} //MD_Agregar informacion\n\nexport function addInformation(token, info) {\n  const headers = {\n    'Content-Type': 'application/json',\n    'TokenAuto': desencriptar(token),\n    'Permiso': PERMIT_ADD_INFORMATION\n  };\n  return (dispatch, getState) => {\n    axios.put(`${URL_BASE}/api/activity/addInformation`, info, {\n      headers: headers\n    }).then(response => {\n      dispatch({\n        type: ADD_INFORMATION,\n        payload: response.data\n      });\n    }).catch(error => {\n      if (error.request.response === '') {\n        dispatch({\n          type: ADD_MESSAGE,\n          payload: 'error server'\n        });\n      } else {\n        if (error.request) {\n          dispatch({\n            type: ADD_MESSAGE,\n            payload: 'error server'\n          });\n        }\n      }\n    });\n  };\n} //MD_toda informacion\n\nexport function getAllInformation(token, id) {\n  const headers = {\n    'Content-Type': 'application/json',\n    'TokenAuto': desencriptar(token),\n    'Permiso': PERMIT_ALL_INFORMATION\n  };\n  return (dispatch, getState) => {\n    axios.get(`${URL_BASE}/api/activity/allInformation/${id}`, {\n      headers: headers\n    }).then(response => {\n      dispatch({\n        type: GET_ALL_INFORMATION,\n        payload: response.data\n      });\n    }).catch(error => {\n      if (error.request.response === '') {\n        dispatch({\n          type: ADD_MESSAGE,\n          payload: 'error server'\n        });\n      } else {\n        if (error.request) {\n          dispatch({\n            type: ADD_MESSAGE,\n            payload: 'error server'\n          });\n        }\n      }\n    });\n  };\n}","map":{"version":3,"sources":["C:/Users/hashy/Desktop/proyectosESCOM/frontend/ESCOM-view/src/ModuloDocumental/redux/actions/activityA.js"],"names":["axios","desencriptar","GET_LIST_ACTIVITIES","GET_ACTIVITY_ID","ADD_ACTIVITY","EDIT_ACTIVITY","DELETE_ACTIVITY","ADD_INFORMATION","GET_ALL_INFORMATION","ADD_MESSAGE_EDIT","ADD_MESSAGE_ADD","ADD_MESSAGE_DELETE","ADD_MESSAGE","URL_BASE","PERMIT_LIST_ACTIVITIES","PERMIT_GET_ACTIVITY","PERMIT_ADD_ACTIVITY","PERMIT_EDIT_ACTIVITY","PERMIT_DELETE_ACTIVITY","PERMIT_ADD_INFORMATION","PERMIT_ALL_INFORMATION","addMessageEdit","mensaje","dispatch","getState","type","addMessageAdd","addMessageDelete","getListActivities","token","id","headers","get","then","response","payload","data","catch","error","request","getActivityId","addActivity","activityN","requestData","localStorage","getItem","post","editActivity","activityE","put","console","log","deleteActivity","delete","addInformation","info","getAllInformation"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AAEA,SAASC,YAAT,QAA6B,8DAA7B;AAEA,OAAO,MAAMC,mBAAmB,GAAG,qBAA5B;AACP,OAAO,MAAMC,eAAe,GAAG,kBAAxB;AACP,OAAO,MAAMC,YAAY,GAAG,cAArB;AACP,OAAO,MAAMC,aAAa,GAAG,eAAtB;AACP,OAAO,MAAMC,eAAe,GAAG,iBAAxB;AAEP,OAAO,MAAMC,eAAe,GAAG,iBAAxB;AACP,OAAO,MAAMC,mBAAmB,GAAG,qBAA5B;AAEP,OAAO,MAAMC,gBAAgB,GAAG,kBAAzB;AACP,OAAO,MAAMC,eAAe,GAAG,iBAAxB;AACP,OAAO,MAAMC,kBAAkB,GAAG,oBAA3B;AACP,OAAO,MAAMC,WAAW,GAAG,aAApB;AAEP,MAAMC,QAAQ,GAAG,0CAAjB;AACA,MAAMC,sBAAsB,GAAG,sBAA/B;AACA,MAAMC,mBAAmB,GAAG,sBAA5B;AACA,MAAMC,mBAAmB,GAAG,sBAA5B;AACA,MAAMC,oBAAoB,GAAG,qBAA7B;AACA,MAAMC,sBAAsB,GAAG,uBAA/B;AACA,MAAMC,sBAAsB,GAAG,wBAA/B;AACA,MAAMC,sBAAsB,GAAG,qBAA/B;AAEA,OAAO,SAASC,cAAT,CAAwBC,OAAxB,EAAiC;AACpC,SAAO,CAACC,QAAD,EAAWC,QAAX,KAAwB;AAC3BD,IAAAA,QAAQ,CAAC;AACLE,MAAAA,IAAI,EAAEhB,gBADD;AAELa,MAAAA,OAAO,EAAEA;AAFJ,KAAD,CAAR;AAIH,GALD;AAMH;AAED,OAAO,SAASI,aAAT,CAAuBJ,OAAvB,EAAgC;AACnC,SAAO,CAACC,QAAD,EAAWC,QAAX,KAAwB;AAC3BD,IAAAA,QAAQ,CAAC;AACLE,MAAAA,IAAI,EAAEf,eADD;AAELY,MAAAA,OAAO,EAAEA;AAFJ,KAAD,CAAR;AAIH,GALD;AAMH;AAED,OAAO,SAASK,gBAAT,CAA0BL,OAA1B,EAAmC;AACtC,SAAO,CAACC,QAAD,EAAWC,QAAX,KAAwB;AAC3BD,IAAAA,QAAQ,CAAC;AACLE,MAAAA,IAAI,EAAEd,kBADD;AAELW,MAAAA,OAAO,EAAEA;AAFJ,KAAD,CAAR;AAIH,GALD;AAMH,C,CAED;;AACA,OAAO,SAASM,iBAAT,CAA2BC,KAA3B,EAAkCC,EAAlC,EAAsC;AACzC,QAAMC,OAAO,GAAG;AACZ,oBAAgB,kBADJ;AAEZ,iBAAa9B,YAAY,CAAC4B,KAAD,CAFb;AAGZ,eAAWf;AAHC,GAAhB;AAMA,SAAO,CAACS,QAAD,EAAWC,QAAX,KAAwB;AAC3BxB,IAAAA,KAAK,CAACgC,GAAN,CAAW,GAAEnB,QAAS,sBAAqBiB,EAAG,EAA9C,EAAiD;AAAEC,MAAAA,OAAO,EAAEA;AAAX,KAAjD,EACKE,IADL,CACUC,QAAQ,IAAI;AACdX,MAAAA,QAAQ,CAAC;AACLE,QAAAA,IAAI,EAAEvB,mBADD;AAELiC,QAAAA,OAAO,EAAED,QAAQ,CAACE;AAFb,OAAD,CAAR;AAIH,KANL,EAMOC,KANP,CAMaC,KAAK,IAAI;AACd,UAAIA,KAAK,CAACC,OAAN,CAAcL,QAAd,KAA2B,EAA/B,EAAmC;AAC/BX,QAAAA,QAAQ,CAAC;AACLE,UAAAA,IAAI,EAAEb,WADD;AAELuB,UAAAA,OAAO,EAAE;AAFJ,SAAD,CAAR;AAIH,OALD,MAKO;AACH,YAAIG,KAAK,CAACC,OAAV,EAAmB;AACfhB,UAAAA,QAAQ,CAAC;AACLE,YAAAA,IAAI,EAAEb,WADD;AAELuB,YAAAA,OAAO,EAAE;AAFJ,WAAD,CAAR;AAIH;AACJ;AAEJ,KArBL;AAsBH,GAvBD;AAwBH,C,CAED;;AACA,OAAO,SAASK,aAAT,CAAuBX,KAAvB,EAA8BC,EAA9B,EAAkC;AACrC,QAAMC,OAAO,GAAG;AACZ,oBAAgB,kBADJ;AAEZ,iBAAa9B,YAAY,CAAC4B,KAAD,CAFb;AAGZ,eAAWd;AAHC,GAAhB;AAKA,SAAO,CAACQ,QAAD,EAAWC,QAAX,KAAwB;AAC3BxB,IAAAA,KAAK,CAACgC,GAAN,CAAW,GAAEnB,QAAS,6BAA4BiB,EAAG,EAArD,EAAwD;AAAEC,MAAAA,OAAO,EAAEA;AAAX,KAAxD,EACKE,IADL,CACUC,QAAQ,IAAI;AACdX,MAAAA,QAAQ,CAAC;AACLE,QAAAA,IAAI,EAAEtB,eADD;AAELgC,QAAAA,OAAO,EAAED,QAAQ,CAACE;AAFb,OAAD,CAAR;AAIH,KANL,EAMOC,KANP,CAMaC,KAAK,IAAI;AACd,UAAIA,KAAK,CAACC,OAAN,CAAcL,QAAd,KAA2B,EAA/B,EAAmC;AAC/BX,QAAAA,QAAQ,CAAC;AACLE,UAAAA,IAAI,EAAEb,WADD;AAELuB,UAAAA,OAAO,EAAE;AAFJ,SAAD,CAAR;AAIH,OALD,MAKO;AACH,YAAIG,KAAK,CAACC,OAAV,EAAmB;AACfhB,UAAAA,QAAQ,CAAC;AACLE,YAAAA,IAAI,EAAEb,WADD;AAELuB,YAAAA,OAAO,EAAE;AAFJ,WAAD,CAAR;AAIH;AACJ;AAEJ,KArBL;AAsBH,GAvBD;AAwBH,C,CAED;;AACA,OAAO,SAASM,WAAT,CAAqBZ,KAArB,EAA4Ba,SAA5B,EAAuC;AAC1C,QAAMX,OAAO,GAAG;AACZ,oBAAgB,kBADJ;AAEZ,iBAAa9B,YAAY,CAAC4B,KAAD,CAFb;AAGZ,eAAWb;AAHC,GAAhB;AAKA0B,EAAAA,SAAS,CAACC,WAAV,GAAwB;AACpB,UAAMC,YAAY,CAACC,OAAb,CAAqB,IAArB,CADc;AAEpB,aAAS5C,YAAY,CAAC4B,KAAD,CAFD;AAGpB,iBAAab;AAHO,GAAxB;AAKA,SAAO,CAACO,QAAD,EAAWC,QAAX,KAAwB;AAC3BxB,IAAAA,KAAK,CAAC8C,IAAN,CAAY,GAAEjC,QAAS,mBAAvB,EAA2C6B,SAA3C,EAAsD;AAAEX,MAAAA,OAAO,EAAEA;AAAX,KAAtD,EACKE,IADL,CACUC,QAAQ,IAAI;AACdX,MAAAA,QAAQ,CAAC;AACLE,QAAAA,IAAI,EAAErB,YADD;AAEL+B,QAAAA,OAAO,EAAED,QAAQ,CAACE,IAAT,CAAcA;AAFlB,OAAD,CAAR;AAIH,KANL,EAMOC,KANP,CAMaC,KAAK,IAAI;AACd,UAAIA,KAAK,CAACC,OAAN,CAAcL,QAAd,KAA2B,EAA/B,EAAmC;AAC/BX,QAAAA,QAAQ,CAAC;AACLE,UAAAA,IAAI,EAAEf,eADD;AAELyB,UAAAA,OAAO,EAAE;AAFJ,SAAD,CAAR;AAIH,OALD,MAKO;AACH,YAAIG,KAAK,CAACC,OAAV,EAAmB;AACfhB,UAAAA,QAAQ,CAAC;AACLE,YAAAA,IAAI,EAAEf,eADD;AAELyB,YAAAA,OAAO,EAAE;AAFJ,WAAD,CAAR;AAIH;AACJ;AAEJ,KArBL;AAsBH,GAvBD;AAwBH,C,CAED;;AACA,OAAO,SAASY,YAAT,CAAsBlB,KAAtB,EAA6BmB,SAA7B,EAAwC;AAC3C,QAAMjB,OAAO,GAAG;AACZ,oBAAgB,kBADJ;AAEZ,iBAAa9B,YAAY,CAAC4B,KAAD,CAFb;AAGZ,eAAWZ;AAHC,GAAhB;AAKA+B,EAAAA,SAAS,CAACL,WAAV,GAAwB;AACpB,UAAMC,YAAY,CAACC,OAAb,CAAqB,IAArB,CADc;AAEpB,aAAS5C,YAAY,CAAC4B,KAAD,CAFD;AAGpB,iBAAaZ;AAHO,GAAxB;AAKA,SAAO,CAACM,QAAD,EAAWC,QAAX,KAAwB;AAC3BxB,IAAAA,KAAK,CAACiD,GAAN,CAAW,GAAEpC,QAAS,oBAAtB,EAA2CmC,SAA3C,EAAsD;AAAEjB,MAAAA,OAAO,EAAEA;AAAX,KAAtD,EACKE,IADL,CACUC,QAAQ,IAAI;AACdgB,MAAAA,OAAO,CAACC,GAAR,CAAYjB,QAAQ,CAACE,IAArB;AACAb,MAAAA,QAAQ,CAAC;AACLE,QAAAA,IAAI,EAAEpB,aADD;AAEL8B,QAAAA,OAAO,EAAED,QAAQ,CAACE,IAAT,CAAcA;AAFlB,OAAD,CAAR;AAIH,KAPL,EAOOC,KAPP,CAOaC,KAAK,IAAI;AACd,UAAIA,KAAK,CAACC,OAAN,CAAcL,QAAd,KAA2B,EAA/B,EAAmC;AAC/BX,QAAAA,QAAQ,CAAC;AACLE,UAAAA,IAAI,EAAEhB,gBADD;AAEL0B,UAAAA,OAAO,EAAE;AAFJ,SAAD,CAAR;AAIH,OALD,MAKO;AACH,YAAIG,KAAK,CAACC,OAAV,EAAmB;AACfhB,UAAAA,QAAQ,CAAC;AACLE,YAAAA,IAAI,EAAEhB,gBADD;AAEL0B,YAAAA,OAAO,EAAE;AAFJ,WAAD,CAAR;AAIH;AACJ;AAEJ,KAtBL;AAuBH,GAxBD;AAyBH,C,CAED;;AACA,OAAO,SAASiB,cAAT,CAAwBvB,KAAxB,EAA+BC,EAA/B,EAAmC;AACtC,QAAMC,OAAO,GAAG;AACZ,oBAAgB,kBADJ;AAEZ,iBAAa9B,YAAY,CAAC4B,KAAD,CAFb;AAGZ,eAAWX;AAHC,GAAhB;AAKA,QAAMyB,WAAW,GAAG;AAChB,UAAMC,YAAY,CAACC,OAAb,CAAqB,IAArB,CADU;AAEhB,aAAS5C,YAAY,CAAC4B,KAAD,CAFL;AAGhB,iBAAaX;AAHG,GAApB;AAKA,SAAO,CAACK,QAAD,EAAWC,QAAX,KAAwB;AAC3BxB,IAAAA,KAAK,CAACqD,MAAN,CAAc,GAAExC,QAAS,wBAAuBiB,EAAG,EAAnD,EAAqDa,WAArD,EAAkE;AAAEZ,MAAAA,OAAO,EAAEA;AAAX,KAAlE,EACKE,IADL,CACUC,QAAQ,IAAI;AACdX,MAAAA,QAAQ,CAAC;AACLE,QAAAA,IAAI,EAAEnB,eADD;AAEL6B,QAAAA,OAAO,EAAED,QAAQ,CAACE,IAAT,CAAcA;AAFlB,OAAD,CAAR;AAIH,KANL,EAMOC,KANP,CAMaC,KAAK,IAAI;AACd,UAAIA,KAAK,CAACC,OAAN,CAAcL,QAAd,KAA2B,EAA/B,EAAmC;AAC/BX,QAAAA,QAAQ,CAAC;AACLE,UAAAA,IAAI,EAAEd,kBADD;AAELwB,UAAAA,OAAO,EAAE;AAFJ,SAAD,CAAR;AAIH,OALD,MAKO;AACH,YAAIG,KAAK,CAACC,OAAV,EAAmB;AACfhB,UAAAA,QAAQ,CAAC;AACLE,YAAAA,IAAI,EAAEd,kBADD;AAELwB,YAAAA,OAAO,EAAE;AAFJ,WAAD,CAAR;AAIH;AACJ;AAEJ,KArBL;AAsBH,GAvBD;AAwBH,C,CAED;;AACA,OAAO,SAASmB,cAAT,CAAwBzB,KAAxB,EAA+B0B,IAA/B,EAAqC;AACxC,QAAMxB,OAAO,GAAG;AACZ,oBAAgB,kBADJ;AAEZ,iBAAa9B,YAAY,CAAC4B,KAAD,CAFb;AAGZ,eAAWV;AAHC,GAAhB;AAKA,SAAO,CAACI,QAAD,EAAWC,QAAX,KAAwB;AAC3BxB,IAAAA,KAAK,CAACiD,GAAN,CAAW,GAAEpC,QAAS,8BAAtB,EAAqD0C,IAArD,EAA2D;AAAExB,MAAAA,OAAO,EAAEA;AAAX,KAA3D,EACKE,IADL,CACUC,QAAQ,IAAI;AACdX,MAAAA,QAAQ,CAAC;AACLE,QAAAA,IAAI,EAAElB,eADD;AAEL4B,QAAAA,OAAO,EAAED,QAAQ,CAACE;AAFb,OAAD,CAAR;AAIH,KANL,EAMOC,KANP,CAMaC,KAAK,IAAI;AACd,UAAIA,KAAK,CAACC,OAAN,CAAcL,QAAd,KAA2B,EAA/B,EAAmC;AAC/BX,QAAAA,QAAQ,CAAC;AACLE,UAAAA,IAAI,EAAEb,WADD;AAELuB,UAAAA,OAAO,EAAE;AAFJ,SAAD,CAAR;AAIH,OALD,MAKO;AACH,YAAIG,KAAK,CAACC,OAAV,EAAmB;AACfhB,UAAAA,QAAQ,CAAC;AACLE,YAAAA,IAAI,EAAEb,WADD;AAELuB,YAAAA,OAAO,EAAE;AAFJ,WAAD,CAAR;AAIH;AACJ;AAEJ,KArBL;AAsBH,GAvBD;AAwBH,C,CAED;;AACA,OAAO,SAASqB,iBAAT,CAA2B3B,KAA3B,EAAkCC,EAAlC,EAAsC;AACzC,QAAMC,OAAO,GAAG;AACZ,oBAAgB,kBADJ;AAEZ,iBAAa9B,YAAY,CAAC4B,KAAD,CAFb;AAGZ,eAAWT;AAHC,GAAhB;AAKA,SAAO,CAACG,QAAD,EAAWC,QAAX,KAAwB;AAC3BxB,IAAAA,KAAK,CAACgC,GAAN,CAAW,GAAEnB,QAAS,gCAA+BiB,EAAG,EAAxD,EAA2D;AAAEC,MAAAA,OAAO,EAAEA;AAAX,KAA3D,EACKE,IADL,CACUC,QAAQ,IAAI;AACdX,MAAAA,QAAQ,CAAC;AACLE,QAAAA,IAAI,EAAEjB,mBADD;AAEL2B,QAAAA,OAAO,EAAED,QAAQ,CAACE;AAFb,OAAD,CAAR;AAIH,KANL,EAMOC,KANP,CAMaC,KAAK,IAAI;AACd,UAAIA,KAAK,CAACC,OAAN,CAAcL,QAAd,KAA2B,EAA/B,EAAmC;AAC/BX,QAAAA,QAAQ,CAAC;AACLE,UAAAA,IAAI,EAAEb,WADD;AAELuB,UAAAA,OAAO,EAAE;AAFJ,SAAD,CAAR;AAIH,OALD,MAKO;AACH,YAAIG,KAAK,CAACC,OAAV,EAAmB;AACfhB,UAAAA,QAAQ,CAAC;AACLE,YAAAA,IAAI,EAAEb,WADD;AAELuB,YAAAA,OAAO,EAAE;AAFJ,WAAD,CAAR;AAIH;AACJ;AAEJ,KArBL;AAsBH,GAvBD;AAwBH","sourcesContent":["import axios from 'axios'\r\n\r\nimport { desencriptar } from '../../../SuperAdministrador/componentes/general/Encriptar.js';\r\n\r\nexport const GET_LIST_ACTIVITIES = 'GET_LIST_ACTIVITIES';\r\nexport const GET_ACTIVITY_ID = 'SHOW_ACTIVITY_ID';\r\nexport const ADD_ACTIVITY = 'ADD_ACTIVITY';\r\nexport const EDIT_ACTIVITY = 'EDIT_ACTIVITY';\r\nexport const DELETE_ACTIVITY = 'DELETE_ACTIVITY';\r\n\r\nexport const ADD_INFORMATION = 'ADD_INFORMATION';\r\nexport const GET_ALL_INFORMATION = 'GET_ALL_INFORMATION';\r\n\r\nexport const ADD_MESSAGE_EDIT = 'ADD_MESSAGE_EDIT';\r\nexport const ADD_MESSAGE_ADD = 'ADD_MESSAGE_ADD';\r\nexport const ADD_MESSAGE_DELETE = 'ADD_MESSAGE_DELETE';\r\nexport const ADD_MESSAGE = 'ADD_MESSAGE';\r\n\r\nconst URL_BASE = 'http://localhost:9090/proyectosESCOM-web';\r\nconst PERMIT_LIST_ACTIVITIES = 'MD_Lista actividades';\r\nconst PERMIT_GET_ACTIVITY = 'MD_Obtiene actividad';\r\nconst PERMIT_ADD_ACTIVITY = 'MD_Agregar actividad';\r\nconst PERMIT_EDIT_ACTIVITY = 'MD_Editar actividad';\r\nconst PERMIT_DELETE_ACTIVITY = 'MD_Eliminar actividad';\r\nconst PERMIT_ADD_INFORMATION = 'MD_Agregar informacion';\r\nconst PERMIT_ALL_INFORMATION = 'MD_toda informacion';\r\n\r\nexport function addMessageEdit(mensaje) {\r\n    return (dispatch, getState) => {\r\n        dispatch({\r\n            type: ADD_MESSAGE_EDIT,\r\n            mensaje: mensaje\r\n        });\r\n    };\r\n}\r\n\r\nexport function addMessageAdd(mensaje) {\r\n    return (dispatch, getState) => {\r\n        dispatch({\r\n            type: ADD_MESSAGE_ADD,\r\n            mensaje: mensaje\r\n        });\r\n    };\r\n}\r\n\r\nexport function addMessageDelete(mensaje) {\r\n    return (dispatch, getState) => {\r\n        dispatch({\r\n            type: ADD_MESSAGE_DELETE,\r\n            mensaje: mensaje\r\n        });\r\n    };\r\n}\r\n\r\n//MD_Lista actividades\r\nexport function getListActivities(token, id) {\r\n    const headers = {\r\n        'Content-Type': 'application/json',\r\n        'TokenAuto': desencriptar(token),\r\n        'Permiso': PERMIT_LIST_ACTIVITIES\r\n    }\r\n    \r\n    return (dispatch, getState) => {\r\n        axios.get(`${URL_BASE}/api/activity/list/${id}`, { headers: headers })\r\n            .then(response => {\r\n                dispatch({\r\n                    type: GET_LIST_ACTIVITIES,\r\n                    payload: response.data\r\n                });\r\n            }).catch(error => {\r\n                if (error.request.response === '') {\r\n                    dispatch({\r\n                        type: ADD_MESSAGE,\r\n                        payload: 'error server'\r\n                    });\r\n                } else {\r\n                    if (error.request) {\r\n                        dispatch({\r\n                            type: ADD_MESSAGE,\r\n                            payload: 'error server'\r\n                        });\r\n                    }\r\n                }\r\n\r\n            });\r\n    }\r\n}\r\n\r\n//MD_Obtiene actividad\r\nexport function getActivityId(token, id) {\r\n    const headers = {\r\n        'Content-Type': 'application/json',\r\n        'TokenAuto': desencriptar(token),\r\n        'Permiso': PERMIT_GET_ACTIVITY\r\n    }\r\n    return (dispatch, getState) => {\r\n        axios.get(`${URL_BASE}/api/activity/getActivity/${id}`, { headers: headers })\r\n            .then(response => {\r\n                dispatch({\r\n                    type: GET_ACTIVITY_ID,\r\n                    payload: response.data\r\n                });\r\n            }).catch(error => {\r\n                if (error.request.response === '') {\r\n                    dispatch({\r\n                        type: ADD_MESSAGE,\r\n                        payload: 'error server'\r\n                    });\r\n                } else {\r\n                    if (error.request) {\r\n                        dispatch({\r\n                            type: ADD_MESSAGE,\r\n                            payload: 'error server'\r\n                        });\r\n                    }\r\n                }\r\n\r\n            });\r\n    }\r\n}\r\n\r\n//MD_Agregar actividad\r\nexport function addActivity(token, activityN) {\r\n    const headers = {\r\n        'Content-Type': 'application/json',\r\n        'TokenAuto': desencriptar(token),\r\n        'Permiso': PERMIT_ADD_ACTIVITY\r\n    }\r\n    activityN.requestData = {\r\n        'ip': localStorage.getItem('Ip'),\r\n        'token': desencriptar(token),\r\n        'operacion': PERMIT_ADD_ACTIVITY\r\n    };\r\n    return (dispatch, getState) => {\r\n        axios.post(`${URL_BASE}/api/activity/add`, activityN, { headers: headers })\r\n            .then(response => {\r\n                dispatch({\r\n                    type: ADD_ACTIVITY,\r\n                    payload: response.data.data\r\n                });\r\n            }).catch(error => {\r\n                if (error.request.response === '') {\r\n                    dispatch({\r\n                        type: ADD_MESSAGE_ADD,\r\n                        payload: 'error server'\r\n                    });\r\n                } else {\r\n                    if (error.request) {\r\n                        dispatch({\r\n                            type: ADD_MESSAGE_ADD,\r\n                            payload: 'error server'\r\n                        });\r\n                    }\r\n                }\r\n\r\n            });\r\n    }\r\n}\r\n\r\n//MD_Editar actividad\r\nexport function editActivity(token, activityE) {\r\n    const headers = {\r\n        'Content-Type': 'application/json',\r\n        'TokenAuto': desencriptar(token),\r\n        'Permiso': PERMIT_EDIT_ACTIVITY\r\n    }\r\n    activityE.requestData = {\r\n        'ip': localStorage.getItem('Ip'),\r\n        'token': desencriptar(token),\r\n        'operacion': PERMIT_EDIT_ACTIVITY\r\n    };\r\n    return (dispatch, getState) => {\r\n        axios.put(`${URL_BASE}/api/activity/edit`, activityE, { headers: headers })\r\n            .then(response => {\r\n                console.log(response.data)\r\n                dispatch({\r\n                    type: EDIT_ACTIVITY,\r\n                    payload: response.data.data\r\n                });\r\n            }).catch(error => {\r\n                if (error.request.response === '') {\r\n                    dispatch({\r\n                        type: ADD_MESSAGE_EDIT,\r\n                        payload: 'error server'\r\n                    });\r\n                } else {\r\n                    if (error.request) {\r\n                        dispatch({\r\n                            type: ADD_MESSAGE_EDIT,\r\n                            payload: 'error server'\r\n                        });\r\n                    }\r\n                }\r\n\r\n            });\r\n    }\r\n}\r\n\r\n//MD_Eliminar actividad\r\nexport function deleteActivity(token, id) {\r\n    const headers = {\r\n        'Content-Type': 'application/json',\r\n        'TokenAuto': desencriptar(token),\r\n        'Permiso': PERMIT_DELETE_ACTIVITY\r\n    }\r\n    const requestData = {\r\n        'ip': localStorage.getItem('Ip'),\r\n        'token': desencriptar(token),\r\n        'operacion': PERMIT_DELETE_ACTIVITY\r\n    };\r\n    return (dispatch, getState) => {\r\n        axios.delete(`${URL_BASE}/api/activity/delete/${id}`,requestData, { headers: headers })\r\n            .then(response => {\r\n                dispatch({\r\n                    type: DELETE_ACTIVITY,\r\n                    payload: response.data.data\r\n                });\r\n            }).catch(error => {\r\n                if (error.request.response === '') {\r\n                    dispatch({\r\n                        type: ADD_MESSAGE_DELETE,\r\n                        payload: 'error server'\r\n                    });\r\n                } else {\r\n                    if (error.request) {\r\n                        dispatch({\r\n                            type: ADD_MESSAGE_DELETE,\r\n                            payload: 'error server'\r\n                        });\r\n                    }\r\n                }\r\n\r\n            });\r\n    }\r\n}\r\n\r\n//MD_Agregar informacion\r\nexport function addInformation(token, info) {\r\n    const headers = {\r\n        'Content-Type': 'application/json',\r\n        'TokenAuto': desencriptar(token),\r\n        'Permiso': PERMIT_ADD_INFORMATION\r\n    }\r\n    return (dispatch, getState) => {\r\n        axios.put(`${URL_BASE}/api/activity/addInformation`, info, { headers: headers })\r\n            .then(response => {\r\n                dispatch({\r\n                    type: ADD_INFORMATION,\r\n                    payload: response.data\r\n                });\r\n            }).catch(error => {\r\n                if (error.request.response === '') {\r\n                    dispatch({\r\n                        type: ADD_MESSAGE,\r\n                        payload: 'error server'\r\n                    });\r\n                } else {\r\n                    if (error.request) {\r\n                        dispatch({\r\n                            type: ADD_MESSAGE,\r\n                            payload: 'error server'\r\n                        });\r\n                    }\r\n                }\r\n\r\n            });\r\n    }\r\n}\r\n\r\n//MD_toda informacion\r\nexport function getAllInformation(token, id) {\r\n    const headers = {\r\n        'Content-Type': 'application/json',\r\n        'TokenAuto': desencriptar(token),\r\n        'Permiso': PERMIT_ALL_INFORMATION\r\n    }\r\n    return (dispatch, getState) => {\r\n        axios.get(`${URL_BASE}/api/activity/allInformation/${id}`, { headers: headers })\r\n            .then(response => {\r\n                dispatch({\r\n                    type: GET_ALL_INFORMATION,\r\n                    payload: response.data\r\n                });\r\n            }).catch(error => {\r\n                if (error.request.response === '') {\r\n                    dispatch({\r\n                        type: ADD_MESSAGE,\r\n                        payload: 'error server'\r\n                    });\r\n                } else {\r\n                    if (error.request) {\r\n                        dispatch({\r\n                            type: ADD_MESSAGE,\r\n                            payload: 'error server'\r\n                        });\r\n                    }\r\n                }\r\n\r\n            });\r\n    }\r\n}\r\n\r\n\r\n"]},"metadata":{},"sourceType":"module"}