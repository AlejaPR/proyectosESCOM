{"ast":null,"code":"import axios from 'axios';\nimport { encriptar, desencriptar } from '../componentes/general/Encriptar.js';\nimport { browserHistory } from 'react-router';\nexport const MOSTRAR_USUARIOS = 'MOSTRAR_USUARIOS';\nexport const MOSTRAR_DOCUMENTOS = 'MOSTRAR_DOCUMENTOS';\nexport const AGREGAR_USUARIO = 'AGREGAR_USUARIO';\nexport const MENSAJE_REGISTRAR = 'MENSAJE_REGISTRAR';\nexport const MENSAJE_EDITAR = 'MENSAJE_EDITAR';\nexport const INFORMACION_USUARIO = 'INFORMACION_USUARIO';\nexport const ANADIR_CEDULA_EDITAR = \"ANADIR_CEDULA_EDITAR\";\nexport const EDITAR_USUARIO = \"EDITAR_USUARIO\";\nexport const ACTUALIZAR_USUARIOS = 'ACTUALIZAR_USUARIOS';\nexport const LOGIN_USUARIO = 'LOGIN_USUARIO';\nexport const REDIRECCIONAR_LOGIN = 'REDIRECCIONAR_LOGIN';\nexport function actionLoginUsuario(correo, contrasena, cambiar) {\n  var crypto = require('crypto');\n\n  var contrasenaEncryp = crypto.createHmac('sha256', correo).update(contrasena).digest('hex');\n  cambiar(true);\n  return (dispatch, getState) => {\n    axios.get(\"http://localhost:9090/proyectosESCOM-web/api/login/\" + correo + '/' + contrasenaEncryp).then(response => {\n      if (response.status == 200) {\n        var token = encriptar(response.data.token);\n        localStorage.setItem('Token', token);\n        dispatch({\n          type: LOGIN_USUARIO,\n          token: 'Login correcto'\n        });\n        cambiar(false);\n      }\n    }).catch(error => {\n      cambiar(false);\n      dispatch({\n        type: LOGIN_USUARIO,\n        token: 'Credenciales incorrectas'\n      });\n    });\n  };\n}\nexport function actionCerrarSesion(token) {\n  var tokenlim = desencriptar(token);\n  const headers = {\n    'Content-Type': 'application/json',\n    'TokenAuto': tokenlim\n  };\n  axios.delete(\"http://localhost:9090/SuperadministradorESCOM-web/api/usuario/\" + tokenlim, {\n    headers: headers\n  }).then(response => {\n    if (response.status == 200) {\n      console.log('cerrada');\n    }\n  }).catch(function (error) {\n    // handle error\n    console.log('error es: ', error);\n  });\n}\nexport function actualizarMensajeEditar(mensaje) {\n  return (dispatch, getState) => {\n    dispatch({\n      type: MENSAJE_EDITAR,\n      mensaje: mensaje\n    });\n  };\n}\nexport function actualizarMensajeRegistrar(mensaje) {\n  return (dispatch, getState) => {\n    dispatch({\n      type: MENSAJE_REGISTRAR,\n      mensaje: mensaje\n    });\n  };\n}\nexport function actionConsultarUsuarios(token) {\n  var tokenRequest = desencriptar(token);\n  const headers = {\n    'Content-Type': 'application/json',\n    'TokenAuto': tokenRequest,\n    'Permiso': 'SA_VER ICIONES'\n  };\n  return (dispatch, getState) => {\n    axios.get(\"http://localhost:9090/proyectosESCOM-web/api/usuario/listarUsuarios\", {\n      headers: headers\n    }).then(response => {\n      dispatch({\n        type: MOSTRAR_USUARIOS,\n        respuesta: response.data\n      });\n    }).catch(error => {\n      console.log('errors', error);\n    });\n  };\n}\nexport function actionConsultarDocumentos(token) {\n  var tokenRequest = desencriptar(token);\n  const headers = {\n    'Content-Type': 'application/json',\n    'TokenAuto': tokenRequest,\n    'Permiso': 'SA_VER ICIONES'\n  };\n  return (dispatch, getState) => {\n    axios.get(\"http://localhost:9090/proyectosESCOM-web/api/usuario/tipoDocumento\", {\n      headers: headers\n    }).then(response => {\n      dispatch({\n        type: MOSTRAR_DOCUMENTOS,\n        respuesta: response.data\n      });\n    });\n  };\n}\nexport function actionAgregarUsuario(usuario, token) {\n  var tokenRequest = desencriptar(token);\n  const headers = {\n    'Content-Type': 'application/json',\n    'TokenAuto': tokenRequest,\n    'Permiso': 'SA_CREAR USUARIO'\n  };\n  return (dispatch, getState) => {\n    axios.post(\"http://localhost:9090/proyectosESCOM-web/api/usuario/registrarUsuario\", usuario, {\n      headers: headers\n    }).then(response => {\n      dispatch({\n        type: AGREGAR_USUARIO,\n        usuarioARegistrar: usuario\n      });\n      dispatch({\n        type: MENSAJE_REGISTRAR,\n        mensaje: 'Usuario registrado'\n      });\n    }).catch(error => {\n      if (error.request) {\n        let respuest = error.request;\n        var o = JSON.parse(respuest.response);\n\n        switch (o.respuesta) {\n          case 'Ya existen los datos registrados previamente':\n            dispatch({\n              type: MENSAJE_REGISTRAR,\n              mensaje: 'Ya existen los datos registrados previamente'\n            });\n\n          case 'Sin permiso':\n            dispatch({\n              type: MENSAJE_REGISTRAR,\n              mensaje: 'No tiene los permisos suficientes para registrar un usuario'\n            });\n\n          case 'Ocurrio un error interno del servidor':\n            dispatch({\n              type: MENSAJE_REGISTRAR,\n              mensaje: 'Ocurrio una falla en el servidor'\n            });\n\n          case 'token vencido':\n            dispatch({\n              type: MENSAJE_REGISTRAR,\n              mensaje: 'Su token esta vencido inicie sesion nuevamente'\n            });\n\n          case 'token no registrado':\n            dispatch({\n              type: MENSAJE_REGISTRAR,\n              mensaje: 'Su token no esta registrado inicie sesion nuevamente'\n            });\n\n          case 'token incorrecto':\n            dispatch({\n              type: MENSAJE_REGISTRAR,\n              mensaje: 'Su token es incorrecto inicie sesion nuevamente'\n            });\n\n          default:\n            dispatch({\n              type: MENSAJE_REGISTRAR,\n              mensaje: ' '\n            });\n        }\n      }\n    });\n  };\n}\nexport function actionCargarInformacionDeUsuario(cedula, token) {\n  const headers = {\n    'Content-Type': 'application/json',\n    'TokenAuto': desencriptar(token),\n    'Permiso': 'SA_CRR USUARIO'\n  };\n  return (dispatch, getState) => {\n    axios.get(\"http://localhost:9090/proyectosESCOM-web/api/usuario/datosUsuario/\" + cedula, {\n      headers: headers\n    }).then(response => {\n      dispatch({\n        type: INFORMACION_USUARIO,\n        informacionUsuario: response.data\n      });\n    }).catch(error => {\n      if (error.request) {\n        let respuest = error.request;\n        var o = JSON.parse(respuest.response);\n\n        switch (o.respuesta) {\n          case 'Sin permiso':\n            dispatch({\n              type: MENSAJE_EDITAR,\n              mensaje: 'Su token no esta registrado inicie sesion nuevamente'\n            });\n\n          case 'Ocurrio un error interno del servidor':\n            dispatch({\n              type: MENSAJE_EDITAR,\n              mensaje: 'Su token no esta registrado inicie sesion nuevamente'\n            });\n\n          case 'token vencido':\n            dispatch({\n              type: MENSAJE_EDITAR,\n              mensaje: 'Su token no esta registrado inicie sesion nuevamente'\n            });\n\n          case 'token no registrado':\n            dispatch({\n              type: MENSAJE_EDITAR,\n              mensaje: 'Su token no esta registrado inicie sesion nuevamente'\n            });\n\n          case 'token incorrecto':\n            dispatch({\n              type: MENSAJE_EDITAR,\n              mensaje: 'Su token no esta registrado inicie sesion nuevamente'\n            });\n\n          default:\n        }\n      }\n    });\n  };\n}\nexport function actionAsignarCedula(cedula) {\n  return (dispatch, getState) => {\n    dispatch({\n      type: ANADIR_CEDULA_EDITAR,\n      cedula: cedula\n    });\n  };\n}\nexport function actionActualizarUsuarios(usuario) {\n  return (dispatch, getState) => {\n    dispatch({\n      type: ACTUALIZAR_USUARIOS,\n      usuario: usuario\n    });\n  };\n}\nexport function actionEditarUsuario(usuario, cedula) {\n  return (dispatch, getState) => {\n    axios.put(\"http://localhost:9090/SuperadministradorESCOM-web/api/usu/\" + cedula, usuario).then(response => {\n      console.log(\"RESULTADO\", response.status);\n    });\n    ;\n    dispatch({\n      type: EDITAR_USUARIO,\n      payload: usuario\n    });\n  };\n}","map":{"version":3,"sources":["C:/Users/jeiso/Desktop/REACT/proyectosESCOM/frontend/ESCOM-view/src/SuperAdministrador/actions/actionsUsuario.js"],"names":["axios","encriptar","desencriptar","browserHistory","MOSTRAR_USUARIOS","MOSTRAR_DOCUMENTOS","AGREGAR_USUARIO","MENSAJE_REGISTRAR","MENSAJE_EDITAR","INFORMACION_USUARIO","ANADIR_CEDULA_EDITAR","EDITAR_USUARIO","ACTUALIZAR_USUARIOS","LOGIN_USUARIO","REDIRECCIONAR_LOGIN","actionLoginUsuario","correo","contrasena","cambiar","crypto","require","contrasenaEncryp","createHmac","update","digest","dispatch","getState","get","then","response","status","token","data","localStorage","setItem","type","catch","error","actionCerrarSesion","tokenlim","headers","delete","console","log","actualizarMensajeEditar","mensaje","actualizarMensajeRegistrar","actionConsultarUsuarios","tokenRequest","respuesta","actionConsultarDocumentos","actionAgregarUsuario","usuario","post","usuarioARegistrar","request","respuest","o","JSON","parse","actionCargarInformacionDeUsuario","cedula","informacionUsuario","actionAsignarCedula","actionActualizarUsuarios","actionEditarUsuario","put","payload"],"mappings":"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","sourcesContent":["import axios from 'axios';\r\nimport { encriptar, desencriptar } from '../componentes/general/Encriptar.js';\r\nimport { browserHistory } from 'react-router';\r\n\r\nexport const MOSTRAR_USUARIOS = 'MOSTRAR_USUARIOS';\r\nexport const MOSTRAR_DOCUMENTOS = 'MOSTRAR_DOCUMENTOS';\r\nexport const AGREGAR_USUARIO = 'AGREGAR_USUARIO';\r\nexport const MENSAJE_REGISTRAR = 'MENSAJE_REGISTRAR';\r\nexport const MENSAJE_EDITAR = 'MENSAJE_EDITAR';\r\nexport const INFORMACION_USUARIO = 'INFORMACION_USUARIO';\r\nexport const ANADIR_CEDULA_EDITAR = \"ANADIR_CEDULA_EDITAR\";\r\nexport const EDITAR_USUARIO = \"EDITAR_USUARIO\";\r\nexport const ACTUALIZAR_USUARIOS = 'ACTUALIZAR_USUARIOS';\r\nexport const LOGIN_USUARIO = 'LOGIN_USUARIO';\r\nexport const REDIRECCIONAR_LOGIN = 'REDIRECCIONAR_LOGIN';\r\n\r\n\r\nexport function actionLoginUsuario(correo, contrasena, cambiar) {\r\n    var crypto = require('crypto');\r\n    var contrasenaEncryp = crypto.createHmac('sha256', correo).update(contrasena).digest('hex');\r\n    cambiar(true);\r\n    return (dispatch, getState) => {\r\n        axios.get(\"http://localhost:9090/proyectosESCOM-web/api/login/\" + correo + '/' + contrasenaEncryp)\r\n            .then(response => {\r\n                if (response.status == 200) {\r\n                    var token = encriptar(response.data.token);\r\n                    localStorage.setItem('Token', token);\r\n                    dispatch({\r\n                        type: LOGIN_USUARIO,\r\n                        token: 'Login correcto'\r\n                    });\r\n                    cambiar(false);\r\n                }\r\n            }).catch((error) => {\r\n                cambiar(false);\r\n                dispatch({\r\n                    type: LOGIN_USUARIO,\r\n                    token: 'Credenciales incorrectas'\r\n                });\r\n            })\r\n    };\r\n}\r\n\r\nexport function actionCerrarSesion(token) {\r\n    var tokenlim = desencriptar(token);\r\n    const headers = {\r\n        'Content-Type': 'application/json',\r\n        'TokenAuto': tokenlim\r\n    }\r\n\r\n    axios.delete(\"http://localhost:9090/SuperadministradorESCOM-web/api/usuario/\" + tokenlim, { headers: headers })\r\n        .then(response => {\r\n            if (response.status == 200) {\r\n                console.log('cerrada')\r\n            }\r\n        }).catch(function (error) {\r\n            // handle error\r\n            console.log('error es: ', error)\r\n        });\r\n}\r\n\r\n\r\nexport function actualizarMensajeEditar(mensaje) {\r\n    return (dispatch, getState) => {\r\n        dispatch({\r\n            type: MENSAJE_EDITAR,\r\n            mensaje: mensaje\r\n        });\r\n    };\r\n}\r\n\r\nexport function actualizarMensajeRegistrar(mensaje) {\r\n    return (dispatch, getState) => {\r\n        dispatch({\r\n            type: MENSAJE_REGISTRAR,\r\n            mensaje: mensaje\r\n        });\r\n    };\r\n}\r\n\r\nexport function actionConsultarUsuarios(token) {\r\n    var tokenRequest = desencriptar(token);\r\n    const headers = {\r\n        'Content-Type': 'application/json',\r\n        'TokenAuto': tokenRequest,\r\n        'Permiso': 'SA_VER ICIONES'\r\n    }\r\n    return (dispatch, getState) => {\r\n        axios.get(\"http://localhost:9090/proyectosESCOM-web/api/usuario/listarUsuarios\", { headers: headers })\r\n            .then(response => {\r\n                dispatch({\r\n                    type: MOSTRAR_USUARIOS,\r\n                    respuesta: response.data\r\n                });\r\n            }).catch((error) => {\r\n                console.log('errors', error);\r\n            });\r\n    };\r\n}\r\n\r\nexport function actionConsultarDocumentos(token) {\r\n    var tokenRequest = desencriptar(token);\r\n    const headers = {\r\n        'Content-Type': 'application/json',\r\n        'TokenAuto': tokenRequest,\r\n        'Permiso': 'SA_VER ICIONES'\r\n    }\r\n    return (dispatch, getState) => {\r\n        axios.get(\"http://localhost:9090/proyectosESCOM-web/api/usuario/tipoDocumento\", { headers: headers })\r\n            .then(response => {\r\n                dispatch({\r\n                    type: MOSTRAR_DOCUMENTOS,\r\n                    respuesta: response.data\r\n                });\r\n            });\r\n    };\r\n}\r\n\r\nexport function actionAgregarUsuario(usuario, token) {\r\n    var tokenRequest = desencriptar(token);\r\n    const headers = {\r\n        'Content-Type': 'application/json',\r\n        'TokenAuto': tokenRequest,\r\n        'Permiso': 'SA_CREAR USUARIO'\r\n    }\r\n    return (dispatch, getState) => {\r\n\r\n        axios.post(\"http://localhost:9090/proyectosESCOM-web/api/usuario/registrarUsuario\", usuario, { headers: headers })\r\n            .then(response => {\r\n                dispatch({\r\n                    type: AGREGAR_USUARIO,\r\n                    usuarioARegistrar: usuario\r\n                });\r\n                dispatch({\r\n                    type: MENSAJE_REGISTRAR,\r\n                    mensaje: 'Usuario registrado'\r\n                });\r\n            }).catch((error) => {\r\n                if (error.request) {\r\n                    let respuest = error.request;\r\n                    var o = JSON.parse(respuest.response);\r\n                    switch (o.respuesta) {\r\n                        case 'Ya existen los datos registrados previamente':\r\n                            dispatch({\r\n                                type: MENSAJE_REGISTRAR,\r\n                                mensaje: 'Ya existen los datos registrados previamente'\r\n                            });\r\n                        case 'Sin permiso':\r\n                            dispatch({\r\n                                type: MENSAJE_REGISTRAR,\r\n                                mensaje: 'No tiene los permisos suficientes para registrar un usuario'\r\n                            });\r\n                        case 'Ocurrio un error interno del servidor':\r\n                            dispatch({\r\n                                type: MENSAJE_REGISTRAR,\r\n                                mensaje: 'Ocurrio una falla en el servidor'\r\n                            });\r\n                        case 'token vencido':\r\n                            dispatch({\r\n                                type: MENSAJE_REGISTRAR,\r\n                                mensaje: 'Su token esta vencido inicie sesion nuevamente'\r\n                            });\r\n                        case 'token no registrado':\r\n                            dispatch({\r\n                                type: MENSAJE_REGISTRAR,\r\n                                mensaje: 'Su token no esta registrado inicie sesion nuevamente'\r\n                            });\r\n                        case 'token incorrecto':\r\n                            dispatch({\r\n                                type: MENSAJE_REGISTRAR,\r\n                                mensaje: 'Su token es incorrecto inicie sesion nuevamente'\r\n                            });\r\n                        default:\r\n                            dispatch({\r\n                                type: MENSAJE_REGISTRAR,\r\n                                mensaje: ' '\r\n                            });\r\n                    }\r\n                }\r\n            });\r\n\r\n    }\r\n}\r\n\r\nexport function actionCargarInformacionDeUsuario(cedula, token) {\r\n    const headers = {\r\n        'Content-Type': 'application/json',\r\n        'TokenAuto': desencriptar(token),\r\n        'Permiso': 'SA_CRR USUARIO'\r\n    }\r\n    return (dispatch, getState) => {\r\n        axios.get(\"http://localhost:9090/proyectosESCOM-web/api/usuario/datosUsuario/\" + cedula, { headers: headers })\r\n            .then(response => {\r\n                dispatch({\r\n                    type: INFORMACION_USUARIO,\r\n                    informacionUsuario: response.data\r\n                });\r\n            }).catch((error) => {\r\n                if (error.request) {\r\n                    let respuest = error.request;\r\n                    var o = JSON.parse(respuest.response);\r\n                    switch (o.respuesta) {\r\n                        case 'Sin permiso':\r\n                            dispatch({\r\n                                type: MENSAJE_EDITAR,\r\n                                mensaje: 'Su token no esta registrado inicie sesion nuevamente'\r\n                            });\r\n                        case 'Ocurrio un error interno del servidor':\r\n                            dispatch({\r\n                                type: MENSAJE_EDITAR,\r\n                                mensaje: 'Su token no esta registrado inicie sesion nuevamente'\r\n                            });\r\n                        case 'token vencido':\r\n                            dispatch({\r\n                                type: MENSAJE_EDITAR,\r\n                                mensaje: 'Su token no esta registrado inicie sesion nuevamente'\r\n                            });\r\n                        case 'token no registrado':\r\n                            dispatch({\r\n                                type: MENSAJE_EDITAR,\r\n                                mensaje: 'Su token no esta registrado inicie sesion nuevamente'\r\n                            });\r\n                        case 'token incorrecto':\r\n                            dispatch({\r\n                                type: MENSAJE_EDITAR,\r\n                                mensaje: 'Su token no esta registrado inicie sesion nuevamente'\r\n                            });\r\n                        default:\r\n\r\n                    }\r\n                }\r\n            });\r\n    };\r\n}\r\n\r\nexport function actionAsignarCedula(cedula) {\r\n    return (dispatch, getState) => {\r\n        dispatch({\r\n            type: ANADIR_CEDULA_EDITAR,\r\n            cedula: cedula\r\n        });\r\n    }\r\n}\r\n\r\nexport function actionActualizarUsuarios(usuario) {\r\n    return (dispatch, getState) => {\r\n        dispatch({\r\n            type: ACTUALIZAR_USUARIOS,\r\n            usuario: usuario\r\n        });\r\n    }\r\n}\r\n\r\nexport function actionEditarUsuario(usuario, cedula) {\r\n    return (dispatch, getState) => {\r\n        axios.put(\"http://localhost:9090/SuperadministradorESCOM-web/api/usu/\" + cedula, usuario).then(response => {\r\n            console.log(\"RESULTADO\", response.status);\r\n        });;\r\n\r\n        dispatch({\r\n            type: EDITAR_USUARIO,\r\n            payload: usuario\r\n        });\r\n    }\r\n}\r\n"]},"metadata":{},"sourceType":"module"}