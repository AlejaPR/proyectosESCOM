{"ast":null,"code":"import axios from 'axios';\nimport { desencriptar } from '../componentes/general/Encriptar.js';\nimport { URL_BASE } from '../utilitario/Configuracion.js';\nimport { mensajeDeEditar, mensajeDeCargar, mensajeDeListar, mensajeDeRegistro, mensajeDeSuspender } from '../mensajesDeError/MensajesDeErrorActividad.js';\nimport { mensajeDeListar as mensajeDelistarModulos } from '../mensajesDeError/MensajesDeErrorModulo.js';\nexport const MOSTRAR_ACTIVIDADES = 'MOSTRAR_ACTIVIDADES';\nexport const ESTADO_ACTIVIDADES = 'ESTADO_ACTIVIDADES';\nexport const AGREGAR_ACTIVIDAD = 'AGREGAR_ACTIVIDAD';\nexport const EDITAR_USUARIO = \"EDITAR_USUARIO\";\nexport const MENSAJE_REGISTRAR = 'MENSAJE_REGISTRAR';\nexport const MENSAJE_SUSPENDER = 'MENSAJE_SUSPENDER';\nexport const MODULOS_REGISTRADOS = 'MODULOS_REGISTRADOS';\nexport const ACTUALIZAR_ACTIVIDADES = 'ACTUALIZAR_ACTIVIDADES';\nexport const ANADIR_CODIGO_EDITAR = 'ANADIR_CODIGO_EDITAR';\nexport const INFORMACION_ACTIVIDAD = 'INFORMACION_ACTIVIDAD';\nexport const MENSAJE_EDITAR = 'MENSAJE_EDITAR';\nexport const EDITAR_ACTIVIDAD = 'EDITAR_ACTIVIDAD';\nexport const CANTIDAD_ACTIVIDADES = 'CANTIDAD_ACTIVIDADES';\nconst PERMISO_CONSULTAR_ACTIVIDADES = 'SA_Consultar actividades registradas';\nconst PERMISO_REGISTRAR_ACTIVIDAD = 'SA_Registrar actividad';\nconst PERMISO_SUSPENDER_ACTIVAR = 'SA_Suspender/activar actividades';\nconst PERMISO_EDITAR_ACTIVIDAD = 'SA_Editar informacion de la actividad';\nexport function actionConsultarActividades(token, cantidadDatos, paginaActual) {\n  const headers = {\n    'Content-Type': 'application/json',\n    'TokenAuto': desencriptar(token),\n    'Permiso': PERMISO_CONSULTAR_ACTIVIDADES\n  };\n  return (dispatch, getState) => {\n    axios.get(`${URL_BASE}/proyectosESCOM-web/api/actividades/listar/${cantidadDatos}/${paginaActual + 1}`, {\n      headers: headers\n    }).then(response => {\n      dispatch({\n        type: MOSTRAR_ACTIVIDADES,\n        respuesta: response.data\n      });\n    }).catch(error => {\n      try {\n        if (error.request.response === '') {\n          dispatch({\n            type: MENSAJE_REGISTRAR,\n            mensaje: 'Servidor fuera de servicio temporalmente'\n          });\n        } else {\n          if (error.request) {\n            var o = JSON.parse(error.request.response);\n            let respuesta = mensajeDeListar(o.respuesta);\n\n            if (respuesta === 'Sin permiso') {\n              dispatch({\n                type: ESTADO_ACTIVIDADES,\n                estado: true\n              });\n            } else {\n              dispatch({\n                type: MENSAJE_REGISTRAR,\n                mensaje: respuesta\n              });\n            }\n          }\n        }\n      } catch (error) {\n        dispatch({\n          type: MENSAJE_REGISTRAR,\n          mensaje: 'Ocurrio un error en el servidor'\n        });\n      }\n    });\n  };\n}\nexport function actionFiltrarActividades(token, palabraBusqueda, cantidadDatos, paginaActual) {\n  const headers = {\n    'Content-Type': 'application/json',\n    'TokenAuto': desencriptar(token),\n    'Permiso': PERMISO_CONSULTAR_ACTIVIDADES\n  };\n  return (dispatch, getState) => {\n    axios.get(`${URL_BASE}/proyectosESCOM-web/api/actividades/filtrar/${palabraBusqueda}/${cantidadDatos}/${paginaActual + 1}`, {\n      headers: headers\n    }).then(response => {\n      dispatch({\n        type: MOSTRAR_ACTIVIDADES,\n        respuesta: response.data\n      });\n    }).catch(error => {\n      try {\n        if (error.request.response === '') {\n          dispatch({\n            type: MENSAJE_REGISTRAR,\n            mensaje: 'Servidor fuera de servicio temporalmente'\n          });\n        } else {\n          if (error.request) {\n            var o = JSON.parse(error.request.response);\n            let respuesta = mensajeDeListar(o.respuesta);\n\n            if (respuesta === 'Sin permiso') {\n              dispatch({\n                type: ESTADO_ACTIVIDADES,\n                estado: true\n              });\n            } else {\n              dispatch({\n                type: MENSAJE_REGISTRAR,\n                mensaje: respuesta\n              });\n            }\n          }\n        }\n      } catch (error) {\n        dispatch({\n          type: MENSAJE_REGISTRAR,\n          mensaje: 'Ocurrio un error en el servidor'\n        });\n      }\n    });\n  };\n}\nexport function actionConsultarCantidadActividades(token) {\n  const headers = {\n    'Content-Type': 'application/json',\n    'TokenAuto': desencriptar(token),\n    'Permiso': PERMISO_CONSULTAR_ACTIVIDADES\n  };\n  return (dispatch, getState) => {\n    axios.get(`${URL_BASE}/proyectosESCOM-web/api/actividades/cantidad`, {\n      headers: headers\n    }).then(response => {\n      dispatch({\n        type: CANTIDAD_ACTIVIDADES,\n        respuesta: response.data\n      });\n    }).catch(error => {\n      try {\n        if (error.request.response === '') {\n          dispatch({\n            type: MENSAJE_SUSPENDER,\n            mensaje: 'Servidor fuera de servicio temporalmente'\n          });\n        } else {\n          if (error.request) {\n            var o = JSON.parse(error.request.response);\n            let respuesta = mensajeDeListar(o.respuesta);\n\n            if (respuesta === 'Sin permiso') {\n              dispatch({\n                type: MENSAJE_REGISTRAR,\n                estado: 'Ocurrio un error en el servidor'\n              });\n            } else {\n              dispatch({\n                type: MENSAJE_REGISTRAR,\n                mensaje: respuesta\n              });\n            }\n          }\n        }\n      } catch (error) {\n        dispatch({\n          type: MENSAJE_REGISTRAR,\n          mensaje: 'Ocurrio un error en el servidor'\n        });\n      }\n    });\n  };\n}\nexport function actionConsultarCantidadActividadesFiltradas(token, palabraBusqueda) {\n  const headers = {\n    'Content-Type': 'application/json',\n    'TokenAuto': desencriptar(token),\n    'Permiso': PERMISO_CONSULTAR_ACTIVIDADES\n  };\n  return (dispatch, getState) => {\n    axios.get(`${URL_BASE}/proyectosESCOM-web/api/actividades/filtrarCantidad/${palabraBusqueda}`, {\n      headers: headers\n    }).then(response => {\n      dispatch({\n        type: CANTIDAD_ACTIVIDADES,\n        respuesta: response.data\n      });\n    }).catch(error => {\n      try {\n        if (error.request.response === '') {\n          dispatch({\n            type: MENSAJE_REGISTRAR,\n            mensaje: 'Servidor fuera de servicio temporalmente'\n          });\n        } else {\n          if (error.request) {\n            var o = JSON.parse(error.request.response);\n            let respuesta = mensajeDeListar(o.respuesta);\n\n            if (respuesta === 'Sin permiso') {\n              dispatch({\n                type: MENSAJE_REGISTRAR,\n                estado: 'Ocurrio un error en el servidor'\n              });\n            } else {\n              dispatch({\n                type: MENSAJE_REGISTRAR,\n                mensaje: respuesta\n              });\n            }\n          }\n        }\n      } catch (error) {\n        dispatch({\n          type: MENSAJE_REGISTRAR,\n          mensaje: 'Ocurrio un error en el servidor'\n        });\n      }\n    });\n  };\n}\nexport function actionAgregarActividad(actividad, token) {\n  const headers = {\n    'Content-Type': 'application/json; charset=UTF-8',\n    'TokenAuto': desencriptar(token),\n    'Permiso': PERMISO_REGISTRAR_ACTIVIDAD\n  };\n  actividad.datosSolicitud = {\n    'ip': localStorage.getItem('Ip'),\n    'token': desencriptar(token),\n    'operacion': PERMISO_REGISTRAR_ACTIVIDAD\n  };\n  return (dispatch, getState) => {\n    axios.post(`${URL_BASE}/proyectosESCOM-web/api/actividades/registrar`, actividad, {\n      headers: headers\n    }).then(response => {\n      dispatch({\n        type: AGREGAR_ACTIVIDAD,\n        actividadARegistrar: actividad\n      });\n      dispatch({\n        type: MENSAJE_REGISTRAR,\n        mensaje: 'actividad registrada'\n      });\n    }).catch(error => {\n      try {\n        if (error.request.response === '') {\n          dispatch({\n            type: MENSAJE_REGISTRAR,\n            mensaje: 'Servidor fuera de servicio temporalmente'\n          });\n        } else {\n          if (error.request) {\n            var o = JSON.parse(error.request.response);\n            let respuesta = mensajeDeRegistro(o.respuesta);\n            dispatch({\n              type: MENSAJE_REGISTRAR,\n              mensaje: respuesta\n            });\n          }\n        }\n      } catch (error) {\n        dispatch({\n          type: MENSAJE_REGISTRAR,\n          mensaje: 'Ocurrio un error en el servidor'\n        });\n      }\n    });\n  };\n}\nexport function actionConsultarModulos(token) {\n  const headers = {\n    'Content-Type': 'application/json',\n    'TokenAuto': desencriptar(token),\n    'Permiso': PERMISO_CONSULTAR_ACTIVIDADES\n  };\n  return (dispatch, getState) => {\n    axios.get(`${URL_BASE}/proyectosESCOM-web/api/modulos/listar`, {\n      headers: headers\n    }).then(response => {\n      dispatch({\n        type: MODULOS_REGISTRADOS,\n        respuesta: response.data\n      });\n    }).catch(error => {\n      try {\n        if (error.request.response === '') {\n          dispatch({\n            type: MENSAJE_REGISTRAR,\n            mensaje: 'Servidor fuera de servicio temporalmente'\n          });\n        } else {\n          if (error.request) {\n            var o = JSON.parse(error.request.response);\n            let respuesta = mensajeDelistarModulos(o.respuesta);\n\n            if (respuesta === 'Sin permiso') {\n              dispatch({\n                type: ESTADO_ACTIVIDADES,\n                estado: true\n              });\n            } else {\n              dispatch({\n                type: MENSAJE_REGISTRAR,\n                mensaje: respuesta\n              });\n            }\n          }\n        }\n      } catch (error) {\n        dispatch({\n          type: MENSAJE_REGISTRAR,\n          mensaje: 'Ocurrio un error en el servidor'\n        });\n      }\n    });\n  };\n}\nexport function actionSuspenderActivarActividad(codigoActividad, token, actualizados) {\n  const headers = {\n    'Content-Type': 'application/json',\n    'TokenAuto': desencriptar(token),\n    'Permiso': PERMISO_SUSPENDER_ACTIVAR\n  };\n  let datosSolicitud = {\n    'ip': localStorage.getItem('Ip'),\n    'token': desencriptar(token),\n    'operacion': PERMISO_SUSPENDER_ACTIVAR\n  };\n  return (dispatch, getState) => {\n    axios.put(`${URL_BASE}/proyectosESCOM-web/api/actividades/cambiarEstado/${codigoActividad}`, datosSolicitud, {\n      headers: headers\n    }).then(response => {\n      dispatch({\n        type: ACTUALIZAR_ACTIVIDADES,\n        actividad: actualizados\n      });\n      dispatch({\n        type: MENSAJE_SUSPENDER,\n        mensaje: 'Operacion hecha con exito'\n      });\n    }).catch(error => {\n      try {\n        if (error.request.response === '') {\n          dispatch({\n            type: MENSAJE_SUSPENDER,\n            mensaje: 'Servidor fuera de servicio temporalmente'\n          });\n        } else {\n          if (error.request) {\n            var o = JSON.parse(error.request.response);\n            let respuesta = mensajeDeSuspender(o.respuesta);\n            dispatch({\n              type: MENSAJE_SUSPENDER,\n              mensaje: respuesta\n            });\n          }\n        }\n      } catch (error) {\n        dispatch({\n          type: MENSAJE_SUSPENDER,\n          mensaje: 'Ocurrio un error en el servidor'\n        });\n      }\n    });\n  };\n}\nexport function actionCargarInformacionDeActividad(codigoActividad, token) {\n  const headers = {\n    'Content-Type': 'application/json',\n    'TokenAuto': desencriptar(token),\n    'Permiso': PERMISO_EDITAR_ACTIVIDAD\n  };\n  return (dispatch, getState) => {\n    axios.get(`${URL_BASE}/proyectosESCOM-web/api/actividades/listarEspecifica/${codigoActividad}`, {\n      headers: headers\n    }).then(response => {\n      dispatch({\n        type: INFORMACION_ACTIVIDAD,\n        informacionActividad: response.data\n      });\n    }).catch(error => {\n      try {\n        if (error.request.response === '') {\n          dispatch({\n            type: MENSAJE_EDITAR,\n            mensaje: 'Servidor fuera de servicio temporalmente'\n          });\n        } else {\n          if (error.request) {\n            var o = JSON.parse(error.request.response);\n            let respuesta = mensajeDeCargar(o.respuesta);\n            dispatch({\n              type: MENSAJE_EDITAR,\n              mensaje: respuesta\n            });\n          }\n        }\n      } catch (error) {\n        dispatch({\n          type: MENSAJE_EDITAR,\n          mensaje: 'Ocurrio un error en el servidor'\n        });\n      }\n    });\n  };\n}\nexport function actionEditarUsuario(actividad, token) {\n  const headers = {\n    'Content-Type': 'application/json; charset=UTF-8',\n    'TokenAuto': desencriptar(token),\n    'Permiso': PERMISO_EDITAR_ACTIVIDAD\n  };\n  actividad.datosSolicitud = {\n    'ip': localStorage.getItem('Ip'),\n    'token': desencriptar(token),\n    'operacion': PERMISO_EDITAR_ACTIVIDAD\n  };\n  return (dispatch, getState) => {\n    axios.put(`${URL_BASE}/proyectosESCOM-web/api/actividades/editar`, actividad, {\n      headers: headers\n    }).then(response => {\n      dispatch({\n        type: EDITAR_ACTIVIDAD,\n        informacionActividad: actividad\n      });\n      dispatch({\n        type: MENSAJE_EDITAR,\n        mensaje: 'Modificado'\n      });\n    }).catch(error => {\n      try {\n        if (error.request.response === '') {\n          dispatch({\n            type: MENSAJE_EDITAR,\n            mensaje: 'Servidor fuera de servicio temporalmente'\n          });\n        } else {\n          if (error.request) {\n            var o = JSON.parse(error.request.response);\n            let respuesta = mensajeDeEditar(o.respuesta);\n            dispatch({\n              type: MENSAJE_EDITAR,\n              mensaje: respuesta\n            });\n          }\n        }\n      } catch (error) {\n        dispatch({\n          type: MENSAJE_EDITAR,\n          mensaje: 'Ocurrio un error en el servidor'\n        });\n      }\n    });\n  };\n}\nexport function actionAsignarCodigoActividad(codigoActividad) {\n  return (dispatch, getState) => {\n    dispatch({\n      type: ANADIR_CODIGO_EDITAR,\n      codigo: codigoActividad\n    });\n  };\n}\nexport function actualizarMensajeRegistrar(mensaje) {\n  return (dispatch, getState) => {\n    dispatch({\n      type: MENSAJE_REGISTRAR,\n      mensaje: mensaje\n    });\n  };\n}\nexport function actualizarMensajeEditar(mensaje) {\n  return (dispatch, getState) => {\n    dispatch({\n      type: MENSAJE_EDITAR,\n      mensaje: mensaje\n    });\n  };\n}\nexport function actualizarMensajeSuspender(mensaje) {\n  return (dispatch, getState) => {\n    dispatch({\n      type: MENSAJE_SUSPENDER,\n      mensaje: mensaje\n    });\n  };\n}","map":{"version":3,"sources":["C:/Users/jeiso/Desktop/proyectosESCOM/frontend/ESCOM-view/src/SuperAdministrador/actions/actionActividad.js"],"names":["axios","desencriptar","URL_BASE","mensajeDeEditar","mensajeDeCargar","mensajeDeListar","mensajeDeRegistro","mensajeDeSuspender","mensajeDelistarModulos","MOSTRAR_ACTIVIDADES","ESTADO_ACTIVIDADES","AGREGAR_ACTIVIDAD","EDITAR_USUARIO","MENSAJE_REGISTRAR","MENSAJE_SUSPENDER","MODULOS_REGISTRADOS","ACTUALIZAR_ACTIVIDADES","ANADIR_CODIGO_EDITAR","INFORMACION_ACTIVIDAD","MENSAJE_EDITAR","EDITAR_ACTIVIDAD","CANTIDAD_ACTIVIDADES","PERMISO_CONSULTAR_ACTIVIDADES","PERMISO_REGISTRAR_ACTIVIDAD","PERMISO_SUSPENDER_ACTIVAR","PERMISO_EDITAR_ACTIVIDAD","actionConsultarActividades","token","cantidadDatos","paginaActual","headers","dispatch","getState","get","then","response","type","respuesta","data","catch","error","request","mensaje","o","JSON","parse","estado","actionFiltrarActividades","palabraBusqueda","actionConsultarCantidadActividades","actionConsultarCantidadActividadesFiltradas","actionAgregarActividad","actividad","datosSolicitud","localStorage","getItem","post","actividadARegistrar","actionConsultarModulos","actionSuspenderActivarActividad","codigoActividad","actualizados","put","actionCargarInformacionDeActividad","informacionActividad","actionEditarUsuario","actionAsignarCodigoActividad","codigo","actualizarMensajeRegistrar","actualizarMensajeEditar","actualizarMensajeSuspender"],"mappings":"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","sourcesContent":["import axios from 'axios';\r\nimport { desencriptar } from '../componentes/general/Encriptar.js';\r\nimport { URL_BASE } from '../utilitario/Configuracion.js';\r\nimport {\r\n    mensajeDeEditar,\r\n    mensajeDeCargar,\r\n    mensajeDeListar,\r\n    mensajeDeRegistro,\r\n    mensajeDeSuspender\r\n} from '../mensajesDeError/MensajesDeErrorActividad.js';\r\nimport { mensajeDeListar as mensajeDelistarModulos } from '../mensajesDeError/MensajesDeErrorModulo.js';\r\nexport const MOSTRAR_ACTIVIDADES = 'MOSTRAR_ACTIVIDADES';\r\nexport const ESTADO_ACTIVIDADES = 'ESTADO_ACTIVIDADES';\r\nexport const AGREGAR_ACTIVIDAD = 'AGREGAR_ACTIVIDAD';\r\nexport const EDITAR_USUARIO = \"EDITAR_USUARIO\";\r\nexport const MENSAJE_REGISTRAR = 'MENSAJE_REGISTRAR';\r\nexport const MENSAJE_SUSPENDER = 'MENSAJE_SUSPENDER';\r\nexport const MODULOS_REGISTRADOS = 'MODULOS_REGISTRADOS';\r\nexport const ACTUALIZAR_ACTIVIDADES = 'ACTUALIZAR_ACTIVIDADES';\r\nexport const ANADIR_CODIGO_EDITAR = 'ANADIR_CODIGO_EDITAR';\r\nexport const INFORMACION_ACTIVIDAD = 'INFORMACION_ACTIVIDAD';\r\nexport const MENSAJE_EDITAR = 'MENSAJE_EDITAR';\r\nexport const EDITAR_ACTIVIDAD = 'EDITAR_ACTIVIDAD';\r\nexport const CANTIDAD_ACTIVIDADES='CANTIDAD_ACTIVIDADES';\r\n\r\n\r\nconst PERMISO_CONSULTAR_ACTIVIDADES = 'SA_Consultar actividades registradas';\r\nconst PERMISO_REGISTRAR_ACTIVIDAD = 'SA_Registrar actividad';\r\nconst PERMISO_SUSPENDER_ACTIVAR = 'SA_Suspender/activar actividades'\r\nconst PERMISO_EDITAR_ACTIVIDAD = 'SA_Editar informacion de la actividad';\r\n\r\n\r\nexport function actionConsultarActividades(token,cantidadDatos,paginaActual) {\r\n    const headers = {\r\n        'Content-Type': 'application/json',\r\n        'TokenAuto': desencriptar(token),\r\n        'Permiso': PERMISO_CONSULTAR_ACTIVIDADES\r\n    }\r\n    return (dispatch, getState) => {\r\n        axios.get(`${URL_BASE}/proyectosESCOM-web/api/actividades/listar/${cantidadDatos}/${paginaActual+1}`, { headers: headers })\r\n            .then(response => {\r\n                dispatch({\r\n                    type: MOSTRAR_ACTIVIDADES,\r\n                    respuesta: response.data\r\n                });\r\n            }).catch((error) => {\r\n                try {\r\n                    if (error.request.response === '') {\r\n                        dispatch({\r\n                            type: MENSAJE_REGISTRAR,\r\n                            mensaje: 'Servidor fuera de servicio temporalmente'\r\n                        });\r\n                    } else {\r\n                        if (error.request) {\r\n                            var o = JSON.parse(error.request.response);\r\n                            let respuesta = mensajeDeListar(o.respuesta);\r\n                            if (respuesta === 'Sin permiso') {\r\n                                dispatch({\r\n                                    type: ESTADO_ACTIVIDADES,\r\n                                    estado: true\r\n                                });\r\n                            } else {\r\n                                dispatch({\r\n                                    type: MENSAJE_REGISTRAR,\r\n                                    mensaje: respuesta\r\n                                });\r\n                            }\r\n                        }\r\n                    }\r\n                } catch (error) {\r\n                    dispatch({\r\n                        type: MENSAJE_REGISTRAR,\r\n                        mensaje: 'Ocurrio un error en el servidor'\r\n                    });\r\n                }\r\n            });\r\n    };\r\n}\r\n\r\nexport function actionFiltrarActividades(token,palabraBusqueda,cantidadDatos,paginaActual) {\r\n    const headers = {\r\n        'Content-Type': 'application/json',\r\n        'TokenAuto': desencriptar(token),\r\n        'Permiso': PERMISO_CONSULTAR_ACTIVIDADES\r\n    }\r\n    return (dispatch, getState) => {\r\n        axios.get(`${URL_BASE}/proyectosESCOM-web/api/actividades/filtrar/${palabraBusqueda}/${cantidadDatos}/${paginaActual+1}`, { headers: headers })\r\n            .then(response => {\r\n                dispatch({\r\n                    type: MOSTRAR_ACTIVIDADES,\r\n                    respuesta: response.data\r\n                });\r\n            }).catch((error) => {\r\n                try {\r\n                    if (error.request.response === '') {\r\n                        dispatch({\r\n                            type: MENSAJE_REGISTRAR,\r\n                            mensaje: 'Servidor fuera de servicio temporalmente'\r\n                        });\r\n                    } else {\r\n                        if (error.request) {\r\n                            var o = JSON.parse(error.request.response);\r\n                            let respuesta = mensajeDeListar(o.respuesta);\r\n                            if (respuesta === 'Sin permiso') {\r\n                                dispatch({\r\n                                    type: ESTADO_ACTIVIDADES,\r\n                                    estado: true\r\n                                });\r\n                            } else {\r\n                                dispatch({\r\n                                    type: MENSAJE_REGISTRAR,\r\n                                    mensaje: respuesta\r\n                                });\r\n                            }\r\n                        }\r\n                    }\r\n                } catch (error) {\r\n                    dispatch({\r\n                        type: MENSAJE_REGISTRAR,\r\n                        mensaje: 'Ocurrio un error en el servidor'\r\n                    });\r\n                }\r\n            });\r\n    };\r\n}\r\n\r\nexport function actionConsultarCantidadActividades(token) {\r\n    const headers = {\r\n        'Content-Type': 'application/json',\r\n        'TokenAuto': desencriptar(token),\r\n        'Permiso': PERMISO_CONSULTAR_ACTIVIDADES\r\n    }\r\n    return (dispatch, getState) => {\r\n        axios.get(`${URL_BASE}/proyectosESCOM-web/api/actividades/cantidad`, { headers: headers })\r\n            .then(response => {\r\n                dispatch({\r\n                    type: CANTIDAD_ACTIVIDADES,\r\n                    respuesta: response.data\r\n                });\r\n            }).catch((error) => {\r\n                try {\r\n                    if (error.request.response === '') {\r\n                        dispatch({\r\n                            type: MENSAJE_SUSPENDER,\r\n                            mensaje: 'Servidor fuera de servicio temporalmente'\r\n                        });\r\n                    } else {\r\n                        if (error.request) {\r\n                            var o = JSON.parse(error.request.response);\r\n                            let respuesta = mensajeDeListar(o.respuesta);\r\n                            if (respuesta === 'Sin permiso') {\r\n                                dispatch({\r\n                                    type: MENSAJE_REGISTRAR,\r\n                                    estado: 'Ocurrio un error en el servidor'\r\n                                });\r\n                            } else {\r\n                                dispatch({\r\n                                    type: MENSAJE_REGISTRAR,\r\n                                    mensaje: respuesta\r\n                                });\r\n                            }\r\n                        }\r\n                    }\r\n                } catch (error) {\r\n                    dispatch({\r\n                        type: MENSAJE_REGISTRAR,\r\n                        mensaje: 'Ocurrio un error en el servidor'\r\n                    });\r\n                }\r\n            });\r\n    };\r\n}\r\n\r\nexport function actionConsultarCantidadActividadesFiltradas(token,palabraBusqueda) {\r\n    const headers = {\r\n        'Content-Type': 'application/json',\r\n        'TokenAuto': desencriptar(token),\r\n        'Permiso': PERMISO_CONSULTAR_ACTIVIDADES\r\n    }\r\n    return (dispatch, getState) => {\r\n        axios.get(`${URL_BASE}/proyectosESCOM-web/api/actividades/filtrarCantidad/${palabraBusqueda}`, { headers: headers })\r\n            .then(response => {\r\n                dispatch({\r\n                    type: CANTIDAD_ACTIVIDADES,\r\n                    respuesta: response.data\r\n                });\r\n            }).catch((error) => {\r\n                try {\r\n                    if (error.request.response === '') {\r\n                        dispatch({\r\n                            type: MENSAJE_REGISTRAR,\r\n                            mensaje: 'Servidor fuera de servicio temporalmente'\r\n                        });\r\n                    } else {\r\n                        if (error.request) {\r\n                            var o = JSON.parse(error.request.response);\r\n                            let respuesta = mensajeDeListar(o.respuesta);\r\n                            if (respuesta === 'Sin permiso') {\r\n                                dispatch({\r\n                                    type: MENSAJE_REGISTRAR,\r\n                                    estado: 'Ocurrio un error en el servidor'\r\n                                });\r\n                            } else {\r\n                                dispatch({\r\n                                    type: MENSAJE_REGISTRAR,\r\n                                    mensaje: respuesta\r\n                                });\r\n                            }\r\n                        }\r\n                    }\r\n                } catch (error) {\r\n                    dispatch({\r\n                        type: MENSAJE_REGISTRAR,\r\n                        mensaje: 'Ocurrio un error en el servidor'\r\n                    });\r\n                }\r\n            });\r\n    };\r\n}\r\n\r\nexport function actionAgregarActividad(actividad, token) {\r\n    const headers = {\r\n        'Content-Type': 'application/json; charset=UTF-8',\r\n        'TokenAuto': desencriptar(token),\r\n        'Permiso': PERMISO_REGISTRAR_ACTIVIDAD\r\n    }\r\n    actividad.datosSolicitud = {\r\n        'ip': localStorage.getItem('Ip'),\r\n        'token': desencriptar(token),\r\n        'operacion': PERMISO_REGISTRAR_ACTIVIDAD\r\n    }\r\n    return (dispatch, getState) => {\r\n        axios.post(`${URL_BASE}/proyectosESCOM-web/api/actividades/registrar`, actividad, { headers: headers })\r\n            .then(response => {\r\n                dispatch({\r\n                    type: AGREGAR_ACTIVIDAD,\r\n                    actividadARegistrar: actividad\r\n                });\r\n                dispatch({\r\n                    type: MENSAJE_REGISTRAR,\r\n                    mensaje: 'actividad registrada'\r\n                });\r\n            }).catch((error) => {\r\n                try {\r\n                    if (error.request.response === '') {\r\n                        dispatch({\r\n                            type: MENSAJE_REGISTRAR,\r\n                            mensaje: 'Servidor fuera de servicio temporalmente'\r\n                        });\r\n                    } else {\r\n                        if (error.request) {\r\n                            var o = JSON.parse(error.request.response);\r\n                            let respuesta = mensajeDeRegistro(o.respuesta);\r\n                            dispatch({\r\n                                type: MENSAJE_REGISTRAR,\r\n                                mensaje: respuesta\r\n                            });\r\n                        }\r\n                    }\r\n                } catch (error) {\r\n                    dispatch({\r\n                        type: MENSAJE_REGISTRAR,\r\n                        mensaje: 'Ocurrio un error en el servidor'\r\n                    });\r\n                }\r\n            });\r\n\r\n    }\r\n}\r\n\r\nexport function actionConsultarModulos(token) {\r\n    const headers = {\r\n        'Content-Type': 'application/json',\r\n        'TokenAuto': desencriptar(token),\r\n        'Permiso': PERMISO_CONSULTAR_ACTIVIDADES\r\n    }\r\n    return (dispatch, getState) => {\r\n        axios.get(`${URL_BASE}/proyectosESCOM-web/api/modulos/listar`, { headers: headers })\r\n            .then(response => {\r\n                dispatch({\r\n                    type: MODULOS_REGISTRADOS,\r\n                    respuesta: response.data\r\n                });\r\n\r\n            }).catch((error) => {\r\n                try {\r\n                    if (error.request.response === '') {\r\n                        dispatch({\r\n                            type: MENSAJE_REGISTRAR,\r\n                            mensaje: 'Servidor fuera de servicio temporalmente'\r\n                        });\r\n                    } else {\r\n                        if (error.request) {\r\n                            var o = JSON.parse(error.request.response);\r\n                            let respuesta = mensajeDelistarModulos(o.respuesta);\r\n                            if (respuesta === 'Sin permiso') {\r\n                                dispatch({\r\n                                    type: ESTADO_ACTIVIDADES,\r\n                                    estado: true\r\n                                });\r\n                            } else {\r\n                                dispatch({\r\n                                    type: MENSAJE_REGISTRAR,\r\n                                    mensaje: respuesta\r\n                                });\r\n                            }\r\n                        }\r\n                    }\r\n                } catch (error) {\r\n                    dispatch({\r\n                        type: MENSAJE_REGISTRAR,\r\n                        mensaje: 'Ocurrio un error en el servidor'\r\n                    });\r\n                }\r\n            });\r\n    };\r\n}\r\n\r\nexport function actionSuspenderActivarActividad(codigoActividad, token, actualizados) {\r\n    const headers = {\r\n        'Content-Type': 'application/json',\r\n        'TokenAuto': desencriptar(token),\r\n        'Permiso': PERMISO_SUSPENDER_ACTIVAR\r\n    }\r\n    let datosSolicitud = {\r\n        'ip': localStorage.getItem('Ip'),\r\n        'token': desencriptar(token),\r\n        'operacion': PERMISO_SUSPENDER_ACTIVAR\r\n    }\r\n    return (dispatch, getState) => {\r\n        axios.put(`${URL_BASE}/proyectosESCOM-web/api/actividades/cambiarEstado/${codigoActividad}`, datosSolicitud, { headers: headers })\r\n            .then(response => {\r\n                dispatch({\r\n                    type: ACTUALIZAR_ACTIVIDADES,\r\n                    actividad: actualizados\r\n                });\r\n                dispatch({\r\n                    type: MENSAJE_SUSPENDER,\r\n                    mensaje: 'Operacion hecha con exito'\r\n                });\r\n            }).catch((error) => {\r\n                try {\r\n                    if (error.request.response === '') {\r\n                        dispatch({\r\n                            type: MENSAJE_SUSPENDER,\r\n                            mensaje: 'Servidor fuera de servicio temporalmente'\r\n                        });\r\n                    } else {\r\n                        if (error.request) {\r\n                            var o = JSON.parse(error.request.response);\r\n                            let respuesta = mensajeDeSuspender(o.respuesta);\r\n                            dispatch({\r\n                                type: MENSAJE_SUSPENDER,\r\n                                mensaje: respuesta\r\n                            });\r\n                        }\r\n                    }\r\n                } catch (error) {\r\n                    dispatch({\r\n                        type: MENSAJE_SUSPENDER,\r\n                        mensaje: 'Ocurrio un error en el servidor'\r\n                    });\r\n                }\r\n            });\r\n    }\r\n}\r\n\r\n\r\nexport function actionCargarInformacionDeActividad(codigoActividad, token) {\r\n    const headers = {\r\n        'Content-Type': 'application/json',\r\n        'TokenAuto': desencriptar(token),\r\n        'Permiso': PERMISO_EDITAR_ACTIVIDAD\r\n    }\r\n    return (dispatch, getState) => {\r\n        axios.get(`${URL_BASE}/proyectosESCOM-web/api/actividades/listarEspecifica/${codigoActividad}`, { headers: headers })\r\n            .then(response => {\r\n                dispatch({\r\n                    type: INFORMACION_ACTIVIDAD,\r\n                    informacionActividad: response.data\r\n                });\r\n            }).catch((error) => {\r\n                try {\r\n                    if (error.request.response === '') {\r\n                        dispatch({\r\n                            type: MENSAJE_EDITAR,\r\n                            mensaje: 'Servidor fuera de servicio temporalmente'\r\n                        });\r\n                    } else {\r\n                        if (error.request) {\r\n                            var o = JSON.parse(error.request.response);\r\n                            let respuesta = mensajeDeCargar(o.respuesta);\r\n                            dispatch({\r\n                                type: MENSAJE_EDITAR,\r\n                                mensaje: respuesta\r\n                            });\r\n                        }\r\n                    }\r\n                } catch (error) {\r\n                    dispatch({\r\n                        type: MENSAJE_EDITAR,\r\n                        mensaje: 'Ocurrio un error en el servidor'\r\n                    });\r\n                }\r\n            });\r\n    };\r\n}\r\n\r\n\r\nexport function actionEditarUsuario(actividad, token) {\r\n    const headers = {\r\n        'Content-Type': 'application/json; charset=UTF-8',\r\n        'TokenAuto': desencriptar(token),\r\n        'Permiso': PERMISO_EDITAR_ACTIVIDAD\r\n    }\r\n    actividad.datosSolicitud = {\r\n        'ip': localStorage.getItem('Ip'),\r\n        'token': desencriptar(token),\r\n        'operacion': PERMISO_EDITAR_ACTIVIDAD\r\n    }\r\n    return (dispatch, getState) => {\r\n        axios.put(`${URL_BASE}/proyectosESCOM-web/api/actividades/editar`, actividad, { headers: headers })\r\n            .then(response => {\r\n                dispatch({\r\n                    type: EDITAR_ACTIVIDAD,\r\n                    informacionActividad: actividad\r\n                });\r\n                dispatch({\r\n                    type: MENSAJE_EDITAR,\r\n                    mensaje: 'Modificado'\r\n                });\r\n            }).catch((error) => {\r\n                try {\r\n                    if (error.request.response === '') {\r\n                        dispatch({\r\n                            type: MENSAJE_EDITAR,\r\n                            mensaje: 'Servidor fuera de servicio temporalmente'\r\n                        });\r\n                    } else {\r\n                        if (error.request) {\r\n                            var o = JSON.parse(error.request.response);\r\n                            let respuesta = mensajeDeEditar(o.respuesta);\r\n                            dispatch({\r\n                                type: MENSAJE_EDITAR,\r\n                                mensaje: respuesta\r\n                            });\r\n                        }\r\n                    }\r\n                } catch (error) {\r\n                    dispatch({\r\n                        type: MENSAJE_EDITAR,\r\n                        mensaje: 'Ocurrio un error en el servidor'\r\n                    });\r\n                }\r\n            });\r\n    }\r\n}\r\n\r\n\r\n\r\nexport function actionAsignarCodigoActividad(codigoActividad) {\r\n    return (dispatch, getState) => {\r\n        dispatch({\r\n            type: ANADIR_CODIGO_EDITAR,\r\n            codigo: codigoActividad\r\n        });\r\n    }\r\n}\r\n\r\nexport function actualizarMensajeRegistrar(mensaje) {\r\n    return (dispatch, getState) => {\r\n        dispatch({\r\n            type: MENSAJE_REGISTRAR,\r\n            mensaje: mensaje\r\n        });\r\n    };\r\n}\r\n\r\n\r\nexport function actualizarMensajeEditar(mensaje) {\r\n    return (dispatch, getState) => {\r\n        dispatch({\r\n            type: MENSAJE_EDITAR,\r\n            mensaje: mensaje\r\n        });\r\n    };\r\n}\r\n\r\n\r\nexport function actualizarMensajeSuspender(mensaje) {\r\n    return (dispatch, getState) => {\r\n        dispatch({\r\n            type: MENSAJE_SUSPENDER,\r\n            mensaje: mensaje\r\n        });\r\n    };\r\n}"]},"metadata":{},"sourceType":"module"}