{"ast":null,"code":"import axios from 'axios';\nimport { desencriptar } from '../../../SuperAdministrador/componentes/general/Encriptar.js';\nimport { URL_BASE } from '../../../SuperAdministrador/utilitario/Configuracion.js';\nexport const GET_LIST_COMPETITION_GENERAL = 'GET_LIST_COMPETITION_GENERAL';\nexport const ADD_COMPETITION_GENERAL = 'ADD_COMPETITION_GENERAL';\nexport const DELETE_COMPETITION_GENERAL = 'DELETE_COMPETITION_GENERAL';\nexport const STATE_COMPETITION_GENERAL = 'STATE_COMPETITION_GENERAL';\nexport const PERMIT_LIST_COMPETITION_GENERAL = 'MD_Prueba';\nexport const PERMIT_ADD_COMPETITION_GENERAL = 'MD_Prueba';\nexport const PERMIT_DELETE_COMPETITION_GENERAL = 'MD_Prueba';\nexport const ADD_MESSAGE_ADD = 'ADD_MESSAGE_ADD';\nexport const ADD_MESSAGE_DELETE = 'ADD_MESSAGE_DELETE';\nexport const ADD_MESSAGE = 'ADD_MESSAGE';\nexport function addMessageAdd(mensaje) {\n  return (dispatch, getState) => {\n    dispatch({\n      type: ADD_MESSAGE_ADD,\n      mensaje: mensaje\n    });\n  };\n}\nexport function addMessageDelete(mensaje) {\n  return (dispatch, getState) => {\n    dispatch({\n      type: ADD_MESSAGE_DELETE,\n      mensaje: mensaje\n    });\n  };\n} //MD_Lista competencia general\n\nexport function getListCompetitionG(token, id) {\n  const headers = {\n    'Content-Type': 'application/json',\n    'TokenAuto': desencriptar(token),\n    'Permiso': PERMIT_LIST_COMPETITION_GENERAL\n  };\n  return (dispatch, getState) => {\n    axios.get(`${URL_BASE}/proyectosESCOM-web/api/competitionGeneral/list/${id}`, {\n      headers: headers\n    }).then(response => {\n      dispatch({\n        type: GET_LIST_COMPETITION_GENERAL,\n        payload: response.data\n      });\n    }).catch(error => {\n      if (error.request.response === '') {\n        dispatch({\n          type: ADD_MESSAGE,\n          payload: 'error server'\n        });\n      } else {\n        if (error.request) {\n          var data = JSON.parse(error.request.response);\n          let respuesta = data.respuesta;\n\n          if (respuesta === 'Sin permiso') {\n            dispatch({\n              type: STATE_COMPETITION_GENERAL,\n              payload: true\n            });\n          } else {\n            dispatch({\n              type: ADD_MESSAGE,\n              payload: respuesta\n            });\n          }\n        }\n      }\n    });\n  };\n} //MD_Agregar nucleo tematica\n\nexport function addCompetitionG(token, competitionG) {\n  const headers = {\n    'Content-Type': 'application/json; charset= UTF-8',\n    'TokenAuto': desencriptar(token),\n    'Permiso': PERMIT_ADD_COMPETITION_GENERAL\n  };\n  competitionG.requestData = {\n    'ip': localStorage.getItem('Ip'),\n    'token': desencriptar(token),\n    'operacion': PERMIT_ADD_COMPETITION_GENERAL\n  };\n  return (dispatch, getState) => {\n    axios.post(`${URL_BASE}/proyectosESCOM-web/api/competitionGeneral/add`, competitionG, {\n      headers: headers\n    }).then(response => {\n      dispatch({\n        type: ADD_COMPETITION_GENERAL,\n        payload: response.data.respuesta\n      });\n    }).catch(error => {\n      if (error.request.response === '') {\n        dispatch({\n          type: ADD_COMPETITION_GENERAL,\n          payload: 'error server'\n        });\n      } else {\n        if (error.request) {\n          var data = JSON.parse(error.request.response);\n          let respuesta = data.respuesta;\n          dispatch({\n            type: ADD_COMPETITION_GENERAL,\n            payload: respuesta\n          });\n        }\n      }\n    });\n  };\n} //MD_Eliminar nucleo tematico\n\nexport function deleteCompetitionG(token, competitionG) {\n  const headers = {\n    'Content-Type': 'application/json',\n    'TokenAuto': desencriptar(token),\n    'Permiso': PERMIT_DELETE_COMPETITION_GENERAL\n  };\n  competitionG.requestData = {\n    'ip': localStorage.getItem('Ip'),\n    'token': desencriptar(token),\n    'operacion': PERMIT_DELETE_COMPETITION_GENERAL\n  };\n  return (dispatch, getState) => {\n    axios.put(`${URL_BASE}/proyectosESCOM-web/api/competitionGeneral/delete`, competitionG, {\n      headers: headers\n    }).then(response => {\n      dispatch({\n        type: DELETE_COMPETITION_GENERAL,\n        payload: response.data.respuesta\n      });\n    }).catch(error => {\n      if (error.request.response === '') {\n        dispatch({\n          type: DELETE_COMPETITION_GENERAL,\n          payload: 'error server'\n        });\n      } else {\n        if (error.request) {\n          var data = JSON.parse(error.request.response);\n          let respuesta = data.respuesta;\n          dispatch({\n            type: DELETE_COMPETITION_GENERAL,\n            payload: respuesta\n          });\n        }\n      }\n    });\n  };\n}","map":{"version":3,"sources":["C:/Users/jeiso/Desktop/proyectosESCOM/frontend/ESCOM-view/src/ModuloDocumental/redux/actions/competitionGeneralA.js"],"names":["axios","desencriptar","URL_BASE","GET_LIST_COMPETITION_GENERAL","ADD_COMPETITION_GENERAL","DELETE_COMPETITION_GENERAL","STATE_COMPETITION_GENERAL","PERMIT_LIST_COMPETITION_GENERAL","PERMIT_ADD_COMPETITION_GENERAL","PERMIT_DELETE_COMPETITION_GENERAL","ADD_MESSAGE_ADD","ADD_MESSAGE_DELETE","ADD_MESSAGE","addMessageAdd","mensaje","dispatch","getState","type","addMessageDelete","getListCompetitionG","token","id","headers","get","then","response","payload","data","catch","error","request","JSON","parse","respuesta","addCompetitionG","competitionG","requestData","localStorage","getItem","post","deleteCompetitionG","put"],"mappings":"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","sourcesContent":["import axios from 'axios';\r\n\r\nimport { desencriptar } from '../../../SuperAdministrador/componentes/general/Encriptar.js';\r\nimport { URL_BASE } from '../../../SuperAdministrador/utilitario/Configuracion.js';\r\n\r\nexport const GET_LIST_COMPETITION_GENERAL = 'GET_LIST_COMPETITION_GENERAL';\r\nexport const ADD_COMPETITION_GENERAL = 'ADD_COMPETITION_GENERAL';\r\nexport const DELETE_COMPETITION_GENERAL = 'DELETE_COMPETITION_GENERAL';\r\nexport const STATE_COMPETITION_GENERAL = 'STATE_COMPETITION_GENERAL';\r\n\r\nexport const PERMIT_LIST_COMPETITION_GENERAL = 'MD_Prueba';\r\nexport const PERMIT_ADD_COMPETITION_GENERAL = 'MD_Prueba';\r\nexport const PERMIT_DELETE_COMPETITION_GENERAL = 'MD_Prueba';\r\n\r\nexport const ADD_MESSAGE_ADD = 'ADD_MESSAGE_ADD';\r\nexport const ADD_MESSAGE_DELETE = 'ADD_MESSAGE_DELETE';\r\nexport const ADD_MESSAGE = 'ADD_MESSAGE';\r\n\r\n\r\nexport function addMessageAdd(mensaje) {\r\n    return (dispatch, getState) => {\r\n        dispatch({\r\n            type: ADD_MESSAGE_ADD,\r\n            mensaje: mensaje\r\n        });\r\n    };\r\n}\r\n\r\nexport function addMessageDelete(mensaje) {\r\n    return (dispatch, getState) => {\r\n        dispatch({\r\n            type: ADD_MESSAGE_DELETE,\r\n            mensaje: mensaje\r\n        });\r\n    };\r\n}\r\n\r\n//MD_Lista competencia general\r\nexport function getListCompetitionG(token, id) {\r\n    const headers = {\r\n        'Content-Type': 'application/json',\r\n        'TokenAuto': desencriptar(token),\r\n        'Permiso': PERMIT_LIST_COMPETITION_GENERAL\r\n    }\r\n    return (dispatch, getState) => {\r\n        axios.get(`${URL_BASE}/proyectosESCOM-web/api/competitionGeneral/list/${id}`, { headers: headers })\r\n            .then(response => {\r\n                dispatch({\r\n                    type: GET_LIST_COMPETITION_GENERAL,\r\n                    payload: response.data\r\n                });\r\n            }).catch(error => {\r\n                if (error.request.response === '') {\r\n                    dispatch({\r\n                        type: ADD_MESSAGE,\r\n                        payload: 'error server'\r\n                    });\r\n                } else {\r\n                    if (error.request) {\r\n                        var data = JSON.parse(error.request.response);\r\n                        let respuesta = data.respuesta;\r\n                        if (respuesta === 'Sin permiso') {\r\n                            dispatch({\r\n                                type: STATE_COMPETITION_GENERAL,\r\n                                payload: true\r\n                            });\r\n                        } else {\r\n                            dispatch({\r\n                                type: ADD_MESSAGE,\r\n                                payload: respuesta\r\n                            });\r\n                        }\r\n                    }\r\n                }\r\n            });\r\n    }\r\n}\r\n\r\n//MD_Agregar nucleo tematica\r\nexport function addCompetitionG(token, competitionG) {\r\n    const headers = {\r\n        'Content-Type': 'application/json; charset= UTF-8',\r\n        'TokenAuto': desencriptar(token),\r\n        'Permiso': PERMIT_ADD_COMPETITION_GENERAL\r\n    }\r\n    competitionG.requestData = {\r\n        'ip': localStorage.getItem('Ip'),\r\n        'token': desencriptar(token),\r\n        'operacion': PERMIT_ADD_COMPETITION_GENERAL\r\n    };\r\n    return (dispatch, getState) => {\r\n        axios.post(`${URL_BASE}/proyectosESCOM-web/api/competitionGeneral/add`, competitionG, { headers: headers })\r\n            .then(response => {\r\n                dispatch({\r\n                    type: ADD_COMPETITION_GENERAL,\r\n                    payload: response.data.respuesta\r\n                });\r\n            }).catch(error => {\r\n                if (error.request.response === '') {\r\n                    dispatch({\r\n                        type: ADD_COMPETITION_GENERAL,\r\n                        payload: 'error server'\r\n                    });\r\n                } else {\r\n                    if (error.request) {\r\n                        var data = JSON.parse(error.request.response);\r\n                        let respuesta = data.respuesta;\r\n                        dispatch({\r\n                            type: ADD_COMPETITION_GENERAL,\r\n                            payload: respuesta\r\n                        });\r\n                    }\r\n                }\r\n            });\r\n    }\r\n}\r\n\r\n//MD_Eliminar nucleo tematico\r\nexport function deleteCompetitionG(token, competitionG) {\r\n    const headers = {\r\n        'Content-Type': 'application/json',\r\n        'TokenAuto': desencriptar(token),\r\n        'Permiso': PERMIT_DELETE_COMPETITION_GENERAL\r\n    }\r\n    competitionG.requestData = {\r\n        'ip': localStorage.getItem('Ip'),\r\n        'token': desencriptar(token),\r\n        'operacion': PERMIT_DELETE_COMPETITION_GENERAL\r\n    };\r\n    return (dispatch, getState) => {\r\n        axios.put(`${URL_BASE}/proyectosESCOM-web/api/competitionGeneral/delete`, competitionG, { headers: headers })\r\n            .then(response => {\r\n                dispatch({\r\n                    type: DELETE_COMPETITION_GENERAL,\r\n                    payload: response.data.respuesta\r\n                });\r\n            }).catch(error => {\r\n                if (error.request.response === '') {\r\n                    dispatch({\r\n                        type: DELETE_COMPETITION_GENERAL,\r\n                        payload: 'error server'\r\n                    });\r\n                } else {\r\n                    if (error.request) {\r\n                        var data = JSON.parse(error.request.response);\r\n                        let respuesta = data.respuesta;\r\n                        dispatch({\r\n                            type: DELETE_COMPETITION_GENERAL,\r\n                            payload: respuesta\r\n                        });\r\n                    }\r\n                }\r\n            });\r\n    }\r\n}"]},"metadata":{},"sourceType":"module"}