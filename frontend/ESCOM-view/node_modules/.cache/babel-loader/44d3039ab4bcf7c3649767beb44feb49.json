{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\jeiso\\\\Desktop\\\\REACT\\\\proyectosESCOM\\\\frontend\\\\ESCOM-view\\\\src\\\\SuperAdministrador\\\\componentes\\\\color.js\";\n// import React from 'react';\n// import ImageUploader from 'react-images-upload';\n// import { NotificationContainer, NotificationManager } from 'react-notifications';\n// import 'react-notifications/lib/notifications.css';\n// var fs = require('fs')\n// var path = require('path')\n// var util = require('util')\n// class App extends React.Component {\n//     constructor(props) {\n//         super(props);\n//         this.state = { pictures: [] };\n//         this.onDrop = this.onDrop.bind(this);\n//     }\n//     onDrop(picture) {\n//         console.log('Picture ', picture);\n//         this.setState({\n//             pictures: this.state.pictures.concat(picture),\n//         });\n//     }\n//     votar = () => {\n//         NotificationManager.success('Usuario registrado');\n//         storeWithOriginalName(this.state.pictures,'public/uploads');\n//     }\n//     render() {\n//         return (\n//             <>\n//                 <ImageUploader\n//                     withIcon={true}\n//                     buttonText='Choose images'\n//                     onChange={this.onDrop}\n//                     imgExtension={['.jpg', '.gif', '.png', '.gif']}\n//                     maxFileSize={5242880}\n//                     label=\"cosasoaj\"\n//                 />\n//                 <button onClick={this.votar}>oprimir</button>\n//                 <NotificationContainer />\n//             </>\n//         );\n//     }\n// }\n// function storeWithOriginalName(file,destination) {\n//     var fullNewPath = path.join(destination,file[0].name)\n//     console.log(\"FS \",fs.rename)\n//     var rename = util.promisify(fs.rename)\n//     var pathq='public\\\\uploads\\\\cc8b951ef8ce45d6195ec787947462c3';\n//     return rename(pathq, fullNewPath)\n//         .then(() => {\n//             return file[0].name\n//         })\n// }\n// export default App;\nimport React, { Component } from 'react';\nimport { Button, PanResponder, View, StyleSheet, TouchableOpacity, Text, Image } from 'react-native';\nexport default class App extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      show: false\n    };\n    this._panResponder = {};\n    this.timer = 0;\n  }\n\n  componentWillMount() {\n    this._panResponder = PanResponder.create({\n      onStartShouldSetPanResponder: () => {\n        this.resetTimer();\n        return true;\n      },\n      onMoveShouldSetPanResponder: () => true,\n      onStartShouldSetPanResponderCapture: () => {\n        this.resetTimer();\n        return false;\n      },\n      onMoveShouldSetPanResponderCapture: () => false,\n      onPanResponderTerminationRequest: () => true,\n      onShouldBlockNativeResponder: () => false\n    });\n    this.timer = setTimeout(() => this.setState({\n      show: true\n    }), 5000);\n  }\n\n  resetTimer() {\n    clearTimeout(this.timer);\n    if (this.state.show) this.setState({\n      show: false\n    });\n    this.timer = setTimeout(() => this.setState({\n      show: true\n    }), 5000);\n  }\n\n  render() {\n    return React.createElement(View, Object.assign({\n      style: styles.container,\n      collapsable: false\n    }, this._panResponder.panHandlers, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 96\n      },\n      __self: this\n    }), this.state.show ? React.createElement(Text, {\n      style: {\n        fontSize: 30\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 102\n      },\n      __self: this\n    }, \"Timer Expired : 5sec\") : null, React.createElement(TouchableOpacity, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 105\n      },\n      __self: this\n    }, React.createElement(Image, {\n      style: {\n        width: 300,\n        height: 300\n      },\n      source: {\n        uri: 'https://facebook.github.io/react/img/logo_og.png'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 106\n      },\n      __self: this\n    })), React.createElement(Button, {\n      title: \"Here is a button for some reason\",\n      onPress: () => {},\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 109\n      },\n      __self: this\n    }));\n  }\n\n}\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    alignItems: 'center',\n    justifyContent: 'center',\n    backgroundColor: '#ecf0f1'\n  }\n});","map":{"version":3,"sources":["C:\\Users\\jeiso\\Desktop\\REACT\\proyectosESCOM\\frontend\\ESCOM-view\\src\\SuperAdministrador\\componentes\\color.js"],"names":["React","Component","Button","PanResponder","View","StyleSheet","TouchableOpacity","Text","Image","App","state","show","_panResponder","timer","componentWillMount","create","onStartShouldSetPanResponder","resetTimer","onMoveShouldSetPanResponder","onStartShouldSetPanResponderCapture","onMoveShouldSetPanResponderCapture","onPanResponderTerminationRequest","onShouldBlockNativeResponder","setTimeout","setState","clearTimeout","render","styles","container","panHandlers","fontSize","width","height","uri","flex","alignItems","justifyContent","backgroundColor"],"mappings":";AAAA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,MAAT,EAAiBC,YAAjB,EAA+BC,IAA/B,EAAqCC,UAArC,EAAgDC,gBAAhD,EAAkEC,IAAlE,EAAyEC,KAAzE,QAAqF,cAArF;AAGA,eAAe,MAAMC,GAAN,SAAkBR,SAAlB,CAA4B;AAAA;AAAA;AAAA,SACzCS,KADyC,GACjC;AACNC,MAAAA,IAAI,EAAG;AADD,KADiC;AAAA,SAIzCC,aAJyC,GAIzB,EAJyB;AAAA,SAKzCC,KALyC,GAKjC,CALiC;AAAA;;AAMzCC,EAAAA,kBAAkB,GAAG;AACnB,SAAKF,aAAL,GAAqBT,YAAY,CAACY,MAAb,CAAoB;AAEvCC,MAAAA,4BAA4B,EAAE,MAAM;AAClC,aAAKC,UAAL;AACA,eAAO,IAAP;AACD,OALsC;AAMvCC,MAAAA,2BAA2B,EAAE,MAAM,IANI;AAOvCC,MAAAA,mCAAmC,EAAE,MAAM;AAAE,aAAKF,UAAL;AAAoB,eAAO,KAAP;AAAa,OAPvC;AAQvCG,MAAAA,kCAAkC,EAAE,MAAM,KARH;AASvCC,MAAAA,gCAAgC,EAAE,MAAM,IATD;AAUvCC,MAAAA,4BAA4B,EAAE,MAAM;AAVG,KAApB,CAArB;AAYA,SAAKT,KAAL,GAAaU,UAAU,CAAC,MAAI,KAAKC,QAAL,CAAc;AAACb,MAAAA,IAAI,EAAC;AAAN,KAAd,CAAL,EAAgC,IAAhC,CAAvB;AACD;;AAEDM,EAAAA,UAAU,GAAE;AACVQ,IAAAA,YAAY,CAAC,KAAKZ,KAAN,CAAZ;AACA,QAAG,KAAKH,KAAL,CAAWC,IAAd,EACA,KAAKa,QAAL,CAAc;AAACb,MAAAA,IAAI,EAAC;AAAN,KAAd;AACA,SAAKE,KAAL,GAAaU,UAAU,CAAC,MAAI,KAAKC,QAAL,CAAc;AAACb,MAAAA,IAAI,EAAC;AAAN,KAAd,CAAL,EAAgC,IAAhC,CAAvB;AACD;;AAEDe,EAAAA,MAAM,GAAG;AACP,WACE,oBAAC,IAAD;AACE,MAAA,KAAK,EAAEC,MAAM,CAACC,SADhB;AAEE,MAAA,WAAW,EAAE;AAFf,OAGM,KAAKhB,aAAL,CAAmBiB,WAHzB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAMI,KAAKnB,KAAL,CAAWC,IAAX,GAAkB,oBAAC,IAAD;AAAM,MAAA,KAAK,EAAE;AAACmB,QAAAA,QAAQ,EAAC;AAAV,OAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,8BAAlB,GAA4E,IANhF,EASE,oBAAC,gBAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,oBAAC,KAAD;AAAO,MAAA,KAAK,EAAE;AAACC,QAAAA,KAAK,EAAE,GAAR;AAAaC,QAAAA,MAAM,EAAE;AAArB,OAAd;AAAyC,MAAA,MAAM,EAAE;AAACC,QAAAA,GAAG,EAAE;AAAN,OAAjD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,CATF,EAaE,oBAAC,MAAD;AACE,MAAA,KAAK,EAAC,kCADR;AAEE,MAAA,OAAO,EAAE,MAAM,CAAE,CAFnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAbF,CADF;AAoBD;;AAlDwC;AAqD3C,MAAMN,MAAM,GAAGtB,UAAU,CAACU,MAAX,CAAkB;AAC/Ba,EAAAA,SAAS,EAAE;AACTM,IAAAA,IAAI,EAAE,CADG;AAETC,IAAAA,UAAU,EAAE,QAFH;AAGTC,IAAAA,cAAc,EAAE,QAHP;AAITC,IAAAA,eAAe,EAAE;AAJR;AADoB,CAAlB,CAAf","sourcesContent":["// import React from 'react';\r\n// import ImageUploader from 'react-images-upload';\r\n// import { NotificationContainer, NotificationManager } from 'react-notifications';\r\n// import 'react-notifications/lib/notifications.css';\r\n\r\n// var fs = require('fs')\r\n// var path = require('path')\r\n// var util = require('util')\r\n\r\n// class App extends React.Component {\r\n\r\n//     constructor(props) {\r\n//         super(props);\r\n//         this.state = { pictures: [] };\r\n//         this.onDrop = this.onDrop.bind(this);\r\n//     }\r\n\r\n//     onDrop(picture) {\r\n//         console.log('Picture ', picture);\r\n//         this.setState({\r\n//             pictures: this.state.pictures.concat(picture),\r\n//         });\r\n//     }\r\n\r\n//     votar = () => {\r\n//         NotificationManager.success('Usuario registrado');\r\n//         storeWithOriginalName(this.state.pictures,'public/uploads');\r\n//     }\r\n\r\n//     render() {\r\n//         return (\r\n//             <>\r\n//                 <ImageUploader\r\n//                     withIcon={true}\r\n//                     buttonText='Choose images'\r\n//                     onChange={this.onDrop}\r\n//                     imgExtension={['.jpg', '.gif', '.png', '.gif']}\r\n//                     maxFileSize={5242880}\r\n//                     label=\"cosasoaj\"\r\n//                 />\r\n//                 <button onClick={this.votar}>oprimir</button>\r\n//                 <NotificationContainer />\r\n//             </>\r\n//         );\r\n//     }\r\n// }\r\n\r\n// function storeWithOriginalName(file,destination) {\r\n//     var fullNewPath = path.join(destination,file[0].name)\r\n//     console.log(\"FS \",fs.rename)\r\n//     var rename = util.promisify(fs.rename)\r\n\r\n//     var pathq='public\\\\uploads\\\\cc8b951ef8ce45d6195ec787947462c3';\r\n//     return rename(pathq, fullNewPath)\r\n//         .then(() => {\r\n//             return file[0].name\r\n//         })\r\n// }\r\n\r\n// export default App;\r\nimport React, { Component } from 'react';\r\nimport { Button, PanResponder, View, StyleSheet,TouchableOpacity, Text , Image} from 'react-native';\r\n\r\n\r\nexport default class App extends Component {\r\n  state = {\r\n    show : false\r\n  };\r\n  _panResponder = {};\r\n  timer = 0;\r\n  componentWillMount() {\r\n    this._panResponder = PanResponder.create({\r\n\r\n      onStartShouldSetPanResponder: () => {\r\n        this.resetTimer()\r\n        return true\r\n      },\r\n      onMoveShouldSetPanResponder: () => true,\r\n      onStartShouldSetPanResponderCapture: () => { this.resetTimer() ; return false},\r\n      onMoveShouldSetPanResponderCapture: () => false,\r\n      onPanResponderTerminationRequest: () => true,\r\n      onShouldBlockNativeResponder: () => false,\r\n    });\r\n    this.timer = setTimeout(()=>this.setState({show:true}),5000)\r\n  }\r\n\r\n  resetTimer(){\r\n    clearTimeout(this.timer)\r\n    if(this.state.show)\r\n    this.setState({show:false})\r\n    this.timer = setTimeout(()=>this.setState({show:true}),5000)\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <View\r\n        style={styles.container}\r\n        collapsable={false}\r\n        {...this._panResponder.panHandlers}>\r\n\r\n        {\r\n          this.state.show ? <Text style={{fontSize:30}}>Timer Expired : 5sec</Text> : null\r\n        }\r\n\r\n        <TouchableOpacity>\r\n          <Image style={{width: 300, height: 300}} source={{uri: 'https://facebook.github.io/react/img/logo_og.png'}} />\r\n        </TouchableOpacity>\r\n\r\n        <Button\r\n          title=\"Here is a button for some reason\"\r\n          onPress={() => {}}  \r\n        />\r\n      </View>\r\n    );\r\n  }\r\n}\r\n\r\nconst styles = StyleSheet.create({\r\n  container: {\r\n    flex: 1,\r\n    alignItems: 'center',\r\n    justifyContent: 'center',\r\n    backgroundColor: '#ecf0f1',\r\n  }\r\n});"]},"metadata":{},"sourceType":"module"}