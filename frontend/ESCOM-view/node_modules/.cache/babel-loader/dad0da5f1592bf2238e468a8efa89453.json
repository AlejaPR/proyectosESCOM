{"ast":null,"code":"import axios from 'axios';\nimport { desencriptar } from '../componentes/general/Encriptar.js';\nimport { mensajesDeError } from '../utilitario/MensajesError.js';\nexport const MOSTRAR_MODULOS = 'MOSTRAR_USUARIOS';\nexport const ESTADO_MODULOS = 'ESTADO_MODULOS';\nexport const ANADIR_CODIGO_EDITAR = 'ANADIR_CODIGO_EDITAR';\nexport const INFORMACION_MODULO = 'INFORMACION_MODULO';\nexport const MENSAJE_EDITAR_MODULO = 'MENSAJE_EDITAR_MODULO';\nexport const MENSAJE_SUSPENDER_MODULO = 'MENSAJE_SUSPENDER_MODULO';\nexport const MENSAJE_ACTIVIDADES = 'MENSAJE_ACTIVIDADES';\nexport const ACTIVIDADES_MODULO = 'ACTIVIDADES_MODULO';\nexport const ACTUALIZAR_MODULOS = 'ACTUALIZAR_MODULOS';\nexport const AGREGAR_MODULO = 'AGREGAR_MODULO';\nexport const MENSAJE_REGISTRAR_MODULO = 'MENSAJE_REGISTRAR_MODULO';\nconst URL_BASE = 'http://localhost:9090';\nconst PERMISO_REGISTRAR_MODULOS = 'sa_Registrar modulos';\nconst PERMISO_CONSULTAR_MODULOS = 'sa_Consultar modulos registrados';\nconst PERMISO_EDITAR_MODULOS = 'sa_Editar informacion de los modulos';\nconst PERMISO_SUSPENDER_ACTIVAR_ACTIVIDADES = 'sa_Suspender/activar actividades de modulos';\nconst PERMISO_SUSPENDER_ACTIVAR_MODULOS = 'sa_Suspender/activar modulos';\nexport function actionAgregarModulo(modulo, token) {\n  var tokenRequest = desencriptar(token);\n  const headers = {\n    'Content-Type': 'application/json',\n    'TokenAuto': tokenRequest,\n    'Permiso': PERMISO_REGISTRAR_MODULOS\n  };\n  modulo.datosSolicitud = {\n    'ip': localStorage.getItem('Ip'),\n    'token': desencriptar(token),\n    'operacion': PERMISO_REGISTRAR_MODULOS\n  };\n  return (dispatch, getState) => {\n    axios.post(`${URL_BASE}/proyectosESCOM-web/api/modulos/registrar`, modulo, {\n      headers: headers\n    }).then(response => {\n      dispatch({\n        type: AGREGAR_MODULO,\n        moduloARegistrar: modulo\n      });\n      dispatch({\n        type: MENSAJE_REGISTRAR_MODULO,\n        mensaje: 'modulo registrado'\n      });\n    }).catch(error => {\n      if (error.request.response === '') {\n        dispatch({\n          type: MENSAJE_REGISTRAR_MODULO,\n          mensaje: 'Servidor fuera de servicio temporalmente'\n        });\n      } else {\n        if (error.request) {\n          var o = JSON.parse(error.request.response);\n          let respuesta = mensajesDeError(o.respuesta);\n\n          if (respuesta !== '') {\n            dispatch({\n              type: MENSAJE_REGISTRAR_MODULO,\n              mensaje: respuesta\n            });\n          }\n        }\n      }\n    });\n  };\n}\nexport function actionConsultarModulos(token) {\n  var tokenRequest = desencriptar(token);\n  const headers = {\n    'Content-Type': 'application/json',\n    'TokenAuto': tokenRequest,\n    'Permiso': PERMISO_CONSULTAR_MODULOS\n  };\n  return (dispatch, getState) => {\n    axios.get(`${URL_BASE}/proyectosESCOM-web/api/modulos/listar`, {\n      headers: headers\n    }).then(response => {\n      dispatch({\n        type: MOSTRAR_MODULOS,\n        respuesta: response.data\n      });\n    }).catch(error => {\n      if (error.request.response === '') {} else {\n        if (error.request) {\n          var o = JSON.parse(error.request.response);\n          let respuesta = mensajesDeError(o.respuesta);\n\n          if (respuesta === 'Sin permiso') {\n            dispatch({\n              type: ESTADO_MODULOS,\n              estado: true\n            });\n          } else {//\n          }\n        }\n      }\n    });\n  };\n}\nexport function actionCargarInformacionDeModulo(codigoModulo, token) {\n  const headers = {\n    'Content-Type': 'application/json',\n    'TokenAuto': desencriptar(token),\n    'Permiso': PERMISO_EDITAR_MODULOS\n  };\n  return (dispatch, getState) => {\n    axios.get(`${URL_BASE}/proyectosESCOM-web/api/modulos/datos/${codigoModulo}`, {\n      headers: headers\n    }).then(response => {\n      dispatch({\n        type: INFORMACION_MODULO,\n        informacionModulo: response.data\n      });\n    }).catch(error => {\n      if (error.request.response === '') {\n        dispatch({\n          type: MENSAJE_EDITAR_MODULO,\n          mensaje: 'Servidor fuera de servicio temporalmente'\n        });\n      } else {\n        if (error.request) {\n          var o = JSON.parse(error.request.response);\n          let respuesta = mensajesDeError(o.respuesta);\n\n          if (respuesta !== '') {\n            dispatch({\n              type: MENSAJE_EDITAR_MODULO,\n              mensaje: respuesta\n            });\n          } else {\n            dispatch({\n              type: MENSAJE_EDITAR_MODULO,\n              mensaje: 'Sin acceso al servicio'\n            });\n          }\n        }\n      }\n    });\n  };\n}\nexport function actionConsultarActividadesModulo(codigoModulo, token) {\n  const headers = {\n    'Content-Type': 'application/json',\n    'TokenAuto': desencriptar(token),\n    'Permiso': PERMISO_SUSPENDER_ACTIVAR_ACTIVIDADES\n  };\n  return (dispatch, getState) => {\n    axios.get(`${URL_BASE}/proyectosESCOM-web/api/modulos/listarActividades/${codigoModulo}`, {\n      headers: headers\n    }).then(response => {\n      dispatch({\n        type: ACTIVIDADES_MODULO,\n        actividades: response.data\n      });\n    }).catch(error => {\n      if (error.request.response === '') {\n        dispatch({\n          type: MENSAJE_ACTIVIDADES,\n          mensaje: 'Servidor fuera de servicio temporalmente'\n        });\n      } else {\n        if (error.request) {\n          var o = JSON.parse(error.request.response);\n          let respuesta = mensajesDeError(o.respuesta);\n\n          if (respuesta !== '') {\n            dispatch({\n              type: MENSAJE_ACTIVIDADES,\n              mensaje: respuesta\n            });\n          } else {\n            dispatch({\n              type: MENSAJE_ACTIVIDADES,\n              mensaje: 'Sin acceso al servicio'\n            });\n          }\n        }\n      }\n    });\n  };\n}\nexport function actionSuspenderActivarModulo(codigoModulo, token, actualizados) {\n  var tokenRequest = desencriptar(token);\n  const headers = {\n    'Content-Type': 'application/json',\n    'TokenAuto': tokenRequest,\n    'Permiso': PERMISO_SUSPENDER_ACTIVAR_MODULOS\n  };\n  let datosSolicitud = {\n    'ip': localStorage.getItem('Ip'),\n    'token': desencriptar(token),\n    'operacion': PERMISO_SUSPENDER_ACTIVAR_MODULOS\n  };\n  return (dispatch, getState) => {\n    axios.put(`${URL_BASE}/proyectosESCOM-web/api/modulos/cambiarEstado/${codigoModulo}`, datosSolicitud, {\n      headers: headers\n    }).then(response => {\n      dispatch({\n        type: MENSAJE_SUSPENDER_MODULO,\n        mensaje: 'Operacion hecha con exito'\n      });\n      dispatch({\n        type: ACTUALIZAR_MODULOS,\n        modulo: actualizados\n      });\n    }).catch(error => {\n      console.log(error);\n\n      if (error.request.response === '') {\n        dispatch({\n          type: MENSAJE_SUSPENDER_MODULO,\n          mensaje: 'Servidor fuera de servicio temporalmente'\n        });\n      } else {\n        if (error.request) {\n          var o = JSON.parse(error.request.response);\n          let respuesta = mensajesDeError(o.respuesta);\n          console.log('respuesta', respuesta);\n\n          if (respuesta !== '') {\n            dispatch({\n              type: MENSAJE_SUSPENDER_MODULO,\n              mensaje: respuesta\n            });\n          } else {\n            dispatch({\n              type: MENSAJE_SUSPENDER_MODULO,\n              mensaje: 'Sin acceso al servicio'\n            });\n          }\n        }\n      }\n    });\n  };\n}\nexport function actionCambiarEstadoActividades(actividades, token) {\n  var tokenRequest = desencriptar(token);\n  const headers = {\n    'Content-Type': 'application/json',\n    'TokenAuto': tokenRequest,\n    'Permiso': PERMISO_SUSPENDER_ACTIVAR_ACTIVIDADES\n  };\n  actividades[0].datosSolicitud = {\n    'ip': localStorage.getItem('Ip'),\n    'token': desencriptar(token),\n    'operacion': PERMISO_SUSPENDER_ACTIVAR_ACTIVIDADES\n  };\n  return (dispatch, getState) => {\n    axios.put(`${URL_BASE}/proyectosESCOM-web/api/modulos/cambiarEstadoActividad/`, actividades, {\n      headers: headers\n    }).then(response => {\n      dispatch({\n        type: MENSAJE_ACTIVIDADES,\n        mensaje: 'Operacion hecha con exito'\n      });\n    }).catch(error => {\n      console.log(error);\n\n      if (error.request.response === '') {\n        dispatch({\n          type: MENSAJE_ACTIVIDADES,\n          mensaje: 'Servidor fuera de servicio temporalmente'\n        });\n      } else {\n        if (error.request) {\n          var o = JSON.parse(error.request.response);\n          let respuesta = mensajesDeError(o.respuesta);\n          console.log('respuesta', respuesta);\n\n          if (respuesta !== '') {\n            dispatch({\n              type: MENSAJE_ACTIVIDADES,\n              mensaje: respuesta\n            });\n          } else {\n            dispatch({\n              type: MENSAJE_ACTIVIDADES,\n              mensaje: 'Sin acceso al servicio'\n            });\n          }\n        }\n      }\n    });\n  };\n}\nexport function actionEditarModulo(modulo, codigoModulo, token) {\n  const headers = {\n    'Content-Type': 'application/json',\n    'TokenAuto': desencriptar(token),\n    'Permiso': PERMISO_EDITAR_MODULOS\n  };\n  modulo.datosSolicitud = {\n    'ip': localStorage.getItem('Ip'),\n    'token': desencriptar(token),\n    'operacion': PERMISO_EDITAR_MODULOS\n  };\n  return (dispatch, getState) => {\n    axios.put(`${URL_BASE}/proyectosESCOM-web/api/modulos/editar/${codigoModulo}`, modulo, {\n      headers: headers\n    }).then(response => {\n      dispatch({\n        type: MENSAJE_EDITAR_MODULO,\n        mensaje: 'modulo editado'\n      });\n    }).catch(error => {\n      if (error.request.response === '') {\n        dispatch({\n          type: MENSAJE_EDITAR_MODULO,\n          mensaje: 'Sin acceso al servicio'\n        });\n      } else {\n        if (error.request) {\n          var o = JSON.parse(error.request.response);\n          let respuesta = mensajesDeError(o.respuesta);\n\n          if (respuesta !== '') {\n            dispatch({\n              type: MENSAJE_EDITAR_MODULO,\n              mensaje: 'Sin acceso al servicio'\n            });\n          } else {\n            dispatch({\n              type: MENSAJE_EDITAR_MODULO,\n              mensaje: 'Sin acceso al servicio'\n            });\n          }\n        }\n      }\n    });\n  };\n}\nexport function actualizarMensajeSuspenderModulo(mensaje) {\n  return (dispatch, getState) => {\n    dispatch({\n      type: MENSAJE_SUSPENDER_MODULO,\n      mensaje: mensaje\n    });\n  };\n}\nexport function actualizarMensajeActividades(mensaje) {\n  return (dispatch, getState) => {\n    dispatch({\n      type: MENSAJE_ACTIVIDADES,\n      mensaje: mensaje\n    });\n  };\n}\nexport function actionAsignarModulo(codigoModulo) {\n  return (dispatch, getState) => {\n    dispatch({\n      type: ANADIR_CODIGO_EDITAR,\n      codigo: codigoModulo\n    });\n  };\n}\nexport function actualizarMensajeEditar(mensaje) {\n  return (dispatch, getState) => {\n    dispatch({\n      type: MENSAJE_EDITAR_MODULO,\n      mensaje: mensaje\n    });\n  };\n}\nexport function actualizarMensajeRegistrar(mensaje) {\n  return (dispatch, getState) => {\n    dispatch({\n      type: MENSAJE_REGISTRAR_MODULO,\n      mensaje: mensaje\n    });\n  };\n}","map":{"version":3,"sources":["C:/Users/jeiso/Desktop/proyectosESCOM/frontend/ESCOM-view/src/SuperAdministrador/actions/actionsModulo.js"],"names":["axios","desencriptar","mensajesDeError","MOSTRAR_MODULOS","ESTADO_MODULOS","ANADIR_CODIGO_EDITAR","INFORMACION_MODULO","MENSAJE_EDITAR_MODULO","MENSAJE_SUSPENDER_MODULO","MENSAJE_ACTIVIDADES","ACTIVIDADES_MODULO","ACTUALIZAR_MODULOS","AGREGAR_MODULO","MENSAJE_REGISTRAR_MODULO","URL_BASE","PERMISO_REGISTRAR_MODULOS","PERMISO_CONSULTAR_MODULOS","PERMISO_EDITAR_MODULOS","PERMISO_SUSPENDER_ACTIVAR_ACTIVIDADES","PERMISO_SUSPENDER_ACTIVAR_MODULOS","actionAgregarModulo","modulo","token","tokenRequest","headers","datosSolicitud","localStorage","getItem","dispatch","getState","post","then","response","type","moduloARegistrar","mensaje","catch","error","request","o","JSON","parse","respuesta","actionConsultarModulos","get","data","estado","actionCargarInformacionDeModulo","codigoModulo","informacionModulo","actionConsultarActividadesModulo","actividades","actionSuspenderActivarModulo","actualizados","put","console","log","actionCambiarEstadoActividades","actionEditarModulo","actualizarMensajeSuspenderModulo","actualizarMensajeActividades","actionAsignarModulo","codigo","actualizarMensajeEditar","actualizarMensajeRegistrar"],"mappings":"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","sourcesContent":["import axios from 'axios';\r\nimport { desencriptar } from '../componentes/general/Encriptar.js';\r\nimport { mensajesDeError } from '../utilitario/MensajesError.js';\r\n\r\nexport const MOSTRAR_MODULOS = 'MOSTRAR_USUARIOS';\r\nexport const ESTADO_MODULOS = 'ESTADO_MODULOS';\r\nexport const ANADIR_CODIGO_EDITAR = 'ANADIR_CODIGO_EDITAR';\r\n\r\nexport const INFORMACION_MODULO = 'INFORMACION_MODULO';\r\nexport const MENSAJE_EDITAR_MODULO = 'MENSAJE_EDITAR_MODULO';\r\nexport const MENSAJE_SUSPENDER_MODULO = 'MENSAJE_SUSPENDER_MODULO';\r\nexport const MENSAJE_ACTIVIDADES = 'MENSAJE_ACTIVIDADES';\r\nexport const ACTIVIDADES_MODULO = 'ACTIVIDADES_MODULO';\r\nexport const ACTUALIZAR_MODULOS = 'ACTUALIZAR_MODULOS';\r\nexport const AGREGAR_MODULO = 'AGREGAR_MODULO';\r\nexport const MENSAJE_REGISTRAR_MODULO = 'MENSAJE_REGISTRAR_MODULO';\r\n\r\nconst URL_BASE = 'http://localhost:9090';\r\nconst PERMISO_REGISTRAR_MODULOS = 'sa_Registrar modulos';\r\nconst PERMISO_CONSULTAR_MODULOS = 'sa_Consultar modulos registrados';\r\nconst PERMISO_EDITAR_MODULOS = 'sa_Editar informacion de los modulos';\r\nconst PERMISO_SUSPENDER_ACTIVAR_ACTIVIDADES = 'sa_Suspender/activar actividades de modulos';\r\nconst PERMISO_SUSPENDER_ACTIVAR_MODULOS = 'sa_Suspender/activar modulos';\r\n\r\nexport function actionAgregarModulo(modulo, token) {\r\n    var tokenRequest = desencriptar(token);\r\n    const headers = {\r\n        'Content-Type': 'application/json',\r\n        'TokenAuto': tokenRequest,\r\n        'Permiso': PERMISO_REGISTRAR_MODULOS\r\n    }\r\n    modulo.datosSolicitud = {\r\n        'ip': localStorage.getItem('Ip'),\r\n        'token': desencriptar(token),\r\n        'operacion': PERMISO_REGISTRAR_MODULOS\r\n    }\r\n    return (dispatch, getState) => {\r\n        axios.post(`${URL_BASE}/proyectosESCOM-web/api/modulos/registrar`, modulo, { headers: headers })\r\n            .then(response => {\r\n                dispatch({\r\n                    type: AGREGAR_MODULO,\r\n                    moduloARegistrar: modulo\r\n                });\r\n                dispatch({\r\n                    type: MENSAJE_REGISTRAR_MODULO,\r\n                    mensaje: 'modulo registrado'\r\n                });\r\n            }).catch((error) => {\r\n                if (error.request.response === '') {\r\n                    dispatch({\r\n                        type: MENSAJE_REGISTRAR_MODULO,\r\n                        mensaje: 'Servidor fuera de servicio temporalmente'\r\n                    });\r\n                } else {\r\n                    if (error.request) {\r\n                        var o = JSON.parse(error.request.response);\r\n                        let respuesta = mensajesDeError(o.respuesta);\r\n                        if (respuesta !== '') {\r\n                            dispatch({\r\n                                type: MENSAJE_REGISTRAR_MODULO,\r\n                                mensaje: respuesta\r\n                            });\r\n                        }\r\n                    }\r\n                }\r\n\r\n            });\r\n\r\n    }\r\n}\r\n\r\n\r\n\r\nexport function actionConsultarModulos(token) {\r\n    var tokenRequest = desencriptar(token);\r\n    const headers = {\r\n        'Content-Type': 'application/json',\r\n        'TokenAuto': tokenRequest,\r\n        'Permiso': PERMISO_CONSULTAR_MODULOS\r\n    }\r\n    return (dispatch, getState) => {\r\n        axios.get(`${URL_BASE}/proyectosESCOM-web/api/modulos/listar`, { headers: headers })\r\n            .then(response => {\r\n                dispatch({\r\n                    type: MOSTRAR_MODULOS,\r\n                    respuesta: response.data\r\n                });\r\n\r\n            }).catch((error) => {\r\n                if (error.request.response === '') {\r\n\r\n\r\n                } else {\r\n                    if (error.request) {\r\n                        var o = JSON.parse(error.request.response);\r\n                        let respuesta = mensajesDeError(o.respuesta);\r\n                        if (respuesta === 'Sin permiso') {\r\n                            dispatch({\r\n                                type: ESTADO_MODULOS,\r\n                                estado: true\r\n                            });\r\n                        } else {\r\n                            //\r\n                        }\r\n                    }\r\n                }\r\n            });\r\n    };\r\n}\r\n\r\nexport function actionCargarInformacionDeModulo(codigoModulo, token) {\r\n    const headers = {\r\n        'Content-Type': 'application/json',\r\n        'TokenAuto': desencriptar(token),\r\n        'Permiso': PERMISO_EDITAR_MODULOS\r\n    }\r\n    return (dispatch, getState) => {\r\n        axios.get(`${URL_BASE}/proyectosESCOM-web/api/modulos/datos/${codigoModulo}`, { headers: headers })\r\n            .then(response => {\r\n                dispatch({\r\n                    type: INFORMACION_MODULO,\r\n                    informacionModulo: response.data\r\n                });\r\n            }).catch((error) => {\r\n                if (error.request.response === '') {\r\n                    dispatch({\r\n                        type: MENSAJE_EDITAR_MODULO,\r\n                        mensaje: 'Servidor fuera de servicio temporalmente'\r\n                    });\r\n                } else {\r\n                    if (error.request) {\r\n                        var o = JSON.parse(error.request.response);\r\n                        let respuesta = mensajesDeError(o.respuesta);\r\n                        if (respuesta !== '') {\r\n                            dispatch({\r\n                                type: MENSAJE_EDITAR_MODULO,\r\n                                mensaje: respuesta\r\n                            });\r\n                        } else {\r\n                            dispatch({\r\n                                type: MENSAJE_EDITAR_MODULO,\r\n                                mensaje: 'Sin acceso al servicio'\r\n                            });\r\n                        }\r\n                    }\r\n                }\r\n            });\r\n    };\r\n}\r\n\r\nexport function actionConsultarActividadesModulo(codigoModulo, token) {\r\n    const headers = {\r\n        'Content-Type': 'application/json',\r\n        'TokenAuto': desencriptar(token),\r\n        'Permiso': PERMISO_SUSPENDER_ACTIVAR_ACTIVIDADES\r\n    }\r\n\r\n    return (dispatch, getState) => {\r\n        axios.get(`${URL_BASE}/proyectosESCOM-web/api/modulos/listarActividades/${codigoModulo}`, { headers: headers })\r\n            .then(response => {\r\n                dispatch({\r\n                    type: ACTIVIDADES_MODULO,\r\n                    actividades: response.data\r\n                });\r\n            }).catch((error) => {\r\n                if (error.request.response === '') {\r\n                    dispatch({\r\n                        type: MENSAJE_ACTIVIDADES,\r\n                        mensaje: 'Servidor fuera de servicio temporalmente'\r\n                    });\r\n                } else {\r\n                    if (error.request) {\r\n                        var o = JSON.parse(error.request.response);\r\n                        let respuesta = mensajesDeError(o.respuesta);\r\n                        if (respuesta !== '') {\r\n                            dispatch({\r\n                                type: MENSAJE_ACTIVIDADES,\r\n                                mensaje: respuesta\r\n                            });\r\n                        } else {\r\n                            dispatch({\r\n                                type: MENSAJE_ACTIVIDADES,\r\n                                mensaje: 'Sin acceso al servicio'\r\n                            });\r\n                        }\r\n                    }\r\n                }\r\n            });\r\n    };\r\n}\r\n\r\nexport function actionSuspenderActivarModulo(codigoModulo, token, actualizados) {\r\n    var tokenRequest = desencriptar(token);\r\n    const headers = {\r\n        'Content-Type': 'application/json',\r\n        'TokenAuto': tokenRequest,\r\n        'Permiso': PERMISO_SUSPENDER_ACTIVAR_MODULOS\r\n    }\r\n    let datosSolicitud = {\r\n        'ip': localStorage.getItem('Ip'),\r\n        'token': desencriptar(token),\r\n        'operacion': PERMISO_SUSPENDER_ACTIVAR_MODULOS\r\n    }\r\n    return (dispatch, getState) => {\r\n        axios.put(`${URL_BASE}/proyectosESCOM-web/api/modulos/cambiarEstado/${codigoModulo}`, datosSolicitud, { headers: headers })\r\n            .then(response => {\r\n                dispatch({\r\n                    type: MENSAJE_SUSPENDER_MODULO,\r\n                    mensaje: 'Operacion hecha con exito'\r\n                });\r\n                dispatch({\r\n                    type: ACTUALIZAR_MODULOS,\r\n                    modulo: actualizados\r\n                });\r\n            }).catch((error) => {\r\n                console.log(error);\r\n\r\n                if (error.request.response === '') {\r\n                    dispatch({\r\n                        type: MENSAJE_SUSPENDER_MODULO,\r\n                        mensaje: 'Servidor fuera de servicio temporalmente'\r\n                    });\r\n                } else {\r\n                    if (error.request) {\r\n                        var o = JSON.parse(error.request.response);\r\n                        let respuesta = mensajesDeError(o.respuesta);\r\n                        console.log('respuesta', respuesta);\r\n                        if (respuesta !== '') {\r\n                            dispatch({\r\n                                type: MENSAJE_SUSPENDER_MODULO,\r\n                                mensaje: respuesta\r\n                            });\r\n                        } else {\r\n                            dispatch({\r\n                                type: MENSAJE_SUSPENDER_MODULO,\r\n                                mensaje: 'Sin acceso al servicio'\r\n                            });\r\n                        }\r\n                    }\r\n                }\r\n\r\n            });\r\n\r\n    }\r\n}\r\n\r\nexport function actionCambiarEstadoActividades(actividades, token) {\r\n    var tokenRequest = desencriptar(token);\r\n    const headers = {\r\n        'Content-Type': 'application/json',\r\n        'TokenAuto': tokenRequest,\r\n        'Permiso': PERMISO_SUSPENDER_ACTIVAR_ACTIVIDADES\r\n    }\r\n    actividades[0].datosSolicitud = {\r\n        'ip': localStorage.getItem('Ip'),\r\n        'token': desencriptar(token),\r\n        'operacion': PERMISO_SUSPENDER_ACTIVAR_ACTIVIDADES\r\n    }\r\n    return (dispatch, getState) => {\r\n        axios.put(`${URL_BASE}/proyectosESCOM-web/api/modulos/cambiarEstadoActividad/`, actividades, { headers: headers })\r\n            .then(response => {\r\n                dispatch({\r\n                    type: MENSAJE_ACTIVIDADES,\r\n                    mensaje: 'Operacion hecha con exito'\r\n                });\r\n            }).catch((error) => {\r\n                console.log(error);\r\n\r\n                if (error.request.response === '') {\r\n                    dispatch({\r\n                        type: MENSAJE_ACTIVIDADES,\r\n                        mensaje: 'Servidor fuera de servicio temporalmente'\r\n                    });\r\n                } else {\r\n                    if (error.request) {\r\n                        var o = JSON.parse(error.request.response);\r\n                        let respuesta = mensajesDeError(o.respuesta);\r\n                        console.log('respuesta', respuesta);\r\n                        if (respuesta !== '') {\r\n                            dispatch({\r\n                                type: MENSAJE_ACTIVIDADES,\r\n                                mensaje: respuesta\r\n                            });\r\n                        } else {\r\n                            dispatch({\r\n                                type: MENSAJE_ACTIVIDADES,\r\n                                mensaje: 'Sin acceso al servicio'\r\n                            });\r\n                        }\r\n                    }\r\n                }\r\n\r\n            });\r\n\r\n    }\r\n}\r\n\r\n\r\n\r\nexport function actionEditarModulo(modulo, codigoModulo, token) {\r\n    const headers = {\r\n        'Content-Type': 'application/json',\r\n        'TokenAuto': desencriptar(token),\r\n        'Permiso': PERMISO_EDITAR_MODULOS\r\n    }\r\n    modulo.datosSolicitud = {     \r\n        'ip': localStorage.getItem('Ip'),\r\n        'token': desencriptar(token),\r\n        'operacion': PERMISO_EDITAR_MODULOS\r\n    }\r\n    return (dispatch, getState) => {\r\n        axios.put(`${URL_BASE}/proyectosESCOM-web/api/modulos/editar/${codigoModulo}`, modulo, { headers: headers })\r\n            .then(response => {\r\n                dispatch({\r\n                    type: MENSAJE_EDITAR_MODULO,\r\n                    mensaje: 'modulo editado'\r\n                });\r\n            }).catch((error) => {\r\n                if (error.request.response === '') {\r\n                    dispatch({\r\n                        type: MENSAJE_EDITAR_MODULO,\r\n                        mensaje: 'Sin acceso al servicio'\r\n                    });\r\n                } else {\r\n                    if (error.request) {\r\n                        var o = JSON.parse(error.request.response);\r\n                        let respuesta = mensajesDeError(o.respuesta);\r\n                        if (respuesta !== '') {\r\n                            dispatch({\r\n                                type: MENSAJE_EDITAR_MODULO,\r\n                                mensaje: 'Sin acceso al servicio'\r\n                            });\r\n                        } else {\r\n                            dispatch({\r\n                                type: MENSAJE_EDITAR_MODULO,\r\n                                mensaje: 'Sin acceso al servicio'\r\n                            });\r\n                        }\r\n                    }\r\n                }\r\n\r\n            });\r\n    }\r\n}\r\n\r\nexport function actualizarMensajeSuspenderModulo(mensaje) {\r\n    return (dispatch, getState) => {\r\n        dispatch({\r\n            type: MENSAJE_SUSPENDER_MODULO,\r\n            mensaje: mensaje\r\n        });\r\n    };\r\n}\r\n\r\nexport function actualizarMensajeActividades(mensaje) {\r\n    return (dispatch, getState) => {\r\n        dispatch({\r\n            type: MENSAJE_ACTIVIDADES,\r\n            mensaje: mensaje\r\n        });\r\n    };\r\n}\r\n\r\nexport function actionAsignarModulo(codigoModulo) {\r\n    return (dispatch, getState) => {\r\n        dispatch({\r\n            type: ANADIR_CODIGO_EDITAR,\r\n            codigo: codigoModulo\r\n        });\r\n    }\r\n}\r\n\r\nexport function actualizarMensajeEditar(mensaje) {\r\n    return (dispatch, getState) => {\r\n        dispatch({\r\n            type: MENSAJE_EDITAR_MODULO,\r\n            mensaje: mensaje\r\n        });\r\n    };\r\n}\r\n\r\n\r\nexport function actualizarMensajeRegistrar(mensaje) {\r\n    return (dispatch, getState) => {\r\n        dispatch({\r\n            type: MENSAJE_REGISTRAR_MODULO,\r\n            mensaje: mensaje\r\n        });\r\n    };\r\n}"]},"metadata":{},"sourceType":"module"}