{"ast":null,"code":"import _objectSpread from \"C:\\\\Users\\\\jeiso\\\\Desktop\\\\REACT\\\\proyectosESCOM\\\\frontend\\\\ESCOM-view\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/objectSpread\";\nvar _jsxFileName = \"C:\\\\Users\\\\jeiso\\\\Desktop\\\\REACT\\\\proyectosESCOM\\\\frontend\\\\ESCOM-view\\\\src\\\\SuperAdministrador\\\\componentes\\\\general\\\\Login.js\";\n// import React from 'react';\n// import '../../css/menu.css'\n// import '../../css/registro.css'\n// import { Button } from 'reactstrap';\n// import { reduxForm, Field } from 'redux-form';\n// import { actionLoginUsuario } from '../../actions/actionsUsuario.js'\n// import { connect } from 'react-redux';\n// import { requerido, correo } from '../../utilitario/validacionCampos.js';\n// import CircularProgress from '@material-ui/core/CircularProgress';\n// import { withRouter } from 'react-router-dom';\n// class Login extends React.Component {\n// \tstate = {\n// \t\thabilitado: false\n// \t}\n// \tcomponentDidUpdate() {\n// \t\tif (this.props.token === 'Login correcto') {\n// \t\t\tconsole.log('paso');\n// \t\t\tthis.props.history.push('/inicio');\n// \t\t}\n// \t}\n// \thabilitarBoton = (valor) => {\n// \t\tif (!this.state.habilitado) {\n// \t\t\tthis.setState({\n// \t\t\t\thabilitado: valor\n// \t\t\t});\n// \t\t}\n// \t}\n// \thandleSubmit = formValues => {\n// \t\tthis.setState({ habilitado: true });\n// \t\tthis.props.actionLoginUsuario(formValues.correo, formValues.contrasena, this.habilitarBoton);\n// \t}\n// \trender() {\n// \t\treturn (\n// \t\t\t<div>\n// \t\t\t\t<div className=\"container-fluid fondo-blanco\">\n// \t\t\t\t\t<div className=\"row no-gutter\">\n// \t\t\t\t\t\t<div className=\"d-none d-md-flex col-md-4 col-lg-6 bg-image\"></div>\n// \t\t\t\t\t\t<div className=\"col-md-8 col-lg-6\">\n// \t\t\t\t\t\t\t<div className=\"login d-flex align-items-center py-5\">\n// \t\t\t\t\t\t\t\t<div className=\"container\">\n// \t\t\t\t\t\t\t\t\t<div className=\"row\">\n// \t\t\t\t\t\t\t\t\t\t<div className=\"col-md-6 col-lg-10 mx-auto\">\n// \t\t\t\t\t\t\t\t\t\t\t<form onSubmit={this.props.handleSubmit(this.handleSubmit)} className=\"center\">\n// \t\t\t\t\t\t\t\t\t\t\t\t<h3 className=\"login-heading mb-4\">Sistema para el apoyo administrativo</h3>\n// \t\t\t\t\t\t\t\t\t\t\t\t<div className=\"row\">\n// \t\t\t\t\t\t\t\t\t\t\t\t\t<div className=\"col-md-12\">\n// \t\t\t\t\t\t\t\t\t\t\t\t\t\t<Field name=\"correo\" component={generarInput} validate={[requerido, correo]} label=\"Correo electronico\" />\n// \t\t\t\t\t\t\t\t\t\t\t\t\t</div>\n// \t\t\t\t\t\t\t\t\t\t\t\t</div>\n// \t\t\t\t\t\t\t\t\t\t\t\t<br />\n// \t\t\t\t\t\t\t\t\t\t\t\t<div className=\"row\">\n// \t\t\t\t\t\t\t\t\t\t\t\t\t<div className=\"col-md-12 center\">\n// \t\t\t\t\t\t\t\t\t\t\t\t\t\t<Field name=\"contrasena\" type=\"password\" component={generarInput} validate={[requerido]} label=\"Contraseña\" />\n// \t\t\t\t\t\t\t\t\t\t\t\t\t</div>\n// \t\t\t\t\t\t\t\t\t\t\t\t</div>\n// \t\t\t\t\t\t\t\t\t\t\t\t<div className=\"row\">\n// \t\t\t\t\t\t\t\t\t\t\t\t\t<div className=\"col-sm-12 center\">\n// \t\t\t\t\t\t\t\t\t\t\t\t\t\t<Field name=\"mensaje\" component={generarMensaje} label={this.props.token} />\n// \t\t\t\t\t\t\t\t\t\t\t\t\t</div>\n// \t\t\t\t\t\t\t\t\t\t\t\t</div>\n// \t\t\t\t\t\t\t\t\t\t\t\t<div className=\"row\">\n// \t\t\t\t\t\t\t\t\t\t\t\t\t<div className=\"col-sm-12 center\">\n// \t\t\t\t\t\t\t\t\t\t\t\t\t\t<a href=\"/editar\" id=\"forget-password\" className=\"small\" >¿Olvido su contraseña?</a>\n// \t\t\t\t\t\t\t\t\t\t\t\t\t</div>\n// \t\t\t\t\t\t\t\t\t\t\t\t</div>\n// \t\t\t\t\t\t\t\t\t\t\t\t<br />\n// \t\t\t\t\t\t\t\t\t\t\t\t<div className=\"row\">\n// \t\t\t\t\t\t\t\t\t\t\t\t\t<div className=\"col-sm-6 center\">\n// \t\t\t\t\t\t\t\t\t\t\t\t\t\t<Button style={fondoBoton} disabled={this.state.habilitado} type=\"submit\">Iniciar sesion</Button>\n// \t\t\t\t\t\t\t\t\t\t\t\t\t</div>\n// \t\t\t\t\t\t\t\t\t\t\t\t\t{this.state.habilitado ? <div className=\"col-sm-2 center\"><CircularProgress color=\"secondary\" /></div> : <div></div>}\n// \t\t\t\t\t\t\t\t\t\t\t\t</div>\n// \t\t\t\t\t\t\t\t\t\t\t</form>\n// \t\t\t\t\t\t\t\t\t\t</div>\n// \t\t\t\t\t\t\t\t\t</div>\n// \t\t\t\t\t\t\t\t</div>\n// \t\t\t\t\t\t\t</div>\n// \t\t\t\t\t\t</div>\n// \t\t\t\t\t</div>\n// \t\t\t\t</div>\n// \t\t\t</div>\n// \t\t)\n// \t}\n// }\n// const generarInput = ({ input, label, type, meta: { touched, error, warning } }) => (\n// \t<div>\n// \t\t<div>\n// \t\t\t<input {...input} placeholder={label} type={type} className=\"form-control letra form-control-solid placeholder-no-fix\" />\n// \t\t\t{touched && ((error && <span className=\"text-danger letra form-group\">{error}</span>) || (warning && <span>{warning}</span>))}\n// \t\t</div>\n// \t</div>\n// )\n// const generarMensaje = ({ input, label, type, meta: { touched, error, warning } }) => (\n// \t<div>\n// \t\t<div>\n// \t\t\t<input {...input} value={label} placeholder={label} type={type} style={{ background: \"none\", border: \"none\", height: \"10px\", width: \"400px\", fontSize: \"13px\", fontFamily: \"sans-serif\", color: \"#dc3545\", margin: \"0px 0px 16px\" }} disabled={true} className=\"letra\" />\n// \t\t</div>\n// \t</div>\n// )\n// const fondoBoton = {\n// \tbackground: \"#ec671d\"\n// }\n// function mapStateToProps(state) {\n// \treturn {\n// \t\ttoken: state.user.token\n// \t}\n// }\n// let formulario = reduxForm({\n// \tform: 'loginUsuario'\n// })(Login)\n// export default withRouter(connect(mapStateToProps, { actionLoginUsuario })(formulario));\nimport \"./styles.css\";\nimport React from \"react\";\nimport { TransitionGroup, CSSTransition } from \"react-transition-group\";\nimport { BrowserRouter as Router, Switch, Route, Link, Redirect, useLocation, useParams } from \"react-router-dom\";\nexport default function AnimationExample() {\n  return React.createElement(Router, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 150\n    },\n    __self: this\n  }, React.createElement(Switch, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 151\n    },\n    __self: this\n  }, React.createElement(Route, {\n    exact: true,\n    path: \"/\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 152\n    },\n    __self: this\n  }, React.createElement(Redirect, {\n    to: \"/hsl/10/90/50\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 153\n    },\n    __self: this\n  })), React.createElement(Route, {\n    path: \"*\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 155\n    },\n    __self: this\n  }, React.createElement(AnimationApp, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 156\n    },\n    __self: this\n  }))));\n}\n\nfunction AnimationApp() {\n  let location = useLocation();\n  return React.createElement(\"div\", {\n    style: styles.fill,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 167\n    },\n    __self: this\n  }, React.createElement(\"ul\", {\n    style: styles.nav,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 168\n    },\n    __self: this\n  }, React.createElement(NavLink, {\n    to: \"/hsl/10/90/50\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 169\n    },\n    __self: this\n  }, \"Red\"), React.createElement(NavLink, {\n    to: \"/hsl/120/100/40\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 170\n    },\n    __self: this\n  }, \"Green\"), React.createElement(NavLink, {\n    to: \"/rgb/33/150/243\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 171\n    },\n    __self: this\n  }, \"Blue\"), React.createElement(NavLink, {\n    to: \"/rgb/240/98/146\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 172\n    },\n    __self: this\n  }, \"Pink\")), React.createElement(\"div\", {\n    style: styles.content,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 175\n    },\n    __self: this\n  }, React.createElement(TransitionGroup, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 176\n    },\n    __self: this\n  }, React.createElement(CSSTransition, {\n    key: location.key,\n    classNames: \"fade\",\n    timeout: 300,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 183\n    },\n    __self: this\n  }, React.createElement(Switch, {\n    location: location,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 188\n    },\n    __self: this\n  }, React.createElement(Route, {\n    path: \"/hsl/:h/:s/:l\",\n    children: React.createElement(HSL, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 189\n      },\n      __self: this\n    }),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 189\n    },\n    __self: this\n  }), React.createElement(Route, {\n    path: \"/rgb/:r/:g/:b\",\n    children: React.createElement(RGB, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 190\n      },\n      __self: this\n    }),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 190\n    },\n    __self: this\n  }))))));\n}\n\nfunction NavLink(props) {\n  return React.createElement(\"li\", {\n    style: styles.navItem,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 201\n    },\n    __self: this\n  }, React.createElement(Link, Object.assign({}, props, {\n    style: {\n      color: \"inherit\"\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 202\n    },\n    __self: this\n  })));\n}\n\nfunction HSL() {\n  let _useParams = useParams(),\n      h = _useParams.h,\n      s = _useParams.s,\n      l = _useParams.l;\n\n  return React.createElement(\"div\", {\n    style: _objectSpread({}, styles.fill, styles.hsl, {\n      background: \"hsl(\".concat(h, \", \").concat(s, \"%, \").concat(l, \"%)\")\n    }),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 211\n    },\n    __self: this\n  }, \"hsl(\", h, \", \", s, \"%, \", l, \"%)\");\n}\n\nfunction RGB() {\n  let _useParams2 = useParams(),\n      r = _useParams2.r,\n      g = _useParams2.g,\n      b = _useParams2.b;\n\n  return React.createElement(\"div\", {\n    style: _objectSpread({}, styles.fill, styles.rgb, {\n      background: \"rgb(\".concat(r, \", \").concat(g, \", \").concat(b, \")\")\n    }),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 227\n    },\n    __self: this\n  }, \"rgb(\", r, \", \", g, \", \", b, \")\");\n}\n\nconst styles = {};\nstyles.fill = {\n  position: \"absolute\",\n  left: 0,\n  right: 0,\n  top: 0,\n  bottom: 0\n};\nstyles.content = _objectSpread({}, styles.fill, {\n  top: \"40px\",\n  textAlign: \"center\"\n});\nstyles.nav = {\n  padding: 0,\n  margin: 0,\n  position: \"absolute\",\n  top: 0,\n  height: \"40px\",\n  width: \"100%\",\n  display: \"flex\"\n};\nstyles.navItem = {\n  textAlign: \"center\",\n  flex: 1,\n  listStyleType: \"none\",\n  padding: \"10px\"\n};\nstyles.hsl = _objectSpread({}, styles.fill, {\n  color: \"white\",\n  paddingTop: \"20px\",\n  fontSize: \"30px\"\n});\nstyles.rgb = _objectSpread({}, styles.fill, {\n  color: \"white\",\n  paddingTop: \"20px\",\n  fontSize: \"30px\"\n});","map":{"version":3,"sources":["C:\\Users\\jeiso\\Desktop\\REACT\\proyectosESCOM\\frontend\\ESCOM-view\\src\\SuperAdministrador\\componentes\\general\\Login.js"],"names":["React","TransitionGroup","CSSTransition","BrowserRouter","Router","Switch","Route","Link","Redirect","useLocation","useParams","AnimationExample","AnimationApp","location","styles","fill","nav","content","key","NavLink","props","navItem","color","HSL","h","s","l","hsl","background","RGB","r","g","b","rgb","position","left","right","top","bottom","textAlign","padding","margin","height","width","display","flex","listStyleType","paddingTop","fontSize"],"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","sourcesContent":["// import React from 'react';\r\n\r\n// import '../../css/menu.css'\r\n// import '../../css/registro.css'\r\n\r\n// import { Button } from 'reactstrap';\r\n// import { reduxForm, Field } from 'redux-form';\r\n\r\n// import { actionLoginUsuario } from '../../actions/actionsUsuario.js'\r\n// import { connect } from 'react-redux';\r\n// import { requerido, correo } from '../../utilitario/validacionCampos.js';\r\n// import CircularProgress from '@material-ui/core/CircularProgress';\r\n// import { withRouter } from 'react-router-dom';\r\n\r\n// class Login extends React.Component {\r\n\r\n// \tstate = {\r\n// \t\thabilitado: false\r\n// \t}\r\n\r\n// \tcomponentDidUpdate() {\r\n// \t\tif (this.props.token === 'Login correcto') {\r\n// \t\t\tconsole.log('paso');\r\n// \t\t\tthis.props.history.push('/inicio');\r\n// \t\t}\r\n// \t}\r\n\r\n// \thabilitarBoton = (valor) => {\r\n// \t\tif (!this.state.habilitado) {\r\n// \t\t\tthis.setState({\r\n// \t\t\t\thabilitado: valor\r\n// \t\t\t});\r\n// \t\t}\r\n// \t}\r\n\r\n// \thandleSubmit = formValues => {\r\n// \t\tthis.setState({ habilitado: true });\r\n// \t\tthis.props.actionLoginUsuario(formValues.correo, formValues.contrasena, this.habilitarBoton);\r\n// \t}\r\n\r\n\r\n// \trender() {\r\n// \t\treturn (\r\n// \t\t\t<div>\r\n// \t\t\t\t<div className=\"container-fluid fondo-blanco\">\r\n// \t\t\t\t\t<div className=\"row no-gutter\">\r\n// \t\t\t\t\t\t<div className=\"d-none d-md-flex col-md-4 col-lg-6 bg-image\"></div>\r\n// \t\t\t\t\t\t<div className=\"col-md-8 col-lg-6\">\r\n// \t\t\t\t\t\t\t<div className=\"login d-flex align-items-center py-5\">\r\n// \t\t\t\t\t\t\t\t<div className=\"container\">\r\n// \t\t\t\t\t\t\t\t\t<div className=\"row\">\r\n// \t\t\t\t\t\t\t\t\t\t<div className=\"col-md-6 col-lg-10 mx-auto\">\r\n// \t\t\t\t\t\t\t\t\t\t\t<form onSubmit={this.props.handleSubmit(this.handleSubmit)} className=\"center\">\r\n// \t\t\t\t\t\t\t\t\t\t\t\t<h3 className=\"login-heading mb-4\">Sistema para el apoyo administrativo</h3>\r\n// \t\t\t\t\t\t\t\t\t\t\t\t<div className=\"row\">\r\n// \t\t\t\t\t\t\t\t\t\t\t\t\t<div className=\"col-md-12\">\r\n// \t\t\t\t\t\t\t\t\t\t\t\t\t\t<Field name=\"correo\" component={generarInput} validate={[requerido, correo]} label=\"Correo electronico\" />\r\n// \t\t\t\t\t\t\t\t\t\t\t\t\t</div>\r\n// \t\t\t\t\t\t\t\t\t\t\t\t</div>\r\n// \t\t\t\t\t\t\t\t\t\t\t\t<br />\r\n// \t\t\t\t\t\t\t\t\t\t\t\t<div className=\"row\">\r\n// \t\t\t\t\t\t\t\t\t\t\t\t\t<div className=\"col-md-12 center\">\r\n// \t\t\t\t\t\t\t\t\t\t\t\t\t\t<Field name=\"contrasena\" type=\"password\" component={generarInput} validate={[requerido]} label=\"Contraseña\" />\r\n// \t\t\t\t\t\t\t\t\t\t\t\t\t</div>\r\n// \t\t\t\t\t\t\t\t\t\t\t\t</div>\r\n// \t\t\t\t\t\t\t\t\t\t\t\t<div className=\"row\">\r\n// \t\t\t\t\t\t\t\t\t\t\t\t\t<div className=\"col-sm-12 center\">\r\n// \t\t\t\t\t\t\t\t\t\t\t\t\t\t<Field name=\"mensaje\" component={generarMensaje} label={this.props.token} />\r\n// \t\t\t\t\t\t\t\t\t\t\t\t\t</div>\r\n// \t\t\t\t\t\t\t\t\t\t\t\t</div>\r\n// \t\t\t\t\t\t\t\t\t\t\t\t<div className=\"row\">\r\n// \t\t\t\t\t\t\t\t\t\t\t\t\t<div className=\"col-sm-12 center\">\r\n// \t\t\t\t\t\t\t\t\t\t\t\t\t\t<a href=\"/editar\" id=\"forget-password\" className=\"small\" >¿Olvido su contraseña?</a>\r\n// \t\t\t\t\t\t\t\t\t\t\t\t\t</div>\r\n// \t\t\t\t\t\t\t\t\t\t\t\t</div>\r\n// \t\t\t\t\t\t\t\t\t\t\t\t<br />\r\n// \t\t\t\t\t\t\t\t\t\t\t\t<div className=\"row\">\r\n// \t\t\t\t\t\t\t\t\t\t\t\t\t<div className=\"col-sm-6 center\">\r\n// \t\t\t\t\t\t\t\t\t\t\t\t\t\t<Button style={fondoBoton} disabled={this.state.habilitado} type=\"submit\">Iniciar sesion</Button>\r\n\r\n// \t\t\t\t\t\t\t\t\t\t\t\t\t</div>\r\n// \t\t\t\t\t\t\t\t\t\t\t\t\t{this.state.habilitado ? <div className=\"col-sm-2 center\"><CircularProgress color=\"secondary\" /></div> : <div></div>}\r\n// \t\t\t\t\t\t\t\t\t\t\t\t</div>\r\n// \t\t\t\t\t\t\t\t\t\t\t</form>\r\n// \t\t\t\t\t\t\t\t\t\t</div>\r\n// \t\t\t\t\t\t\t\t\t</div>\r\n// \t\t\t\t\t\t\t\t</div>\r\n// \t\t\t\t\t\t\t</div>\r\n// \t\t\t\t\t\t</div>\r\n// \t\t\t\t\t</div>\r\n// \t\t\t\t</div>\r\n// \t\t\t</div>\r\n// \t\t)\r\n// \t}\r\n// }\r\n\r\n// const generarInput = ({ input, label, type, meta: { touched, error, warning } }) => (\r\n// \t<div>\r\n// \t\t<div>\r\n// \t\t\t<input {...input} placeholder={label} type={type} className=\"form-control letra form-control-solid placeholder-no-fix\" />\r\n// \t\t\t{touched && ((error && <span className=\"text-danger letra form-group\">{error}</span>) || (warning && <span>{warning}</span>))}\r\n// \t\t</div>\r\n// \t</div>\r\n// )\r\n\r\n// const generarMensaje = ({ input, label, type, meta: { touched, error, warning } }) => (\r\n// \t<div>\r\n// \t\t<div>\r\n// \t\t\t<input {...input} value={label} placeholder={label} type={type} style={{ background: \"none\", border: \"none\", height: \"10px\", width: \"400px\", fontSize: \"13px\", fontFamily: \"sans-serif\", color: \"#dc3545\", margin: \"0px 0px 16px\" }} disabled={true} className=\"letra\" />\r\n// \t\t</div>\r\n// \t</div>\r\n// )\r\n\r\n// const fondoBoton = {\r\n// \tbackground: \"#ec671d\"\r\n// }\r\n\r\n// function mapStateToProps(state) {\r\n// \treturn {\r\n// \t\ttoken: state.user.token\r\n// \t}\r\n// }\r\n\r\n// let formulario = reduxForm({\r\n// \tform: 'loginUsuario'\r\n// })(Login)\r\n\r\n\r\n\r\n// export default withRouter(connect(mapStateToProps, { actionLoginUsuario })(formulario));\r\nimport \"./styles.css\";\r\n\r\nimport React from \"react\";\r\nimport {\r\n  TransitionGroup,\r\n  CSSTransition\r\n} from \"react-transition-group\";\r\nimport {\r\n  BrowserRouter as Router,\r\n  Switch,\r\n  Route,\r\n  Link,\r\n  Redirect,\r\n  useLocation,\r\n  useParams\r\n} from \"react-router-dom\";\r\n\r\nexport default function AnimationExample() {\r\n  return (\r\n    <Router>\r\n      <Switch>\r\n        <Route exact path=\"/\">\r\n          <Redirect to=\"/hsl/10/90/50\" />\r\n        </Route>\r\n        <Route path=\"*\">\r\n          <AnimationApp />\r\n        </Route>\r\n      </Switch>\r\n    </Router>\r\n  );\r\n}\r\n\r\nfunction AnimationApp() {\r\n  let location = useLocation();\r\n\r\n  return (\r\n    <div style={styles.fill}>\r\n      <ul style={styles.nav}>\r\n        <NavLink to=\"/hsl/10/90/50\">Red</NavLink>\r\n        <NavLink to=\"/hsl/120/100/40\">Green</NavLink>\r\n        <NavLink to=\"/rgb/33/150/243\">Blue</NavLink>\r\n        <NavLink to=\"/rgb/240/98/146\">Pink</NavLink>\r\n      </ul>\r\n\r\n      <div style={styles.content}>\r\n        <TransitionGroup>\r\n          {/*\r\n            This is no different than other usage of\r\n            <CSSTransition>, just make sure to pass\r\n            `location` to `Switch` so it can match\r\n            the old location as it animates out.\r\n          */}\r\n          <CSSTransition\r\n            key={location.key}\r\n            classNames=\"fade\"\r\n            timeout={300}\r\n          >\r\n            <Switch location={location}>\r\n              <Route path=\"/hsl/:h/:s/:l\" children={<HSL />} />\r\n              <Route path=\"/rgb/:r/:g/:b\" children={<RGB />} />\r\n            </Switch>\r\n          </CSSTransition>\r\n        </TransitionGroup>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nfunction NavLink(props) {\r\n  return (\r\n    <li style={styles.navItem}>\r\n      <Link {...props} style={{ color: \"inherit\" }} />\r\n    </li>\r\n  );\r\n}\r\n\r\nfunction HSL() {\r\n  let { h, s, l } = useParams();\r\n\r\n  return (\r\n    <div\r\n      style={{\r\n        ...styles.fill,\r\n        ...styles.hsl,\r\n        background: `hsl(${h}, ${s}%, ${l}%)`\r\n      }}\r\n    >\r\n      hsl({h}, {s}%, {l}%)\r\n    </div>\r\n  );\r\n}\r\n\r\nfunction RGB() {\r\n  let { r, g, b } = useParams();\r\n\r\n  return (\r\n    <div\r\n      style={{\r\n        ...styles.fill,\r\n        ...styles.rgb,\r\n        background: `rgb(${r}, ${g}, ${b})`\r\n      }}\r\n    >\r\n      rgb({r}, {g}, {b})\r\n    </div>\r\n  );\r\n}\r\n\r\nconst styles = {};\r\n\r\nstyles.fill = {\r\n  position: \"absolute\",\r\n  left: 0,\r\n  right: 0,\r\n  top: 0,\r\n  bottom: 0\r\n};\r\n\r\nstyles.content = {\r\n  ...styles.fill,\r\n  top: \"40px\",\r\n  textAlign: \"center\"\r\n};\r\n\r\nstyles.nav = {\r\n  padding: 0,\r\n  margin: 0,\r\n  position: \"absolute\",\r\n  top: 0,\r\n  height: \"40px\",\r\n  width: \"100%\",\r\n  display: \"flex\"\r\n};\r\n\r\nstyles.navItem = {\r\n  textAlign: \"center\",\r\n  flex: 1,\r\n  listStyleType: \"none\",\r\n  padding: \"10px\"\r\n};\r\n\r\nstyles.hsl = {\r\n  ...styles.fill,\r\n  color: \"white\",\r\n  paddingTop: \"20px\",\r\n  fontSize: \"30px\"\r\n};\r\n\r\nstyles.rgb = {\r\n  ...styles.fill,\r\n  color: \"white\",\r\n  paddingTop: \"20px\",\r\n  fontSize: \"30px\"\r\n};"]},"metadata":{},"sourceType":"module"}