{"ast":null,"code":"import { GET_ID_DOCUMENT, GET_DOCUMENT_ID, ADD_DOCUMENT, DISABLE_DOCUMENT, ADD_MESSAGE_ADD, ADD_MESSAGE_EDIT, GET_DOCUMENT_ID_EDIT, EDIT_DOCUMENT, GET_LIST_DOCUMENTS, ADD_MESSAGE_DISABLE } from '../actions/documentA.js';\nconst initialState = {\n  documentIdG: [],\n  listDocumentR: [],\n  documentR: [],\n  messageEdit: '',\n  messageAdd: '',\n  messageDisable: ''\n};\nexport function reducersDocument(state = initialState, action) {\n  switch (action.type) {\n    case GET_ID_DOCUMENT:\n      return Object.assign({}, state, {\n        documentIdG: action.payload\n      });\n\n    case GET_DOCUMENT_ID:\n      return Object.assign({}, state, {\n        documentR: action.payload\n      });\n\n    case GET_DOCUMENT_ID_EDIT:\n      return Object.assign({}, state, {\n        documentR: action.payload\n      });\n\n    case EDIT_DOCUMENT:\n      return Object.assign({}, state, {\n        messageEdit: action.payload\n      });\n\n    case DISABLE_DOCUMENT:\n      return Object.assign({}, state, {\n        messageDisable: action.payload\n      });\n\n    case ADD_DOCUMENT:\n      return Object.assign({}, state, {\n        messageAdd: action.payload\n      });\n\n    case GET_LIST_DOCUMENTS:\n      return Object.assign({}, state, {\n        listDocumentR: action.payload\n      });\n\n    case ADD_MESSAGE_EDIT:\n      return Object.assign({}, state, {\n        messageEdit: action.payload\n      });\n\n    case ADD_MESSAGE_ADD:\n      return Object.assign({}, state, {\n        messageAdd: action.payload\n      });\n\n    case ADD_MESSAGE_DISABLE:\n      return Object.assign({}, state, {\n        messageDisable: action.payload\n      });\n\n    default:\n      return state;\n  }\n}","map":{"version":3,"sources":["C:/Users/jeiso/Desktop/proyectosESCOM/frontend/ESCOM-view/src/ModuloDocumental/redux/reducers/documentR.js"],"names":["GET_ID_DOCUMENT","GET_DOCUMENT_ID","ADD_DOCUMENT","DISABLE_DOCUMENT","ADD_MESSAGE_ADD","ADD_MESSAGE_EDIT","GET_DOCUMENT_ID_EDIT","EDIT_DOCUMENT","GET_LIST_DOCUMENTS","ADD_MESSAGE_DISABLE","initialState","documentIdG","listDocumentR","documentR","messageEdit","messageAdd","messageDisable","reducersDocument","state","action","type","Object","assign","payload"],"mappings":"AAAA,SAASA,eAAT,EAA0BC,eAA1B,EAA2CC,YAA3C,EAAwDC,gBAAxD,EAA0EC,eAA1E,EAA2FC,gBAA3F,EAA6GC,oBAA7G,EAAmIC,aAAnI,EAAkJC,kBAAlJ,EAAsKC,mBAAtK,QAAiM,yBAAjM;AAEA,MAAMC,YAAY,GAAG;AACjBC,EAAAA,WAAW,EAAE,EADI;AAEjBC,EAAAA,aAAa,EAAE,EAFE;AAGjBC,EAAAA,SAAS,EAAE,EAHM;AAIjBC,EAAAA,WAAW,EAAE,EAJI;AAKjBC,EAAAA,UAAU,EAAE,EALK;AAMjBC,EAAAA,cAAc,EAAE;AANC,CAArB;AASA,OAAO,SAASC,gBAAT,CAA0BC,KAAK,GAAGR,YAAlC,EAAgDS,MAAhD,EAAwD;AAE3D,UAAQA,MAAM,CAACC,IAAf;AACI,SAAKpB,eAAL;AACI,aAAOqB,MAAM,CAACC,MAAP,CAAc,EAAd,EAAkBJ,KAAlB,EAAyB;AAAEP,QAAAA,WAAW,EAAEQ,MAAM,CAACI;AAAtB,OAAzB,CAAP;;AACJ,SAAKtB,eAAL;AACI,aAAOoB,MAAM,CAACC,MAAP,CAAc,EAAd,EAAkBJ,KAAlB,EAAyB;AAAEL,QAAAA,SAAS,EAAEM,MAAM,CAACI;AAApB,OAAzB,CAAP;;AACJ,SAAKjB,oBAAL;AACI,aAAOe,MAAM,CAACC,MAAP,CAAc,EAAd,EAAkBJ,KAAlB,EAAyB;AAAEL,QAAAA,SAAS,EAAEM,MAAM,CAACI;AAApB,OAAzB,CAAP;;AACJ,SAAKhB,aAAL;AACI,aAAOc,MAAM,CAACC,MAAP,CAAc,EAAd,EAAkBJ,KAAlB,EAAyB;AAAEJ,QAAAA,WAAW,EAAEK,MAAM,CAACI;AAAtB,OAAzB,CAAP;;AACJ,SAAKpB,gBAAL;AACI,aAAOkB,MAAM,CAACC,MAAP,CAAc,EAAd,EAAkBJ,KAAlB,EAAyB;AAAEF,QAAAA,cAAc,EAAEG,MAAM,CAACI;AAAzB,OAAzB,CAAP;;AACJ,SAAKrB,YAAL;AACI,aAAOmB,MAAM,CAACC,MAAP,CAAc,EAAd,EAAkBJ,KAAlB,EAAyB;AAAEH,QAAAA,UAAU,EAAEI,MAAM,CAACI;AAArB,OAAzB,CAAP;;AACJ,SAAKf,kBAAL;AACI,aAAOa,MAAM,CAACC,MAAP,CAAc,EAAd,EAAkBJ,KAAlB,EAAyB;AAAEN,QAAAA,aAAa,EAAEO,MAAM,CAACI;AAAxB,OAAzB,CAAP;;AACJ,SAAKlB,gBAAL;AACI,aAAOgB,MAAM,CAACC,MAAP,CAAc,EAAd,EAAkBJ,KAAlB,EAAyB;AAAEJ,QAAAA,WAAW,EAAEK,MAAM,CAACI;AAAtB,OAAzB,CAAP;;AACJ,SAAKnB,eAAL;AACI,aAAOiB,MAAM,CAACC,MAAP,CAAc,EAAd,EAAkBJ,KAAlB,EAAyB;AAAEH,QAAAA,UAAU,EAAEI,MAAM,CAACI;AAArB,OAAzB,CAAP;;AACJ,SAAKd,mBAAL;AACI,aAAOY,MAAM,CAACC,MAAP,CAAc,EAAd,EAAkBJ,KAAlB,EAAyB;AAAEF,QAAAA,cAAc,EAAEG,MAAM,CAACI;AAAzB,OAAzB,CAAP;;AACJ;AACI,aAAOL,KAAP;AAtBR;AAyBH","sourcesContent":["import { GET_ID_DOCUMENT, GET_DOCUMENT_ID, ADD_DOCUMENT,DISABLE_DOCUMENT, ADD_MESSAGE_ADD, ADD_MESSAGE_EDIT, GET_DOCUMENT_ID_EDIT, EDIT_DOCUMENT, GET_LIST_DOCUMENTS, ADD_MESSAGE_DISABLE } from '../actions/documentA.js'\r\n\r\nconst initialState = {\r\n    documentIdG: [],\r\n    listDocumentR: [],\r\n    documentR: [],\r\n    messageEdit: '',\r\n    messageAdd: '',\r\n    messageDisable: ''\r\n}\r\n\r\nexport function reducersDocument(state = initialState, action) {\r\n\r\n    switch (action.type) {\r\n        case GET_ID_DOCUMENT:\r\n            return Object.assign({}, state, { documentIdG: action.payload })\r\n        case GET_DOCUMENT_ID:\r\n            return Object.assign({}, state, { documentR: action.payload })\r\n        case GET_DOCUMENT_ID_EDIT:\r\n            return Object.assign({}, state, { documentR: action.payload })\r\n        case EDIT_DOCUMENT:\r\n            return Object.assign({}, state, { messageEdit: action.payload })\r\n        case DISABLE_DOCUMENT:\r\n            return Object.assign({}, state, { messageDisable: action.payload })\r\n        case ADD_DOCUMENT:\r\n            return Object.assign({}, state, { messageAdd: action.payload })\r\n        case GET_LIST_DOCUMENTS:\r\n            return Object.assign({}, state, { listDocumentR: action.payload })\r\n        case ADD_MESSAGE_EDIT:\r\n            return Object.assign({}, state, { messageEdit: action.payload })\r\n        case ADD_MESSAGE_ADD:\r\n            return Object.assign({}, state, { messageAdd: action.payload })\r\n        case ADD_MESSAGE_DISABLE:\r\n            return Object.assign({}, state, { messageDisable: action.payload })\r\n        default:\r\n            return state\r\n    }\r\n\r\n}\r\n"]},"metadata":{},"sourceType":"module"}