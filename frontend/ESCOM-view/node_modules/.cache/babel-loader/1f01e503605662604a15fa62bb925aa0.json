{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\hashy\\\\Desktop\\\\proyectosESCOM\\\\frontend\\\\ESCOM-view\\\\src\\\\ModuloDocumental\\\\components\\\\calendar\\\\viewCalendar.js\";\nimport React, { Component } from 'react';\nimport { Calendar, momentLocalizer } from 'react-big-calendar';\nimport { connect } from 'react-redux';\nimport moment from \"moment\";\nimport { getListConditions } from '../../redux/actions/conditionA.js';\nconst localizer = momentLocalizer(moment); //array de eventos\n\nclass ViewCalendar extends Component {\n  componentDidMount() {\n    this.props.getListConditions(localStorage.getItem('Token'), sessionStorage.getItem('documentId'));\n  }\n\n  listEvents() {\n    let myEventsList = [];\n    this.props.listConditionsR.map(condition => {\n      let event = {\n        title: condition.name,\n        start: condition.startDateS,\n        end: condition.finalDateS\n      };\n      myEventsList.push(event);\n    });\n    return myEventsList;\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      className: \"container color\",\n      style: {\n        width: \"90%\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 33\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"text-left titulo\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 34\n      },\n      __self: this\n    }, React.createElement(\"h4\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 35\n      },\n      __self: this\n    }, \"Calendario de condiciones\")), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 37\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      className: \"shadow\",\n      style: {\n        background: \"#FFFFFF\",\n        padding: \"30px\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 38\n      },\n      __self: this\n    }, React.createElement(Calendar, {\n      popup: true,\n      messages: {\n        showMore: total => React.createElement(\"div\", {\n          style: {\n            cursor: 'pointer'\n          },\n          onMouseOver: e => {\n            e.stopPropagation();\n            e.preventDefault();\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 43\n          },\n          __self: this\n        }, `+${total} more`)\n      },\n      localizer: localizer,\n      events: this.listEvents(),\n      startAccessor: \"start\",\n      endAccessor: \"end\",\n      style: {\n        height: 700\n      },\n      messages: {\n        next: \"sig\",\n        previous: \"ant\",\n        today: \"Hoy\",\n        month: \"Mes\",\n        week: \"Semana\",\n        day: \"Día\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 39\n      },\n      __self: this\n    })));\n  }\n\n}\n\nfunction mapStateToProps(state) {\n  return {\n    listConditionsR: state.condition.listConditions\n  };\n}\n\nexport default connect(mapStateToProps, {\n  getListConditions\n})(ViewCalendar);","map":{"version":3,"sources":["C:/Users/hashy/Desktop/proyectosESCOM/frontend/ESCOM-view/src/ModuloDocumental/components/calendar/viewCalendar.js"],"names":["React","Component","Calendar","momentLocalizer","connect","moment","getListConditions","localizer","ViewCalendar","componentDidMount","props","localStorage","getItem","sessionStorage","listEvents","myEventsList","listConditionsR","map","condition","event","title","name","start","startDateS","end","finalDateS","push","render","width","background","padding","showMore","total","cursor","e","stopPropagation","preventDefault","height","next","previous","today","month","week","day","mapStateToProps","state","listConditions"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\r\nimport { Calendar, momentLocalizer } from 'react-big-calendar';\r\nimport { connect } from 'react-redux';\r\nimport moment from \"moment\";\r\nimport { getListConditions } from '../../redux/actions/conditionA.js';\r\n\r\n\r\n\r\nconst localizer = momentLocalizer(moment);//array de eventos\r\n\r\nclass ViewCalendar extends Component {\r\n\r\n    componentDidMount() {\r\n        this.props.getListConditions(localStorage.getItem('Token'), sessionStorage.getItem('documentId'))\r\n    }\r\n\r\n    listEvents() {\r\n        let myEventsList = []\r\n\r\n        this.props.listConditionsR.map((condition) => {\r\n            let event = {\r\n                title: condition.name,\r\n                start: condition.startDateS,\r\n                end: condition.finalDateS\r\n            }\r\n            myEventsList.push(event)\r\n        })\r\n        return myEventsList\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"container color\" style={{ width: \"90%\" }}>\r\n                <div className=\"text-left titulo\">\r\n                    <h4>Calendario de condiciones</h4>\r\n                </div>\r\n                <br />\r\n                <div className=\"shadow\" style={{ background: \"#FFFFFF\", padding: \"30px\" }}>\r\n                    <Calendar\r\n                        popup\r\n                        messages={{\r\n                            showMore: total => (\r\n                                <div\r\n                                    style={{ cursor: 'pointer' }}\r\n                                    onMouseOver={e => {\r\n                                        e.stopPropagation();\r\n                                        e.preventDefault();\r\n                                    }}\r\n                                >{`+${total} more`}\r\n                                </div>\r\n                            ),\r\n                        }}\r\n                        localizer={localizer}\r\n                        events={this.listEvents()}\r\n                        startAccessor=\"start\"\r\n                        endAccessor=\"end\"\r\n                        style={{ height: 700 }}\r\n                        messages={{\r\n                            next: \"sig\",\r\n                            previous: \"ant\",\r\n                            today: \"Hoy\",\r\n                            month: \"Mes\",\r\n                            week: \"Semana\",\r\n                            day: \"Día\"\r\n                        }}\r\n                    />\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n\r\n}\r\nfunction mapStateToProps(state) {\r\n    return {\r\n        listConditionsR: state.condition.listConditions\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, { getListConditions })(ViewCalendar);"]},"metadata":{},"sourceType":"module"}