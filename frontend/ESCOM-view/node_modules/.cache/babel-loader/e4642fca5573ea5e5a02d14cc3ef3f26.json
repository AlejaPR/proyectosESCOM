{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\hashy\\\\Desktop\\\\proyectosESCOM\\\\frontend\\\\ESCOM-view\\\\src\\\\SuperAdministrador\\\\componentes\\\\editar\\\\editarModulo.js\";\nimport React from 'react'; //componentes\n\nimport Barra from '../general/BarraDirecciones';\nimport Button from '@material-ui/core/Button';\nimport { NotificationContainer, NotificationManager } from 'react-notifications';\nimport { withRouter } from 'react-router-dom';\nimport { campo, generarInput, generarArea, generarInputStart } from '../../utilitario/GenerarInputs.js';\nimport PropTypes from \"prop-types\";\nimport { requerido, validacionCuarentaCaracteres, dosPalabras, sinEspacios, validacionDoscientosCaracteres, validacionTreintaCaracteres } from '../../utilitario/validacionCampos.js';\nimport Alert from '@material-ui/lab/Alert';\nimport AlertTitle from '@material-ui/lab/AlertTitle';\nimport DoneOutlineIcon from '@material-ui/icons/DoneOutline';\nimport PhotoCamera from '@material-ui/icons/PhotoCamera';\nimport SaveAltIcon from '@material-ui/icons/SaveAlt';\nimport CancelIcon from '@material-ui/icons/Cancel';\nimport Divider from '@material-ui/core/Divider'; //redux\n\nimport { actionCargarInformacionDeModulo, actionEditarModulo, actionConsultarActividadesModulo, actualizarMensajeEditar } from '../../actions/actionsModulo.js';\nimport { connect } from \"react-redux\";\nimport { reduxForm, Field } from 'redux-form';\n\nclass EditarModulo extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      habilitado: false,\n      actividadesSeleccionadas: []\n    };\n\n    this.validateImageWeight = imageFile => {\n      if (imageFile && imageFile.size) {\n        const imageFileKb = imageFile.size / 1024;\n        const pesoMaximo = this.props.pesoMaximo;\n\n        if (imageFileKb > pesoMaximo) {\n          return `El tamaÃ±o de la imagen debe ser menor o igual a ${pesoMaximo}kb`;\n        }\n      }\n    };\n\n    this.validateImageWidth = imageFile => {\n      if (imageFile) {\n        const anchuraMaxima = this.props.anchuraMaxima;\n\n        if (imageFile.width > anchuraMaxima) {\n          return `El ancho de la imagen debe ser menor o igual a ${anchuraMaxima}px`;\n        }\n      }\n    };\n\n    this.validateImageHeight = imageFile => {\n      if (imageFile) {\n        const alturaMaxima = this.props.alturaMaxima;\n\n        if (imageFile.height > alturaMaxima) {\n          return `La altura de la imagen debe ser menor o igual a ${alturaMaxima}px`;\n        }\n      }\n    };\n\n    this.validateImageFormat = imageFile => {\n      if (imageFile) {\n        const tipoDeImagen = this.props.tipoDeImagen;\n\n        if (!tipoDeImagen.includes(imageFile.type)) {\n          return `El tipo de imagen debe ser ${tipoDeImagen}`;\n        }\n      }\n    };\n\n    this.handlePreview = imageUrl => {\n      const previewImageDom = document.querySelector(\".preview-image\");\n      previewImageDom.src = imageUrl;\n    };\n\n    this.handleChange = (event, input) => {\n      event.preventDefault();\n      let imageFile = event.target.files[0];\n      const tipoDeImagen = this.props.tipoDeImagen;\n\n      if (imageFile) {\n        if (!tipoDeImagen.includes(imageFile.type)) {\n          NotificationManager.error('Seleccione un archivo de imagen .jpg o .png');\n          event.target.value = null;\n        } else {\n          const localImageUrl = URL.createObjectURL(imageFile);\n          const imageObject = new window.Image();\n\n          imageObject.onload = () => {\n            imageFile.width = imageObject.naturalWidth;\n            imageFile.height = imageObject.naturalHeight;\n            input.onChange(imageFile);\n            URL.revokeObjectURL(imageFile);\n          };\n\n          imageObject.src = localImageUrl;\n          this.handlePreview(localImageUrl);\n        }\n      }\n    };\n\n    this.renderFileInput = ({\n      input,\n      type,\n      meta\n    }) => {\n      const tipoDeImagen = this.props.tipoDeImagen;\n      const touched = meta.touched,\n            error = meta.error,\n            warning = meta.warning;\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 117\n        },\n        __self: this\n      }, React.createElement(\"input\", {\n        id: \"numeroUno\",\n        style: {\n          display: 'none'\n        },\n        name: input.name,\n        type: type,\n        accept: tipoDeImagen,\n        onChange: event => this.handleChange(event, input),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 118\n        },\n        __self: this\n      }), React.createElement(\"label\", {\n        htmlFor: \"numeroUno\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 126\n        },\n        __self: this\n      }, React.createElement(Button, {\n        component: \"span\",\n        startIcon: React.createElement(PhotoCamera, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 127\n          },\n          __self: this\n        }),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 127\n        },\n        __self: this\n      }, \"Seleccionar imagen\")), touched && (error && React.createElement(\"span\", {\n        className: \"text-danger letra form-group\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 129\n        },\n        __self: this\n      }, error) || warning && React.createElement(\"span\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 129\n        },\n        __self: this\n      }, warning)));\n    };\n\n    this.handleSubmitForm = values => {\n      if (values.image === undefined | values.image === null) {\n        var linkFiltrado = values.url.replace('/', '');\n\n        if (linkFiltrado === '') {\n          NotificationManager.error('Ingrese un link de acceso valido');\n        } else {\n          let modulo = {\n            nombreModulo: values.nombre,\n            descripcionModulo: values.descripcion,\n            imagenModulo: campo(this.props.initialValues.imagen),\n            estadoModulo: 'Activo',\n            url: `/${linkFiltrado}`\n          };\n          this.props.actionEditarModulo(modulo, this.props.initialValues.id, localStorage.getItem('Token'));\n        }\n      } else {\n        linkFiltrado = values.url.replace('/', '');\n\n        if (linkFiltrado === '') {\n          NotificationManager.error('Ingrese un link de acceso valido');\n        } else {\n          this.getBase64(values.image, result => {\n            let modulo = {\n              nombreModulo: values.nombre,\n              descripcionModulo: values.descripcion,\n              imagenModulo: result,\n              estadoModulo: 'Activo',\n              url: `${linkFiltrado}`\n            };\n            this.props.actionEditarModulo(modulo, this.props.initialValues.id, localStorage.getItem('Token'));\n          });\n        }\n      }\n    };\n\n    this.onClickCancelar = event => {\n      event.preventDefault();\n      this.handlePreview(null);\n      this.props.history.goBack();\n    };\n  }\n\n  getBase64(file, cb) {\n    let reader = new FileReader();\n    reader.readAsDataURL(file);\n\n    reader.onload = function () {\n      cb(reader.result);\n    };\n\n    reader.onerror = function (error) {\n      console.log('Error: ', error);\n    };\n  }\n\n  componentDidUpdate() {\n    if (this.props.mensajeEditar !== '') {\n      switch (this.props.mensajeEditar) {\n        case 'Sin permiso':\n          if (!this.state.habilitado) {\n            this.setState({\n              habilitado: true\n            });\n          }\n\n          ;\n          break;\n\n        case 'La url o el nombre del modulo ya esta registrada':\n          NotificationManager.error('El link de acceso o el nombre ya esta en uso intentelo de nuevo');\n          this.props.actionCargarInformacionDeModulo(this.props.initialValues.id, localStorage.getItem('Token'));\n          this.props.actualizarMensajeEditar('');\n          break;\n\n        case 'modulo editado':\n          NotificationManager.success('Informacion actualizada correctamente');\n          this.props.actionCargarInformacionDeModulo(this.props.initialValues.id, localStorage.getItem('Token'));\n          this.props.actualizarMensajeEditar('');\n          break;\n\n        case 'El modulo no existe':\n          NotificationManager.warning('El modulo no existe intente nuevamente');\n          this.props.actualizarMensajeEditar('');\n          break;\n\n        case 'Ocurrio un error al momento de hacer la modificacion del modulo':\n          NotificationManager.error('Ocurrio un error al momento de hacer la modificacion del modulo');\n          this.props.actualizarMensajeEditar('');\n          break;\n\n        case 'No se encontraron datos del modulo':\n          NotificationManager.error('No se encontraron datos del modulo');\n          this.props.actualizarMensajeEditar('');\n          break;\n\n        case 'Ocurrio un error en el servidor':\n          NotificationManager.error('Ocurrio un error en el servidor');\n          this.props.actualizarMensajeEditar('');\n          break;\n\n        case 'Servidor fuera de servicio temporalmente':\n          NotificationManager.error('Servidor fuera de servicio temporalmente');\n          this.props.actualizarMensajeEditar('');\n          break;\n\n        case 'Token requerido':\n          localStorage.removeItem('Token');\n          window.location.href = \"/\";\n          break;\n\n        case 'token vencido':\n          localStorage.removeItem('Token');\n          window.location.href = \"/\";\n          break;\n\n        case 'token no registrado':\n          localStorage.removeItem('Token');\n          window.location.href = \"/\";\n          break;\n\n        case 'token incorrecto':\n          localStorage.removeItem('Token');\n          window.location.href = \"/\";\n          break;\n\n        default:\n          break;\n      }\n    }\n\n    this.props.actualizarMensajeEditar('');\n  }\n\n  componentDidMount() {\n    if (this.props.initialValues.id === undefined || this.props.initialValues.id === 0) {\n      this.props.history.goBack();\n    } //  else {\n    //     this.props.actionCargarInformacionDeModulo(this.props.codigoModulo, localStorage.getItem('Token'));\n    // }\n\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 261\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"text-left titulo\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 262\n      },\n      __self: this\n    }, React.createElement(\"h4\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 263\n      },\n      __self: this\n    }, \"Editar modulo\")), React.createElement(Barra, {\n      texto: \"Inicio > Editar modulo\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 265\n      },\n      __self: this\n    }), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 266\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      className: \"col-sm-12\",\n      style: {\n        paddingTop: \"0px\",\n        paddingRight: \"40px\",\n        paddingLeft: \"40px\",\n        paddingBottom: \"0px\",\n        margin: \"0px 0px 30px\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 267\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"container shadow\",\n      style: {\n        background: \"white\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 276\n      },\n      __self: this\n    }, React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 277\n      },\n      __self: this\n    }), this.state.habilitado ? React.createElement(\"div\", {\n      className: \"col-sm-12\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 279\n      },\n      __self: this\n    }, React.createElement(Alert, {\n      severity: \"error\",\n      variant: \"outlined\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 280\n      },\n      __self: this\n    }, React.createElement(AlertTitle, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 281\n      },\n      __self: this\n    }, \"Sin permiso\"), \"No tiene permisos suficientes para editar la informacion de los modulos\"), React.createElement(\"div\", {\n      style: {\n        padding: \"25px 44px 25px 395px\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 284\n      },\n      __self: this\n    }, React.createElement(Button, {\n      style: {\n        background: this.props.configuracion.botones,\n        fontSize: \"14px\",\n        fontFamily: \"sans-serif\",\n        textTransform: \"none\"\n      },\n      className: \"btn btn-dark\",\n      variant: \"contained\",\n      onClick: this.onClickCancelar,\n      startIcon: React.createElement(DoneOutlineIcon, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 285\n        },\n        __self: this\n      }),\n      type: \"submit\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 285\n      },\n      __self: this\n    }, \"Aceptar\"), '')) : React.createElement(React.Fragment, null, React.createElement(\"form\", {\n      className: \"letra\",\n      onSubmit: this.props.handleSubmit(this.handleSubmitForm),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 289\n      },\n      __self: this\n    }, React.createElement(\"table\", {\n      border: \"0px\",\n      style: {\n        width: \"100%\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 290\n      },\n      __self: this\n    }, React.createElement(\"tr\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 291\n      },\n      __self: this\n    }, React.createElement(\"td\", {\n      colspan: \"2\",\n      style: {\n        width: \"65%\",\n        paddingRight: \"39px\",\n        paddingLeft: \"39px\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 292\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"row\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 293\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"col-sm-12\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 294\n      },\n      __self: this\n    }, React.createElement(Field, {\n      name: \"url\",\n      validate: [requerido, sinEspacios, validacionTreintaCaracteres],\n      component: generarInputStart,\n      label: \"Link de acceso\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 295\n      },\n      __self: this\n    })))), React.createElement(\"td\", {\n      colspan: \"2\",\n      rowspan: \"3\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 299\n      },\n      __self: this\n    }, React.createElement(\"label\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 300\n      },\n      __self: this\n    }, \"Imagen\"), React.createElement(\"div\", {\n      style: {\n        padding: \"30px 30px 30px 77px\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 301\n      },\n      __self: this\n    }, React.createElement(\"img\", {\n      src: campo(this.props.initialValues.imagen),\n      alt: \"preview\",\n      className: \"preview-image\",\n      style: {\n        height: \"200px\",\n        width: \"200px\",\n        borderRadius: \"50%\",\n        objectFit: \"cover\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 302\n      },\n      __self: this\n    })), React.createElement(Field, {\n      name: \"image\",\n      type: \"file\",\n      validate: [this.validateImageWeight, this.validateImageFormat],\n      component: this.renderFileInput,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 306\n      },\n      __self: this\n    }))), React.createElement(\"tr\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 317\n      },\n      __self: this\n    }, React.createElement(\"td\", {\n      colspan: \"2\",\n      style: {\n        width: \"65%\",\n        paddingRight: \"39px\",\n        paddingLeft: \"39px\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 318\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"row\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 319\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"col-sm-12\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 320\n      },\n      __self: this\n    }, React.createElement(Field, {\n      name: \"nombre\",\n      validate: [requerido, dosPalabras, validacionCuarentaCaracteres],\n      component: generarInput,\n      label: \"Nombre\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 321\n      },\n      __self: this\n    }))))), React.createElement(\"tr\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 326\n      },\n      __self: this\n    }, React.createElement(\"td\", {\n      colspan: \"2\",\n      style: {\n        width: \"65%\",\n        paddingRight: \"39px\",\n        paddingLeft: \"39px\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 327\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"row\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 328\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"col-sm-12\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 329\n      },\n      __self: this\n    }, React.createElement(Field, {\n      name: \"descripcion\",\n      validate: [requerido, validacionDoscientosCaracteres],\n      component: generarArea,\n      filas: 10,\n      label: \"Descripcion\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 330\n      },\n      __self: this\n    })))))), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 336\n      },\n      __self: this\n    }), React.createElement(Divider, {\n      variant: \"middle\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 337\n      },\n      __self: this\n    }), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 338\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      className: \"row\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 339\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"col-md-6\",\n      style: {\n        paddingLeft: \"334px\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 340\n      },\n      __self: this\n    }, React.createElement(Button, {\n      type: \"submit\",\n      startIcon: React.createElement(SaveAltIcon, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 343\n        },\n        __self: this\n      }),\n      className: \"btn btn-dark\",\n      style: {\n        background: this.props.configuracion.botones,\n        fontSize: \"14px\",\n        textTransform: \"none\"\n      },\n      variant: \"contained\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 341\n      },\n      __self: this\n    }, \"Guardar\")), React.createElement(\"div\", {\n      className: \"col-md-6\",\n      style: {\n        paddingLeft: \"0px\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 350\n      },\n      __self: this\n    }, React.createElement(Button, {\n      startIcon: React.createElement(CancelIcon, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 351\n        },\n        __self: this\n      }),\n      style: fondoBotonCancelar,\n      variant: \"contained\",\n      className: \"btn btn-dark\",\n      onClick: this.onClickCancelar,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 351\n      },\n      __self: this\n    }, \"Salir\")))), React.createElement(NotificationContainer, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 359\n      },\n      __self: this\n    })), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 362\n      },\n      __self: this\n    }))));\n  }\n\n}\n\nEditarModulo.propTypes = {\n  previewLogoUrl: PropTypes.string,\n  tipoDeImagen: PropTypes.string,\n  pesoMaximo: PropTypes.number,\n  anchuraMaxima: PropTypes.number,\n  alturaMaxima: PropTypes.number,\n  handleSubmit: PropTypes.func.isRequired\n};\nEditarModulo.defaultProps = {\n  previewLogoUrl: \"https://imgplaceholder.com/400x300\",\n  tipoDeImagen: \"image/jpeg, image/png\",\n  pesoMaximo: 300,\n  anchuraMaxima: 100,\n  alturaMaxima: 100\n};\nconst fondoBotonCancelar = {\n  background: \"gray\",\n  fontSize: \"14px\",\n  fontFamily: \"sans-serif\",\n  textTransform: \"none\"\n};\n\nfunction mapStateToProps(state) {\n  return {\n    codigoModulo: state.mod.codigoModulo,\n    mensajeEditar: state.mod.mensajeEditarModulo,\n    configuracion: state.conf.configuracion,\n    initialValues: {\n      id: state.mod.moduloEditar.idModulo,\n      nombre: state.mod.moduloEditar.nombreModulo,\n      descripcion: state.mod.moduloEditar.descripcionModulo,\n      imagen: state.mod.moduloEditar.imagenModulo,\n      url: state.mod.moduloEditar.url\n    }\n  };\n}\n\nlet formularioEditar = reduxForm({\n  form: 'editarModulo',\n  enableReinitialize: true\n})(EditarModulo);\nexport default withRouter(connect(mapStateToProps, {\n  actionCargarInformacionDeModulo,\n  actionEditarModulo,\n  actionConsultarActividadesModulo,\n  actualizarMensajeEditar\n})(formularioEditar));","map":{"version":3,"sources":["C:/Users/hashy/Desktop/proyectosESCOM/frontend/ESCOM-view/src/SuperAdministrador/componentes/editar/editarModulo.js"],"names":["React","Barra","Button","NotificationContainer","NotificationManager","withRouter","campo","generarInput","generarArea","generarInputStart","PropTypes","requerido","validacionCuarentaCaracteres","dosPalabras","sinEspacios","validacionDoscientosCaracteres","validacionTreintaCaracteres","Alert","AlertTitle","DoneOutlineIcon","PhotoCamera","SaveAltIcon","CancelIcon","Divider","actionCargarInformacionDeModulo","actionEditarModulo","actionConsultarActividadesModulo","actualizarMensajeEditar","connect","reduxForm","Field","EditarModulo","Component","state","habilitado","actividadesSeleccionadas","validateImageWeight","imageFile","size","imageFileKb","pesoMaximo","props","validateImageWidth","anchuraMaxima","width","validateImageHeight","alturaMaxima","height","validateImageFormat","tipoDeImagen","includes","type","handlePreview","imageUrl","previewImageDom","document","querySelector","src","handleChange","event","input","preventDefault","target","files","error","value","localImageUrl","URL","createObjectURL","imageObject","window","Image","onload","naturalWidth","naturalHeight","onChange","revokeObjectURL","renderFileInput","meta","touched","warning","display","name","handleSubmitForm","values","image","undefined","linkFiltrado","url","replace","modulo","nombreModulo","nombre","descripcionModulo","descripcion","imagenModulo","initialValues","imagen","estadoModulo","id","localStorage","getItem","getBase64","result","onClickCancelar","history","goBack","file","cb","reader","FileReader","readAsDataURL","onerror","console","log","componentDidUpdate","mensajeEditar","setState","success","removeItem","location","href","componentDidMount","render","paddingTop","paddingRight","paddingLeft","paddingBottom","margin","background","padding","configuracion","botones","fontSize","fontFamily","textTransform","handleSubmit","borderRadius","objectFit","fondoBotonCancelar","propTypes","previewLogoUrl","string","number","func","isRequired","defaultProps","mapStateToProps","codigoModulo","mod","mensajeEditarModulo","conf","moduloEditar","idModulo","formularioEditar","form","enableReinitialize"],"mappings":"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","sourcesContent":["import React from 'react';\r\n\r\n//componentes\r\nimport Barra from '../general/BarraDirecciones';\r\nimport Button from '@material-ui/core/Button';\r\nimport { NotificationContainer, NotificationManager } from 'react-notifications';\r\nimport { withRouter } from 'react-router-dom';\r\nimport { campo, generarInput, generarArea, generarInputStart } from '../../utilitario/GenerarInputs.js';\r\nimport PropTypes from \"prop-types\";\r\nimport { requerido, validacionCuarentaCaracteres, dosPalabras,sinEspacios,validacionDoscientosCaracteres, validacionTreintaCaracteres } from '../../utilitario/validacionCampos.js';\r\nimport Alert from '@material-ui/lab/Alert';\r\nimport AlertTitle from '@material-ui/lab/AlertTitle';\r\nimport DoneOutlineIcon from '@material-ui/icons/DoneOutline';\r\nimport PhotoCamera from '@material-ui/icons/PhotoCamera';\r\nimport SaveAltIcon from '@material-ui/icons/SaveAlt';\r\nimport CancelIcon from '@material-ui/icons/Cancel';\r\nimport Divider from '@material-ui/core/Divider';\r\n\r\n\r\n//redux\r\nimport { actionCargarInformacionDeModulo, actionEditarModulo, actionConsultarActividadesModulo, actualizarMensajeEditar } from '../../actions/actionsModulo.js'\r\nimport { connect } from \"react-redux\";\r\nimport { reduxForm, Field } from 'redux-form';\r\n\r\n\r\nclass EditarModulo extends React.Component {\r\n\r\n    state = {\r\n        habilitado: false,\r\n        actividadesSeleccionadas: []\r\n    }\r\n\r\n\r\n    static propTypes = {\r\n        previewLogoUrl: PropTypes.string,\r\n        tipoDeImagen: PropTypes.string,\r\n        pesoMaximo: PropTypes.number,\r\n        anchuraMaxima: PropTypes.number,\r\n        alturaMaxima: PropTypes.number,\r\n        handleSubmit: PropTypes.func.isRequired\r\n    };\r\n    static defaultProps = {\r\n        previewLogoUrl: \"https://imgplaceholder.com/400x300\",\r\n        tipoDeImagen: \"image/jpeg, image/png\",\r\n        pesoMaximo: 300,\r\n        anchuraMaxima: 100,\r\n        alturaMaxima: 100\r\n    };\r\n    validateImageWeight = imageFile => {\r\n        if (imageFile && imageFile.size) {\r\n            const imageFileKb = imageFile.size / 1024;\r\n            const { pesoMaximo } = this.props;\r\n\r\n            if (imageFileKb > pesoMaximo) {\r\n                return `El tamaÃ±o de la imagen debe ser menor o igual a ${pesoMaximo}kb`;\r\n            }\r\n        }\r\n    };\r\n    validateImageWidth = imageFile => {\r\n        if (imageFile) {\r\n            const { anchuraMaxima } = this.props;\r\n            if (imageFile.width > anchuraMaxima) {\r\n                return `El ancho de la imagen debe ser menor o igual a ${anchuraMaxima}px`;\r\n            }\r\n        }\r\n    };\r\n    validateImageHeight = imageFile => {\r\n        if (imageFile) {\r\n            const { alturaMaxima } = this.props;\r\n\r\n            if (imageFile.height > alturaMaxima) {\r\n                return `La altura de la imagen debe ser menor o igual a ${alturaMaxima}px`;\r\n            }\r\n        }\r\n    };\r\n    validateImageFormat = imageFile => {\r\n        if (imageFile) {\r\n            const { tipoDeImagen } = this.props;\r\n            if (!tipoDeImagen.includes(imageFile.type)) {\r\n                return `El tipo de imagen debe ser ${tipoDeImagen}`;\r\n            }\r\n        }\r\n    };\r\n    handlePreview = imageUrl => {\r\n        const previewImageDom = document.querySelector(\".preview-image\");\r\n        previewImageDom.src = imageUrl;\r\n    };\r\n\r\n    handleChange = (event, input) => {\r\n        event.preventDefault();\r\n        let imageFile = event.target.files[0];\r\n        const { tipoDeImagen } = this.props;\r\n        if (imageFile) {\r\n            if (!tipoDeImagen.includes(imageFile.type)) {\r\n                NotificationManager.error('Seleccione un archivo de imagen .jpg o .png');\r\n                event.target.value = null;\r\n            } else {\r\n                const localImageUrl = URL.createObjectURL(imageFile);\r\n                const imageObject = new window.Image();\r\n\r\n                imageObject.onload = () => {\r\n                    imageFile.width = imageObject.naturalWidth;\r\n                    imageFile.height = imageObject.naturalHeight;\r\n                    input.onChange(imageFile);\r\n                    URL.revokeObjectURL(imageFile);\r\n                };\r\n                imageObject.src = localImageUrl;\r\n                this.handlePreview(localImageUrl);\r\n            }\r\n        }\r\n    };\r\n\r\n    renderFileInput = ({ input, type, meta }) => {\r\n        const { tipoDeImagen } = this.props;\r\n        const { touched, error, warning } = meta;\r\n        return (\r\n            <div>\r\n                <input\r\n                    id=\"numeroUno\"\r\n                    style={{ display: 'none' }}\r\n                    name={input.name}\r\n                    type={type}\r\n                    accept={tipoDeImagen}\r\n                    onChange={event => this.handleChange(event, input)}\r\n                />\r\n                <label htmlFor=\"numeroUno\">\r\n                    <Button component=\"span\" startIcon={<PhotoCamera />}>Seleccionar imagen</Button>\r\n                </label>\r\n                {touched && ((error && <span className=\"text-danger letra form-group\">{error}</span>) || (warning && <span>{warning}</span>))}\r\n            </div>\r\n        );\r\n    };\r\n\r\n\r\n    handleSubmitForm = values => {\r\n        if (values.image === undefined | values.image === null) {\r\n            var linkFiltrado = values.url.replace('/', '');\r\n            if (linkFiltrado === '') {\r\n                NotificationManager.error('Ingrese un link de acceso valido');\r\n            } else {\r\n                let modulo = {\r\n                    nombreModulo: values.nombre,\r\n                    descripcionModulo: values.descripcion,\r\n                    imagenModulo: campo(this.props.initialValues.imagen),\r\n                    estadoModulo: 'Activo',\r\n                    url:`/${linkFiltrado}`\r\n                }\r\n                this.props.actionEditarModulo(modulo, this.props.initialValues.id, localStorage.getItem('Token'));\r\n            }\r\n        } else {\r\n             linkFiltrado = values.url.replace('/', '');\r\n            if (linkFiltrado === '') {\r\n                NotificationManager.error('Ingrese un link de acceso valido');\r\n            } else {\r\n                this.getBase64(values.image, (result) => {\r\n                    let modulo = {\r\n                        nombreModulo: values.nombre,\r\n                        descripcionModulo: values.descripcion,\r\n                        imagenModulo: result,\r\n                        estadoModulo: 'Activo',\r\n                        url:`${linkFiltrado}`\r\n                    }\r\n                    this.props.actionEditarModulo(modulo, this.props.initialValues.id, localStorage.getItem('Token'));\r\n                });\r\n            }\r\n        }\r\n    };\r\n\r\n\r\n\r\n\r\n    getBase64(file, cb) {\r\n        let reader = new FileReader();\r\n        reader.readAsDataURL(file);\r\n        reader.onload = function () {\r\n            cb(reader.result)\r\n        };\r\n        reader.onerror = function (error) {\r\n            console.log('Error: ', error);\r\n        };\r\n    }\r\n\r\n    componentDidUpdate() {\r\n        if (this.props.mensajeEditar !== '') {\r\n\r\n            switch (this.props.mensajeEditar) {\r\n                case 'Sin permiso':\r\n                    if (!this.state.habilitado) { this.setState({ habilitado: true }) };\r\n                    break;\r\n                case 'La url o el nombre del modulo ya esta registrada':\r\n                    NotificationManager.error('El link de acceso o el nombre ya esta en uso intentelo de nuevo');\r\n                    this.props.actionCargarInformacionDeModulo(this.props.initialValues.id, localStorage.getItem('Token'));\r\n                    this.props.actualizarMensajeEditar('');\r\n                    break;\r\n                case 'modulo editado':\r\n                    NotificationManager.success('Informacion actualizada correctamente');\r\n                    this.props.actionCargarInformacionDeModulo(this.props.initialValues.id, localStorage.getItem('Token'));\r\n                    this.props.actualizarMensajeEditar('');\r\n                    break;\r\n                case 'El modulo no existe':\r\n                    NotificationManager.warning('El modulo no existe intente nuevamente');\r\n                    this.props.actualizarMensajeEditar('');\r\n                    break;\r\n                case 'Ocurrio un error al momento de hacer la modificacion del modulo':\r\n                    NotificationManager.error('Ocurrio un error al momento de hacer la modificacion del modulo');\r\n                    this.props.actualizarMensajeEditar('');\r\n                    break;\r\n                case 'No se encontraron datos del modulo':\r\n                    NotificationManager.error('No se encontraron datos del modulo');\r\n                    this.props.actualizarMensajeEditar('');\r\n                    break;\r\n                case 'Ocurrio un error en el servidor':\r\n                    NotificationManager.error('Ocurrio un error en el servidor');\r\n                    this.props.actualizarMensajeEditar('');\r\n                    break;\r\n                case 'Servidor fuera de servicio temporalmente':\r\n                    NotificationManager.error('Servidor fuera de servicio temporalmente');\r\n                    this.props.actualizarMensajeEditar('');\r\n                    break;\r\n                case 'Token requerido':\r\n                    localStorage.removeItem('Token');\r\n                    window.location.href = \"/\";\r\n                    break;\r\n                case 'token vencido':\r\n                    localStorage.removeItem('Token');\r\n                    window.location.href = \"/\";\r\n                    break;\r\n                case 'token no registrado':\r\n                    localStorage.removeItem('Token');\r\n                    window.location.href = \"/\";\r\n                    break;\r\n                case 'token incorrecto':\r\n                    localStorage.removeItem('Token');\r\n                    window.location.href = \"/\";\r\n                    break;\r\n                default:\r\n                    break;\r\n            }\r\n        }\r\n        this.props.actualizarMensajeEditar('');\r\n    }\r\n\r\n    componentDidMount() {\r\n        if (this.props.initialValues.id === undefined || this.props.initialValues.id === 0) {\r\n            this.props.history.goBack();\r\n        }\r\n        //  else {\r\n        //     this.props.actionCargarInformacionDeModulo(this.props.codigoModulo, localStorage.getItem('Token'));\r\n        // }\r\n    }\r\n\r\n\r\n    onClickCancelar = (event) => {\r\n        event.preventDefault();\r\n        this.handlePreview(null);\r\n        this.props.history.goBack();\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                <div className=\"text-left titulo\">\r\n                    <h4>Editar modulo</h4>\r\n                </div>\r\n                <Barra texto=\"Inicio > Editar modulo\" />\r\n                <br />\r\n                <div className=\"col-sm-12\" style={{\r\n                    paddingTop: \"0px\",\r\n                    paddingRight: \"40px\",\r\n                    paddingLeft: \"40px\",\r\n                    paddingBottom: \"0px\",\r\n                    margin: \"0px 0px 30px\"\r\n\r\n                }}>\r\n\r\n                    <div className=\"container shadow\" style={{ background: \"white\" }}>\r\n                        <br />\r\n                        {\r\n                            this.state.habilitado ? <div className=\"col-sm-12\">\r\n                                <Alert severity=\"error\" variant=\"outlined\">\r\n                                    <AlertTitle>Sin permiso</AlertTitle>\r\n                                    No tiene permisos suficientes para editar la informacion de los modulos\r\n                                </Alert>\r\n                                <div style={{ padding: \"25px 44px 25px 395px\" }}>\r\n                                    <Button style={{ background: this.props.configuracion.botones, fontSize: \"14px\", fontFamily: \"sans-serif\", textTransform: \"none\" }} className=\"btn btn-dark\" variant=\"contained\" onClick={this.onClickCancelar} startIcon={<DoneOutlineIcon />} type=\"submit\">Aceptar</Button>{''}\r\n                                </div>\r\n                            </div> :\r\n                                <>\r\n                                    <form className=\"letra\" onSubmit={this.props.handleSubmit(this.handleSubmitForm)}>\r\n                                        <table border=\"0px\" style={{ width: \"100%\" }}>\r\n                                            <tr>\r\n                                                <td colspan=\"2\" style={{ width: \"65%\", paddingRight: \"39px\", paddingLeft: \"39px\" }}>\r\n                                                    <div className=\"row\">\r\n                                                        <div className=\"col-sm-12\">\r\n                                                            <Field name=\"url\" validate={[requerido,sinEspacios, validacionTreintaCaracteres]} component={generarInputStart} label=\"Link de acceso\" />\r\n                                                        </div>\r\n                                                    </div>\r\n                                                </td>\r\n                                                <td colspan=\"2\" rowspan=\"3\">\r\n                                                    <label>Imagen</label>\r\n                                                    <div style={{ padding: \"30px 30px 30px 77px\" }}>\r\n                                                        <img src={campo(this.props.initialValues.imagen)} alt=\"preview\"\r\n                                                            className=\"preview-image\"\r\n                                                            style={{ height: \"200px\", width: \"200px\", borderRadius: \"50%\", objectFit: \"cover\" }} />\r\n                                                    </div>\r\n                                                    <Field\r\n                                                        name=\"image\"\r\n                                                        type=\"file\"\r\n                                                        validate={[\r\n                                                            this.validateImageWeight,\r\n                                                            this.validateImageFormat\r\n                                                        ]}\r\n                                                        component={this.renderFileInput}\r\n                                                    />\r\n                                                </td>\r\n                                            </tr>\r\n                                            <tr>\r\n                                                <td colspan=\"2\" style={{ width: \"65%\", paddingRight: \"39px\", paddingLeft: \"39px\" }}>\r\n                                                    <div className=\"row\">\r\n                                                        <div className=\"col-sm-12\">\r\n                                                            <Field name=\"nombre\" validate={[requerido,dosPalabras, validacionCuarentaCaracteres]} component={generarInput} label=\"Nombre\" />\r\n                                                        </div>\r\n                                                    </div>\r\n                                                </td>\r\n                                            </tr>\r\n                                            <tr>\r\n                                                <td colspan=\"2\" style={{ width: \"65%\", paddingRight: \"39px\", paddingLeft: \"39px\" }}>\r\n                                                    <div className=\"row\">\r\n                                                        <div className=\"col-sm-12\">\r\n                                                            <Field name=\"descripcion\" validate={[requerido, validacionDoscientosCaracteres]} component={generarArea} filas={10} label=\"Descripcion\" />\r\n                                                        </div>\r\n                                                    </div>\r\n                                                </td>\r\n                                            </tr>\r\n                                        </table>\r\n                                        <br />\r\n                                        <Divider variant=\"middle\" />\r\n                                        <br />\r\n                                        <div className=\"row\">\r\n                                            <div className=\"col-md-6\" style={{ paddingLeft: \"334px\" }}>\r\n                                                <Button\r\n                                                    type=\"submit\"\r\n                                                    startIcon={<SaveAltIcon />}\r\n                                                    className=\"btn btn-dark\"\r\n                                                    style={{ background: this.props.configuracion.botones, fontSize: \"14px\", textTransform: \"none\" }}\r\n                                                    variant=\"contained\">\r\n                                                    Guardar\r\n                                        </Button>\r\n                                            </div>\r\n                                            <div className=\"col-md-6\" style={{ paddingLeft: \"0px\" }}>\r\n                                                <Button startIcon={<CancelIcon />}\r\n                                                    style={fondoBotonCancelar}\r\n                                                    variant=\"contained\"\r\n                                                    className=\"btn btn-dark\"\r\n                                                    onClick={this.onClickCancelar}>Salir</Button>\r\n                                            </div>\r\n                                        </div>\r\n                                    </form>\r\n                                    <NotificationContainer />\r\n                                </>\r\n                        }\r\n                        <br />\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nconst fondoBotonCancelar = {\r\n    background: \"gray\",\r\n    fontSize: \"14px\",\r\n    fontFamily: \"sans-serif\",\r\n    textTransform: \"none\"\r\n\r\n}\r\n\r\nfunction mapStateToProps(state) {\r\n    return {\r\n        codigoModulo: state.mod.codigoModulo,\r\n        mensajeEditar: state.mod.mensajeEditarModulo,\r\n        configuracion: state.conf.configuracion,\r\n        initialValues: {\r\n            id: state.mod.moduloEditar.idModulo,\r\n            nombre: state.mod.moduloEditar.nombreModulo,\r\n            descripcion: state.mod.moduloEditar.descripcionModulo,\r\n            imagen: state.mod.moduloEditar.imagenModulo,\r\n            url: state.mod.moduloEditar.url\r\n        }\r\n    }\r\n}\r\n\r\n\r\nlet formularioEditar = reduxForm({\r\n    form: 'editarModulo',\r\n    enableReinitialize: true\r\n})(EditarModulo)\r\n\r\nexport default withRouter(connect(mapStateToProps, { actionCargarInformacionDeModulo, actionEditarModulo, actionConsultarActividadesModulo, actualizarMensajeEditar })(formularioEditar));\r\n\r\n"]},"metadata":{},"sourceType":"module"}