{"ast":null,"code":"import { GET_LIST_CONDITIONS, EDIT_CONDITION, ADD_MESSAGE_EDIT, ADD_MESSAGE_ADD, GET_CONDITIONS_PER, GET_CONDITION_ID, ADD_CONDITION, DISABLE_CONDITION, ADD_MESSAGE_DISABLE } from '../actions/conditionA.js';\nconst initialState = {\n  listConditions: [],\n  listConditionsPer: [],\n  conditionR: [],\n  messageEdit: '',\n  messageAdd: '',\n  messageDisable: ''\n};\nexport function reducersCondition(state = initialState, action) {\n  switch (action.type) {\n    case GET_LIST_CONDITIONS:\n      return Object.assign({}, state, {\n        listConditions: action.payload\n      });\n\n    case GET_CONDITIONS_PER:\n      return Object.assign({}, state, {\n        listConditionsPer: action.payload\n      });\n\n    case GET_CONDITION_ID:\n      return Object.assign({}, state, {\n        conditionR: action.payload\n      });\n\n    case DISABLE_CONDITION:\n      return Object.assign({}, state, {\n        messageDisable: action.payload\n      });\n\n    case ADD_CONDITION:\n      return Object.assign({}, state, {\n        messageAdd: action.payload\n      });\n\n    case EDIT_CONDITION:\n      return Object.assign({}, state, {\n        messageEdit: action.payload\n      });\n\n    case ADD_MESSAGE_EDIT:\n      return Object.assign({}, state, {\n        messageEdit: action.payload\n      });\n\n    case ADD_MESSAGE_ADD:\n      return Object.assign({}, state, {\n        messageAdd: action.payload\n      });\n\n    case ADD_MESSAGE_DISABLE:\n      return Object.assign({}, state, {\n        messageDisable: action.payload\n      });\n\n    default:\n      return state;\n  }\n}","map":{"version":3,"sources":["C:/Users/hashy/Desktop/proyectosESCOM/frontend/ESCOM-view/src/ModuloDocumental/redux/reducers/conditionR.js"],"names":["GET_LIST_CONDITIONS","EDIT_CONDITION","ADD_MESSAGE_EDIT","ADD_MESSAGE_ADD","GET_CONDITIONS_PER","GET_CONDITION_ID","ADD_CONDITION","DISABLE_CONDITION","ADD_MESSAGE_DISABLE","initialState","listConditions","listConditionsPer","conditionR","messageEdit","messageAdd","messageDisable","reducersCondition","state","action","type","Object","assign","payload"],"mappings":"AAAA,SAASA,mBAAT,EAA8BC,cAA9B,EAA8CC,gBAA9C,EAAgEC,eAAhE,EAAgFC,kBAAhF,EAAoGC,gBAApG,EAAsHC,aAAtH,EAAqIC,iBAArI,EAAwJC,mBAAxJ,QAAmL,0BAAnL;AAEA,MAAMC,YAAY,GAAG;AACjBC,EAAAA,cAAc,EAAE,EADC;AAEjBC,EAAAA,iBAAiB,EAAE,EAFF;AAGjBC,EAAAA,UAAU,EAAE,EAHK;AAIjBC,EAAAA,WAAW,EAAE,EAJI;AAKjBC,EAAAA,UAAU,EAAE,EALK;AAMjBC,EAAAA,cAAc,EAAE;AANC,CAArB;AASA,OAAO,SAASC,iBAAT,CAA2BC,KAAK,GAAGR,YAAnC,EAAiDS,MAAjD,EAAyD;AAE5D,UAAQA,MAAM,CAACC,IAAf;AACI,SAAKnB,mBAAL;AACI,aAAOoB,MAAM,CAACC,MAAP,CAAc,EAAd,EAAkBJ,KAAlB,EAAyB;AAAEP,QAAAA,cAAc,EAAEQ,MAAM,CAACI;AAAzB,OAAzB,CAAP;;AACJ,SAAKlB,kBAAL;AACI,aAAOgB,MAAM,CAACC,MAAP,CAAc,EAAd,EAAkBJ,KAAlB,EAAyB;AAAEN,QAAAA,iBAAiB,EAAEO,MAAM,CAACI;AAA5B,OAAzB,CAAP;;AACJ,SAAKjB,gBAAL;AACI,aAAOe,MAAM,CAACC,MAAP,CAAc,EAAd,EAAkBJ,KAAlB,EAAyB;AAAEL,QAAAA,UAAU,EAAEM,MAAM,CAACI;AAArB,OAAzB,CAAP;;AACJ,SAAKf,iBAAL;AACI,aAAOa,MAAM,CAACC,MAAP,CAAc,EAAd,EAAkBJ,KAAlB,EAAyB;AAAEF,QAAAA,cAAc,EAAEG,MAAM,CAACI;AAAzB,OAAzB,CAAP;;AACJ,SAAKhB,aAAL;AACI,aAAOc,MAAM,CAACC,MAAP,CAAc,EAAd,EAAkBJ,KAAlB,EAAyB;AAAEH,QAAAA,UAAU,EAAEI,MAAM,CAACI;AAArB,OAAzB,CAAP;;AACJ,SAAKrB,cAAL;AACI,aAAOmB,MAAM,CAACC,MAAP,CAAc,EAAd,EAAkBJ,KAAlB,EAAyB;AAAEJ,QAAAA,WAAW,EAAEK,MAAM,CAACI;AAAtB,OAAzB,CAAP;;AACJ,SAAKpB,gBAAL;AACI,aAAOkB,MAAM,CAACC,MAAP,CAAc,EAAd,EAAkBJ,KAAlB,EAAyB;AAAEJ,QAAAA,WAAW,EAAEK,MAAM,CAACI;AAAtB,OAAzB,CAAP;;AACJ,SAAKnB,eAAL;AACI,aAAOiB,MAAM,CAACC,MAAP,CAAc,EAAd,EAAkBJ,KAAlB,EAAyB;AAAEH,QAAAA,UAAU,EAAEI,MAAM,CAACI;AAArB,OAAzB,CAAP;;AACJ,SAAKd,mBAAL;AACI,aAAOY,MAAM,CAACC,MAAP,CAAc,EAAd,EAAkBJ,KAAlB,EAAyB;AAAEF,QAAAA,cAAc,EAAEG,MAAM,CAACI;AAAzB,OAAzB,CAAP;;AACJ;AACI,aAAOL,KAAP;AApBR;AAuBH","sourcesContent":["import { GET_LIST_CONDITIONS, EDIT_CONDITION, ADD_MESSAGE_EDIT, ADD_MESSAGE_ADD,GET_CONDITIONS_PER, GET_CONDITION_ID, ADD_CONDITION, DISABLE_CONDITION, ADD_MESSAGE_DISABLE } from '../actions/conditionA.js'\r\n\r\nconst initialState = {\r\n    listConditions: [],\r\n    listConditionsPer: [],\r\n    conditionR: [],\r\n    messageEdit: '',\r\n    messageAdd: '',\r\n    messageDisable: ''\r\n}\r\n\r\nexport function reducersCondition(state = initialState, action) {\r\n\r\n    switch (action.type) {\r\n        case GET_LIST_CONDITIONS:\r\n            return Object.assign({}, state, { listConditions: action.payload })\r\n        case GET_CONDITIONS_PER:\r\n            return Object.assign({}, state, { listConditionsPer: action.payload })\r\n        case GET_CONDITION_ID:\r\n            return Object.assign({}, state, { conditionR: action.payload })\r\n        case DISABLE_CONDITION:\r\n            return Object.assign({}, state, { messageDisable: action.payload })\r\n        case ADD_CONDITION:\r\n            return Object.assign({}, state, { messageAdd: action.payload })\r\n        case EDIT_CONDITION:\r\n            return Object.assign({}, state, { messageEdit: action.payload })\r\n        case ADD_MESSAGE_EDIT:\r\n            return Object.assign({}, state, { messageEdit: action.payload })\r\n        case ADD_MESSAGE_ADD:\r\n            return Object.assign({}, state, { messageAdd: action.payload })\r\n        case ADD_MESSAGE_DISABLE:\r\n            return Object.assign({}, state, { messageDisable: action.payload })\r\n        default:\r\n            return state\r\n    }\r\n\r\n}\r\n"]},"metadata":{},"sourceType":"module"}