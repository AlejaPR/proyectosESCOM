{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\jeiso\\\\Desktop\\\\REACT\\\\proyectosESCOM\\\\frontend\\\\ESCOM-view\\\\src\\\\SuperAdministrador\\\\componentes\\\\color.js\";\nimport React from 'react'; // import ImageUploader from 'react-images-upload';\n// import { NotificationContainer, NotificationManager } from 'react-notifications';\n// import 'react-notifications/lib/notifications.css';\n\nimport { browserHistory } from 'react-dom'; // var fs = require('fs')\n// var path = require('path')\n// var util = require('util')\n// class App extends React.Component {\n//     constructor(props) {\n//         super(props);\n//         this.state = { pictures: [] };\n//         this.onDrop = this.onDrop.bind(this);\n//     }\n//     onDrop(picture) {\n//         console.log('Picture ', picture);\n//         this.setState({\n//             pictures: this.state.pictures.concat(picture),\n//         });\n//     }\n//     votar = () => {\n//         NotificationManager.success('Usuario registrado');\n//         storeWithOriginalName(this.state.pictures,'public/uploads');\n//     }\n//     render() {\n//         return (\n//             <>\n//                 <ImageUploader\n//                     withIcon={true}\n//                     buttonText='Choose images'\n//                     onChange={this.onDrop}\n//                     imgExtension={['.jpg', '.gif', '.png', '.gif']}\n//                     maxFileSize={5242880}\n//                     label=\"cosasoaj\"\n//                 />\n//                 <button onClick={this.votar}>oprimir</button>\n//                 <NotificationContainer />\n//             </>\n//         );\n//     }\n// }\n// function storeWithOriginalName(file,destination) {\n//     var fullNewPath = path.join(destination,file[0].name)\n//     console.log(\"FS \",fs.rename)\n//     var rename = util.promisify(fs.rename)\n//     var pathq='public\\\\uploads\\\\cc8b951ef8ce45d6195ec787947462c3';\n//     return rename(pathq, fullNewPath)\n//         .then(() => {\n//             return file[0].name\n//         })\n// }\n\nexport default function () {\n  class AutoLogout extends React.Component {\n    constructor(props) {\n      super(props);\n\n      this.clearTimeoutFunc = () => {\n        if (this.warnTimeout) clearTimeout(this.warnTimeout);\n        if (this.logoutTimeout) clearTimeout(this.logoutTimeout);\n      };\n\n      this.setTimeout = () => {\n        this.warnTimeout = setTimeout(this.warn, this.state.warningTime);\n        this.logoutTimeout = setTimeout(this.logout, this.state.signoutTime);\n      };\n\n      this.resetTimeout = () => {\n        this.clearTimeoutFunc();\n        this.setTimeout();\n      };\n\n      this.warn = () => {\n        window.alert(\"You will be logged out automatically in 1 minute\");\n        console.log('You will be logged out automatically in 1 minute.');\n      };\n\n      this.logout = () => {\n        // Send a logout request to the API\n        console.log('Sending a logout request to the API...');\n        this.destroy();\n      };\n\n      this.destroy = () => {\n        //clear the session\n        browserHistory.push('/');\n        window.location.assign('/');\n      };\n\n      this.state = {\n        warningTime: 1000 * 60 * 10,\n        signoutTime: 1000 * 60 * 15\n      };\n    }\n\n    componentDidMount() {\n      this.events = ['load', 'mousemove', 'mousedown', 'click', 'scroll', 'keypress'];\n\n      for (var i in this.events) {\n        window.addEventListener(this.events[i], this.resetTimeout);\n      }\n\n      this.setTimeout();\n    }\n\n    render() {\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 122\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        style: {\n          background: \"black\"\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 123\n        },\n        __self: this\n      }));\n    }\n\n  }\n}","map":{"version":3,"sources":["C:\\Users\\jeiso\\Desktop\\REACT\\proyectosESCOM\\frontend\\ESCOM-view\\src\\SuperAdministrador\\componentes\\color.js"],"names":["React","browserHistory","AutoLogout","Component","constructor","props","clearTimeoutFunc","warnTimeout","clearTimeout","logoutTimeout","setTimeout","warn","state","warningTime","logout","signoutTime","resetTimeout","window","alert","console","log","destroy","push","location","assign","componentDidMount","events","i","addEventListener","render","background"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB,C,CACA;AACA;AACA;;AACA,SAAQC,cAAR,QAA6B,WAA7B,C,CACA;AACA;AACA;AAEA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA,eAAe,YAAW;AACtB,QAAMC,UAAN,SAAyBF,KAAK,CAACG,SAA/B,CAAyC;AACvCC,IAAAA,WAAW,CAACC,KAAD,EAAQ;AACjB,YAAMA,KAAN;;AADiB,WAyBnBC,gBAzBmB,GAyBA,MAAM;AACvB,YAAI,KAAKC,WAAT,EAAsBC,YAAY,CAAC,KAAKD,WAAN,CAAZ;AAEtB,YAAI,KAAKE,aAAT,EAAwBD,YAAY,CAAC,KAAKC,aAAN,CAAZ;AACzB,OA7BkB;;AAAA,WA+BnBC,UA/BmB,GA+BN,MAAM;AACjB,aAAKH,WAAL,GAAmBG,UAAU,CAAC,KAAKC,IAAN,EAAY,KAAKC,KAAL,CAAWC,WAAvB,CAA7B;AACA,aAAKJ,aAAL,GAAqBC,UAAU,CAAC,KAAKI,MAAN,EAAc,KAAKF,KAAL,CAAWG,WAAzB,CAA/B;AACD,OAlCkB;;AAAA,WAoCnBC,YApCmB,GAoCJ,MAAM;AACnB,aAAKV,gBAAL;AACA,aAAKI,UAAL;AACD,OAvCkB;;AAAA,WAyCnBC,IAzCmB,GAyCZ,MAAM;AACXM,QAAAA,MAAM,CAACC,KAAP,CAAa,kDAAb;AACAC,QAAAA,OAAO,CAACC,GAAR,CAAY,mDAAZ;AACD,OA5CkB;;AAAA,WA8CnBN,MA9CmB,GA8CV,MAAM;AACb;AACAK,QAAAA,OAAO,CAACC,GAAR,CAAY,wCAAZ;AACA,aAAKC,OAAL;AACD,OAlDkB;;AAAA,WAoDnBA,OApDmB,GAoDT,MAAM;AACf;AACCpB,QAAAA,cAAc,CAACqB,IAAf,CAAoB,GAApB;AACAL,QAAAA,MAAM,CAACM,QAAP,CAAgBC,MAAhB,CAAuB,GAAvB;AACD,OAxDkB;;AAEjB,WAAKZ,KAAL,GAAa;AACXC,QAAAA,WAAW,EAAE,OAAO,EAAP,GAAY,EADd;AAEXE,QAAAA,WAAW,EAAE,OAAO,EAAP,GAAY;AAFd,OAAb;AAID;;AAEDU,IAAAA,iBAAiB,GAAG;AAClB,WAAKC,MAAL,GAAc,CACZ,MADY,EAEZ,WAFY,EAGZ,WAHY,EAIZ,OAJY,EAKZ,QALY,EAMZ,UANY,CAAd;;AASA,WAAK,IAAIC,CAAT,IAAc,KAAKD,MAAnB,EAA2B;AACzBT,QAAAA,MAAM,CAACW,gBAAP,CAAwB,KAAKF,MAAL,CAAYC,CAAZ,CAAxB,EAAwC,KAAKX,YAA7C;AACD;;AAED,WAAKN,UAAL;AACD;;AAmCDmB,IAAAA,MAAM,GAAG;AACP,aACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE;AAAK,QAAA,KAAK,EAAE;AAACC,UAAAA,UAAU,EAAC;AAAZ,SAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADF,CADF;AAKD;;AAjEsC;AAmE1C","sourcesContent":["import React from 'react';\r\n// import ImageUploader from 'react-images-upload';\r\n// import { NotificationContainer, NotificationManager } from 'react-notifications';\r\n// import 'react-notifications/lib/notifications.css';\r\nimport {browserHistory} from 'react-dom';\r\n// var fs = require('fs')\r\n// var path = require('path')\r\n// var util = require('util')\r\n\r\n// class App extends React.Component {\r\n\r\n//     constructor(props) {\r\n//         super(props);\r\n//         this.state = { pictures: [] };\r\n//         this.onDrop = this.onDrop.bind(this);\r\n//     }\r\n\r\n//     onDrop(picture) {\r\n//         console.log('Picture ', picture);\r\n//         this.setState({\r\n//             pictures: this.state.pictures.concat(picture),\r\n//         });\r\n//     }\r\n\r\n//     votar = () => {\r\n//         NotificationManager.success('Usuario registrado');\r\n//         storeWithOriginalName(this.state.pictures,'public/uploads');\r\n//     }\r\n\r\n//     render() {\r\n//         return (\r\n//             <>\r\n//                 <ImageUploader\r\n//                     withIcon={true}\r\n//                     buttonText='Choose images'\r\n//                     onChange={this.onDrop}\r\n//                     imgExtension={['.jpg', '.gif', '.png', '.gif']}\r\n//                     maxFileSize={5242880}\r\n//                     label=\"cosasoaj\"\r\n//                 />\r\n//                 <button onClick={this.votar}>oprimir</button>\r\n//                 <NotificationContainer />\r\n//             </>\r\n//         );\r\n//     }\r\n// }\r\n\r\n// function storeWithOriginalName(file,destination) {\r\n//     var fullNewPath = path.join(destination,file[0].name)\r\n//     console.log(\"FS \",fs.rename)\r\n//     var rename = util.promisify(fs.rename)\r\n\r\n//     var pathq='public\\\\uploads\\\\cc8b951ef8ce45d6195ec787947462c3';\r\n//     return rename(pathq, fullNewPath)\r\n//         .then(() => {\r\n//             return file[0].name\r\n//         })\r\n// }\r\n\r\nexport default function() {\r\n    class AutoLogout extends React.Component {\r\n      constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n          warningTime: 1000 * 60 * 10,\r\n          signoutTime: 1000 * 60 * 15,\r\n        };\r\n      }\r\n  \r\n      componentDidMount() {\r\n        this.events = [\r\n          'load',\r\n          'mousemove',\r\n          'mousedown',\r\n          'click',\r\n          'scroll',\r\n          'keypress'\r\n        ];\r\n  \r\n        for (var i in this.events) {\r\n          window.addEventListener(this.events[i], this.resetTimeout);\r\n        }\r\n  \r\n        this.setTimeout();\r\n      }\r\n  \r\n      clearTimeoutFunc = () => {\r\n        if (this.warnTimeout) clearTimeout(this.warnTimeout);\r\n  \r\n        if (this.logoutTimeout) clearTimeout(this.logoutTimeout);\r\n      };\r\n  \r\n      setTimeout = () => {\r\n        this.warnTimeout = setTimeout(this.warn, this.state.warningTime);\r\n        this.logoutTimeout = setTimeout(this.logout, this.state.signoutTime);\r\n      };\r\n  \r\n      resetTimeout = () => {\r\n        this.clearTimeoutFunc();\r\n        this.setTimeout();\r\n      };\r\n  \r\n      warn = () => {\r\n        window.alert(\"You will be logged out automatically in 1 minute\")\r\n        console.log('You will be logged out automatically in 1 minute.');\r\n      };\r\n  \r\n      logout = () => {\r\n        // Send a logout request to the API\r\n        console.log('Sending a logout request to the API...');\r\n        this.destroy();\r\n      };\r\n  \r\n      destroy = () => {\r\n       //clear the session\r\n        browserHistory.push('/');\r\n        window.location.assign('/');\r\n      };\r\n  \r\n      render() {\r\n        return (\r\n          <div>\r\n            <div style={{background:\"black\"}}></div>\r\n          </div>\r\n        );\r\n      }\r\n    }\r\n  }"]},"metadata":{},"sourceType":"module"}