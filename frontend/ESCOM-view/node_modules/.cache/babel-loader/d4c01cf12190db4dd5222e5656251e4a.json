{"ast":null,"code":"import axios from 'axios';\nimport { desencriptar } from '../../../SuperAdministrador/componentes/general/Encriptar.js';\nimport { URL_BASE } from '../../../SuperAdministrador/utilitario/Configuracion.js';\nexport const GET_CURRENT_VERSIONS = 'GET_CURRENT_VERSIONS';\nexport const GET_OLD_VERSIONS = 'GET_OLD_VERSIONS';\nexport const STATE_OLD_VERSION = 'STATE_OLD_VERSION';\nexport const STATE_CURRENT_VERSION = 'STATE_CURRENT_VERSION';\nconst PERMIT_CURRENT_VERSIONS = 'MD_Prueba';\nconst PERMIT_OLD_VERSIONS = 'MD_Prueba';\nconst ADD_MESSAGE = 'ADD_MESSAGE'; //MD_Lista versiones actuales\n\nexport function getCurrentVersions(token, id) {\n  const headers = {\n    'Content-Type': 'application/json',\n    'TokenAuto': desencriptar(token),\n    'Permiso': PERMIT_CURRENT_VERSIONS\n  };\n  return (dispatch, getState) => {\n    axios.get(`${URL_BASE}/proyectosESCOM-web/api/documentVersion/listCurrent/${id}`, {\n      headers: headers\n    }).then(response => {\n      dispatch({\n        type: GET_CURRENT_VERSIONS,\n        payload: response.data\n      });\n    }).catch(error => {\n      if (error.request.response === '') {\n        dispatch({\n          type: ADD_MESSAGE,\n          payload: 'error server'\n        });\n      } else {\n        if (error.request) {\n          var data = JSON.parse(error.request.response);\n          let respuesta = data.respuesta;\n\n          if (respuesta === 'Sin permiso') {\n            dispatch({\n              type: STATE_CURRENT_VERSION,\n              payload: true\n            });\n          } else {\n            dispatch({\n              type: ADD_MESSAGE,\n              payload: respuesta\n            });\n          }\n        }\n      }\n    });\n  };\n} //MD_Lista versiones anteriores\n\nexport function getOldVersions(token, id) {\n  const headers = {\n    'Content-Type': 'application/json',\n    'TokenAuto': desencriptar(token),\n    'Permiso': PERMIT_OLD_VERSIONS\n  };\n  return (dispatch, getState) => {\n    axios.get(`${URL_BASE}/proyectosESCOM-web/api/documentVersion/listOld/${id}`, {\n      headers: headers\n    }).then(response => {\n      dispatch({\n        type: GET_OLD_VERSIONS,\n        payload: response.data\n      });\n    }).catch(error => {\n      if (error.request.response === '') {\n        dispatch({\n          type: ADD_MESSAGE,\n          payload: 'error server'\n        });\n      } else {\n        if (error.request) {\n          var data = JSON.parse(error.request.response);\n          let respuesta = data.respuesta;\n\n          if (respuesta === 'Sin permiso') {\n            dispatch({\n              type: STATE_OLD_VERSION,\n              payload: true\n            });\n          } else {\n            dispatch({\n              type: ADD_MESSAGE,\n              payload: respuesta\n            });\n          }\n        }\n      }\n    });\n  };\n}","map":{"version":3,"sources":["C:/Users/hashy/Desktop/proyectosESCOM/frontend/ESCOM-view/src/ModuloDocumental/redux/actions/documentVersionA.js"],"names":["axios","desencriptar","URL_BASE","GET_CURRENT_VERSIONS","GET_OLD_VERSIONS","STATE_OLD_VERSION","STATE_CURRENT_VERSION","PERMIT_CURRENT_VERSIONS","PERMIT_OLD_VERSIONS","ADD_MESSAGE","getCurrentVersions","token","id","headers","dispatch","getState","get","then","response","type","payload","data","catch","error","request","JSON","parse","respuesta","getOldVersions"],"mappings":"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","sourcesContent":["import axios from 'axios';\r\nimport { desencriptar } from '../../../SuperAdministrador/componentes/general/Encriptar.js';\r\nimport { URL_BASE } from '../../../SuperAdministrador/utilitario/Configuracion.js';\r\n\r\nexport const GET_CURRENT_VERSIONS = 'GET_CURRENT_VERSIONS';\r\nexport const GET_OLD_VERSIONS = 'GET_OLD_VERSIONS';\r\nexport const STATE_OLD_VERSION = 'STATE_OLD_VERSION';\r\nexport const STATE_CURRENT_VERSION = 'STATE_CURRENT_VERSION';\r\n\r\nconst PERMIT_CURRENT_VERSIONS = 'MD_Prueba';\r\nconst PERMIT_OLD_VERSIONS = 'MD_Prueba';\r\n\r\nconst ADD_MESSAGE = 'ADD_MESSAGE';\r\n\r\n//MD_Lista versiones actuales\r\nexport function getCurrentVersions(token, id) {\r\n    const headers = {\r\n        'Content-Type': 'application/json',\r\n        'TokenAuto': desencriptar(token),\r\n        'Permiso': PERMIT_CURRENT_VERSIONS\r\n    }\r\n    return (dispatch, getState) => {\r\n        axios.get(`${URL_BASE}/proyectosESCOM-web/api/documentVersion/listCurrent/${id}`, { headers: headers })\r\n            .then(response => {\r\n                dispatch({\r\n                    type: GET_CURRENT_VERSIONS,\r\n                    payload: response.data\r\n                });\r\n            }).catch(error => {\r\n                if (error.request.response === '') {\r\n                    dispatch({\r\n                        type: ADD_MESSAGE,\r\n                        payload: 'error server'\r\n                    });\r\n                } else {\r\n                    if (error.request) {\r\n                        var data = JSON.parse(error.request.response);\r\n                        let respuesta = data.respuesta;\r\n                        if (respuesta === 'Sin permiso') {\r\n                            dispatch({\r\n                                type: STATE_CURRENT_VERSION,\r\n                                payload: true\r\n                            });\r\n                        } else {\r\n                            dispatch({\r\n                                type: ADD_MESSAGE,\r\n                                payload: respuesta\r\n                            });\r\n                        }\r\n                    }\r\n                }\r\n\r\n            });\r\n    }\r\n}\r\n\r\n\r\n//MD_Lista versiones anteriores\r\nexport function getOldVersions(token, id) {\r\n    const headers = {\r\n        'Content-Type': 'application/json',\r\n        'TokenAuto': desencriptar(token),\r\n        'Permiso': PERMIT_OLD_VERSIONS\r\n    }\r\n    return (dispatch, getState) => {\r\n        axios.get(`${URL_BASE}/proyectosESCOM-web/api/documentVersion/listOld/${id}`, { headers: headers })\r\n            .then(response => {\r\n                dispatch({\r\n                    type: GET_OLD_VERSIONS,\r\n                    payload: response.data\r\n                });\r\n            }).catch(error => {\r\n                if (error.request.response === '') {\r\n                    dispatch({\r\n                        type: ADD_MESSAGE,\r\n                        payload: 'error server'\r\n                    });\r\n                } else {\r\n                    if (error.request) {\r\n                        var data = JSON.parse(error.request.response);\r\n                        let respuesta = data.respuesta;\r\n                        if (respuesta === 'Sin permiso') {\r\n                            dispatch({\r\n                                type: STATE_OLD_VERSION,\r\n                                payload: true\r\n                            });\r\n                        } else {\r\n                            dispatch({\r\n                                type: ADD_MESSAGE,\r\n                                payload: respuesta\r\n                            });\r\n                        }\r\n                    }\r\n                }\r\n\r\n            });\r\n    }\r\n}"]},"metadata":{},"sourceType":"module"}