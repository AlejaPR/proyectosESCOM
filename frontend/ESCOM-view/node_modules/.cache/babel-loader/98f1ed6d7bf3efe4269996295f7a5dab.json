{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\hashy\\\\Desktop\\\\proyectosESCOM\\\\frontend\\\\ESCOM-view\\\\src\\\\ModuloDocumental\\\\components\\\\User\\\\Process\\\\addInformation.js\";\nimport React from 'react';\nimport { Component } from 'react';\nimport { Editor } from '@tinymce/tinymce-react';\nimport { connect } from 'react-redux';\nimport { withRouter } from 'react-router-dom';\nimport { getActivityId, addInformation, addMessageAddInfo } from '../../../redux/actions/activityA.js';\nimport { ToastContainer, toast } from 'react-toastify';\n\nclass AddInformation extends Component {\n  constructor(...args) {\n    super(...args);\n    this.valor = \"\";\n\n    this.handleEditorChange = (content, editor) => {\n      this.valor = content;\n    };\n  }\n\n  componentDidUpdate() {\n    if (this.props.messageAddInfo !== '') {\n      switch (this.props.messageAddInfo) {\n        case 'add':\n          toast.success('Se agrego con exito.');\n          this.props.addMessageAddInfo('');\n          this.props.history.push('/UserActivity');\n          break;\n\n        case 'error server':\n          toast.error('Se presento un error, intentelo mas tarde.');\n          this.props.addMessageAddInfo('');\n          break;\n\n        default:\n          break;\n      }\n    }\n  }\n\n  saveView() {\n    let inf = this.valor;\n\n    if (inf === \"\") {\n      inf = this.props.dataModel.information;\n    }\n\n    let info = {\n      id: this.props.dataModel.id,\n      information: inf,\n      requestData: null\n    };\n    this.props.addInformation(localStorage.getItem('Token'), info);\n  }\n\n  componentDidMount() {\n    this.props.getActivityId(localStorage.getItem('Token'), sessionStorage.getItem('activity'));\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      className: \"container color\",\n      style: {\n        width: \"90%\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 53\n      },\n      __self: this\n    }, React.createElement(ToastContainer, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 54\n      },\n      __self: this\n    }), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 55\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      className: \"card\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 56\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"card-body\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 57\n      },\n      __self: this\n    }, React.createElement(\"h3\", {\n      className: \"card-title text-center\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 58\n      },\n      __self: this\n    }, \"Agregar informacion\"), React.createElement(\"h5\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 59\n      },\n      __self: this\n    }, \"Descripci\\xF3n:\"), React.createElement(\"p\", {\n      className: \"px-3\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 60\n      },\n      __self: this\n    }, this.props.dataModel.description), React.createElement(\"hr\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 61\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      className: \"text-center\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 62\n      },\n      __self: this\n    }, React.createElement(Editor, {\n      apiKey: \"spssdb50vwk3go6qwrl2ktj7y3ltm94smrx3pj4pg92ypbx8\",\n      initialValue: this.props.dataModel.information,\n      init: {\n        language: 'es',\n        language_url: '../../node_modules/@tinymce/language/es.js',\n        height: 500,\n        menubar: false,\n        images_upload_handler: function (blobInfo, success, failure) {\n          success(\"data:\" + blobInfo.blob().type + \";base64,\" + blobInfo.base64());\n        },\n        paste_data_images: true,\n        plugins: ['uploadimage', 'image', 'advlist autolink lists link image charmap print preview anchor', 'searchreplace visualblocks code fullscreen', 'insertdatetime media table paste code help wordcount', 'table'],\n        fontsize_formats: '11px 12px 14px 16px 18px 24px 36px 48px',\n        font_formats: 'Andale Mono=andale mono,times; Arial=arial,helvetica,sans-serif; Arial Black=arial black,avant garde; Book Antiqua=book antiqua,palatino; Comic Sans MS=comic sans ms,sans-serif; Courier New=courier new,courier; Georgia=georgia,palatino; Helvetica=helvetica; Impact=impact,chicago; Symbol=symbol; Tahoma=tahoma,arial,helvetica,sans-serif; Terminal=terminal,monaco; Times New Roman=times new roman,times; Trebuchet MS=trebuchet ms,geneva; Verdana=verdana,geneva; Webdings=webdings; Wingdings=wingdings,zapf dingbats',\n        toolbar: 'uploadimage image | undo redo | formatselect | bold italic backcolor | fontsizeselect  fontselect | \\\r\n                                        alignleft aligncenter alignright alignjustify | table | \\\r\n                                        bullist numlist outdent indent  | removeformat | help '\n      },\n      onEditorChange: this.handleEditorChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 63\n      },\n      __self: this\n    }))), React.createElement(\"button\", {\n      style: {\n        width: \"10%\"\n      },\n      onClick: () => this.saveView(),\n      className: \"btn btn-sm text-light float-right naranja\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 96\n      },\n      __self: this\n    }, \"Guardar\")), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 100\n      },\n      __self: this\n    }));\n  }\n\n}\n\nfunction mapStateToProps(state) {\n  return {\n    dataModel: state.activity.activityR,\n    messageAddInfo: state.activity.messageAddInfo\n  };\n}\n\nexport default withRouter(connect(mapStateToProps, {\n  getActivityId,\n  addInformation,\n  addMessageAddInfo\n})(AddInformation));","map":{"version":3,"sources":["C:/Users/hashy/Desktop/proyectosESCOM/frontend/ESCOM-view/src/ModuloDocumental/components/User/Process/addInformation.js"],"names":["React","Component","Editor","connect","withRouter","getActivityId","addInformation","addMessageAddInfo","ToastContainer","toast","AddInformation","valor","handleEditorChange","content","editor","componentDidUpdate","props","messageAddInfo","success","history","push","error","saveView","inf","dataModel","information","info","id","requestData","localStorage","getItem","componentDidMount","sessionStorage","render","width","description","language","language_url","height","menubar","images_upload_handler","blobInfo","failure","blob","type","base64","paste_data_images","plugins","fontsize_formats","font_formats","toolbar","mapStateToProps","state","activity","activityR"],"mappings":"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","sourcesContent":["import React from 'react';\r\nimport { Component } from 'react';\r\nimport { Editor } from '@tinymce/tinymce-react';\r\nimport { connect } from 'react-redux';\r\nimport { withRouter } from 'react-router-dom'\r\nimport { getActivityId, addInformation, addMessageAddInfo } from '../../../redux/actions/activityA.js';\r\nimport { ToastContainer, toast } from 'react-toastify';\r\n\r\nclass AddInformation extends Component {\r\n\r\n    componentDidUpdate() {\r\n        if (this.props.messageAddInfo !== '') {\r\n            switch (this.props.messageAddInfo) {\r\n                case 'add':\r\n                    toast.success('Se agrego con exito.');\r\n                    this.props.addMessageAddInfo('');\r\n                    this.props.history.push('/UserActivity')\r\n                    break;\r\n                case 'error server':\r\n                    toast.error('Se presento un error, intentelo mas tarde.');\r\n                    this.props.addMessageAddInfo('');\r\n                    break;\r\n                default:\r\n                    break;\r\n            }\r\n        }\r\n    }\r\n\r\n    valor = \"\";\r\n    saveView() {\r\n        let inf = this.valor\r\n        if (inf === \"\") {\r\n            inf = this.props.dataModel.information\r\n        }\r\n        let info = {\r\n            id: this.props.dataModel.id,\r\n            information: inf,\r\n            requestData: null\r\n        }\r\n        this.props.addInformation(localStorage.getItem('Token'), info)\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.props.getActivityId(localStorage.getItem('Token'), sessionStorage.getItem('activity'))\r\n    }\r\n\r\n    handleEditorChange = (content, editor) => {\r\n        this.valor = content;\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"container color\" style={{ width: \"90%\" }}>\r\n                <ToastContainer />\r\n                <br />\r\n                <div className=\"card\">\r\n                    <div className=\"card-body\">\r\n                        <h3 className=\"card-title text-center\">Agregar informacion</h3>\r\n                        <h5>Descripción:</h5>\r\n                        <p className=\"px-3\">{this.props.dataModel.description}</p>\r\n                        <hr />\r\n                        <div className=\"text-center\">\r\n                            <Editor\r\n                                apiKey=\"spssdb50vwk3go6qwrl2ktj7y3ltm94smrx3pj4pg92ypbx8\"\r\n                                initialValue={this.props.dataModel.information}\r\n                                init={{\r\n                                    language: 'es',\r\n                                    language_url: '../../node_modules/@tinymce/language/es.js',\r\n                                    height: 500,\r\n                                    menubar: false,\r\n                                    images_upload_handler: function (blobInfo, success, failure) {\r\n                                        success(\"data:\" + blobInfo.blob().type + \";base64,\" + blobInfo.base64());\r\n                                    },\r\n                                    paste_data_images: true,\r\n                                    plugins: [\r\n                                        'uploadimage', 'image',\r\n                                        'advlist autolink lists link image charmap print preview anchor',\r\n                                        'searchreplace visualblocks code fullscreen',\r\n                                        'insertdatetime media table paste code help wordcount',\r\n                                        'table'\r\n                                    ],\r\n                                    fontsize_formats: '11px 12px 14px 16px 18px 24px 36px 48px',\r\n                                    font_formats: 'Andale Mono=andale mono,times; Arial=arial,helvetica,sans-serif; Arial Black=arial black,avant garde; Book Antiqua=book antiqua,palatino; Comic Sans MS=comic sans ms,sans-serif; Courier New=courier new,courier; Georgia=georgia,palatino; Helvetica=helvetica; Impact=impact,chicago; Symbol=symbol; Tahoma=tahoma,arial,helvetica,sans-serif; Terminal=terminal,monaco; Times New Roman=times new roman,times; Trebuchet MS=trebuchet ms,geneva; Verdana=verdana,geneva; Webdings=webdings; Wingdings=wingdings,zapf dingbats',\r\n                                    toolbar:\r\n                                        'uploadimage image | undo redo | formatselect | bold italic backcolor | fontsizeselect  fontselect | \\\r\n                                        alignleft aligncenter alignright alignjustify | table | \\\r\n                                        bullist numlist outdent indent  | removeformat | help '\r\n\r\n                                }}\r\n                                onEditorChange={this.handleEditorChange}\r\n                            />\r\n                        </div>\r\n\r\n                    </div>\r\n\r\n                    <button style={{ width: \"10%\" }} onClick={() => this.saveView()} className=\"btn btn-sm text-light float-right naranja\">\r\n                        Guardar\r\n                    </button>\r\n                </div>\r\n                <br />\r\n            </div>\r\n        );\r\n    }\r\n\r\n}\r\n\r\nfunction mapStateToProps(state) {\r\n    return {\r\n        dataModel: state.activity.activityR,\r\n        messageAddInfo: state.activity.messageAddInfo\r\n    }\r\n}\r\n\r\nexport default withRouter(connect(mapStateToProps, { getActivityId, addInformation, addMessageAddInfo })(AddInformation));"]},"metadata":{},"sourceType":"module"}