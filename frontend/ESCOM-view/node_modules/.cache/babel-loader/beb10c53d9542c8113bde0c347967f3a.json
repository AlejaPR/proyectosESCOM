{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\hashy\\\\Desktop\\\\proyectosESCOM\\\\frontend\\\\ESCOM-view\\\\src\\\\ModuloDocumental\\\\components\\\\Matrix\\\\Fill\\\\thematicList.js\";\nimport React from 'react';\nimport { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { withRouter } from 'react-router-dom';\nimport { ToastContainer, toast } from 'react-toastify';\nimport { getListProgramT, deleteProgramT, addMessageDelete } from '../../../redux/actions/programThematicA.js';\nimport AddProgramT from './addProgramT.js';\nimport Alert from '@material-ui/lab/Alert';\nimport AlertTitle from '@material-ui/lab/AlertTitle';\nimport MaterialTable from 'material-table';\nimport DeleteForeverIcon from '@material-ui/icons/DeleteForever';\nimport VisibilityIcon from '@material-ui/icons/Visibility';\n\nclass ThematicList extends Component {\n  componentWillMount() {\n    this.props.getListProgramT(localStorage.getItem('Token'), sessionStorage.getItem('programId'));\n  }\n\n  save(id) {\n    sessionStorage.setItem('programT', id);\n    this.props.history.push('/ThematicSelect');\n  }\n\n  componentDidUpdate() {\n    if (this.props.messageDelete !== '') {\n      switch (this.props.messageDelete) {\n        case 'delete':\n          toast.success('Se elimino con exito.');\n          this.props.addMessageDelete('');\n          this.props.getListProgramT(localStorage.getItem('Token'), sessionStorage.getItem('programId'));\n          break;\n\n        default:\n          break;\n      }\n    }\n  }\n\n  delete(idP) {\n    this.props.deleteProgramT(localStorage.getItem('Token'), idP);\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      className: \"container\",\n      style: {\n        width: \"90%\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 46\n      },\n      __self: this\n    }, React.createElement(ToastContainer, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 47\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      className: \"text-left titulo\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 48\n      },\n      __self: this\n    }, React.createElement(\"h4\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 49\n      },\n      __self: this\n    }, \"Lista de tem\\xE1ticas del programa\")), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 51\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      className: \"shadow\",\n      style: {\n        background: \"#FFFFFF\",\n        padding: \"30px\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 52\n      },\n      __self: this\n    }, this.props.enabled ? React.createElement(\"div\", {\n      className: \"col-sm-12\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 54\n      },\n      __self: this\n    }, React.createElement(Alert, {\n      severity: \"error\",\n      variant: \"outlined\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 55\n      },\n      __self: this\n    }, React.createElement(AlertTitle, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 56\n      },\n      __self: this\n    }, \"Sin permiso\"), \"No tiene permisos suficientes para listar los nucleos tem\\xE1ticos\")) : React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 59\n      },\n      __self: this\n    }, React.createElement(AddProgramT, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 60\n      },\n      __self: this\n    }), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 61\n      },\n      __self: this\n    }), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 62\n      },\n      __self: this\n    }), React.createElement(MaterialTable, {\n      title: \"\",\n      localization: {\n        header: {\n          actions: ' '\n        },\n        pagination: {\n          nextTooltip: 'Siguiente ',\n          previousTooltip: 'Anterior',\n          labelDisplayedRows: '{from}-{to} de {count}',\n          lastTooltip: 'Ultima pagina',\n          firstTooltip: 'Primera pagina',\n          labelRowsSelect: 'Registros',\n          firstAriaLabel: 'oooo'\n        },\n        body: {\n          emptyDataSourceMessage: 'Aun no hay ninguna temÃ¡tica registrada'\n        },\n        toolbar: {\n          searchTooltip: 'Buscar',\n          searchPlaceholder: 'Buscar'\n        }\n      },\n      columns: [{\n        title: 'Nombre del nucleo tematico',\n        field: 'nameThematicCore'\n      }, {\n        title: 'Objetivo',\n        field: 'objetive'\n      }, {\n        title: '',\n        field: 'id',\n        render: rowData => {\n          return React.createElement(\"div\", {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 94\n            },\n            __self: this\n          }, React.createElement(\"a\", {\n            onClick: () => this.save(rowData.id),\n            \"data-toggle\": \"modal\",\n            \"data-target\": \"#viewModal\",\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 95\n            },\n            __self: this\n          }, React.createElement(VisibilityIcon, {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 96\n            },\n            __self: this\n          })));\n        }\n      }, {\n        title: '',\n        field: 'id',\n        render: rowData => {\n          return React.createElement(\"div\", {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 106\n            },\n            __self: this\n          }, React.createElement(\"a\", {\n            onClick: () => this.delete(rowData.id),\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 107\n            },\n            __self: this\n          }, React.createElement(DeleteForeverIcon, {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 108\n            },\n            __self: this\n          })));\n        }\n      }],\n      data: this.props.listProgramT,\n      options: {\n        search: true\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 63\n      },\n      __self: this\n    }))), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 125\n      },\n      __self: this\n    }));\n  }\n\n}\n\nfunction mapStateToProps(state) {\n  return {\n    listProgramT: state.programThematic.listProgramTR,\n    messageDelete: state.programThematic.messageDelete,\n    enabled: state.programThematic.stateProgramT\n  };\n}\n\nexport default withRouter(connect(mapStateToProps, {\n  getListProgramT,\n  deleteProgramT,\n  addMessageDelete\n})(ThematicList));","map":{"version":3,"sources":["C:/Users/hashy/Desktop/proyectosESCOM/frontend/ESCOM-view/src/ModuloDocumental/components/Matrix/Fill/thematicList.js"],"names":["React","Component","connect","withRouter","ToastContainer","toast","getListProgramT","deleteProgramT","addMessageDelete","AddProgramT","Alert","AlertTitle","MaterialTable","DeleteForeverIcon","VisibilityIcon","ThematicList","componentWillMount","props","localStorage","getItem","sessionStorage","save","id","setItem","history","push","componentDidUpdate","messageDelete","success","delete","idP","render","width","background","padding","enabled","header","actions","pagination","nextTooltip","previousTooltip","labelDisplayedRows","lastTooltip","firstTooltip","labelRowsSelect","firstAriaLabel","body","emptyDataSourceMessage","toolbar","searchTooltip","searchPlaceholder","title","field","rowData","listProgramT","search","mapStateToProps","state","programThematic","listProgramTR","stateProgramT"],"mappings":"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","sourcesContent":["import React from 'react';\r\nimport { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { withRouter } from 'react-router-dom';\r\nimport { ToastContainer, toast } from 'react-toastify';\r\nimport { getListProgramT, deleteProgramT, addMessageDelete } from '../../../redux/actions/programThematicA.js';\r\nimport AddProgramT from './addProgramT.js';\r\nimport Alert from '@material-ui/lab/Alert';\r\nimport AlertTitle from '@material-ui/lab/AlertTitle';\r\n\r\nimport MaterialTable from 'material-table';\r\nimport DeleteForeverIcon from '@material-ui/icons/DeleteForever';\r\nimport VisibilityIcon from '@material-ui/icons/Visibility';\r\n\r\nclass ThematicList extends Component {\r\n\r\n    componentWillMount() {\r\n        this.props.getListProgramT(localStorage.getItem('Token'), sessionStorage.getItem('programId'))\r\n    }\r\n\r\n    save(id) {\r\n        sessionStorage.setItem('programT', id);\r\n        this.props.history.push('/ThematicSelect');\r\n    }\r\n\r\n    componentDidUpdate() {\r\n        if (this.props.messageDelete !== '') {\r\n            switch (this.props.messageDelete) {\r\n                case 'delete':\r\n                    toast.success('Se elimino con exito.');\r\n                    this.props.addMessageDelete('');\r\n                    this.props.getListProgramT(localStorage.getItem('Token'), sessionStorage.getItem('programId'))\r\n                    break;\r\n                default:\r\n                    break;\r\n            }\r\n        }\r\n    }\r\n\r\n    delete(idP) {\r\n        this.props.deleteProgramT(localStorage.getItem('Token'), idP);\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"container\" style={{ width: \"90%\" }}>\r\n                <ToastContainer />\r\n                <div className=\"text-left titulo\">\r\n                    <h4>Lista de temÃ¡ticas del programa</h4>\r\n                </div>\r\n                <br />\r\n                <div className=\"shadow\" style={{ background: \"#FFFFFF\", padding: \"30px\" }}>\r\n                    {\r\n                        this.props.enabled ? <div className=\"col-sm-12\">\r\n                            <Alert severity=\"error\" variant=\"outlined\">\r\n                                <AlertTitle>Sin permiso</AlertTitle>\r\n                            No tiene permisos suficientes para listar los nucleos temÃ¡ticos</Alert>\r\n                        </div> :\r\n                            <div>\r\n                                <AddProgramT />\r\n                                <br />\r\n                                <br />\r\n                                <MaterialTable\r\n                                    title=\"\"\r\n                                    localization={{\r\n                                        header: {\r\n                                            actions: ' '\r\n                                        },\r\n                                        pagination: {\r\n                                            nextTooltip: 'Siguiente ',\r\n                                            previousTooltip: 'Anterior',\r\n                                            labelDisplayedRows: '{from}-{to} de {count}',\r\n                                            lastTooltip: 'Ultima pagina',\r\n                                            firstTooltip: 'Primera pagina',\r\n                                            labelRowsSelect: 'Registros',\r\n                                            firstAriaLabel: 'oooo'\r\n                                        },\r\n                                        body: {\r\n                                            emptyDataSourceMessage: 'Aun no hay ninguna temÃ¡tica registrada'\r\n                                        },\r\n                                        toolbar: {\r\n                                            searchTooltip: 'Buscar',\r\n                                            searchPlaceholder: 'Buscar'\r\n                                        }\r\n                                    }}\r\n                                    columns={[\r\n\r\n                                        { title: 'Nombre del nucleo tematico', field: 'nameThematicCore' },\r\n                                        { title: 'Objetivo', field: 'objetive' },\r\n                                        {\r\n                                            title: '', field: 'id',\r\n                                            render: rowData => {\r\n                                                return (\r\n                                                    <div>\r\n                                                        <a onClick={() => this.save(rowData.id)} data-toggle=\"modal\" data-target=\"#viewModal\">\r\n                                                            <VisibilityIcon />\r\n                                                        </a>\r\n                                                    </div>\r\n                                                )\r\n                                            }\r\n                                        },\r\n                                        {\r\n                                            title: '', field: 'id',\r\n                                            render: rowData => {\r\n                                                return (\r\n                                                    <div>\r\n                                                        <a onClick={() => this.delete(rowData.id)}>\r\n                                                            <DeleteForeverIcon />\r\n                                                        </a>\r\n                                                    </div>\r\n                                                )\r\n                                            }\r\n                                        }\r\n\r\n                                    ]}\r\n                                    data={this.props.listProgramT}\r\n                                    options={{\r\n                                        search: true\r\n                                    }}\r\n\r\n                                />\r\n                            </div>\r\n                    }\r\n                </div>\r\n                <br />\r\n            </div >\r\n        );\r\n    }\r\n\r\n}\r\n\r\nfunction mapStateToProps(state) {\r\n    return {\r\n        listProgramT: state.programThematic.listProgramTR,\r\n        messageDelete: state.programThematic.messageDelete,\r\n        enabled: state.programThematic.stateProgramT\r\n    }\r\n}\r\n\r\nexport default withRouter(connect(mapStateToProps, { getListProgramT, deleteProgramT, addMessageDelete })(ThematicList));"]},"metadata":{},"sourceType":"module"}