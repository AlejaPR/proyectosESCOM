{"ast":null,"code":"import axios from 'axios';\nimport { encriptar, desencriptar } from '../componentes/general/Encriptar.js';\nimport { mensajesDeError } from '../utilitario/MensajesError.js';\nexport const MOSTRAR_USUARIOS = 'MOSTRAR_USUARIOS';\nexport const MODULOS_ACCESO = 'MODULOS_ACCESO';\nexport const ESTADO_USUARIOS = 'ESTADO_USUARIOS';\nexport const MOSTRAR_DOCUMENTOS = 'MOSTRAR_DOCUMENTOS';\nexport const ACTIVIDADES_SIN_ASIGNAR = 'ACTIVIDADES_SIN_ASIGNAR';\nexport const MOSTRAR_ACTIVIDADES_USUARIO = 'MOSTRAR_ACTIVIDADES_USUARIO';\nexport const AGREGAR_USUARIO = 'AGREGAR_USUARIO';\nexport const AGREGAR_ACTIVIDAD = 'AGREGAR_ACTIVIDAD';\nexport const INFORMACION_USUARIO = 'INFORMACION_USUARIO';\nexport const ANADIR_CEDULA_EDITAR = \"ANADIR_CEDULA_EDITAR\";\nexport const EDITAR_USUARIO = \"EDITAR_USUARIO\";\nexport const ACTUALIZAR_USUARIOS = 'ACTUALIZAR_USUARIOS';\nexport const MENSAJE_LOGIN = 'MENSAJE_LOGIN';\nexport const MENSAJE_REGISTRAR = 'MENSAJE_REGISTRAR';\nexport const MENSAJE_ASIGNAR = 'MENSAJE_ASIGNAR';\nexport const MENSAJE_EDITAR = 'MENSAJE_EDITAR';\nexport const MENSAJE_CERRAR_SESION = 'MENSAJE_CERRAR_SESION';\nexport const MENSAJE_SUSPENDER = 'MENSAJE_SUSPENDER';\nexport const REDIRECCIONAR_LOGIN = 'REDIRECCIONAR_LOGIN';\nexport const ESTADO_ASIGNAR = 'ESTADO_ASIGNAR';\nexport const MODULOS_REGISTRADOS = 'MODULOS_REGISTRADOS';\nexport const NOMBRE_USUARIO = 'NOMBRE_USUARIO';\nexport const EMAIL_USUARIO = 'EMAIL_USUARIO';\nexport const MENSAJE_CONTRASENA = 'MENSAJE_CONTRASENA';\nconst URL_BASE = 'http://localhost:9090';\nconst PERMISO_REGISTRAR = 'SA_Registrar usuarios';\nconst PERMISO_CONSULTAR_USUARIOS = 'SA_Consultar usuarios registrados';\nconst PERMISO_EDITAR_USUARIOS = 'SA_Editar informacion de los usuarios';\nconst PERMISO_ASIGNACION_ACTIVIDADES = 'SA_Asignacion de actividades a los usuarios';\nconst PERMISO_SUSPENDER_ACTIVAR = 'SA_Suspender/activar usuarios';\nconst PERMISO_CAMBIAR_CONTRASENA = 'SA_Cambiar contrasena';\nexport function actionLoginUsuario(correo, contrasena, cambiar) {\n  var crypto = require('crypto');\n\n  var contrasenaEncryp = crypto.createHmac('sha256', correo).update(contrasena).digest('hex');\n  cambiar(true);\n  return (dispatch, getState) => {\n    axios.get(`${URL_BASE}/proyectosESCOM-web/api/login/${correo}/${contrasenaEncryp}`).then(response => {\n      if (response.status === 200) {\n        var token = encriptar(response.data.token);\n        localStorage.setItem('Token', token);\n        dispatch({\n          type: MENSAJE_LOGIN,\n          mensaje: 'Login correcto'\n        });\n        var nombre = response.data.nombre + ' ' + response.data.apellido;\n        localStorage.setItem('Nombre', nombre);\n        dispatch({\n          type: NOMBRE_USUARIO,\n          nombre: nombre\n        });\n      }\n    }).catch(error => {\n      if (error.request.response === '') {\n        dispatch({\n          type: MENSAJE_LOGIN,\n          mensaje: 'Servidor fuera de servicio temporalmente'\n        });\n        cambiar(false);\n      } else {\n        if (error.request) {\n          var o = JSON.parse(error.request.response);\n          cambiar(false);\n          dispatch({\n            type: MENSAJE_LOGIN,\n            mensaje: o.respuesta\n          });\n        }\n      }\n    });\n  };\n}\nexport function actionCerrarSesion(token) {\n  const headers = {\n    'Content-Type': 'application/json',\n    'TokenAuto': desencriptar(token)\n  };\n  return (dispatch, getState) => {\n    axios.delete(`${URL_BASE}/proyectosESCOM-web/api/login/cerrarSesion/${desencriptar(token)}`, {\n      headers: headers\n    }).then(response => {\n      dispatch({\n        type: MENSAJE_CERRAR_SESION,\n        mensaje: 'cerrada'\n      });\n    }).catch(function (error) {\n      console.log('error', error);\n      dispatch({\n        type: MENSAJE_CERRAR_SESION,\n        mensaje: 'cerrada'\n      });\n    });\n  };\n}\nexport function actionConsultarCorreo(token) {\n  const headers = {\n    'Content-Type': 'application/json',\n    'TokenAuto': desencriptar(token)\n  };\n  return (dispatch, getState) => {\n    axios.get(`${URL_BASE}/proyectosESCOM-web/api/usuarios/devolverCorreo/${desencriptar(token)}`, {\n      headers: headers\n    }).then(response => {\n      dispatch({\n        type: EMAIL_USUARIO,\n        email: response.data\n      });\n    }).catch(error => {\n      if (error.request.response === '') {} else {\n        if (error.request) {\n          var o = JSON.parse(error.request.response);\n          let respuesta = mensajesDeError(o.respuesta);\n\n          if (respuesta === 'Sin permiso') {\n            dispatch({\n              type: EMAIL_USUARIO,\n              email: true\n            });\n          } else {//\n          }\n        }\n      }\n    });\n  };\n}\nexport function actionConsultarUsuarios(token) {\n  const headers = {\n    'Content-Type': 'application/json',\n    'TokenAuto': desencriptar(token),\n    'Permiso': PERMISO_CONSULTAR_USUARIOS\n  };\n  return (dispatch, getState) => {\n    axios.get(`${URL_BASE}/proyectosESCOM-web/api/usuarios/listar`, {\n      headers: headers\n    }).then(response => {\n      dispatch({\n        type: MOSTRAR_USUARIOS,\n        respuesta: response.data\n      });\n    }).catch(error => {\n      if (error.request.response === '') {} else {\n        if (error.request) {\n          var o = JSON.parse(error.request.response);\n          let respuesta = mensajesDeError(o.respuesta);\n\n          if (respuesta === 'Sin permiso') {\n            dispatch({\n              type: ESTADO_USUARIOS,\n              estado: true\n            });\n          } else {//\n          }\n        }\n      }\n    });\n  };\n}\nexport function actionCambiarContrasena(clave, correo, token) {\n  var crypto = require('crypto');\n\n  let claveObj = {\n    'nuevaClave': crypto.createHmac('sha256', correo).update(clave.nuevaClave).digest('hex'),\n    'antiguaClave': crypto.createHmac('sha256', correo).update(clave.antiguaClave).digest('hex'),\n    'token': desencriptar(token)\n  };\n  const headers = {\n    'Content-Type': 'application/json',\n    'TokenAuto': desencriptar(token)\n  };\n  clave.datosSolicitud = {\n    'ip': localStorage.getItem('Ip'),\n    'token': desencriptar(token),\n    'operacion': PERMISO_CAMBIAR_CONTRASENA\n  };\n  return (dispatch, getState) => {\n    axios.post(`${URL_BASE}/proyectosESCOM-web/api/usuarios/cambiarClaveInterna/${cedula}`, claveObj, {\n      headers: headers\n    }).then(response => {\n      dispatch({\n        type: MENSAJE_CONTRASENA,\n        mensaje: 'ContraseÃ±a cambiada'\n      });\n    }).catch(error => {\n      if (error.request.response === '') {\n        dispatch({\n          type: MENSAJE_CONTRASENA,\n          mensaje: 'Servidor fuera de servicio temporalmente'\n        });\n      } else {\n        if (error.request) {\n          var o = JSON.parse(error.request.response);\n          let respuesta = mensajesDeError(o.respuesta);\n\n          if (respuesta !== '') {\n            dispatch({\n              type: MENSAJE_CONTRASENA,\n              mensaje: respuesta\n            });\n          } else {\n            dispatch({\n              type: MENSAJE_CONTRASENA,\n              mensaje: 'Ya existen los datos registrados previamente'\n            });\n          }\n        }\n      }\n    });\n  };\n}\nexport function actionConsultarModulosAcceso(token) {\n  const headers = {\n    'Content-Type': 'application/json',\n    'TokenAuto': desencriptar(token)\n  };\n  return (dispatch, getState) => {\n    axios.get(`${URL_BASE}/proyectosESCOM-web/api/usuarios/redireccion/${desencriptar(token)}`, {\n      headers: headers\n    }).then(response => {\n      dispatch({\n        type: MODULOS_ACCESO,\n        respuesta: response.data\n      });\n    }).catch(error => {\n      if (error.request.response === '') {} else {\n        if (error.request) {\n          var o = JSON.parse(error.request.response);\n          let respuesta = mensajesDeError(o.respuesta);\n\n          if (respuesta === 'Sin permiso') {\n            dispatch({\n              type: MODULOS_ACCESO,\n              respuesta: []\n            });\n          } else {\n            dispatch({\n              type: MODULOS_ACCESO,\n              respuesta: []\n            });\n          }\n        }\n      }\n    });\n  };\n}\nexport function actionConsultarActividadesUsuario(numeroDocumento, token) {\n  const headers = {\n    'Content-Type': 'application/json',\n    'TokenAuto': desencriptar(token),\n    'Permiso': PERMISO_ASIGNACION_ACTIVIDADES\n  };\n  return (dispatch, getState) => {\n    axios.get(`${URL_BASE}/proyectosESCOM-web/api/usuarios/listarActividades/${numeroDocumento}`, {\n      headers: headers\n    }).then(response => {\n      dispatch({\n        type: MOSTRAR_ACTIVIDADES_USUARIO,\n        respuesta: response.data\n      });\n    }).catch(error => {\n      console.log('errors', error);\n    });\n  };\n}\nexport function actionConsultarDocumentos(token) {\n  const headers = {\n    'Content-Type': 'application/json',\n    'TokenAuto': desencriptar(token),\n    'Permiso': PERMISO_CONSULTAR_USUARIOS\n  };\n  return (dispatch, getState) => {\n    axios.get(`${URL_BASE}/proyectosESCOM-web/api/usuarios/tipoDocumento`, {\n      headers: headers\n    }).then(response => {\n      dispatch({\n        type: MOSTRAR_DOCUMENTOS,\n        respuesta: response.data\n      });\n    });\n  };\n}\nexport function actionAsignarIp() {\n  return (dispatch, getState) => {\n    axios.get(\"https://api.ipify.org/?format=json\").then(response => {\n      localStorage.setItem('Ip', response.data.ip);\n    }).then();\n  };\n}\nexport function actionAgregarUsuario(usuario, token) {\n  const headers = {\n    'Content-Type': 'application/json',\n    'TokenAuto': desencriptar(token),\n    'Permiso': PERMISO_REGISTRAR\n  };\n  usuario.datosSolicitud = {\n    'ip': localStorage.getItem('Ip'),\n    'token': desencriptar(token),\n    'operacion': PERMISO_REGISTRAR\n  };\n  return (dispatch, getState) => {\n    axios.post(`${URL_BASE}/proyectosESCOM-web/api/usuarios/registrar`, usuario, {\n      headers: headers\n    }).then(response => {\n      dispatch({\n        type: AGREGAR_USUARIO,\n        usuarioARegistrar: usuario\n      });\n      dispatch({\n        type: MENSAJE_REGISTRAR,\n        mensaje: 'Usuario registrado'\n      });\n    }).catch(error => {\n      if (error.request.response === '') {\n        dispatch({\n          type: MENSAJE_REGISTRAR,\n          mensaje: 'Servidor fuera de servicio temporalmente'\n        });\n      } else {\n        if (error.request) {\n          var o = JSON.parse(error.request.response);\n          let respuesta = mensajesDeError(o.respuesta);\n\n          if (respuesta !== '') {\n            dispatch({\n              type: MENSAJE_REGISTRAR,\n              mensaje: respuesta\n            });\n          } else {\n            dispatch({\n              type: MENSAJE_REGISTRAR,\n              mensaje: 'Ya existen los datos registrados previamente'\n            });\n          }\n        }\n      }\n    });\n  };\n}\nexport function actionAsignarActividad(token, numeroDocumento, actividad) {\n  const headers = {\n    'Content-Type': 'application/json',\n    'TokenAuto': desencriptar(token),\n    'Permiso': PERMISO_ASIGNACION_ACTIVIDADES\n  };\n  actividad.datosSolicitud = {\n    'ip': localStorage.getItem('Ip'),\n    'token': desencriptar(token),\n    'operacion': PERMISO_ASIGNACION_ACTIVIDADES\n  };\n  return (dispatch, getState) => {\n    axios.post(`${URL_BASE}/proyectosESCOM-web/api/usuarios/asignarActividad/${numeroDocumento}`, actividad, {\n      headers: headers\n    }).then(response => {\n      dispatch({\n        type: MENSAJE_ASIGNAR,\n        mensaje: 'Actividad asignada'\n      });\n    }).catch(error => {\n      if (error.request.response === '') {\n        dispatch({\n          type: MENSAJE_ASIGNAR,\n          mensaje: 'Servidor fuera de servicio temporalmente'\n        });\n      } else {\n        if (error.request) {\n          var o = JSON.parse(error.request.response);\n          let respuesta = mensajesDeError(o.respuesta);\n\n          if (respuesta !== '') {\n            dispatch({\n              type: MENSAJE_ASIGNAR,\n              mensaje: respuesta\n            });\n          } else {\n            dispatch({\n              type: MENSAJE_ASIGNAR,\n              mensaje: 'Ya existen los datos registrados previamente'\n            });\n          }\n        }\n      }\n    });\n  };\n}\nexport function actionSuspenderActivarUsuario(cedula, token, actualizados, registrados) {\n  const headers = {\n    'Content-Type': 'application/json',\n    'TokenAuto': desencriptar(token),\n    'Permiso': PERMISO_SUSPENDER_ACTIVAR\n  };\n  let datosSolicitud = {\n    'ip': localStorage.getItem('Ip'),\n    'token': desencriptar(token),\n    'operacion': PERMISO_SUSPENDER_ACTIVAR\n  };\n  return (dispatch, getState) => {\n    axios.put(`${URL_BASE}/proyectosESCOM-web/api/usuarios/cambiarEstado/${cedula}`, datosSolicitud, {\n      headers: headers\n    }).then(response => {\n      dispatch({\n        type: MENSAJE_SUSPENDER,\n        mensaje: 'Operacion hecha con exito'\n      });\n      dispatch({\n        type: ACTUALIZAR_USUARIOS,\n        usuario: actualizados\n      });\n    }).catch(error => {\n      if (error.request.response === '') {\n        dispatch({\n          type: MENSAJE_SUSPENDER,\n          mensaje: 'Servidor fuera de servicio temporalmente'\n        });\n      } else {\n        if (error.request) {\n          var o = JSON.parse(error.request.response);\n          let respuesta = mensajesDeError(o.respuesta);\n\n          if (respuesta !== '') {\n            dispatch({\n              type: MENSAJE_SUSPENDER,\n              mensaje: respuesta\n            });\n          } else {\n            dispatch({\n              type: MENSAJE_SUSPENDER,\n              mensaje: 'Sin acceso al servicio'\n            });\n          }\n        }\n      }\n    });\n  };\n}\nexport function actionCargarInformacionDeUsuario(cedula, token) {\n  const headers = {\n    'Content-Type': 'application/json',\n    'TokenAuto': desencriptar(token),\n    'Permiso': PERMISO_EDITAR_USUARIOS\n  };\n  return (dispatch, getState) => {\n    axios.get(`${URL_BASE}/proyectosESCOM-web/api/usuarios/datos/${cedula}`, {\n      headers: headers\n    }).then(response => {\n      dispatch({\n        type: INFORMACION_USUARIO,\n        informacionUsuario: response.data\n      });\n    }).catch(error => {\n      if (error.request.response === '') {\n        dispatch({\n          type: MENSAJE_EDITAR,\n          mensaje: 'Servidor fuera de servicio temporalmente'\n        });\n      } else {\n        if (error.request) {\n          var o = JSON.parse(error.request.response);\n          let respuesta = mensajesDeError(o.respuesta);\n\n          if (respuesta !== '') {\n            dispatch({\n              type: MENSAJE_EDITAR,\n              mensaje: respuesta\n            });\n          } else {\n            dispatch({\n              type: MENSAJE_EDITAR,\n              mensaje: 'Sin acceso al servicio'\n            });\n          }\n        }\n      }\n    });\n  };\n}\nexport function actionConsultarModulos(token) {\n  const headers = {\n    'Content-Type': 'application/json',\n    'TokenAuto': desencriptar(token),\n    'Permiso': PERMISO_ASIGNACION_ACTIVIDADES\n  };\n  return (dispatch, getState) => {\n    axios.get(`${URL_BASE}/proyectosESCOM-web/api/modulos/listar`, {\n      headers: headers\n    }).then(response => {\n      dispatch({\n        type: MODULOS_REGISTRADOS,\n        respuesta: response.data\n      });\n    }).catch(error => {\n      if (error.request.response === '') {} else {\n        if (error.request) {\n          var o = JSON.parse(error.request.response);\n          let respuesta = mensajesDeError(o.respuesta);\n\n          if (respuesta === 'Sin permiso') {\n            dispatch({\n              type: ESTADO_ASIGNAR,\n              estado: true\n            });\n          } else {//\n          }\n        }\n      }\n    });\n  };\n}\nexport function actionEliminarActividades(actividades, token, numeroDocumento) {\n  const headers = {\n    'Content-Type': 'application/json',\n    'TokenAuto': desencriptar(token),\n    'Permiso': PERMISO_ASIGNACION_ACTIVIDADES\n  };\n  actividades[0].datosSolicitud = {\n    'ip': localStorage.getItem('Ip'),\n    'token': desencriptar(token),\n    'operacion': PERMISO_ASIGNACION_ACTIVIDADES\n  };\n  debugger;\n  return (dispatch, getState) => {\n    axios.put(`${URL_BASE}/proyectosESCOM-web/api/usuarios/eliminarActividad/${numeroDocumento}`, actividades, {\n      headers: headers\n    }).then(response => {\n      dispatch({\n        type: MENSAJE_ASIGNAR,\n        mensaje: 'Actividades eliminadas'\n      });\n    }).catch(error => {\n      console.log(error);\n\n      if (error.request.response === '') {\n        dispatch({\n          type: MENSAJE_ASIGNAR,\n          mensaje: 'Servidor fuera de servicio temporalmente'\n        });\n      } else {\n        if (error.request) {\n          var o = JSON.parse(error.request.response);\n          let respuesta = mensajesDeError(o.respuesta);\n          console.log('respuesta', respuesta);\n\n          if (respuesta !== '') {\n            dispatch({\n              type: MENSAJE_ASIGNAR,\n              mensaje: respuesta\n            });\n          } else {\n            dispatch({\n              type: MENSAJE_ASIGNAR,\n              mensaje: 'Sin acceso al servicio'\n            });\n          }\n        }\n      }\n    });\n  };\n}\nexport function actionConsultarActividadesSinAsignar(token, numeroDocumento, codigoModulo) {\n  const headers = {\n    'Content-Type': 'application/json',\n    'TokenAuto': desencriptar(token),\n    'Permiso': PERMISO_ASIGNACION_ACTIVIDADES\n  };\n  return (dispatch, getState) => {\n    axios.get(`${URL_BASE}/proyectosESCOM-web/api/usuarios/listarActividadesNoAsociadas/${numeroDocumento}/${codigoModulo}`, {\n      headers: headers\n    }).then(response => {\n      dispatch({\n        type: ACTIVIDADES_SIN_ASIGNAR,\n        respuesta: response.data\n      });\n    }).catch(error => {\n      if (error.request.response === '') {} else {\n        if (error.request) {\n          var o = JSON.parse(error.request.response);\n          let respuesta = mensajesDeError(o.respuesta);\n\n          if (respuesta === 'Sin permiso') {\n            dispatch({\n              type: ESTADO_ASIGNAR,\n              estado: true\n            });\n          } else {//\n          }\n        }\n      }\n    });\n  };\n}\nexport function actionEditarUsuario(usuario, cedula, token) {\n  const headers = {\n    'Content-Type': 'application/json',\n    'TokenAuto': desencriptar(token),\n    'Permiso': PERMISO_EDITAR_USUARIOS\n  };\n  usuario.datosSolicitud = {\n    'ip': localStorage.getItem('Ip'),\n    'token': desencriptar(token),\n    'operacion': PERMISO_EDITAR_USUARIOS\n  };\n  return (dispatch, getState) => {\n    axios.put(`${URL_BASE}/proyectosESCOM-web/api/usuarios/editar/${cedula}`, usuario, {\n      headers: headers\n    }).then(response => {\n      dispatch({\n        type: EDITAR_USUARIO,\n        payload: usuario\n      });\n      dispatch({\n        type: MENSAJE_EDITAR,\n        mensaje: 'Modificado'\n      });\n    }).catch(error => {\n      if (error.request.response === '') {\n        dispatch({\n          type: MENSAJE_EDITAR,\n          mensaje: 'Servidor fuera de servicio temporalmente'\n        });\n      } else {\n        if (error.request) {\n          var o = JSON.parse(error.request.response);\n          let respuesta = mensajesDeError(o.respuesta);\n\n          if (respuesta !== '') {\n            dispatch({\n              type: MENSAJE_EDITAR,\n              mensaje: respuesta\n            });\n          } else {\n            dispatch({\n              type: MENSAJE_EDITAR,\n              mensaje: 'Ya existen los datos registrados previamente'\n            });\n          }\n        }\n      }\n    });\n  };\n}\nexport function actualizarMensajeCerrar(mensaje) {\n  return (dispatch, getState) => {\n    dispatch({\n      type: MENSAJE_CERRAR_SESION,\n      mensaje: mensaje\n    });\n  };\n}\nexport function actualizarMensajeEditar(mensaje) {\n  return (dispatch, getState) => {\n    dispatch({\n      type: MENSAJE_EDITAR,\n      mensaje: mensaje\n    });\n  };\n}\nexport function actualizarMensajeLogin(mensaje) {\n  return (dispatch, getState) => {\n    dispatch({\n      type: MENSAJE_LOGIN,\n      mensaje: mensaje\n    });\n  };\n}\nexport function actualizarMensajeRegistrar(mensaje) {\n  return (dispatch, getState) => {\n    dispatch({\n      type: MENSAJE_REGISTRAR,\n      mensaje: mensaje\n    });\n  };\n}\nexport function actualizarMensajeSuspender(mensaje) {\n  return (dispatch, getState) => {\n    dispatch({\n      type: MENSAJE_SUSPENDER,\n      mensaje: mensaje\n    });\n  };\n}\nexport function asignarNombreUsuario(nombre) {\n  return (dispatch, getState) => {\n    dispatch({\n      type: NOMBRE_USUARIO,\n      nombre: nombre\n    });\n  };\n}\nexport function actualizarMensajeAsignar(mensaje) {\n  return (dispatch, getState) => {\n    dispatch({\n      type: MENSAJE_ASIGNAR,\n      mensaje: mensaje\n    });\n  };\n}\nexport function actualizarMensajeCambiarContrasena(mensaje) {\n  return (dispatch, getState) => {\n    dispatch({\n      type: MENSAJE_CONTRASENA,\n      mensaje: mensaje\n    });\n  };\n}\nexport function actionAsignarCedula(cedula) {\n  return (dispatch, getState) => {\n    dispatch({\n      type: ANADIR_CEDULA_EDITAR,\n      cedula: cedula\n    });\n  };\n}\nexport function actionAsignarActividades() {\n  return (dispatch, getState) => {\n    dispatch({\n      type: ACTIVIDADES_SIN_ASIGNAR,\n      respuesta: null\n    });\n  };\n}\nexport function actionActualizarUsuarios(usuarios) {\n  return (dispatch, getState) => {\n    dispatch({\n      type: ACTUALIZAR_USUARIOS,\n      usuario: usuarios\n    });\n  };\n}","map":{"version":3,"sources":["C:/Users/jeiso/Desktop/proyectosESCOM/frontend/ESCOM-view/src/SuperAdministrador/actions/actionsUsuario.js"],"names":["axios","encriptar","desencriptar","mensajesDeError","MOSTRAR_USUARIOS","MODULOS_ACCESO","ESTADO_USUARIOS","MOSTRAR_DOCUMENTOS","ACTIVIDADES_SIN_ASIGNAR","MOSTRAR_ACTIVIDADES_USUARIO","AGREGAR_USUARIO","AGREGAR_ACTIVIDAD","INFORMACION_USUARIO","ANADIR_CEDULA_EDITAR","EDITAR_USUARIO","ACTUALIZAR_USUARIOS","MENSAJE_LOGIN","MENSAJE_REGISTRAR","MENSAJE_ASIGNAR","MENSAJE_EDITAR","MENSAJE_CERRAR_SESION","MENSAJE_SUSPENDER","REDIRECCIONAR_LOGIN","ESTADO_ASIGNAR","MODULOS_REGISTRADOS","NOMBRE_USUARIO","EMAIL_USUARIO","MENSAJE_CONTRASENA","URL_BASE","PERMISO_REGISTRAR","PERMISO_CONSULTAR_USUARIOS","PERMISO_EDITAR_USUARIOS","PERMISO_ASIGNACION_ACTIVIDADES","PERMISO_SUSPENDER_ACTIVAR","PERMISO_CAMBIAR_CONTRASENA","actionLoginUsuario","correo","contrasena","cambiar","crypto","require","contrasenaEncryp","createHmac","update","digest","dispatch","getState","get","then","response","status","token","data","localStorage","setItem","type","mensaje","nombre","apellido","catch","error","request","o","JSON","parse","respuesta","actionCerrarSesion","headers","delete","console","log","actionConsultarCorreo","email","actionConsultarUsuarios","estado","actionCambiarContrasena","clave","claveObj","nuevaClave","antiguaClave","datosSolicitud","getItem","post","cedula","actionConsultarModulosAcceso","actionConsultarActividadesUsuario","numeroDocumento","actionConsultarDocumentos","actionAsignarIp","ip","actionAgregarUsuario","usuario","usuarioARegistrar","actionAsignarActividad","actividad","actionSuspenderActivarUsuario","actualizados","registrados","put","actionCargarInformacionDeUsuario","informacionUsuario","actionConsultarModulos","actionEliminarActividades","actividades","actionConsultarActividadesSinAsignar","codigoModulo","actionEditarUsuario","payload","actualizarMensajeCerrar","actualizarMensajeEditar","actualizarMensajeLogin","actualizarMensajeRegistrar","actualizarMensajeSuspender","asignarNombreUsuario","actualizarMensajeAsignar","actualizarMensajeCambiarContrasena","actionAsignarCedula","actionAsignarActividades","actionActualizarUsuarios","usuarios"],"mappings":"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","sourcesContent":["import axios from 'axios';\r\nimport { encriptar, desencriptar } from '../componentes/general/Encriptar.js';\r\nimport { mensajesDeError } from '../utilitario/MensajesError.js';\r\n\r\nexport const MOSTRAR_USUARIOS = 'MOSTRAR_USUARIOS';\r\nexport const MODULOS_ACCESO = 'MODULOS_ACCESO';\r\nexport const ESTADO_USUARIOS = 'ESTADO_USUARIOS';\r\nexport const MOSTRAR_DOCUMENTOS = 'MOSTRAR_DOCUMENTOS';\r\nexport const ACTIVIDADES_SIN_ASIGNAR = 'ACTIVIDADES_SIN_ASIGNAR';\r\nexport const MOSTRAR_ACTIVIDADES_USUARIO = 'MOSTRAR_ACTIVIDADES_USUARIO';\r\nexport const AGREGAR_USUARIO = 'AGREGAR_USUARIO';\r\nexport const AGREGAR_ACTIVIDAD = 'AGREGAR_ACTIVIDAD';\r\nexport const INFORMACION_USUARIO = 'INFORMACION_USUARIO';\r\nexport const ANADIR_CEDULA_EDITAR = \"ANADIR_CEDULA_EDITAR\";\r\nexport const EDITAR_USUARIO = \"EDITAR_USUARIO\";\r\nexport const ACTUALIZAR_USUARIOS = 'ACTUALIZAR_USUARIOS';\r\nexport const MENSAJE_LOGIN = 'MENSAJE_LOGIN';\r\nexport const MENSAJE_REGISTRAR = 'MENSAJE_REGISTRAR';\r\nexport const MENSAJE_ASIGNAR = 'MENSAJE_ASIGNAR';\r\nexport const MENSAJE_EDITAR = 'MENSAJE_EDITAR';\r\nexport const MENSAJE_CERRAR_SESION = 'MENSAJE_CERRAR_SESION';\r\nexport const MENSAJE_SUSPENDER = 'MENSAJE_SUSPENDER';\r\nexport const REDIRECCIONAR_LOGIN = 'REDIRECCIONAR_LOGIN';\r\nexport const ESTADO_ASIGNAR = 'ESTADO_ASIGNAR';\r\nexport const MODULOS_REGISTRADOS = 'MODULOS_REGISTRADOS';\r\nexport const NOMBRE_USUARIO = 'NOMBRE_USUARIO';\r\nexport const EMAIL_USUARIO = 'EMAIL_USUARIO';\r\nexport const MENSAJE_CONTRASENA = 'MENSAJE_CONTRASENA';\r\n\r\nconst URL_BASE = 'http://localhost:9090';\r\nconst PERMISO_REGISTRAR = 'SA_Registrar usuarios';\r\nconst PERMISO_CONSULTAR_USUARIOS = 'SA_Consultar usuarios registrados';\r\nconst PERMISO_EDITAR_USUARIOS = 'SA_Editar informacion de los usuarios';\r\nconst PERMISO_ASIGNACION_ACTIVIDADES = 'SA_Asignacion de actividades a los usuarios';\r\nconst PERMISO_SUSPENDER_ACTIVAR = 'SA_Suspender/activar usuarios';\r\nconst PERMISO_CAMBIAR_CONTRASENA='SA_Cambiar contrasena';\r\n\r\nexport function actionLoginUsuario(correo, contrasena, cambiar) {\r\n    var crypto = require('crypto');\r\n    var contrasenaEncryp = crypto.createHmac('sha256', correo).update(contrasena).digest('hex');\r\n    cambiar(true);\r\n    return (dispatch, getState) => {\r\n        axios.get(`${URL_BASE}/proyectosESCOM-web/api/login/${correo}/${contrasenaEncryp}`)\r\n            .then(response => {\r\n                if (response.status === 200) {\r\n                    var token = encriptar(response.data.token);\r\n                    localStorage.setItem('Token', token);\r\n                    dispatch({\r\n                        type: MENSAJE_LOGIN,\r\n                        mensaje: 'Login correcto'\r\n                    });\r\n                    var nombre = response.data.nombre + ' ' + response.data.apellido;\r\n                    localStorage.setItem('Nombre', nombre);\r\n                    dispatch({\r\n                        type: NOMBRE_USUARIO,\r\n                        nombre: nombre\r\n                    });\r\n                }\r\n            }).catch((error) => {\r\n                if (error.request.response === '') {\r\n                    dispatch({\r\n                        type: MENSAJE_LOGIN,\r\n                        mensaje: 'Servidor fuera de servicio temporalmente'\r\n                    });\r\n                    cambiar(false);\r\n                } else {\r\n                    if (error.request) {\r\n                        var o = JSON.parse(error.request.response);\r\n                        cambiar(false);\r\n                        dispatch({\r\n                            type: MENSAJE_LOGIN,\r\n                            mensaje: o.respuesta\r\n                        });\r\n                    }\r\n                }\r\n            })\r\n    };\r\n}\r\n\r\n\r\n\r\nexport function actionCerrarSesion(token) {\r\n    const headers = {\r\n        'Content-Type': 'application/json',\r\n        'TokenAuto': desencriptar(token)\r\n    }\r\n    return (dispatch, getState) => {\r\n        axios.delete(`${URL_BASE}/proyectosESCOM-web/api/login/cerrarSesion/${desencriptar(token)}`, { headers: headers })\r\n            .then(response => {\r\n                dispatch({\r\n                    type: MENSAJE_CERRAR_SESION,\r\n                    mensaje: 'cerrada'\r\n                });\r\n            }).catch(function (error) {\r\n                console.log('error', error);\r\n                dispatch({\r\n                    type: MENSAJE_CERRAR_SESION,\r\n                    mensaje: 'cerrada'\r\n                });\r\n            });\r\n    }\r\n}\r\n\r\n\r\n\r\nexport function actionConsultarCorreo(token) {\r\n    const headers = {\r\n        'Content-Type': 'application/json',\r\n        'TokenAuto': desencriptar(token)\r\n    }\r\n    return (dispatch, getState) => {\r\n        axios.get(`${URL_BASE}/proyectosESCOM-web/api/usuarios/devolverCorreo/${desencriptar(token)}`, { headers: headers })\r\n            .then(response => {\r\n                dispatch({\r\n                    type: EMAIL_USUARIO,\r\n                    email: response.data\r\n                });\r\n            }).catch((error) => {\r\n                if (error.request.response === '') {\r\n\r\n                } else {\r\n                    if (error.request) {\r\n                        var o = JSON.parse(error.request.response);\r\n                        let respuesta = mensajesDeError(o.respuesta);\r\n                        if (respuesta === 'Sin permiso') {\r\n                            dispatch({\r\n                                type: EMAIL_USUARIO,\r\n                                email: true\r\n                            });\r\n                        } else {\r\n                            //\r\n                        }\r\n                    }\r\n                }\r\n            });\r\n    };\r\n}\r\n\r\nexport function actionConsultarUsuarios(token) {\r\n    const headers = {\r\n        'Content-Type': 'application/json',\r\n        'TokenAuto': desencriptar(token),\r\n        'Permiso': PERMISO_CONSULTAR_USUARIOS\r\n    }\r\n    return (dispatch, getState) => {\r\n        axios.get(`${URL_BASE}/proyectosESCOM-web/api/usuarios/listar`, { headers: headers })\r\n            .then(response => {\r\n                dispatch({\r\n                    type: MOSTRAR_USUARIOS,\r\n                    respuesta: response.data\r\n                });\r\n            }).catch((error) => {\r\n                if (error.request.response === '') {\r\n\r\n                } else {\r\n                    if (error.request) {\r\n                        var o = JSON.parse(error.request.response);\r\n                        let respuesta = mensajesDeError(o.respuesta);\r\n                        if (respuesta === 'Sin permiso') {\r\n                            dispatch({\r\n                                type: ESTADO_USUARIOS,\r\n                                estado: true\r\n                            });\r\n                        } else {\r\n                            //\r\n                        }\r\n                    }\r\n                }\r\n            });\r\n    };\r\n}\r\n\r\nexport function actionCambiarContrasena(clave, correo, token) {\r\n    var crypto = require('crypto');\r\n    let claveObj={\r\n        'nuevaClave':crypto.createHmac('sha256', correo).update(clave.nuevaClave).digest('hex'),\r\n        'antiguaClave':crypto.createHmac('sha256', correo).update(clave.antiguaClave).digest('hex'),\r\n        'token':desencriptar(token)\r\n    }\r\n    const headers = {\r\n        'Content-Type': 'application/json',\r\n        'TokenAuto': desencriptar(token)\r\n    }\r\n    clave.datosSolicitud = {\r\n        'ip': localStorage.getItem('Ip'),\r\n        'token': desencriptar(token),\r\n        'operacion': PERMISO_CAMBIAR_CONTRASENA\r\n    };\r\n    return (dispatch, getState) => {\r\n        axios.post(`${URL_BASE}/proyectosESCOM-web/api/usuarios/cambiarClaveInterna/${cedula}`, claveObj, { headers: headers })\r\n            .then(response => {\r\n                dispatch({\r\n                    type: MENSAJE_CONTRASENA,\r\n                    mensaje: 'ContraseÃ±a cambiada'\r\n                });\r\n            }).catch((error) => {\r\n                if (error.request.response === '') {\r\n                    dispatch({\r\n                        type: MENSAJE_CONTRASENA,\r\n                        mensaje: 'Servidor fuera de servicio temporalmente'\r\n                    });\r\n                } else {\r\n                    if (error.request) {\r\n                        var o = JSON.parse(error.request.response);\r\n                        let respuesta = mensajesDeError(o.respuesta);\r\n                        if (respuesta !== '') {\r\n                            dispatch({\r\n                                type: MENSAJE_CONTRASENA,\r\n                                mensaje: respuesta\r\n                            });\r\n                        } else {\r\n                            dispatch({\r\n                                type: MENSAJE_CONTRASENA,\r\n                                mensaje: 'Ya existen los datos registrados previamente'\r\n                            });\r\n                        }\r\n                    }\r\n                }\r\n\r\n            });\r\n    }\r\n}\r\n\r\nexport function actionConsultarModulosAcceso(token) {\r\n    const headers = {\r\n        'Content-Type': 'application/json',\r\n        'TokenAuto': desencriptar(token)\r\n    }\r\n    return (dispatch, getState) => {\r\n        axios.get(`${URL_BASE}/proyectosESCOM-web/api/usuarios/redireccion/${desencriptar(token)}`, { headers: headers })\r\n            .then(response => {\r\n                dispatch({\r\n                    type: MODULOS_ACCESO,\r\n                    respuesta: response.data\r\n                });\r\n            }).catch((error) => {\r\n                if (error.request.response === '') {\r\n\r\n                } else {\r\n                    if (error.request) {\r\n                        var o = JSON.parse(error.request.response);\r\n                        let respuesta = mensajesDeError(o.respuesta);\r\n                        if (respuesta === 'Sin permiso') {\r\n                            dispatch({\r\n                                type: MODULOS_ACCESO,\r\n                                respuesta: []\r\n                            });\r\n                        } else {\r\n                            dispatch({\r\n                                type: MODULOS_ACCESO,\r\n                                respuesta: []\r\n                            });\r\n                        }\r\n                    }\r\n                }\r\n            });\r\n    };\r\n}\r\n\r\nexport function actionConsultarActividadesUsuario(numeroDocumento, token) {\r\n    const headers = {\r\n        'Content-Type': 'application/json',\r\n        'TokenAuto': desencriptar(token),\r\n        'Permiso': PERMISO_ASIGNACION_ACTIVIDADES\r\n    }\r\n    return (dispatch, getState) => {\r\n        axios.get(`${URL_BASE}/proyectosESCOM-web/api/usuarios/listarActividades/${numeroDocumento}`, { headers: headers })\r\n            .then(response => {\r\n                dispatch({\r\n                    type: MOSTRAR_ACTIVIDADES_USUARIO,\r\n                    respuesta: response.data\r\n                });\r\n            }).catch((error) => {\r\n                console.log('errors', error);\r\n            });\r\n    };\r\n}\r\n\r\nexport function actionConsultarDocumentos(token) {\r\n    const headers = {\r\n        'Content-Type': 'application/json',\r\n        'TokenAuto': desencriptar(token),\r\n        'Permiso': PERMISO_CONSULTAR_USUARIOS\r\n    }\r\n    return (dispatch, getState) => {\r\n        axios.get(`${URL_BASE}/proyectosESCOM-web/api/usuarios/tipoDocumento`, { headers: headers })\r\n            .then(response => {\r\n                dispatch({\r\n                    type: MOSTRAR_DOCUMENTOS,\r\n                    respuesta: response.data\r\n                });\r\n            });\r\n    };\r\n}\r\n\r\nexport function actionAsignarIp() {\r\n    return (dispatch, getState) => {\r\n        axios.get(\"https://api.ipify.org/?format=json\")\r\n            .then(response => {\r\n                localStorage.setItem('Ip', response.data.ip)\r\n            }).then(\r\n\r\n            );\r\n    };\r\n}\r\n\r\nexport function actionAgregarUsuario(usuario, token) {\r\n    const headers = {\r\n        'Content-Type': 'application/json',\r\n        'TokenAuto': desencriptar(token),\r\n        'Permiso': PERMISO_REGISTRAR\r\n    }\r\n    usuario.datosSolicitud = {\r\n        'ip': localStorage.getItem('Ip'),\r\n        'token': desencriptar(token),\r\n        'operacion': PERMISO_REGISTRAR\r\n    };\r\n    return (dispatch, getState) => {\r\n        axios.post(`${URL_BASE}/proyectosESCOM-web/api/usuarios/registrar`, usuario, { headers: headers })\r\n            .then(response => {\r\n                dispatch({\r\n                    type: AGREGAR_USUARIO,\r\n                    usuarioARegistrar: usuario\r\n                });\r\n                dispatch({\r\n                    type: MENSAJE_REGISTRAR,\r\n                    mensaje: 'Usuario registrado'\r\n                });\r\n            }).catch((error) => {\r\n                if (error.request.response === '') {\r\n                    dispatch({\r\n                        type: MENSAJE_REGISTRAR,\r\n                        mensaje: 'Servidor fuera de servicio temporalmente'\r\n                    });\r\n                } else {\r\n                    if (error.request) {\r\n                        var o = JSON.parse(error.request.response);\r\n                        let respuesta = mensajesDeError(o.respuesta);\r\n                        if (respuesta !== '') {\r\n                            dispatch({\r\n                                type: MENSAJE_REGISTRAR,\r\n                                mensaje: respuesta\r\n                            });\r\n                        } else {\r\n                            dispatch({\r\n                                type: MENSAJE_REGISTRAR,\r\n                                mensaje: 'Ya existen los datos registrados previamente'\r\n                            });\r\n                        }\r\n                    }\r\n                }\r\n\r\n            });\r\n\r\n    }\r\n}\r\n\r\nexport function actionAsignarActividad(token, numeroDocumento, actividad) {\r\n    const headers = {\r\n        'Content-Type': 'application/json',\r\n        'TokenAuto': desencriptar(token),\r\n        'Permiso': PERMISO_ASIGNACION_ACTIVIDADES\r\n    }\r\n    actividad.datosSolicitud = {\r\n        'ip': localStorage.getItem('Ip'),\r\n        'token': desencriptar(token),\r\n        'operacion': PERMISO_ASIGNACION_ACTIVIDADES\r\n    }\r\n    return (dispatch, getState) => {\r\n        axios.post(`${URL_BASE}/proyectosESCOM-web/api/usuarios/asignarActividad/${numeroDocumento}`, actividad, { headers: headers })\r\n            .then(response => {\r\n                dispatch({\r\n                    type: MENSAJE_ASIGNAR,\r\n                    mensaje: 'Actividad asignada'\r\n                });\r\n            }).catch((error) => {\r\n                if (error.request.response === '') {\r\n                    dispatch({\r\n                        type: MENSAJE_ASIGNAR,\r\n                        mensaje: 'Servidor fuera de servicio temporalmente'\r\n                    });\r\n                } else {\r\n                    if (error.request) {\r\n                        var o = JSON.parse(error.request.response);\r\n                        let respuesta = mensajesDeError(o.respuesta);\r\n                        if (respuesta !== '') {\r\n                            dispatch({\r\n                                type: MENSAJE_ASIGNAR,\r\n                                mensaje: respuesta\r\n                            });\r\n                        } else {\r\n                            dispatch({\r\n                                type: MENSAJE_ASIGNAR,\r\n                                mensaje: 'Ya existen los datos registrados previamente'\r\n                            });\r\n                        }\r\n                    }\r\n                }\r\n\r\n            });\r\n\r\n    }\r\n}\r\n\r\nexport function actionSuspenderActivarUsuario(cedula, token, actualizados, registrados) {\r\n    const headers = {\r\n        'Content-Type': 'application/json',\r\n        'TokenAuto': desencriptar(token),\r\n        'Permiso': PERMISO_SUSPENDER_ACTIVAR\r\n    }\r\n    let datosSolicitud = {\r\n        'ip': localStorage.getItem('Ip'),\r\n        'token': desencriptar(token),\r\n        'operacion': PERMISO_SUSPENDER_ACTIVAR\r\n    };\r\n    return (dispatch, getState) => {\r\n        axios.put(`${URL_BASE}/proyectosESCOM-web/api/usuarios/cambiarEstado/${cedula}`, datosSolicitud, { headers: headers })\r\n            .then(response => {\r\n                dispatch({\r\n                    type: MENSAJE_SUSPENDER,\r\n                    mensaje: 'Operacion hecha con exito'\r\n                });\r\n                dispatch({\r\n                    type: ACTUALIZAR_USUARIOS,\r\n                    usuario: actualizados\r\n                });\r\n            }).catch((error) => {\r\n                if (error.request.response === '') {\r\n                    dispatch({\r\n                        type: MENSAJE_SUSPENDER,\r\n                        mensaje: 'Servidor fuera de servicio temporalmente'\r\n                    });\r\n                } else {\r\n                    if (error.request) {\r\n                        var o = JSON.parse(error.request.response);\r\n                        let respuesta = mensajesDeError(o.respuesta);\r\n                        if (respuesta !== '') {\r\n                            dispatch({\r\n                                type: MENSAJE_SUSPENDER,\r\n                                mensaje: respuesta\r\n                            });\r\n                        } else {\r\n                            dispatch({\r\n                                type: MENSAJE_SUSPENDER,\r\n                                mensaje: 'Sin acceso al servicio'\r\n                            });\r\n                        }\r\n                    }\r\n                }\r\n\r\n            });\r\n\r\n    }\r\n}\r\n\r\nexport function actionCargarInformacionDeUsuario(cedula, token) {\r\n    const headers = {\r\n        'Content-Type': 'application/json',\r\n        'TokenAuto': desencriptar(token),\r\n        'Permiso': PERMISO_EDITAR_USUARIOS\r\n    }\r\n    return (dispatch, getState) => {\r\n        axios.get(`${URL_BASE}/proyectosESCOM-web/api/usuarios/datos/${cedula}`, { headers: headers })\r\n            .then(response => {\r\n                dispatch({\r\n                    type: INFORMACION_USUARIO,\r\n                    informacionUsuario: response.data\r\n                });\r\n            }).catch((error) => {\r\n                if (error.request.response === '') {\r\n                    dispatch({\r\n                        type: MENSAJE_EDITAR,\r\n                        mensaje: 'Servidor fuera de servicio temporalmente'\r\n                    });\r\n                } else {\r\n                    if (error.request) {\r\n                        var o = JSON.parse(error.request.response);\r\n                        let respuesta = mensajesDeError(o.respuesta);\r\n                        if (respuesta !== '') {\r\n                            dispatch({\r\n                                type: MENSAJE_EDITAR,\r\n                                mensaje: respuesta\r\n                            });\r\n                        } else {\r\n                            dispatch({\r\n                                type: MENSAJE_EDITAR,\r\n                                mensaje: 'Sin acceso al servicio'\r\n                            });\r\n                        }\r\n                    }\r\n                }\r\n            });\r\n    };\r\n}\r\n\r\nexport function actionConsultarModulos(token) {\r\n    const headers = {\r\n        'Content-Type': 'application/json',\r\n        'TokenAuto': desencriptar(token),\r\n        'Permiso': PERMISO_ASIGNACION_ACTIVIDADES\r\n    }\r\n    return (dispatch, getState) => {\r\n        axios.get(`${URL_BASE}/proyectosESCOM-web/api/modulos/listar`, { headers: headers })\r\n            .then(response => {\r\n                dispatch({\r\n                    type: MODULOS_REGISTRADOS,\r\n                    respuesta: response.data\r\n                });\r\n\r\n            }).catch((error) => {\r\n                if (error.request.response === '') {\r\n\r\n\r\n                } else {\r\n                    if (error.request) {\r\n                        var o = JSON.parse(error.request.response);\r\n                        let respuesta = mensajesDeError(o.respuesta);\r\n                        if (respuesta === 'Sin permiso') {\r\n                            dispatch({\r\n                                type: ESTADO_ASIGNAR,\r\n                                estado: true\r\n                            });\r\n                        } else {\r\n                            //\r\n                        }\r\n                    }\r\n                }\r\n            });\r\n    };\r\n}\r\n\r\n\r\n\r\nexport function actionEliminarActividades(actividades, token, numeroDocumento) {\r\n    const headers = {\r\n        'Content-Type': 'application/json',\r\n        'TokenAuto': desencriptar(token),\r\n        'Permiso': PERMISO_ASIGNACION_ACTIVIDADES\r\n    }\r\n    actividades[0].datosSolicitud = {\r\n        'ip': localStorage.getItem('Ip'),\r\n        'token': desencriptar(token),\r\n        'operacion': PERMISO_ASIGNACION_ACTIVIDADES\r\n    }\r\n    debugger;\r\n    return (dispatch, getState) => {\r\n        axios.put(`${URL_BASE}/proyectosESCOM-web/api/usuarios/eliminarActividad/${numeroDocumento}`, actividades, { headers: headers })\r\n            .then(response => {\r\n                dispatch({\r\n                    type: MENSAJE_ASIGNAR,\r\n                    mensaje: 'Actividades eliminadas'\r\n                });\r\n            }).catch((error) => {\r\n                console.log(error);\r\n\r\n                if (error.request.response === '') {\r\n                    dispatch({\r\n                        type: MENSAJE_ASIGNAR,\r\n                        mensaje: 'Servidor fuera de servicio temporalmente'\r\n                    });\r\n                } else {\r\n                    if (error.request) {\r\n                        var o = JSON.parse(error.request.response);\r\n                        let respuesta = mensajesDeError(o.respuesta);\r\n                        console.log('respuesta', respuesta);\r\n                        if (respuesta !== '') {\r\n                            dispatch({\r\n                                type: MENSAJE_ASIGNAR,\r\n                                mensaje: respuesta\r\n                            });\r\n                        } else {\r\n                            dispatch({\r\n                                type: MENSAJE_ASIGNAR,\r\n                                mensaje: 'Sin acceso al servicio'\r\n                            });\r\n                        }\r\n                    }\r\n                }\r\n\r\n            });\r\n\r\n    }\r\n}\r\n\r\nexport function actionConsultarActividadesSinAsignar(token, numeroDocumento, codigoModulo) {\r\n    const headers = {\r\n        'Content-Type': 'application/json',\r\n        'TokenAuto': desencriptar(token),\r\n        'Permiso': PERMISO_ASIGNACION_ACTIVIDADES\r\n    }\r\n    return (dispatch, getState) => {\r\n        axios.get(`${URL_BASE}/proyectosESCOM-web/api/usuarios/listarActividadesNoAsociadas/${numeroDocumento}/${codigoModulo}`, { headers: headers })\r\n            .then(response => {\r\n                dispatch({\r\n                    type: ACTIVIDADES_SIN_ASIGNAR,\r\n                    respuesta: response.data\r\n                });\r\n\r\n            }).catch((error) => {\r\n                if (error.request.response === '') {\r\n\r\n\r\n                } else {\r\n                    if (error.request) {\r\n                        var o = JSON.parse(error.request.response);\r\n                        let respuesta = mensajesDeError(o.respuesta);\r\n                        if (respuesta === 'Sin permiso') {\r\n                            dispatch({\r\n                                type: ESTADO_ASIGNAR,\r\n                                estado: true\r\n                            });\r\n                        } else {\r\n                            //\r\n                        }\r\n                    }\r\n                }\r\n            });\r\n    };\r\n}\r\n\r\n\r\nexport function actionEditarUsuario(usuario, cedula, token) {\r\n    const headers = {\r\n        'Content-Type': 'application/json',\r\n        'TokenAuto': desencriptar(token),\r\n        'Permiso': PERMISO_EDITAR_USUARIOS\r\n    }\r\n    usuario.datosSolicitud = {\r\n        'ip': localStorage.getItem('Ip'),\r\n        'token': desencriptar(token),\r\n        'operacion': PERMISO_EDITAR_USUARIOS\r\n    };\r\n    return (dispatch, getState) => {\r\n        axios.put(`${URL_BASE}/proyectosESCOM-web/api/usuarios/editar/${cedula}`, usuario, { headers: headers })\r\n            .then(response => {\r\n                dispatch({\r\n                    type: EDITAR_USUARIO,\r\n                    payload: usuario\r\n                });\r\n                dispatch({\r\n                    type: MENSAJE_EDITAR,\r\n                    mensaje: 'Modificado'\r\n                });\r\n            }).catch((error) => {\r\n                if (error.request.response === '') {\r\n                    dispatch({\r\n                        type: MENSAJE_EDITAR,\r\n                        mensaje: 'Servidor fuera de servicio temporalmente'\r\n                    });\r\n                } else {\r\n                    if (error.request) {\r\n                        var o = JSON.parse(error.request.response);\r\n                        let respuesta = mensajesDeError(o.respuesta);\r\n                        if (respuesta !== '') {\r\n                            dispatch({\r\n                                type: MENSAJE_EDITAR,\r\n                                mensaje: respuesta\r\n                            });\r\n                        } else {\r\n                            dispatch({\r\n                                type: MENSAJE_EDITAR,\r\n                                mensaje: 'Ya existen los datos registrados previamente'\r\n                            });\r\n                        }\r\n                    }\r\n                }\r\n\r\n            });\r\n    }\r\n}\r\n\r\nexport function actualizarMensajeCerrar(mensaje) {\r\n    return (dispatch, getState) => {\r\n        dispatch({\r\n            type: MENSAJE_CERRAR_SESION,\r\n            mensaje: mensaje\r\n        });\r\n    };\r\n}\r\n\r\nexport function actualizarMensajeEditar(mensaje) {\r\n    return (dispatch, getState) => {\r\n        dispatch({\r\n            type: MENSAJE_EDITAR,\r\n            mensaje: mensaje\r\n        });\r\n    };\r\n}\r\n\r\nexport function actualizarMensajeLogin(mensaje) {\r\n    return (dispatch, getState) => {\r\n        dispatch({\r\n            type: MENSAJE_LOGIN,\r\n            mensaje: mensaje\r\n        });\r\n    };\r\n}\r\n\r\nexport function actualizarMensajeRegistrar(mensaje) {\r\n    return (dispatch, getState) => {\r\n        dispatch({\r\n            type: MENSAJE_REGISTRAR,\r\n            mensaje: mensaje\r\n        });\r\n    };\r\n}\r\n\r\nexport function actualizarMensajeSuspender(mensaje) {\r\n    return (dispatch, getState) => {\r\n        dispatch({\r\n            type: MENSAJE_SUSPENDER,\r\n            mensaje: mensaje\r\n        });\r\n    };\r\n}\r\n\r\n\r\nexport function asignarNombreUsuario(nombre) {\r\n    return (dispatch, getState) => {\r\n        dispatch({\r\n            type: NOMBRE_USUARIO,\r\n            nombre: nombre\r\n        });\r\n    };\r\n}\r\n\r\nexport function actualizarMensajeAsignar(mensaje) {\r\n    return (dispatch, getState) => {\r\n        dispatch({\r\n            type: MENSAJE_ASIGNAR,\r\n            mensaje: mensaje\r\n        });\r\n    };\r\n}\r\n\r\nexport function actualizarMensajeCambiarContrasena(mensaje) {\r\n    return (dispatch, getState) => {\r\n        dispatch({\r\n            type: MENSAJE_CONTRASENA,\r\n            mensaje: mensaje\r\n        });\r\n    };\r\n}\r\n\r\nexport function actionAsignarCedula(cedula) {\r\n    return (dispatch, getState) => {\r\n        dispatch({\r\n            type: ANADIR_CEDULA_EDITAR,\r\n            cedula: cedula\r\n        });\r\n    }\r\n}\r\n\r\nexport function actionAsignarActividades() {\r\n    return (dispatch, getState) => {\r\n        dispatch({\r\n            type: ACTIVIDADES_SIN_ASIGNAR,\r\n            respuesta: null\r\n        });\r\n    }\r\n}\r\n\r\n\r\n\r\nexport function actionActualizarUsuarios(usuarios) {\r\n    return (dispatch, getState) => {\r\n        dispatch({\r\n            type: ACTUALIZAR_USUARIOS,\r\n            usuario: usuarios\r\n        });\r\n    }\r\n}"]},"metadata":{},"sourceType":"module"}