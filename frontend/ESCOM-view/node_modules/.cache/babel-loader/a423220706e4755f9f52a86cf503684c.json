{"ast":null,"code":"import _objectSpread from \"C:\\\\Users\\\\jeiso\\\\Desktop\\\\proyectosESCOM\\\\frontend\\\\ESCOM-view\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/objectSpread2\";\nvar _jsxFileName = \"C:\\\\Users\\\\jeiso\\\\Desktop\\\\proyectosESCOM\\\\frontend\\\\ESCOM-view\\\\src\\\\SuperAdministrador\\\\componentes\\\\popup\\\\PopUpActividad.js\";\nimport React from 'react';\nimport 'react-notifications/lib/notifications.css';\nimport Select from 'react-select';\nimport Button from '@material-ui/core/Button';\nimport { Modal, ModalHeader, ModalBody, ModalFooter } from 'reactstrap';\nimport { NotificationContainer, NotificationManager } from 'react-notifications';\nimport { reduxForm, Field } from 'redux-form';\nimport { withRouter } from 'react-router-dom';\nimport { generarInput, generarTextArea, generarArea } from '../../utilitario/GenerarInputs.js';\nimport { seleccione, validacionCuarentaCaracteres, validacionDoscientosCaracteres, requerido } from '../../utilitario/validacionCampos.js';\nimport AddIcon from '@material-ui/icons/Add';\nimport SaveAltIcon from '@material-ui/icons/SaveAlt';\nimport CancelIcon from '@material-ui/icons/Cancel';\nimport { actionConsultarModulos, actionConsultarActividades, actionAgregarActividad, actualizarMensajeRegistrar } from '../../actions/actionActividad.js';\nimport { connect } from 'react-redux';\n\nclass PopUpActividad extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.opciones = () => {\n      let respuesta = [];\n      this.props.modulos.forEach(modulo => {\n        let objeto = {\n          label: modulo.nombreModulo,\n          value: modulo.idModulo\n        };\n        respuesta.push(objeto);\n      });\n      return respuesta;\n    };\n\n    this.handleSubmit = formValues => {\n      try {\n        let actividad = {\n          'nombre': formValues.nombre,\n          'descripcionActividad': formValues.descripcion,\n          'idModulo': formValues.modulo.value,\n          'moduloActividad': formValues.modulo.label,\n          'estado': 'Activo'\n        };\n        this.props.actionAgregarActividad(actividad, localStorage.getItem('Token'));\n        this.props.reset();\n      } catch (error) {\n        NotificationManager.error('Ingrese todos los datos');\n      }\n    };\n\n    this.state = {\n      modal: false\n    };\n    this.toggle = this.toggle.bind(this);\n  }\n\n  toggle() {\n    this.setState(prevState => ({\n      modal: !prevState.modal\n    }));\n    this.props.reset();\n  }\n\n  componentWillMount() {\n    this.props.actionConsultarModulos(localStorage.getItem('Token'));\n  }\n\n  componentDidUpdate() {\n    switch (this.props.mensaje) {\n      case 'actividad registrada':\n        NotificationManager.success('Actividad registrada correctamente'); // this.props.actualizarMensajeRegistrar('');\n\n        break;\n\n      case 'Sin permiso':\n        NotificationManager.error('No tiene permisos sucifientes para registrar una actividad');\n        this.props.actualizarMensajeRegistrar('');\n        break;\n\n      default:\n        break;\n    }\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 91\n      },\n      __self: this\n    }, React.createElement(Button, {\n      style: {\n        background: this.props.configuracion.botones,\n        fontSize: \"14px\",\n        textTransform: \"none\"\n      },\n      startIcon: React.createElement(AddIcon, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 92\n        },\n        __self: this\n      }),\n      className: \"btn btn-dark\",\n      variant: \"contained\",\n      onClick: this.toggle,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 92\n      },\n      __self: this\n    }, \"Registrar actividad\"), React.createElement(Modal, {\n      isOpen: this.state.modal,\n      toggle: this.toggle,\n      className: this.props.className,\n      size: \"col-md-6\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 93\n      },\n      __self: this\n    }, React.createElement(ModalHeader, {\n      toggle: this.toggle,\n      className: \"center\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 98\n      },\n      __self: this\n    }, \"Crear actividad\"), React.createElement(ModalBody, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 99\n      },\n      __self: this\n    }, React.createElement(\"form\", {\n      onSubmit: this.props.handleSubmit(this.handleSubmit),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 100\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"row\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 101\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"col-sm-12\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 102\n      },\n      __self: this\n    }, React.createElement(Field, {\n      name: \"nombre\",\n      validate: [requerido, validacionCuarentaCaracteres],\n      component: generarInput,\n      label: \"Nombre\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 103\n      },\n      __self: this\n    }))), React.createElement(\"div\", {\n      className: \"row\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 106\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"col-sm-12\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 107\n      },\n      __self: this\n    }, React.createElement(Field, {\n      name: \"descripcion\",\n      component: generarArea,\n      filas: 4,\n      validate: [requerido, validacionDoscientosCaracteres],\n      label: \"Descripcion\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 108\n      },\n      __self: this\n    }))), React.createElement(\"div\", {\n      className: \"row\",\n      style: {\n        paddingTop: \"9px\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 111\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"col-sm-12\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 112\n      },\n      __self: this\n    }, React.createElement(Field, {\n      name: \"modulo\",\n      validate: [seleccione],\n      component: ReduxFormSelect,\n      options: this.opciones(),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 113\n      },\n      __self: this\n    }))), React.createElement(ModalFooter, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 116\n      },\n      __self: this\n    }, React.createElement(Button, {\n      style: {\n        background: this.props.configuracion.botones,\n        fontSize: \"13px\",\n        fontFamily: \"sans-serif\",\n        textTransform: \"none\"\n      },\n      className: \"btn btn-dark\",\n      variant: \"contained\",\n      startIcon: React.createElement(SaveAltIcon, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 117\n        },\n        __self: this\n      }),\n      type: \"submit\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 117\n      },\n      __self: this\n    }, \"Registrar\"), '', React.createElement(Button, {\n      style: fondoBotonCancelar,\n      className: \"btn btn-dark\",\n      variant: \"contained\",\n      startIcon: React.createElement(CancelIcon, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 118\n        },\n        __self: this\n      }),\n      onClick: this.toggle,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 118\n      },\n      __self: this\n    }, \"Cancelar\"))))), React.createElement(NotificationContainer, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 123\n      },\n      __self: this\n    }));\n  }\n\n}\n\nexport const ReduxFormSelect = props => {\n  const customStyles = {\n    option: (provided, state) => _objectSpread({}, provided, {\n      fontSize: 13\n    }),\n    control: styles => _objectSpread({}, styles, {\n      backgroundColor: 'white',\n      fontSize: 13,\n      fontFamily: 'sans-serif'\n    }),\n    singleValue: (provided, state) => {\n      const opacity = state.isDisabled ? 0.5 : 1;\n      const transition = 'opacity 300ms';\n      return _objectSpread({}, provided, {\n        opacity,\n        transition\n      });\n    }\n  };\n  const input = props.input,\n        options = props.options;\n  const _props$meta = props.meta,\n        touched = _props$meta.touched,\n        error = _props$meta.error;\n  return React.createElement(React.Fragment, null, React.createElement(Select, Object.assign({}, input, {\n    styles: customStyles,\n    isSearchable: false,\n    placeholder: \"Seleccione un modulo\",\n    onChange: value => input.onChange(value),\n    onBlur: () => input.onBlur(input.value),\n    noOptionsMessage: () => 'Aun no hay ningun modulo registrado',\n    options: options,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 146\n    },\n    __self: this\n  })), touched && error && React.createElement(\"span\", {\n    className: \"text-danger form-group\",\n    style: {\n      fontSize: '12px',\n      fontFamily: 'sans-serif'\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 157\n    },\n    __self: this\n  }, error));\n};\nconst fondoBotonCancelar = {\n  background: \"gray\",\n  fontSize: \"13px\",\n  fontFamily: \"sans-serif\",\n  textTransform: \"none\"\n};\n\nfunction mapStateToProps(state) {\n  return {\n    modulos: state.act.modulosActividades,\n    mensaje: state.act.mensajeRegistrar,\n    configuracion: state.conf.configuracion\n  };\n}\n\nlet formulario = reduxForm({\n  form: 'registrarActividad'\n})(PopUpActividad);\nexport default withRouter(connect(mapStateToProps, {\n  actionConsultarModulos,\n  actionConsultarActividades,\n  actionAgregarActividad,\n  actualizarMensajeRegistrar\n})(formulario));","map":{"version":3,"sources":["C:/Users/jeiso/Desktop/proyectosESCOM/frontend/ESCOM-view/src/SuperAdministrador/componentes/popup/PopUpActividad.js"],"names":["React","Select","Button","Modal","ModalHeader","ModalBody","ModalFooter","NotificationContainer","NotificationManager","reduxForm","Field","withRouter","generarInput","generarTextArea","generarArea","seleccione","validacionCuarentaCaracteres","validacionDoscientosCaracteres","requerido","AddIcon","SaveAltIcon","CancelIcon","actionConsultarModulos","actionConsultarActividades","actionAgregarActividad","actualizarMensajeRegistrar","connect","PopUpActividad","Component","constructor","props","opciones","respuesta","modulos","forEach","modulo","objeto","label","nombreModulo","value","idModulo","push","handleSubmit","formValues","actividad","nombre","descripcion","localStorage","getItem","reset","error","state","modal","toggle","bind","setState","prevState","componentWillMount","componentDidUpdate","mensaje","success","render","background","configuracion","botones","fontSize","textTransform","className","paddingTop","ReduxFormSelect","fontFamily","fondoBotonCancelar","customStyles","option","provided","control","styles","backgroundColor","singleValue","opacity","isDisabled","transition","input","options","meta","touched","onChange","onBlur","mapStateToProps","act","modulosActividades","mensajeRegistrar","conf","formulario","form"],"mappings":"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","sourcesContent":["import React from 'react';\r\n\r\nimport 'react-notifications/lib/notifications.css';\r\n\r\n\r\nimport Select from 'react-select';\r\nimport Button from '@material-ui/core/Button';\r\nimport { Modal, ModalHeader, ModalBody, ModalFooter } from 'reactstrap';\r\nimport { NotificationContainer, NotificationManager } from 'react-notifications';\r\nimport { reduxForm, Field } from 'redux-form';\r\nimport { withRouter } from 'react-router-dom';\r\nimport { generarInput, generarTextArea,generarArea } from '../../utilitario/GenerarInputs.js'\r\nimport { seleccione, validacionCuarentaCaracteres, validacionDoscientosCaracteres, requerido } from '../../utilitario/validacionCampos.js';\r\nimport AddIcon from '@material-ui/icons/Add';\r\nimport SaveAltIcon from '@material-ui/icons/SaveAlt';\r\nimport CancelIcon from '@material-ui/icons/Cancel';\r\n\r\nimport { actionConsultarModulos, actionConsultarActividades, actionAgregarActividad,actualizarMensajeRegistrar } from '../../actions/actionActividad.js'\r\nimport { connect } from 'react-redux';\r\n\r\nclass PopUpActividad extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            modal: false\r\n        };\r\n        this.toggle = this.toggle.bind(this);\r\n    }\r\n\r\n    toggle() {\r\n        this.setState(prevState => ({\r\n            modal: !prevState.modal\r\n        }));\r\n        this.props.reset();\r\n    }\r\n\r\n    componentWillMount() {\r\n        this.props.actionConsultarModulos(localStorage.getItem('Token'));\r\n\r\n    }\r\n\r\n    componentDidUpdate() {\r\n        switch (this.props.mensaje) {\r\n            case 'actividad registrada':\r\n                NotificationManager.success('Actividad registrada correctamente');\r\n                // this.props.actualizarMensajeRegistrar('');\r\n                break;\r\n            case 'Sin permiso':\r\n                NotificationManager.error('No tiene permisos sucifientes para registrar una actividad');\r\n                this.props.actualizarMensajeRegistrar('');\r\n                break;\r\n            default:\r\n                break;\r\n        }\r\n\r\n    }\r\n\r\n    opciones = () => {\r\n        let respuesta = [];\r\n        this.props.modulos.forEach(\r\n            modulo => {\r\n                let objeto = {\r\n                    label: modulo.nombreModulo,\r\n                    value: modulo.idModulo,\r\n                }\r\n                respuesta.push(objeto);\r\n            }\r\n        )\r\n        return respuesta;\r\n    }\r\n\r\n    handleSubmit = formValues => {\r\n        try {\r\n            let actividad = {\r\n                'nombre': formValues.nombre,\r\n                'descripcionActividad': formValues.descripcion,\r\n                'idModulo': formValues.modulo.value,\r\n                'moduloActividad': formValues.modulo.label,\r\n                'estado': 'Activo'\r\n            };\r\n            this.props.actionAgregarActividad(actividad, localStorage.getItem('Token'));\r\n            this.props.reset();\r\n        } catch (error) {\r\n            NotificationManager.error('Ingrese todos los datos');\r\n        }\r\n    }\r\n\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                <Button style={{ background: this.props.configuracion.botones, fontSize: \"14px\", textTransform: \"none\" }} startIcon={<AddIcon />} className=\"btn btn-dark\" variant=\"contained\" onClick={this.toggle}>Registrar actividad</Button>\r\n                <Modal isOpen={this.state.modal}\r\n                    toggle={this.toggle}\r\n                    className={this.props.className}\r\n                    size=\"col-md-6\"\r\n                >\r\n                    <ModalHeader toggle={this.toggle} className=\"center\">Crear actividad</ModalHeader>\r\n                    <ModalBody>\r\n                        <form onSubmit={this.props.handleSubmit(this.handleSubmit)}>\r\n                            <div className=\"row\">\r\n                                <div className=\"col-sm-12\">\r\n                                    <Field name=\"nombre\" validate={[requerido, validacionCuarentaCaracteres]} component={generarInput} label=\"Nombre\" />\r\n                                </div>\r\n                            </div>\r\n                            <div className=\"row\">\r\n                                <div className=\"col-sm-12\">\r\n                                    <Field name=\"descripcion\" component={generarArea} filas={4} validate={[requerido, validacionDoscientosCaracteres]} label=\"Descripcion\" />\r\n                                </div>\r\n                            </div>\r\n                            <div className=\"row\" style={{paddingTop:\"9px\"}}>\r\n                                <div className=\"col-sm-12\">\r\n                                    <Field name=\"modulo\" validate={[seleccione]} component={ReduxFormSelect} options={this.opciones()} />\r\n                                </div>\r\n                            </div>\r\n                            <ModalFooter>\r\n                                <Button style={{ background: this.props.configuracion.botones, fontSize: \"13px\", fontFamily: \"sans-serif\", textTransform: \"none\" }} className=\"btn btn-dark\" variant=\"contained\" startIcon={<SaveAltIcon />} type=\"submit\">Registrar</Button>{''}\r\n                                <Button style={fondoBotonCancelar} className=\"btn btn-dark\" variant=\"contained\" startIcon={<CancelIcon />} onClick={this.toggle}>Cancelar</Button>\r\n                            </ModalFooter>\r\n                        </form>\r\n                    </ModalBody>\r\n                </Modal>\r\n                <NotificationContainer />\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport const ReduxFormSelect = props => {\r\n    const customStyles = {\r\n        option: (provided, state) => ({\r\n            ...provided,\r\n            fontSize: 13\r\n        }),\r\n        control: styles => ({ ...styles, backgroundColor: 'white', fontSize: 13, fontFamily: 'sans-serif' }),\r\n        singleValue: (provided, state) => {\r\n            const opacity = state.isDisabled ? 0.5 : 1;\r\n            const transition = 'opacity 300ms';\r\n            return { ...provided, opacity, transition };\r\n        }\r\n    }\r\n    const { input, options } = props;\r\n    const { touched, error } = props.meta;\r\n    return (\r\n        <>\r\n            <Select\r\n                {...input}\r\n\r\n                styles={customStyles}\r\n                isSearchable={false}\r\n                placeholder='Seleccione un modulo'\r\n                onChange={value => input.onChange(value)}\r\n                onBlur={() => input.onBlur(input.value)}\r\n                noOptionsMessage={() => 'Aun no hay ningun modulo registrado'}\r\n                options={options}\r\n            />\r\n            {touched && ((error && <span className=\"text-danger form-group\" style={{ fontSize: '12px', fontFamily: 'sans-serif' }}>{error}</span>))}\r\n        </>\r\n    )\r\n}\r\nconst fondoBotonCancelar = {\r\n    background: \"gray\",\r\n    fontSize: \"13px\",\r\n    fontFamily: \"sans-serif\",\r\n    textTransform: \"none\"\r\n}\r\n\r\nfunction mapStateToProps(state) {\r\n    return {\r\n        modulos: state.act.modulosActividades,\r\n        mensaje: state.act.mensajeRegistrar,\r\n        configuracion: state.conf.configuracion\r\n    }\r\n}\r\n\r\nlet formulario = reduxForm({\r\n    form: 'registrarActividad'\r\n})(PopUpActividad)\r\n\r\nexport default withRouter(connect(mapStateToProps, { actionConsultarModulos, actionConsultarActividades, actionAgregarActividad, actualizarMensajeRegistrar })(formulario));\r\n\r\n"]},"metadata":{},"sourceType":"module"}