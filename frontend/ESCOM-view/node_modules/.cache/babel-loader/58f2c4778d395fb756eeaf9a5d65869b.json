{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\hashy\\\\Desktop\\\\proyectosESCOM\\\\frontend\\\\ESCOM-view\\\\src\\\\ModuloDocumental\\\\components\\\\Setting\\\\Process\\\\listProcessS.js\";\nimport React from 'react';\nimport { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { withRouter } from 'react-router-dom';\nimport { getListProcesses, getProcessId, addMessageEdit, addMessageAdd, addMessageDisable, disableProcess } from '../../../redux/actions/processA.js';\nimport { ToastContainer, toast } from 'react-toastify';\nimport Add from './add.js';\nimport Edit from './edit.js';\nimport MaterialTable from 'material-table';\nimport EditIcon from '@material-ui/icons/Edit';\nimport DeleteForeverIcon from '@material-ui/icons/DeleteForever';\n\nclass ListProcess extends Component {\n  componentDidUpdate() {\n    if (this.props.messageEditP !== '') {\n      switch (this.props.messageEditP) {\n        case 'edit':\n          toast.success('Se modifico con exito.');\n          this.props.addMessageEdit('');\n          this.props.getListProcesses(localStorage.getItem('Token'), sessionStorage.getItem('documentId'));\n          break;\n\n        case 'error server':\n          toast.error('Se presento un error, intentelo mas tarde.');\n          break;\n\n        default:\n          break;\n      }\n    }\n\n    if (this.props.messageAddP !== '') {\n      switch (this.props.messageAddP) {\n        case 'add':\n          toast.success('Se agrego con exito.');\n          this.props.getListProcesses(localStorage.getItem('Token'), sessionStorage.getItem('documentId'));\n          this.props.addMessageAdd('');\n          break;\n\n        case 'error server':\n          toast.error('Se presento un error, intentelo mas tarde.');\n          break;\n\n        default:\n          break;\n      }\n    }\n\n    if (this.props.messageDisableP !== '') {\n      switch (this.props.messageDisableP) {\n        case 'disable':\n          toast.success('Se inhabilito con exito.');\n          this.props.getListProcesses(localStorage.getItem('Token'), sessionStorage.getItem('documentId'));\n          this.props.addMessageDisable('');\n          break;\n\n        case 'error server':\n          toast.error('Se presento un error, intentelo mas tarde.');\n          break;\n\n        default:\n          break;\n      }\n    }\n  }\n\n  componentWillMount() {\n    if (sessionStorage.getItem('documentId') <= 0) {\n      this.props.history.push('/');\n    }\n\n    this.props.getListProcesses(localStorage.getItem('Token'), sessionStorage.getItem('documentId'));\n  }\n\n  saveEdit(id) {\n    this.props.getProcessId(localStorage.getItem('Token'), id);\n  }\n\n  disable(id) {\n    this.props.disableProcess(localStorage.getItem('Token'), id);\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      className: \"container\",\n      style: {\n        width: \"90%\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 84\n      },\n      __self: this\n    }, React.createElement(ToastContainer, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 85\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      className: \"text-left titulo\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 86\n      },\n      __self: this\n    }, React.createElement(\"h4\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 87\n      },\n      __self: this\n    }, \"Lista de procesos\")), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 89\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      className: \"shadow\",\n      style: {\n        background: \"#FFFFFF\",\n        padding: \"30px\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 90\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 91\n      },\n      __self: this\n    }, React.createElement(Add, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 92\n      },\n      __self: this\n    })), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 94\n      },\n      __self: this\n    }), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 95\n      },\n      __self: this\n    }), React.createElement(MaterialTable, {\n      title: \"\",\n      localization: {\n        header: {\n          actions: ' '\n        },\n        pagination: {\n          nextTooltip: 'Siguiente ',\n          previousTooltip: 'Anterior',\n          labelDisplayedRows: '{from}-{to} de {count}',\n          lastTooltip: 'Ultima pagina',\n          firstTooltip: 'Primera pagina',\n          labelRowsSelect: 'Registros',\n          firstAriaLabel: 'oooo'\n        },\n        body: {\n          emptyDataSourceMessage: 'Aun no hay ningun documento registrado'\n        },\n        toolbar: {\n          searchTooltip: 'Buscar',\n          searchPlaceholder: 'Buscar'\n        }\n      },\n      columns: [{\n        title: 'Nombre del proceso',\n        field: 'name'\n      }, {\n        title: 'DescripciÃ³n',\n        field: 'description'\n      }, {\n        title: '',\n        field: 'id',\n        render: rowData => {\n          return React.createElement(\"div\", {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 127\n            },\n            __self: this\n          }, React.createElement(\"a\", {\n            onClick: () => this.saveEdit(rowData.id),\n            \"data-toggle\": \"modal\",\n            \"data-target\": \"#editModal\",\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 128\n            },\n            __self: this\n          }, React.createElement(EditIcon, {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 129\n            },\n            __self: this\n          })), React.createElement(Edit, {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 131\n            },\n            __self: this\n          }));\n        }\n      }, {\n        title: '',\n        field: 'id',\n        render: rowData => {\n          return React.createElement(\"div\", {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 140\n            },\n            __self: this\n          }, React.createElement(\"a\", {\n            onClick: () => this.disable(rowData.id),\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 141\n            },\n            __self: this\n          }, React.createElement(DeleteForeverIcon, {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 142\n            },\n            __self: this\n          })));\n        }\n      }],\n      data: this.props.listProcess,\n      options: {\n        search: true\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 96\n      },\n      __self: this\n    })));\n  }\n\n}\n\nfunction mapStateToProps(state) {\n  return {\n    listProcess: state.process.listProcessR,\n    messageEditP: state.process.messageEdit,\n    messageAddP: state.process.messageAdd,\n    messageDisableP: state.process.messageDisable\n  };\n}\n\nexport default withRouter(connect(mapStateToProps, {\n  getListProcesses,\n  getProcessId,\n  addMessageEdit,\n  addMessageAdd,\n  addMessageDisable,\n  disableProcess\n})(ListProcess));","map":{"version":3,"sources":["C:/Users/hashy/Desktop/proyectosESCOM/frontend/ESCOM-view/src/ModuloDocumental/components/Setting/Process/listProcessS.js"],"names":["React","Component","connect","withRouter","getListProcesses","getProcessId","addMessageEdit","addMessageAdd","addMessageDisable","disableProcess","ToastContainer","toast","Add","Edit","MaterialTable","EditIcon","DeleteForeverIcon","ListProcess","componentDidUpdate","props","messageEditP","success","localStorage","getItem","sessionStorage","error","messageAddP","messageDisableP","componentWillMount","history","push","saveEdit","id","disable","render","width","background","padding","header","actions","pagination","nextTooltip","previousTooltip","labelDisplayedRows","lastTooltip","firstTooltip","labelRowsSelect","firstAriaLabel","body","emptyDataSourceMessage","toolbar","searchTooltip","searchPlaceholder","title","field","rowData","listProcess","search","mapStateToProps","state","process","listProcessR","messageEdit","messageAdd","messageDisable"],"mappings":"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","sourcesContent":["import React from 'react';\r\nimport { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { withRouter } from 'react-router-dom';\r\nimport { getListProcesses, getProcessId, addMessageEdit, addMessageAdd, addMessageDisable, disableProcess } from '../../../redux/actions/processA.js';\r\nimport { ToastContainer, toast } from 'react-toastify';\r\n\r\nimport Add from './add.js';\r\nimport Edit from './edit.js';\r\n\r\nimport MaterialTable from 'material-table';\r\n\r\nimport EditIcon from '@material-ui/icons/Edit';\r\nimport DeleteForeverIcon from '@material-ui/icons/DeleteForever';\r\n\r\nclass ListProcess extends Component {\r\n\r\n    componentDidUpdate() {\r\n        if (this.props.messageEditP !== '') {\r\n            switch (this.props.messageEditP) {\r\n                case 'edit':\r\n                    toast.success('Se modifico con exito.');\r\n                    this.props.addMessageEdit('');\r\n                    this.props.getListProcesses(localStorage.getItem('Token'), sessionStorage.getItem('documentId'))\r\n                    break;\r\n                case 'error server':\r\n                    toast.error('Se presento un error, intentelo mas tarde.');\r\n                    break;\r\n                default:\r\n                    break;\r\n            }\r\n        }\r\n        if (this.props.messageAddP !== '') {\r\n            switch (this.props.messageAddP) {\r\n                case 'add':\r\n                    toast.success('Se agrego con exito.');\r\n                    this.props.getListProcesses(localStorage.getItem('Token'), sessionStorage.getItem('documentId'))\r\n                    this.props.addMessageAdd('')\r\n                    break;\r\n                case 'error server':\r\n                    toast.error('Se presento un error, intentelo mas tarde.');\r\n                    break;\r\n                default:\r\n                    break;\r\n            }\r\n        }\r\n        if (this.props.messageDisableP !== '') {\r\n            switch (this.props.messageDisableP) {\r\n                case 'disable':\r\n                    toast.success('Se inhabilito con exito.');\r\n                    this.props.getListProcesses(localStorage.getItem('Token'), sessionStorage.getItem('documentId'))\r\n                    this.props.addMessageDisable('')\r\n                    break;\r\n                case 'error server':\r\n                    toast.error('Se presento un error, intentelo mas tarde.');\r\n                    break;\r\n                default:\r\n                    break;\r\n            }\r\n        }\r\n    }\r\n\r\n\r\n    componentWillMount() {\r\n        if (sessionStorage.getItem('documentId') <= 0) {\r\n            this.props.history.push('/')\r\n        }\r\n        this.props.getListProcesses(localStorage.getItem('Token'), sessionStorage.getItem('documentId'))\r\n    }\r\n\r\n\r\n    saveEdit(id) {\r\n        this.props.getProcessId(localStorage.getItem('Token'), id)\r\n    }\r\n\r\n    disable(id) {\r\n        this.props.disableProcess(localStorage.getItem('Token'), id)\r\n    }\r\n\r\n    \r\n\r\n    render() {\r\n        return (\r\n            <div className=\"container\" style={{ width: \"90%\" }}>\r\n                <ToastContainer />\r\n                <div className=\"text-left titulo\">\r\n                    <h4>Lista de procesos</h4>\r\n                </div>\r\n                <br />\r\n                <div className=\"shadow\" style={{ background: \"#FFFFFF\", padding: \"30px\" }}>\r\n                    <div>\r\n                        <Add />\r\n                    </div>\r\n                    <br />\r\n                    <br />\r\n                    <MaterialTable\r\n                        title=\"\"\r\n                        localization={{\r\n                            header: {\r\n                                actions: ' '\r\n                            },\r\n                            pagination: {\r\n                                nextTooltip: 'Siguiente ',\r\n                                previousTooltip: 'Anterior',\r\n                                labelDisplayedRows: '{from}-{to} de {count}',\r\n                                lastTooltip: 'Ultima pagina',\r\n                                firstTooltip: 'Primera pagina',\r\n                                labelRowsSelect: 'Registros',\r\n                                firstAriaLabel: 'oooo'\r\n                            },\r\n                            body: {\r\n                                emptyDataSourceMessage: 'Aun no hay ningun documento registrado'\r\n                            },\r\n                            toolbar: {\r\n                                searchTooltip: 'Buscar',\r\n                                searchPlaceholder: 'Buscar'\r\n                            }\r\n                        }}\r\n                        columns={[\r\n\r\n                            { title: 'Nombre del proceso', field: 'name' },\r\n                            { title: 'DescripciÃ³n', field: 'description' },\r\n                            {\r\n                                title: '', field: 'id',\r\n                                render: rowData => {\r\n                                    return (\r\n                                        <div>\r\n                                            <a onClick={() => this.saveEdit(rowData.id)} data-toggle=\"modal\" data-target=\"#editModal\">\r\n                                                <EditIcon />\r\n                                            </a>\r\n                                            <Edit />\r\n                                        </div>\r\n                                    )\r\n                                }\r\n                            },\r\n                            {\r\n                                title: '', field: 'id',\r\n                                render: rowData => {\r\n                                    return (\r\n                                        <div>\r\n                                            <a onClick={() => this.disable(rowData.id)}>\r\n                                                <DeleteForeverIcon />\r\n                                            </a>\r\n                                        </div>\r\n                                    )\r\n                                }\r\n                            }\r\n\r\n                        ]}\r\n                        data={this.props.listProcess}\r\n                        options={{\r\n                            search: true\r\n                        }}\r\n\r\n                    />                    \r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n\r\n}\r\n\r\nfunction mapStateToProps(state) {\r\n    return {\r\n        listProcess: state.process.listProcessR,\r\n        messageEditP: state.process.messageEdit,\r\n        messageAddP: state.process.messageAdd,\r\n        messageDisableP: state.process.messageDisable\r\n    }\r\n}\r\n\r\nexport default withRouter(connect(mapStateToProps, { getListProcesses, getProcessId, addMessageEdit, addMessageAdd, addMessageDisable, disableProcess })(ListProcess));"]},"metadata":{},"sourceType":"module"}