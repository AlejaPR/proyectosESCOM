{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\jeiso\\\\Desktop\\\\REACT\\\\proyectosESCOM\\\\frontend\\\\ESCOM-view\\\\src\\\\SuperAdministrador\\\\componentes\\\\editar\\\\editarModulo.js\";\nimport React from 'react'; //estilos\n\nimport '../../css/business-casual.css';\nimport '../../css/estilos.css';\nimport '../../css/bootstrap.min.css';\nimport '../../css/menu.css';\nimport { Button } from 'reactstrap'; //componentes\n\nimport Barra from '../general/BarraDirecciones'; // import { NotificationContainer, NotificationManager } from 'react-notifications';\n\nimport { withRouter } from 'react-router-dom';\nimport { nombre, requerido, apellido, documentoIdentificacion } from '../../utilitario/validacionCampos.js';\nimport Alerta from '@icons/material/AlertIcon.js';\nimport { campo } from '../../utilitario/GenerarInputs.js';\nimport PropTypes from \"prop-types\"; //redux\n\nimport { actionCargarInformacionDeModulo, actionConsultarActividadesModulo } from '../../actions/actionsModulo.js';\nimport { connect } from \"react-redux\";\nimport { reduxForm, Field } from 'redux-form';\n\nclass EditarModulo extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      habilitado: false,\n      actividadesSeleccionadas: []\n    };\n\n    this.validateImageWeight = imageFile => {\n      if (imageFile && imageFile.size) {\n        // Get image size in kilobytes\n        const imageFileKb = imageFile.size / 1024;\n        const maxWeight = this.props.maxWeight;\n\n        if (imageFileKb > maxWeight) {\n          return `Image size must be less or equal to ${maxWeight}kb`;\n        }\n      }\n    };\n\n    this.validateImageWidth = imageFile => {\n      if (imageFile) {\n        const maxWidth = this.props.maxWidth;\n\n        if (imageFile.width > maxWidth) {\n          return `Image width must be less or equal to ${maxWidth}px`;\n        }\n      }\n    };\n\n    this.validateImageHeight = imageFile => {\n      if (imageFile) {\n        const maxHeight = this.props.maxHeight;\n\n        if (imageFile.height > maxHeight) {\n          return `Image height must be less or equal to ${maxHeight}px`;\n        }\n      }\n    };\n\n    this.validateImageFormat = imageFile => {\n      if (imageFile) {\n        console.log('tipo', imageFile.type);\n        const mimeType = this.props.mimeType;\n\n        if (!mimeType.includes(imageFile.type)) {\n          return `Image mime type must be ${mimeType}`;\n        }\n      }\n    };\n\n    this.handlePreview = imageUrl => {\n      const previewImageDom = document.querySelector(\".preview-image\");\n      previewImageDom.src = imageUrl;\n    };\n\n    this.handleChange = (event, input) => {\n      event.preventDefault();\n      let imageFile = event.target.files[0];\n\n      if (imageFile) {\n        const localImageUrl = URL.createObjectURL(imageFile);\n        const imageObject = new window.Image();\n\n        imageObject.onload = () => {\n          imageFile.width = imageObject.naturalWidth;\n          imageFile.height = imageObject.naturalHeight;\n          input.onChange(imageFile);\n          URL.revokeObjectURL(imageFile);\n        };\n\n        imageObject.src = localImageUrl;\n        this.handlePreview(localImageUrl);\n      }\n    };\n\n    this.renderFileInput = ({\n      input,\n      type,\n      meta\n    }) => {\n      const mimeType = this.props.mimeType;\n      const touched = meta.touched,\n            error = meta.error,\n            warning = meta.warning;\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 120\n        },\n        __self: this\n      }, React.createElement(\"input\", {\n        name: input.name,\n        type: type,\n        accept: mimeType,\n        onChange: event => this.handleChange(event, input),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 121\n        },\n        __self: this\n      }), touched && (error && React.createElement(\"span\", {\n        className: \"text-danger letra form-group\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 127\n        },\n        __self: this\n      }, error) || warning && React.createElement(\"span\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 127\n        },\n        __self: this\n      }, warning)));\n    };\n\n    this.handleSubmitForm = values => {\n      this.getBase64(values.image, result => {\n        let modulo = {\n          nombreModulo: values.nombre,\n          descripcionModulo: values.descripcion,\n          imagenModulo: result,\n          estadoModulo: 'Activo'\n        };\n        console.log('nuevo modulo es', modulo); // this.props.actionAgregarModulo(modulo, localStorage.getItem('Token'));\n      });\n    };\n\n    this.onClickCancelar = event => {\n      event.preventDefault();\n      this.props.history.push('/adminModulo');\n    };\n  }\n\n  getBase64(file, cb) {\n    let reader = new FileReader();\n    reader.readAsDataURL(file);\n\n    reader.onload = function () {\n      cb(reader.result);\n    };\n\n    reader.onerror = function (error) {\n      console.log('Error: ', error);\n    };\n  }\n\n  componentDidUpdate() {\n    if (this.props.mensajeEditar === 'Sin permiso') {\n      if (!this.state.habilitado) {\n        this.setState({\n          habilitado: true\n        });\n      }\n\n      ; // this.props.history.push('/adminUsuario');\n    }\n\n    console.log('props', this.props);\n  }\n\n  componentDidMount() {\n    if (this.props.codigoModulo === undefined || this.props.codigoModulo.length === 0) {\n      this.props.history.push('/adminModulo');\n    } else {\n      this.props.actionCargarInformacionDeModulo(this.props.codigoModulo, localStorage.getItem('Token'));\n      this.props.actionConsultarActividadesModulo(this.props.codigoModulo, localStorage.getItem('Token')); // this.props.actionConsultarActividadesUsuario(this.props.cedula,localStorage.getItem('Token'));\n    }\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 187\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      class: \"text-left titulo\",\n      style: estiloLetrero,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 188\n      },\n      __self: this\n    }, React.createElement(\"h4\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 189\n      },\n      __self: this\n    }, \"Editar modulo\")), React.createElement(Barra, {\n      texto: \"Inicio > Editar modulo\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 191\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      className: \"col-sm-12\",\n      style: {\n        paddingTop: \"0px\",\n        paddingRight: \"40px\",\n        paddingLeft: \"40px\",\n        paddingBottom: \"0px\",\n        margin: \"0px 0px 30px\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 192\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"container shadow\",\n      style: fondoBarraSuperior,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 201\n      },\n      __self: this\n    }, React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 202\n      },\n      __self: this\n    }), this.state.habilitado ? React.createElement(\"div\", {\n      className: \"col-sm-12\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 204\n      },\n      __self: this\n    }, \" \", React.createElement(\"span\", {\n      className: \"col-sm-2 center\",\n      style: {\n        textShadow: \"none!important\",\n        fontSize: \"16px\",\n        fontFamily: \"Open Sans,sans-serif\",\n        fontWeight: \"300\",\n        padding: \"13px 122px\",\n        color: \"#fff\",\n        background: \"rgb(158, 35, 45)\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 204\n      },\n      __self: this\n    }, React.createElement(Alerta, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 212\n      },\n      __self: this\n    }), \"No tiene los permisos suficientes para administrar los usuarios\"), React.createElement(\"div\", {\n      style: {\n        padding: \"25px 44px 25px 287px\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 213\n      },\n      __self: this\n    }, React.createElement(Button, {\n      style: fondoBoton,\n      onClick: this.onClickCancelar,\n      type: \"submit\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 214\n      },\n      __self: this\n    }, \"Aceptar\"), '')) : React.createElement(React.Fragment, null, React.createElement(\"div\", {\n      style: {\n        padding: \"30px 30px 30px 77px\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 218\n      },\n      __self: this\n    }, React.createElement(\"img\", {\n      src: campo(this.props.initialValues.numeroDocumento),\n      alt: \"preview\",\n      className: \"preview-image\",\n      style: {\n        height: \"200px\",\n        width: \"200px\",\n        borderRadius: \"50%\",\n        objectFit: \"cover\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 219\n      },\n      __self: this\n    })), React.createElement(\"form\", {\n      className: \"letra\",\n      onSubmit: this.props.handleSubmit(this.handleSubmitForm),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 223\n      },\n      __self: this\n    }, React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 224\n      },\n      __self: this\n    }), React.createElement(\"label\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 225\n      },\n      __self: this\n    }, \"Imagen\"), React.createElement(Field, {\n      name: \"image\",\n      type: \"file\",\n      validate: [this.validateImageWeight, this.validateImageWidth, this.validateImageHeight, this.validateImageFormat],\n      component: this.renderFileInput,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 226\n      },\n      __self: this\n    }), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 237\n      },\n      __self: this\n    }), React.createElement(\"label\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 238\n      },\n      __self: this\n    }, \"Nombre\"), React.createElement(\"div\", {\n      className: \"row\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 239\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"col-sm-5\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 240\n      },\n      __self: this\n    }, React.createElement(Field, {\n      name: \"nombre\",\n      validate: [requerido, nombre],\n      component: generarInput,\n      label: \"Nombre\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 241\n      },\n      __self: this\n    }))), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 244\n      },\n      __self: this\n    }), React.createElement(\"label\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 245\n      },\n      __self: this\n    }, \"Descripcion\"), React.createElement(\"div\", {\n      className: \"row\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 246\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"col-sm-5\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 247\n      },\n      __self: this\n    }, React.createElement(Field, {\n      name: \"apellido\",\n      validate: [requerido, apellido],\n      component: renderTextArea,\n      label: \"Apellido\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 248\n      },\n      __self: this\n    }))), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 251\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 252\n      },\n      __self: this\n    }, React.createElement(Button, {\n      style: fondoBoton,\n      type: \"submit\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 253\n      },\n      __self: this\n    }, \"Guardar\"), '', React.createElement(Button, {\n      style: fondoBotonS,\n      color: \"secondary\",\n      onClick: this.onClickCancelar,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 254\n      },\n      __self: this\n    }, \"Cancelar\")), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 256\n      },\n      __self: this\n    }), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 257\n      },\n      __self: this\n    }))), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 261\n      },\n      __self: this\n    }))));\n  }\n\n}\n\nEditarModulo.propTypes = {\n  previewLogoUrl: PropTypes.string,\n  mimeType: PropTypes.string,\n  maxWeight: PropTypes.number,\n  maxWidth: PropTypes.number,\n  maxHeight: PropTypes.number,\n  // redux-form porps\n  handleSubmit: PropTypes.func.isRequired\n};\nEditarModulo.defaultProps = {\n  previewLogoUrl: \"https://imgplaceholder.com/400x300\",\n  mimeType: \"image/jpeg, image/png\",\n  maxWeight: 100,\n  maxWidth: 100,\n  maxHeight: 100\n};\n\nconst generarInput = ({\n  input,\n  placeholder,\n  label,\n  type,\n  meta: {\n    touched,\n    warning,\n    error\n  }\n}) => React.createElement(\"div\", {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 273\n  },\n  __self: this\n}, React.createElement(\"div\", {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 274\n  },\n  __self: this\n}, React.createElement(\"input\", Object.assign({}, input, {\n  type: type,\n  style: {\n    fontSize: \"12px\"\n  },\n  className: \"form-control letra form-control-solid placeholder-no-fix\",\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 275\n  },\n  __self: this\n})), touched && (error && React.createElement(\"span\", {\n  className: \"text-danger letra form-group\",\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 276\n  },\n  __self: this\n}, error) || warning && React.createElement(\"span\", {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 276\n  },\n  __self: this\n}, warning))));\n\nconst renderTextArea = ({\n  input,\n  meta: {\n    touched,\n    error,\n    warning\n  }\n}) => React.createElement(\"div\", {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 282\n  },\n  __self: this\n}, React.createElement(\"div\", {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 283\n  },\n  __self: this\n}, React.createElement(\"textarea\", Object.assign({}, input, {\n  style: {\n    fontSize: \"12px\"\n  },\n  className: \"form-control letra form-control-solid placeholder-no-fix\",\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 284\n  },\n  __self: this\n})), touched && (error && React.createElement(\"span\", {\n  className: \"text-danger letra form-group\",\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 285\n  },\n  __self: this\n}, error) || warning && React.createElement(\"span\", {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 285\n  },\n  __self: this\n}, warning))));\n\nconst estiloTitulo = {\n  paddingTop: \"7px\",\n  paddingRight: \"12px\",\n  paddingLeft: \"5px\",\n  paddingBottom: \"1px\"\n};\nconst estiloLetrero = {\n  paddingTop: \"20px\",\n  paddingRight: \"12px\",\n  paddingLeft: \"40px\",\n  paddingBottom: \"1px\"\n};\nconst fondoBarraSuperior = {\n  background: \"#FFFFFF\"\n};\nconst estiloCabecera = {\n  fontSize: '13px',\n  fontFamily: 'sans-serif',\n  padding: '8px',\n  background: '#e7ecf1'\n};\nconst estiloFila = {\n  fontSize: '12px',\n  fontFamily: 'sans-serif',\n  padding: '8px'\n};\nconst fondoBoton = {\n  background: \"#ec671d\",\n  fontSize: \"14px\",\n  fontFamily: \"Open sans, sans-serif\"\n};\nconst fondoBotonS = {\n  background: \"secondary\",\n  fontSize: \"14px\",\n  fontFamily: \"Open sans, sans-serif\"\n};\n\nfunction mapStateToProps(state) {\n  return {\n    codigoModulo: state.mod.codigoModulo,\n    actividades: state.mod.actividadesModulos,\n    mensajeEditar: state.mod.mensajeEditarModulo,\n    initialValues: {\n      nombre: state.mod.moduloEditar.nombreModulo,\n      apellido: state.mod.moduloEditar.descripcionModulo,\n      numeroDocumento: state.mod.moduloEditar.imagenModulo\n    }\n  };\n}\n\nlet formularioEditar = reduxForm({\n  form: 'editarModulo',\n  enableReinitialize: true\n})(EditarModulo);\nexport default withRouter(connect(mapStateToProps, {\n  actionCargarInformacionDeModulo,\n  actionConsultarActividadesModulo\n})(formularioEditar));","map":{"version":3,"sources":["C:/Users/jeiso/Desktop/REACT/proyectosESCOM/frontend/ESCOM-view/src/SuperAdministrador/componentes/editar/editarModulo.js"],"names":["React","Button","Barra","withRouter","nombre","requerido","apellido","documentoIdentificacion","Alerta","campo","PropTypes","actionCargarInformacionDeModulo","actionConsultarActividadesModulo","connect","reduxForm","Field","EditarModulo","Component","state","habilitado","actividadesSeleccionadas","validateImageWeight","imageFile","size","imageFileKb","maxWeight","props","validateImageWidth","maxWidth","width","validateImageHeight","maxHeight","height","validateImageFormat","console","log","type","mimeType","includes","handlePreview","imageUrl","previewImageDom","document","querySelector","src","handleChange","event","input","preventDefault","target","files","localImageUrl","URL","createObjectURL","imageObject","window","Image","onload","naturalWidth","naturalHeight","onChange","revokeObjectURL","renderFileInput","meta","touched","error","warning","name","handleSubmitForm","values","getBase64","image","result","modulo","nombreModulo","descripcionModulo","descripcion","imagenModulo","estadoModulo","onClickCancelar","history","push","file","cb","reader","FileReader","readAsDataURL","onerror","componentDidUpdate","mensajeEditar","setState","componentDidMount","codigoModulo","undefined","length","localStorage","getItem","render","estiloLetrero","paddingTop","paddingRight","paddingLeft","paddingBottom","margin","fondoBarraSuperior","textShadow","fontSize","fontFamily","fontWeight","padding","color","background","fondoBoton","initialValues","numeroDocumento","borderRadius","objectFit","handleSubmit","generarInput","renderTextArea","fondoBotonS","propTypes","previewLogoUrl","string","number","func","isRequired","defaultProps","placeholder","label","estiloTitulo","estiloCabecera","estiloFila","mapStateToProps","mod","actividades","actividadesModulos","mensajeEditarModulo","moduloEditar","formularioEditar","form","enableReinitialize"],"mappings":"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","sourcesContent":["import React from 'react';\r\n\r\n//estilos\r\nimport '../../css/business-casual.css'\r\nimport '../../css/estilos.css'\r\nimport '../../css/bootstrap.min.css'\r\nimport '../../css/menu.css'\r\n\r\nimport { Button } from 'reactstrap';\r\n\r\n\r\n//componentes\r\nimport Barra from '../general/BarraDirecciones';\r\n// import { NotificationContainer, NotificationManager } from 'react-notifications';\r\nimport { withRouter } from 'react-router-dom';\r\nimport { nombre, requerido, apellido, documentoIdentificacion } from '../../utilitario/validacionCampos.js';\r\nimport Alerta from '@icons/material/AlertIcon.js';\r\nimport { campo } from '../../utilitario/GenerarInputs.js';\r\nimport PropTypes from \"prop-types\";\r\n//redux\r\nimport { actionCargarInformacionDeModulo, actionConsultarActividadesModulo } from '../../actions/actionsModulo.js'\r\nimport { connect } from \"react-redux\";\r\nimport { reduxForm, Field } from 'redux-form';\r\n\r\n\r\nclass EditarModulo extends React.Component {\r\n\r\n    state = {\r\n        habilitado: false,\r\n        actividadesSeleccionadas: []\r\n    }\r\n\r\n\r\n    static propTypes = {\r\n        previewLogoUrl: PropTypes.string,\r\n        mimeType: PropTypes.string,\r\n        maxWeight: PropTypes.number,\r\n        maxWidth: PropTypes.number,\r\n        maxHeight: PropTypes.number,\r\n        // redux-form porps\r\n        handleSubmit: PropTypes.func.isRequired\r\n    };\r\n    static defaultProps = {\r\n        previewLogoUrl: \"https://imgplaceholder.com/400x300\",\r\n        mimeType: \"image/jpeg, image/png\",\r\n        maxWeight: 100,\r\n        maxWidth: 100,\r\n        maxHeight: 100\r\n    };\r\n    validateImageWeight = imageFile => {\r\n        if (imageFile && imageFile.size) {\r\n            // Get image size in kilobytes\r\n            const imageFileKb = imageFile.size / 1024;\r\n            const { maxWeight } = this.props;\r\n\r\n            if (imageFileKb > maxWeight) {\r\n                return `Image size must be less or equal to ${maxWeight}kb`;\r\n            }\r\n        }\r\n    };\r\n    validateImageWidth = imageFile => {\r\n        if (imageFile) {\r\n            const { maxWidth } = this.props;\r\n\r\n            if (imageFile.width > maxWidth) {\r\n                return `Image width must be less or equal to ${maxWidth}px`;\r\n            }\r\n        }\r\n    };\r\n    validateImageHeight = imageFile => {\r\n        if (imageFile) {\r\n            const { maxHeight } = this.props;\r\n\r\n            if (imageFile.height > maxHeight) {\r\n                return `Image height must be less or equal to ${maxHeight}px`;\r\n            }\r\n        }\r\n    };\r\n\r\n    validateImageFormat = imageFile => {\r\n        if (imageFile) {\r\n\r\n            console.log('tipo', imageFile.type)\r\n\r\n            const { mimeType } = this.props;\r\n\r\n            if (!mimeType.includes(imageFile.type)) {\r\n                return `Image mime type must be ${mimeType}`;\r\n            }\r\n        }\r\n    };\r\n\r\n    handlePreview = imageUrl => {\r\n        const previewImageDom = document.querySelector(\".preview-image\");\r\n        previewImageDom.src = imageUrl;\r\n    };\r\n\r\n    handleChange = (event, input) => {\r\n        event.preventDefault();\r\n        let imageFile = event.target.files[0];\r\n        if (imageFile) {\r\n            const localImageUrl = URL.createObjectURL(imageFile);\r\n            const imageObject = new window.Image();\r\n\r\n            imageObject.onload = () => {\r\n                imageFile.width = imageObject.naturalWidth;\r\n                imageFile.height = imageObject.naturalHeight;\r\n                input.onChange(imageFile);\r\n                URL.revokeObjectURL(imageFile);\r\n            };\r\n            imageObject.src = localImageUrl;\r\n            this.handlePreview(localImageUrl);\r\n        }\r\n    };\r\n\r\n    renderFileInput = ({ input, type, meta }) => {\r\n        const { mimeType } = this.props;\r\n        const { touched, error, warning } = meta;\r\n        return (\r\n            <div>\r\n                <input\r\n                    name={input.name}\r\n                    type={type}\r\n                    accept={mimeType}\r\n                    onChange={event => this.handleChange(event, input)}\r\n                />\r\n                {touched && ((error && <span className=\"text-danger letra form-group\">{error}</span>) || (warning && <span>{warning}</span>))}\r\n            </div>\r\n        );\r\n    };\r\n\r\n\r\n    handleSubmitForm = values => {\r\n        this.getBase64(values.image, (result) => {\r\n            let modulo = {\r\n                nombreModulo: values.nombre,\r\n                descripcionModulo: values.descripcion,\r\n                imagenModulo: result,\r\n                estadoModulo: 'Activo'\r\n            }\r\n            console.log('nuevo modulo es',modulo);\r\n            // this.props.actionAgregarModulo(modulo, localStorage.getItem('Token'));\r\n        });\r\n    };\r\n\r\n\r\n\r\n\r\n    getBase64(file, cb) {\r\n        let reader = new FileReader();\r\n        reader.readAsDataURL(file);\r\n        reader.onload = function () {\r\n            cb(reader.result)\r\n        };\r\n        reader.onerror = function (error) {\r\n            console.log('Error: ', error);\r\n        };\r\n    }\r\n\r\n    componentDidUpdate() {\r\n        if (this.props.mensajeEditar === 'Sin permiso') {\r\n            if (!this.state.habilitado) { this.setState({ habilitado: true }) };\r\n            // this.props.history.push('/adminUsuario');\r\n        }\r\n\r\n        console.log('props', this.props)\r\n    }\r\n\r\n    componentDidMount() {\r\n        if (this.props.codigoModulo === undefined || this.props.codigoModulo.length === 0) {\r\n            this.props.history.push('/adminModulo');\r\n        } else {\r\n            this.props.actionCargarInformacionDeModulo(this.props.codigoModulo, localStorage.getItem('Token'));\r\n            this.props.actionConsultarActividadesModulo(this.props.codigoModulo, localStorage.getItem('Token'));\r\n            // this.props.actionConsultarActividadesUsuario(this.props.cedula,localStorage.getItem('Token'));\r\n        }\r\n    }\r\n\r\n\r\n    onClickCancelar = (event) => {\r\n        event.preventDefault();\r\n        this.props.history.push('/adminModulo');\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                <div class=\"text-left titulo\" style={estiloLetrero}>\r\n                    <h4>Editar modulo</h4>\r\n                </div>\r\n                <Barra texto=\"Inicio > Editar modulo\" />\r\n                <div className=\"col-sm-12\" style={{\r\n                    paddingTop: \"0px\",\r\n                    paddingRight: \"40px\",\r\n                    paddingLeft: \"40px\",\r\n                    paddingBottom: \"0px\",\r\n                    margin: \"0px 0px 30px\"\r\n\r\n                }}>\r\n\r\n                    <div className=\"container shadow\" style={fondoBarraSuperior}>\r\n                        <br />\r\n                        {\r\n                            this.state.habilitado ? <div className=\"col-sm-12\"> <span className=\"col-sm-2 center\" style={{\r\n                                textShadow: \"none!important\",\r\n                                fontSize: \"16px\",\r\n                                fontFamily: \"Open Sans,sans-serif\",\r\n                                fontWeight: \"300\",\r\n                                padding: \"13px 122px\",\r\n                                color: \"#fff\",\r\n                                background: \"rgb(158, 35, 45)\"\r\n                            }}><Alerta />No tiene los permisos suficientes para administrar los usuarios</span>\r\n                                <div style={{ padding: \"25px 44px 25px 287px\" }}>\r\n                                    <Button style={fondoBoton} onClick={this.onClickCancelar} type=\"submit\">Aceptar</Button>{''}\r\n                                </div>\r\n                            </div> :\r\n                                <>\r\n                                    <div style={{ padding: \"30px 30px 30px 77px\" }}>\r\n                                        <img src={campo(this.props.initialValues.numeroDocumento)} alt=\"preview\"\r\n                                            className=\"preview-image\"\r\n                                            style={{ height: \"200px\", width: \"200px\", borderRadius: \"50%\", objectFit: \"cover\" }} />\r\n                                    </div>\r\n                                    <form className=\"letra\" onSubmit={this.props.handleSubmit(this.handleSubmitForm)}>\r\n                                        <br />\r\n                                        <label>Imagen</label>\r\n                                        <Field\r\n                                            name=\"image\"\r\n                                            type=\"file\"\r\n                                            validate={[\r\n                                                this.validateImageWeight,\r\n                                                this.validateImageWidth,\r\n                                                this.validateImageHeight,\r\n                                                this.validateImageFormat\r\n                                            ]}\r\n                                            component={this.renderFileInput}\r\n                                        />\r\n                                        <br />\r\n                                        <label>Nombre</label>\r\n                                        <div className=\"row\">\r\n                                            <div className=\"col-sm-5\">\r\n                                                <Field name=\"nombre\" validate={[requerido, nombre]} component={generarInput} label=\"Nombre\" />\r\n                                            </div>\r\n                                        </div>\r\n                                        <br />\r\n                                        <label>Descripcion</label>\r\n                                        <div className=\"row\">\r\n                                            <div className=\"col-sm-5\">\r\n                                                <Field name=\"apellido\" validate={[requerido, apellido]} component={renderTextArea} label=\"Apellido\" />\r\n                                            </div>\r\n                                        </div>\r\n                                        <br />\r\n                                        <div>\r\n                                            <Button style={fondoBoton} type=\"submit\">Guardar</Button>{''}\r\n                                            <Button style={fondoBotonS} color=\"secondary\" onClick={this.onClickCancelar}>Cancelar</Button>\r\n                                        </div>\r\n                                        <br />\r\n                                        <br />\r\n                                    </form>\r\n                                </>\r\n                        }\r\n                        <br />\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        )\r\n\r\n\r\n    }\r\n}\r\n\r\n\r\nconst generarInput = ({ input, placeholder, label, type, meta: { touched, warning, error } }) => (\r\n    <div>\r\n        <div>\r\n            <input {...input} type={type} style={{ fontSize: \"12px\" }} className=\"form-control letra form-control-solid placeholder-no-fix\" />\r\n            {touched && ((error && <span className=\"text-danger letra form-group\">{error}</span>) || (warning && <span>{warning}</span>))}\r\n        </div>\r\n    </div>\r\n)\r\n\r\nconst renderTextArea = ({ input, meta: { touched, error, warning } }) => (\r\n    <div>\r\n        <div>\r\n            <textarea {...input} style={{ fontSize: \"12px\" }} className=\"form-control letra form-control-solid placeholder-no-fix\" />\r\n            {touched && ((error && <span className=\"text-danger letra form-group\">{error}</span>) || (warning && <span>{warning}</span>))}\r\n        </div>\r\n    </div>\r\n);\r\n\r\nconst estiloTitulo = {\r\n\r\n    paddingTop: \"7px\",\r\n    paddingRight: \"12px\",\r\n    paddingLeft: \"5px\",\r\n    paddingBottom: \"1px\"\r\n}\r\n\r\nconst estiloLetrero = {\r\n    paddingTop: \"20px\",\r\n    paddingRight: \"12px\",\r\n    paddingLeft: \"40px\",\r\n    paddingBottom: \"1px\"\r\n}\r\n\r\n\r\nconst fondoBarraSuperior = {\r\n    background: \"#FFFFFF\"\r\n\r\n}\r\n\r\n\r\nconst estiloCabecera = {\r\n    fontSize: '13px',\r\n    fontFamily: 'sans-serif',\r\n    padding: '8px',\r\n    background: '#e7ecf1'\r\n\r\n}\r\n\r\nconst estiloFila = {\r\n    fontSize: '12px',\r\n    fontFamily: 'sans-serif',\r\n    padding: '8px',\r\n}\r\n\r\n\r\n\r\nconst fondoBoton = {\r\n    background: \"#ec671d\",\r\n    fontSize: \"14px\",\r\n    fontFamily: \"Open sans, sans-serif\"\r\n\r\n}\r\n\r\nconst fondoBotonS = {\r\n    background: \"secondary\",\r\n    fontSize: \"14px\",\r\n    fontFamily: \"Open sans, sans-serif\"\r\n\r\n}\r\n\r\nfunction mapStateToProps(state) {\r\n    return {\r\n        codigoModulo: state.mod.codigoModulo,\r\n        actividades: state.mod.actividadesModulos,\r\n        mensajeEditar: state.mod.mensajeEditarModulo,\r\n        initialValues: {\r\n            nombre: state.mod.moduloEditar.nombreModulo,\r\n            apellido: state.mod.moduloEditar.descripcionModulo,\r\n            numeroDocumento: state.mod.moduloEditar.imagenModulo,\r\n        }\r\n    }\r\n}\r\n\r\n\r\nlet formularioEditar = reduxForm({\r\n    form: 'editarModulo',\r\n    enableReinitialize: true\r\n})(EditarModulo)\r\n\r\nexport default withRouter(connect(mapStateToProps, { actionCargarInformacionDeModulo, actionConsultarActividadesModulo })(formularioEditar));\r\n\r\n"]},"metadata":{},"sourceType":"module"}