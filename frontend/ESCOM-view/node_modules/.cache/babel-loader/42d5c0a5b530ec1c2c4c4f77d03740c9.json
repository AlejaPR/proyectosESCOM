{"ast":null,"code":"import axios from 'axios';\nimport { encriptar, desencriptar } from '../componentes/general/Encriptar.js';\nimport { URL_BASE } from '../utilitario/Configuracion.js';\nimport { mensajesDeErrorModulosAcceso, mensajesDeErrorRegistroUsuarios, mensajesDeErrorListarUsuarios, mensajesDeErrorCambiarEstadoUsuario, mensajesDeErrorCargarInformacion, mensajesDeErrorEditarUsuario, mensajesDeErrorConsultarModulosUsuario, mensajesDeErrorConsultarActividadesUsuario, mensajesDeErrorAsignarActividad, mensajesDeErrorConsultarCorreo, mensajesDeErrorGenerarToken, mensajesDeErrorCambiarContrasena, mensajesDeValidarToken, mensajesDeCambiarContrasenaExterna } from '../mensajesDeError/MensajesDeErrorUsuario.js';\nexport const ACTIVIDADES_SIN_ASIGNAR = 'ACTIVIDADES_SIN_ASIGNAR';\nexport const ACTUALIZAR_USUARIOS = 'ACTUALIZAR_USUARIOS';\nexport const AGREGAR_ACTIVIDAD = 'AGREGAR_ACTIVIDAD';\nexport const AGREGAR_USUARIO = 'AGREGAR_USUARIO';\nexport const ANADIR_CEDULA_EDITAR = \"ANADIR_CEDULA_EDITAR\";\nexport const EDITAR_USUARIO = \"EDITAR_USUARIO\";\nexport const EMAIL_USUARIO = 'EMAIL_USUARIO';\nexport const ESTADO_ASIGNAR = 'ESTADO_ASIGNAR';\nexport const ESTADO_USUARIOS = 'ESTADO_USUARIOS';\nexport const INFORMACION_USUARIO = 'INFORMACION_USUARIO';\nexport const MENSAJE_ASIGNAR = 'MENSAJE_ASIGNAR';\nexport const MENSAJE_CERRAR_SESION = 'MENSAJE_CERRAR_SESION';\nexport const MENSAJE_CONTRASENA = 'MENSAJE_CONTRASENA';\nexport const MENSAJE_EDITAR = 'MENSAJE_EDITAR';\nexport const MENSAJE_INICIO = 'MENSAJE_INICIO';\nexport const MENSAJE_LOGIN = 'MENSAJE_LOGIN';\nexport const MENSAJE_REGISTRAR = 'MENSAJE_REGISTRAR';\nexport const MENSAJE_SUSPENDER = 'MENSAJE_SUSPENDER';\nexport const MENSAJE_CONTRASENA_EXTERNA = 'MENSAJE_CONTRASENA_EXTERNA';\nexport const MODULOS_ACCESO = 'MODULOS_ACCESO';\nexport const MODULOS_REGISTRADOS = 'MODULOS_REGISTRADOS';\nexport const MOSTRAR_ACTIVIDADES_USUARIO = 'MOSTRAR_ACTIVIDADES_USUARIO';\nexport const MOSTRAR_DOCUMENTOS = 'MOSTRAR_DOCUMENTOS';\nexport const MOSTRAR_USUARIOS = 'MOSTRAR_USUARIOS';\nexport const NOMBRE_USUARIO = 'NOMBRE_USUARIO';\nexport const REDIRECCIONAR_LOGIN = 'REDIRECCIONAR_LOGIN';\nconst PERMISO_REGISTRAR = 'SA_Registrar usuarios';\nconst PERMISO_CONSULTAR_USUARIOS = 'SA_Consultar usuarios registrados';\nconst PERMISO_EDITAR_USUARIOS = 'SA_Editar informacion de los usuarios';\nconst PERMISO_ASIGNACION_ACTIVIDADES = 'SA_Asignacion de actividades a los usuarios';\nconst PERMISO_SUSPENDER_ACTIVAR = 'SA_Suspender/activar usuarios';\nconst PERMISO_CAMBIAR_CONTRASENA = 'SA_Cambiar contrasena';\nexport function actionLoginUsuario(correo, contrasena, cambiar) {\n  var crypto = require('crypto');\n\n  var contrasenaEncryp = crypto.createHmac('sha256', correo).update(contrasena).digest('hex');\n  cambiar(true);\n  return (dispatch, getState) => {\n    axios.get(`${URL_BASE}/proyectosESCOM-web/api/login/${correo}/${contrasenaEncryp}`).then(response => {\n      if (response.status === 200) {\n        var token = encriptar(response.data.token);\n        localStorage.setItem('Token', token);\n        dispatch({\n          type: MENSAJE_LOGIN,\n          mensaje: 'Login correcto'\n        });\n        var nombre = response.data.nombre + ' ' + response.data.apellido;\n        localStorage.setItem('Nombre', nombre);\n        dispatch({\n          type: NOMBRE_USUARIO,\n          nombre: nombre\n        });\n      }\n    }).catch(error => {\n      if (error.request.response === '') {\n        dispatch({\n          type: MENSAJE_LOGIN,\n          mensaje: 'Servidor fuera de servicio temporalmente'\n        });\n        cambiar(false);\n      } else {\n        if (error.request) {\n          var o = JSON.parse(error.request.response);\n          cambiar(false);\n          dispatch({\n            type: MENSAJE_LOGIN,\n            mensaje: o.respuesta\n          });\n        }\n      }\n    });\n  };\n}\nexport function actionRecuperarContrasena(correo, cambiar) {\n  cambiar(true);\n  return (dispatch, getState) => {\n    axios.post(`${URL_BASE}/proyectosESCOM-web/api/login/recuperarContrasena/${correo}`).then(response => {\n      cambiar(false);\n      dispatch({\n        type: MENSAJE_LOGIN,\n        mensaje: 'Se enviaron las instrucciones para recuperar la contraseña a su correo'\n      });\n    }).catch(error => {\n      if (error.request.response === '') {\n        dispatch({\n          type: MENSAJE_LOGIN,\n          mensaje: 'Servidor fuera de servicio temporalmente'\n        });\n        cambiar(false);\n      } else {\n        if (error.request) {\n          var o = JSON.parse(error.request.response);\n          let respuesta = mensajesDeErrorGenerarToken(o.respuesta);\n          cambiar(false);\n          dispatch({\n            type: MENSAJE_LOGIN,\n            mensaje: respuesta\n          });\n        }\n      }\n    });\n  };\n}\nexport function actionValidarToken(token) {\n  return (dispatch, getState) => {\n    axios.get(`${URL_BASE}/proyectosESCOM-web/api/login/validarTokenRecuperarContrasena/${token}`).then(response => {\n      dispatch({\n        type: MENSAJE_CONTRASENA_EXTERNA,\n        mensaje: 'Correcto'\n      });\n      dispatch({\n        type: NOMBRE_USUARIO,\n        nombre: response.data\n      });\n    }).catch(error => {\n      if (error.request.response === '') {\n        dispatch({\n          type: MENSAJE_CONTRASENA_EXTERNA,\n          mensaje: 'Servidor fuera de servicio temporalmente'\n        });\n      } else {\n        if (error.request) {\n          var o = JSON.parse(error.request.response);\n          let respuesta = mensajesDeValidarToken(o.respuesta);\n          dispatch({\n            type: MENSAJE_CONTRASENA_EXTERNA,\n            mensaje: respuesta\n          });\n        }\n      }\n    });\n  };\n}\nexport function actionCambiarContrasenaExterna(correo, contrasena, token) {\n  var crypto = require('crypto');\n\n  var contrasenaEncryp = crypto.createHmac('sha256', correo).update(contrasena).digest('hex');\n  let datosSolicitud = {\n    'ip': localStorage.getItem('Ip'),\n    'token': token,\n    'operacion': PERMISO_CAMBIAR_CONTRASENA\n  };\n  return (dispatch, getState) => {\n    axios.put(`${URL_BASE}/proyectosESCOM-web/api/login/cambiarClaveExterna/${contrasenaEncryp}/${token}`, datosSolicitud).then(response => {\n      dispatch({\n        type: MENSAJE_CONTRASENA_EXTERNA,\n        mensaje: 'Contraseña actualizada'\n      });\n    }).catch(error => {\n      if (error.request.response === '') {\n        dispatch({\n          type: MENSAJE_CONTRASENA_EXTERNA,\n          mensaje: 'Servidor fuera de servicio temporalmente'\n        });\n      } else {\n        if (error.request) {\n          var o = JSON.parse(error.request.response);\n          let respuesta = mensajesDeCambiarContrasenaExterna(o.respuesta);\n          dispatch({\n            type: MENSAJE_CONTRASENA_EXTERNA,\n            mensaje: respuesta\n          });\n        }\n      }\n    });\n  };\n}\nexport function actionCerrarSesion(token) {\n  const headers = {\n    'Content-Type': 'application/json',\n    'TokenAuto': desencriptar(token)\n  };\n  return (dispatch, getState) => {\n    axios.delete(`${URL_BASE}/proyectosESCOM-web/api/login/cerrarSesion/${desencriptar(token)}`, {\n      headers: headers\n    }).then(response => {\n      dispatch({\n        type: MENSAJE_CERRAR_SESION,\n        mensaje: 'cerrada'\n      });\n    }).catch(function (error) {\n      dispatch({\n        type: MENSAJE_CERRAR_SESION,\n        mensaje: 'cerrada'\n      });\n    });\n  };\n}\nexport function actionCerrarSesionInicio(token) {\n  const headers = {\n    'Content-Type': 'application/json',\n    'TokenAuto': desencriptar(token)\n  };\n  return (dispatch, getState) => {\n    axios.delete(`${URL_BASE}/proyectosESCOM-web/api/login/cerrarSesion/${desencriptar(token)}`, {\n      headers: headers\n    }).then(response => {\n      dispatch({\n        type: MENSAJE_INICIO,\n        mensaje: 'sesion cerrada'\n      });\n    }).catch(function (error) {\n      if (error.request.response === '') {\n        dispatch({\n          type: MENSAJE_INICIO,\n          mensaje: 'sesion cerrada'\n        });\n      } else {\n        dispatch({\n          type: MENSAJE_INICIO,\n          mensaje: 'sesion cerrada'\n        });\n      }\n    });\n  };\n}\nexport function actionConsultarCorreo(token) {\n  const headers = {\n    'Content-Type': 'application/json',\n    'TokenAuto': desencriptar(token)\n  };\n  return (dispatch, getState) => {\n    axios.get(`${URL_BASE}/proyectosESCOM-web/api/usuarios/devolverCorreo/${desencriptar(token)}`, {\n      headers: headers\n    }).then(response => {\n      dispatch({\n        type: EMAIL_USUARIO,\n        email: response.data\n      });\n    }).catch(error => {\n      if (error.request.response === '') {\n        dispatch({\n          type: MENSAJE_CONTRASENA,\n          mensaje: 'Servidor fuera de servicio temporalmente'\n        });\n      } else {\n        if (error.request) {\n          var o = JSON.parse(error.request.response);\n          let respuesta = mensajesDeErrorConsultarCorreo(o.respuesta);\n          dispatch({\n            type: MENSAJE_CONTRASENA,\n            mensaje: respuesta\n          });\n        }\n      }\n    });\n  };\n}\nexport function actionConsultarUsuarios(token) {\n  const headers = {\n    'Content-Type': 'application/json',\n    'TokenAuto': desencriptar(token),\n    'Permiso': PERMISO_CONSULTAR_USUARIOS\n  };\n  return (dispatch, getState) => {\n    axios.get(`${URL_BASE}/proyectosESCOM-web/api/usuarios/listar/${desencriptar(token)}`, {\n      headers: headers\n    }).then(response => {\n      dispatch({\n        type: MOSTRAR_USUARIOS,\n        respuesta: response.data\n      });\n    }).catch(error => {\n      if (error.request.response === '') {\n        dispatch({\n          type: MENSAJE_SUSPENDER,\n          mensaje: 'Servidor fuera de servicio temporalmente'\n        });\n      } else {\n        if (error.request) {\n          var o = JSON.parse(error.request.response);\n          let respuesta = mensajesDeErrorListarUsuarios(o.respuesta);\n\n          if (respuesta === 'Sin permiso') {\n            dispatch({\n              type: ESTADO_USUARIOS,\n              estado: true\n            });\n          } else {\n            dispatch({\n              type: MENSAJE_SUSPENDER,\n              mensaje: respuesta\n            });\n          }\n        }\n      }\n    });\n  };\n}\nexport function actionCambiarContrasena(clave, correo, token) {\n  var crypto = require('crypto');\n\n  let claveObj = {\n    'nuevaClave': crypto.createHmac('sha256', correo).update(clave.nuevaClave).digest('hex'),\n    'antiguaClave': crypto.createHmac('sha256', correo).update(clave.antiguaClave).digest('hex'),\n    'token': desencriptar(token)\n  };\n  const headers = {\n    'Content-Type': 'application/json',\n    'TokenAuto': desencriptar(token)\n  };\n  claveObj.datosSolicitud = {\n    'ip': localStorage.getItem('Ip'),\n    'token': desencriptar(token),\n    'operacion': PERMISO_CAMBIAR_CONTRASENA\n  };\n  return (dispatch, getState) => {\n    axios.post(`${URL_BASE}/proyectosESCOM-web/api/usuarios/cambiarClaveInterna`, claveObj, {\n      headers: headers\n    }).then(response => {\n      dispatch({\n        type: MENSAJE_CONTRASENA,\n        mensaje: 'Contraseña cambiada'\n      });\n    }).catch(error => {\n      if (error.request.response === '') {\n        dispatch({\n          type: MENSAJE_CONTRASENA,\n          mensaje: 'Servidor fuera de servicio temporalmente'\n        });\n      } else {\n        if (error.request) {\n          var o = JSON.parse(error.request.response);\n          let respuesta = mensajesDeErrorCambiarContrasena(o.respuesta);\n\n          if (respuesta !== '') {\n            dispatch({\n              type: MENSAJE_CONTRASENA,\n              mensaje: respuesta\n            });\n          }\n        }\n      }\n    });\n  };\n}\nexport function actionConsultarModulosAcceso(token) {\n  const headers = {\n    'Content-Type': 'application/json',\n    'TokenAuto': desencriptar(token)\n  };\n  return (dispatch, getState) => {\n    axios.get(`${URL_BASE}/proyectosESCOM-web/api/usuarios/redireccion/${desencriptar(token)}`, {\n      headers: headers\n    }).then(response => {\n      dispatch({\n        type: MODULOS_ACCESO,\n        respuesta: response.data\n      });\n    }).catch(error => {\n      if (error.request.response === '') {\n        dispatch({\n          type: MENSAJE_INICIO,\n          mensaje: 'Servidor fuera de servicio temporalmente'\n        });\n      } else {\n        if (error.request) {\n          var o = JSON.parse(error.request.response);\n          let respuesta = mensajesDeErrorModulosAcceso(o.respuesta);\n\n          if (respuesta !== '') {\n            dispatch({\n              type: MENSAJE_INICIO,\n              mensaje: respuesta\n            });\n          }\n        }\n      }\n    });\n  };\n}\nexport function actionConsultarActividadesUsuario(numeroDocumento, token) {\n  const headers = {\n    'Content-Type': 'application/json',\n    'TokenAuto': desencriptar(token),\n    'Permiso': PERMISO_ASIGNACION_ACTIVIDADES\n  };\n  return (dispatch, getState) => {\n    axios.get(`${URL_BASE}/proyectosESCOM-web/api/usuarios/listarActividades/${numeroDocumento}`, {\n      headers: headers\n    }).then(response => {\n      dispatch({\n        type: MOSTRAR_ACTIVIDADES_USUARIO,\n        respuesta: response.data\n      });\n    }).catch(error => {\n      if (error.request.response === '') {\n        dispatch({\n          type: MENSAJE_ASIGNAR,\n          mensaje: 'Servidor fuera de servicio temporalmente'\n        });\n      } else {\n        if (error.request) {\n          var o = JSON.parse(error.request.response);\n          let respuesta = mensajesDeErrorConsultarActividadesUsuario(o.respuesta);\n\n          if (respuesta !== '') {\n            dispatch({\n              type: MENSAJE_ASIGNAR,\n              mensaje: respuesta\n            });\n          }\n        }\n      }\n    });\n  };\n}\nexport function actionConsultarDocumentos(token) {\n  const headers = {\n    'Content-Type': 'application/json',\n    'TokenAuto': desencriptar(token),\n    'Permiso': PERMISO_CONSULTAR_USUARIOS\n  };\n  return (dispatch, getState) => {\n    axios.get(`${URL_BASE}/proyectosESCOM-web/api/usuarios/tipoDocumento`, {\n      headers: headers\n    }).then(response => {\n      dispatch({\n        type: MOSTRAR_DOCUMENTOS,\n        respuesta: response.data\n      });\n    }).catch(error => {\n      if (error.request.response === '') {\n        dispatch({\n          type: MENSAJE_REGISTRAR,\n          mensaje: 'Servidor fuera de servicio temporalmente'\n        });\n      } else {\n        let cedula = {\n          'idTipoDocumento': '1',\n          'tipoDocumento': 'Cedula'\n        };\n        let tarjetaIdentidad = {\n          'idTipoDocumento': '2',\n          'tipoDocumento': 'Tarjeta de identidad'\n        };\n        var documentos = [cedula, tarjetaIdentidad];\n\n        if (error.request) {\n          dispatch({\n            type: MOSTRAR_DOCUMENTOS,\n            respuesta: documentos\n          });\n        }\n      }\n    });\n  };\n}\nexport function actionAsignarIp() {\n  return (dispatch, getState) => {\n    axios.get(\"https://api.ipify.org/?format=json\").then(response => {\n      localStorage.setItem('Ip', response.data.ip);\n    }).catch(error => {\n      if (error.request.response === '') {\n        localStorage.setItem('Ip', '999.999.999');\n      }\n    });\n  };\n}\nexport function actionAgregarUsuario(usuario, token) {\n  const headers = {\n    'Content-Type': 'application/json; charset=UTF-8',\n    'TokenAuto': desencriptar(token),\n    'Permiso': PERMISO_REGISTRAR\n  };\n  usuario.datosSolicitud = {\n    'ip': localStorage.getItem('Ip'),\n    'token': desencriptar(token),\n    'operacion': PERMISO_REGISTRAR\n  };\n  return (dispatch, getState) => {\n    axios.post(`${URL_BASE}/proyectosESCOM-web/api/usuarios/registrar`, usuario, {\n      headers: headers\n    }).then(response => {\n      dispatch({\n        type: AGREGAR_USUARIO,\n        usuarioARegistrar: usuario\n      });\n      dispatch({\n        type: MENSAJE_REGISTRAR,\n        mensaje: 'Usuario registrado'\n      });\n    }).catch(error => {\n      if (error.request.response === '') {\n        dispatch({\n          type: MENSAJE_REGISTRAR,\n          mensaje: 'Servidor fuera de servicio temporalmente'\n        });\n      } else {\n        if (error.request) {\n          var o = JSON.parse(error.request.response);\n          let respuesta = mensajesDeErrorRegistroUsuarios(o.respuesta);\n\n          if (respuesta !== '') {\n            dispatch({\n              type: MENSAJE_REGISTRAR,\n              mensaje: respuesta\n            });\n          }\n        }\n      }\n    });\n  };\n}\nexport function actionAsignarActividad(token, numeroDocumento, actividad) {\n  const headers = {\n    'Content-Type': 'application/json',\n    'TokenAuto': desencriptar(token),\n    'Permiso': PERMISO_ASIGNACION_ACTIVIDADES\n  };\n  actividad.datosSolicitud = {\n    'ip': localStorage.getItem('Ip'),\n    'token': desencriptar(token),\n    'operacion': PERMISO_ASIGNACION_ACTIVIDADES\n  };\n  return (dispatch, getState) => {\n    axios.post(`${URL_BASE}/proyectosESCOM-web/api/usuarios/asignarActividad/${numeroDocumento}`, actividad, {\n      headers: headers\n    }).then(response => {\n      dispatch({\n        type: MENSAJE_ASIGNAR,\n        mensaje: 'Actividad asignada'\n      });\n    }).catch(error => {\n      if (error.request.response === '') {\n        dispatch({\n          type: MENSAJE_ASIGNAR,\n          mensaje: 'Servidor fuera de servicio temporalmente'\n        });\n      } else {\n        if (error.request) {\n          var o = JSON.parse(error.request.response);\n          let respuesta = mensajesDeErrorAsignarActividad(o.respuesta);\n\n          if (respuesta !== '') {\n            dispatch({\n              type: MENSAJE_ASIGNAR,\n              mensaje: respuesta\n            });\n          }\n        }\n      }\n    });\n  };\n}\nexport function actionSuspenderActivarUsuario(cedula, token, actualizados) {\n  const headers = {\n    'Content-Type': 'application/json',\n    'TokenAuto': desencriptar(token),\n    'Permiso': PERMISO_SUSPENDER_ACTIVAR\n  };\n  let datosSolicitud = {\n    'ip': localStorage.getItem('Ip'),\n    'token': desencriptar(token),\n    'operacion': PERMISO_SUSPENDER_ACTIVAR\n  };\n  return (dispatch, getState) => {\n    axios.put(`${URL_BASE}/proyectosESCOM-web/api/usuarios/cambiarEstado/${cedula}`, datosSolicitud, {\n      headers: headers\n    }).then(response => {\n      dispatch({\n        type: MENSAJE_SUSPENDER,\n        mensaje: 'Operacion hecha con exito'\n      });\n      dispatch({\n        type: ACTUALIZAR_USUARIOS,\n        usuario: actualizados\n      });\n    }).catch(error => {\n      if (error.request.response === '') {\n        dispatch({\n          type: MENSAJE_SUSPENDER,\n          mensaje: 'Servidor fuera de servicio temporalmente'\n        });\n      } else {\n        if (error.request) {\n          var o = JSON.parse(error.request.response);\n          let respuesta = mensajesDeErrorCambiarEstadoUsuario(o.respuesta);\n\n          if (respuesta !== '') {\n            dispatch({\n              type: MENSAJE_SUSPENDER,\n              mensaje: respuesta\n            });\n          }\n        }\n      }\n    });\n  };\n}\nexport function actionCargarInformacionDeUsuario(cedula, token) {\n  const headers = {\n    'Content-Type': 'application/json',\n    'TokenAuto': desencriptar(token),\n    'Permiso': PERMISO_EDITAR_USUARIOS\n  };\n  return (dispatch, getState) => {\n    axios.get(`${URL_BASE}/proyectosESCOM-web/api/usuarios/datos/${cedula}`, {\n      headers: headers\n    }).then(response => {\n      dispatch({\n        type: INFORMACION_USUARIO,\n        informacionUsuario: response.data\n      });\n    }).catch(error => {\n      if (error.request.response === '') {\n        dispatch({\n          type: MENSAJE_EDITAR,\n          mensaje: 'Servidor fuera de servicio temporalmente'\n        });\n      } else {\n        if (error.request) {\n          var o = JSON.parse(error.request.response);\n          let respuesta = mensajesDeErrorCargarInformacion(o.respuesta);\n\n          if (respuesta !== '') {\n            dispatch({\n              type: MENSAJE_EDITAR,\n              mensaje: respuesta\n            });\n          }\n        }\n      }\n    });\n  };\n}\nexport function actionConsultarModulos(token) {\n  const headers = {\n    'Content-Type': 'application/json',\n    'TokenAuto': desencriptar(token),\n    'Permiso': PERMISO_ASIGNACION_ACTIVIDADES\n  };\n  return (dispatch, getState) => {\n    axios.get(`${URL_BASE}/proyectosESCOM-web/api/modulos/listar`, {\n      headers: headers\n    }).then(response => {\n      dispatch({\n        type: MODULOS_REGISTRADOS,\n        respuesta: response.data\n      });\n    }).catch(error => {\n      if (error.request.response === '') {\n        dispatch({\n          type: MENSAJE_ASIGNAR,\n          mensaje: 'Servidor fuera de servicio temporalmente'\n        });\n      } else {\n        if (error.request) {\n          var o = JSON.parse(error.request.response);\n          let respuesta = mensajesDeErrorConsultarModulosUsuario(o.respuesta);\n\n          if (respuesta === 'Sin permiso') {\n            dispatch({\n              type: ESTADO_ASIGNAR,\n              estado: true\n            });\n          } else {\n            dispatch({\n              type: MENSAJE_ASIGNAR,\n              mensaje: respuesta\n            });\n          }\n        }\n      }\n    });\n  };\n}\nexport function actionEliminarActividades(actividades, token, numeroDocumento) {\n  const headers = {\n    'Content-Type': 'application/json',\n    'TokenAuto': desencriptar(token),\n    'Permiso': PERMISO_ASIGNACION_ACTIVIDADES\n  };\n  actividades[0].datosSolicitud = {\n    'ip': localStorage.getItem('Ip'),\n    'token': desencriptar(token),\n    'operacion': PERMISO_ASIGNACION_ACTIVIDADES\n  };\n  return (dispatch, getState) => {\n    axios.put(`${URL_BASE}/proyectosESCOM-web/api/usuarios/eliminarActividad/${numeroDocumento}`, actividades, {\n      headers: headers\n    }).then(response => {\n      dispatch({\n        type: MENSAJE_ASIGNAR,\n        mensaje: 'Actividades eliminadas'\n      });\n    }).catch(error => {\n      try {\n        if (error.request.response === '') {\n          dispatch({\n            type: MENSAJE_ASIGNAR,\n            mensaje: 'Servidor fuera de servicio temporalmente'\n          });\n        } else {\n          if (error.request) {\n            var o = JSON.parse(error.request.response);\n            let respuesta = mensajesDeErrorConsultarActividadesUsuario(o.respuesta);\n\n            if (respuesta !== '') {\n              dispatch({\n                type: MENSAJE_ASIGNAR,\n                mensaje: respuesta\n              });\n            }\n          }\n        }\n      } catch (error) {\n        dispatch({\n          type: MENSAJE_ASIGNAR,\n          mensaje: 'Ocurrio un error en el servidor'\n        });\n      }\n    });\n  };\n}\nexport function actionConsultarActividadesSinAsignar(token, numeroDocumento, codigoModulo) {\n  const headers = {\n    'Content-Type': 'application/json',\n    'TokenAuto': desencriptar(token),\n    'Permiso': PERMISO_ASIGNACION_ACTIVIDADES\n  };\n  return (dispatch, getState) => {\n    axios.get(`${URL_BASE}/proyectosESCOM-web/api/usuarios/listarActividadesNoAsociadas/${numeroDocumento}/${codigoModulo}`, {\n      headers: headers\n    }).then(response => {\n      dispatch({\n        type: ACTIVIDADES_SIN_ASIGNAR,\n        respuesta: response.data\n      });\n    }).catch(error => {\n      if (error.request.response === '') {\n        dispatch({\n          type: MENSAJE_ASIGNAR,\n          mensaje: 'Servidor fuera de servicio temporalmente'\n        });\n      } else {\n        if (error.request) {\n          var o = JSON.parse(error.request.response);\n          let respuesta = mensajesDeErrorConsultarActividadesUsuario(o.respuesta);\n\n          if (respuesta === 'Sin permiso') {\n            dispatch({\n              type: ESTADO_ASIGNAR,\n              estado: true\n            });\n          } else {\n            dispatch({\n              type: MENSAJE_ASIGNAR,\n              mensaje: respuesta\n            });\n          }\n        }\n      }\n    });\n  };\n}\nexport function actionEditarUsuario(usuario, cedula, token) {\n  const headers = {\n    'Content-Type': 'application/json; charset=UTF-8',\n    'TokenAuto': desencriptar(token),\n    'Permiso': PERMISO_EDITAR_USUARIOS\n  };\n  usuario.datosSolicitud = {\n    'ip': localStorage.getItem('Ip'),\n    'token': desencriptar(token),\n    'operacion': PERMISO_EDITAR_USUARIOS\n  };\n  return (dispatch, getState) => {\n    axios.put(`${URL_BASE}/proyectosESCOM-web/api/usuarios/editar/${cedula}`, usuario, {\n      headers: headers\n    }).then(response => {\n      dispatch({\n        type: EDITAR_USUARIO,\n        payload: usuario\n      });\n      dispatch({\n        type: MENSAJE_EDITAR,\n        mensaje: 'Modificado'\n      });\n    }).catch(error => {\n      if (error.request.response === '') {\n        dispatch({\n          type: MENSAJE_EDITAR,\n          mensaje: 'Servidor fuera de servicio temporalmente'\n        });\n      } else {\n        if (error.request) {\n          var o = JSON.parse(error.request.response);\n          let respuesta = mensajesDeErrorEditarUsuario(o.respuesta);\n\n          if (respuesta !== '') {\n            dispatch({\n              type: EDITAR_USUARIO,\n              payload: usuario\n            });\n            dispatch({\n              type: MENSAJE_EDITAR,\n              mensaje: respuesta\n            });\n          }\n        }\n      }\n    });\n  };\n}\nexport function actualizarMensajeCerrar(mensaje) {\n  return (dispatch, getState) => {\n    dispatch({\n      type: MENSAJE_CERRAR_SESION,\n      mensaje: mensaje\n    });\n  };\n}\nexport function actualizarMensajeInicio(mensaje) {\n  return (dispatch, getState) => {\n    dispatch({\n      type: MENSAJE_INICIO,\n      mensaje: mensaje\n    });\n  };\n}\nexport function actualizarMensajeEditar(mensaje) {\n  return (dispatch, getState) => {\n    dispatch({\n      type: MENSAJE_EDITAR,\n      mensaje: mensaje\n    });\n  };\n}\nexport function actualizarMensajeRecuperarContrasena(mensaje) {\n  return (dispatch, getState) => {\n    dispatch({\n      type: MENSAJE_CONTRASENA_EXTERNA,\n      mensaje: mensaje\n    });\n  };\n}\nexport function actualizarMensajeLogin(mensaje) {\n  return (dispatch, getState) => {\n    dispatch({\n      type: MENSAJE_LOGIN,\n      mensaje: mensaje\n    });\n  };\n}\nexport function actualizarMensajeRegistrar(mensaje) {\n  return (dispatch, getState) => {\n    dispatch({\n      type: MENSAJE_REGISTRAR,\n      mensaje: mensaje\n    });\n  };\n}\nexport function actualizarMensajeSuspender(mensaje) {\n  return (dispatch, getState) => {\n    dispatch({\n      type: MENSAJE_SUSPENDER,\n      mensaje: mensaje\n    });\n  };\n}\nexport function asignarNombreUsuario(nombre) {\n  return (dispatch, getState) => {\n    dispatch({\n      type: NOMBRE_USUARIO,\n      nombre: nombre\n    });\n  };\n}\nexport function actualizarMensajeAsignar(mensaje) {\n  return (dispatch, getState) => {\n    dispatch({\n      type: MENSAJE_ASIGNAR,\n      mensaje: mensaje\n    });\n  };\n}\nexport function actualizarMensajeCambiarContrasena(mensaje) {\n  return (dispatch, getState) => {\n    dispatch({\n      type: MENSAJE_CONTRASENA,\n      mensaje: mensaje\n    });\n  };\n}\nexport function actionAsignarCedula(cedula) {\n  return (dispatch, getState) => {\n    dispatch({\n      type: ANADIR_CEDULA_EDITAR,\n      cedula: cedula\n    });\n  };\n}\nexport function actionAsignarActividades() {\n  return (dispatch, getState) => {\n    dispatch({\n      type: ACTIVIDADES_SIN_ASIGNAR,\n      respuesta: null\n    });\n  };\n}\nexport function actionActualizarUsuarios(usuarios) {\n  return (dispatch, getState) => {\n    dispatch({\n      type: ACTUALIZAR_USUARIOS,\n      usuario: usuarios\n    });\n  };\n}","map":{"version":3,"sources":["C:/Users/jeiso/Desktop/proyectosESCOM/frontend/ESCOM-view/src/SuperAdministrador/actions/actionsUsuario.js"],"names":["axios","encriptar","desencriptar","URL_BASE","mensajesDeErrorModulosAcceso","mensajesDeErrorRegistroUsuarios","mensajesDeErrorListarUsuarios","mensajesDeErrorCambiarEstadoUsuario","mensajesDeErrorCargarInformacion","mensajesDeErrorEditarUsuario","mensajesDeErrorConsultarModulosUsuario","mensajesDeErrorConsultarActividadesUsuario","mensajesDeErrorAsignarActividad","mensajesDeErrorConsultarCorreo","mensajesDeErrorGenerarToken","mensajesDeErrorCambiarContrasena","mensajesDeValidarToken","mensajesDeCambiarContrasenaExterna","ACTIVIDADES_SIN_ASIGNAR","ACTUALIZAR_USUARIOS","AGREGAR_ACTIVIDAD","AGREGAR_USUARIO","ANADIR_CEDULA_EDITAR","EDITAR_USUARIO","EMAIL_USUARIO","ESTADO_ASIGNAR","ESTADO_USUARIOS","INFORMACION_USUARIO","MENSAJE_ASIGNAR","MENSAJE_CERRAR_SESION","MENSAJE_CONTRASENA","MENSAJE_EDITAR","MENSAJE_INICIO","MENSAJE_LOGIN","MENSAJE_REGISTRAR","MENSAJE_SUSPENDER","MENSAJE_CONTRASENA_EXTERNA","MODULOS_ACCESO","MODULOS_REGISTRADOS","MOSTRAR_ACTIVIDADES_USUARIO","MOSTRAR_DOCUMENTOS","MOSTRAR_USUARIOS","NOMBRE_USUARIO","REDIRECCIONAR_LOGIN","PERMISO_REGISTRAR","PERMISO_CONSULTAR_USUARIOS","PERMISO_EDITAR_USUARIOS","PERMISO_ASIGNACION_ACTIVIDADES","PERMISO_SUSPENDER_ACTIVAR","PERMISO_CAMBIAR_CONTRASENA","actionLoginUsuario","correo","contrasena","cambiar","crypto","require","contrasenaEncryp","createHmac","update","digest","dispatch","getState","get","then","response","status","token","data","localStorage","setItem","type","mensaje","nombre","apellido","catch","error","request","o","JSON","parse","respuesta","actionRecuperarContrasena","post","actionValidarToken","actionCambiarContrasenaExterna","datosSolicitud","getItem","put","actionCerrarSesion","headers","delete","actionCerrarSesionInicio","actionConsultarCorreo","email","actionConsultarUsuarios","estado","actionCambiarContrasena","clave","claveObj","nuevaClave","antiguaClave","actionConsultarModulosAcceso","actionConsultarActividadesUsuario","numeroDocumento","actionConsultarDocumentos","cedula","tarjetaIdentidad","documentos","actionAsignarIp","ip","actionAgregarUsuario","usuario","usuarioARegistrar","actionAsignarActividad","actividad","actionSuspenderActivarUsuario","actualizados","actionCargarInformacionDeUsuario","informacionUsuario","actionConsultarModulos","actionEliminarActividades","actividades","actionConsultarActividadesSinAsignar","codigoModulo","actionEditarUsuario","payload","actualizarMensajeCerrar","actualizarMensajeInicio","actualizarMensajeEditar","actualizarMensajeRecuperarContrasena","actualizarMensajeLogin","actualizarMensajeRegistrar","actualizarMensajeSuspender","asignarNombreUsuario","actualizarMensajeAsignar","actualizarMensajeCambiarContrasena","actionAsignarCedula","actionAsignarActividades","actionActualizarUsuarios","usuarios"],"mappings":"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","sourcesContent":["import axios from 'axios';\r\nimport { encriptar, desencriptar } from '../componentes/general/Encriptar.js';\r\nimport {URL_BASE} from '../utilitario/Configuracion.js';\r\nimport {\r\n    mensajesDeErrorModulosAcceso,\r\n    mensajesDeErrorRegistroUsuarios,\r\n    mensajesDeErrorListarUsuarios,\r\n    mensajesDeErrorCambiarEstadoUsuario,\r\n    mensajesDeErrorCargarInformacion,\r\n    mensajesDeErrorEditarUsuario,\r\n    mensajesDeErrorConsultarModulosUsuario,\r\n    mensajesDeErrorConsultarActividadesUsuario,\r\n    mensajesDeErrorAsignarActividad,\r\n    mensajesDeErrorConsultarCorreo,\r\n    mensajesDeErrorGenerarToken,\r\n    mensajesDeErrorCambiarContrasena,\r\n    mensajesDeValidarToken,\r\n    mensajesDeCambiarContrasenaExterna\r\n} from '../mensajesDeError/MensajesDeErrorUsuario.js';\r\n\r\nexport const ACTIVIDADES_SIN_ASIGNAR = 'ACTIVIDADES_SIN_ASIGNAR';\r\nexport const ACTUALIZAR_USUARIOS = 'ACTUALIZAR_USUARIOS';\r\nexport const AGREGAR_ACTIVIDAD = 'AGREGAR_ACTIVIDAD';\r\nexport const AGREGAR_USUARIO = 'AGREGAR_USUARIO';\r\nexport const ANADIR_CEDULA_EDITAR = \"ANADIR_CEDULA_EDITAR\";\r\nexport const EDITAR_USUARIO = \"EDITAR_USUARIO\";\r\nexport const EMAIL_USUARIO = 'EMAIL_USUARIO';\r\nexport const ESTADO_ASIGNAR = 'ESTADO_ASIGNAR';\r\nexport const ESTADO_USUARIOS = 'ESTADO_USUARIOS';\r\nexport const INFORMACION_USUARIO = 'INFORMACION_USUARIO';\r\nexport const MENSAJE_ASIGNAR = 'MENSAJE_ASIGNAR';\r\nexport const MENSAJE_CERRAR_SESION = 'MENSAJE_CERRAR_SESION';\r\nexport const MENSAJE_CONTRASENA = 'MENSAJE_CONTRASENA';\r\nexport const MENSAJE_EDITAR = 'MENSAJE_EDITAR';\r\nexport const MENSAJE_INICIO = 'MENSAJE_INICIO';\r\nexport const MENSAJE_LOGIN = 'MENSAJE_LOGIN';\r\nexport const MENSAJE_REGISTRAR = 'MENSAJE_REGISTRAR';\r\nexport const MENSAJE_SUSPENDER = 'MENSAJE_SUSPENDER';\r\nexport const MENSAJE_CONTRASENA_EXTERNA = 'MENSAJE_CONTRASENA_EXTERNA';\r\nexport const MODULOS_ACCESO = 'MODULOS_ACCESO';\r\nexport const MODULOS_REGISTRADOS = 'MODULOS_REGISTRADOS';\r\nexport const MOSTRAR_ACTIVIDADES_USUARIO = 'MOSTRAR_ACTIVIDADES_USUARIO';\r\nexport const MOSTRAR_DOCUMENTOS = 'MOSTRAR_DOCUMENTOS';\r\nexport const MOSTRAR_USUARIOS = 'MOSTRAR_USUARIOS';\r\nexport const NOMBRE_USUARIO = 'NOMBRE_USUARIO';\r\nexport const REDIRECCIONAR_LOGIN = 'REDIRECCIONAR_LOGIN';\r\n\r\nconst PERMISO_REGISTRAR = 'SA_Registrar usuarios';\r\nconst PERMISO_CONSULTAR_USUARIOS = 'SA_Consultar usuarios registrados';\r\nconst PERMISO_EDITAR_USUARIOS = 'SA_Editar informacion de los usuarios';\r\nconst PERMISO_ASIGNACION_ACTIVIDADES = 'SA_Asignacion de actividades a los usuarios';\r\nconst PERMISO_SUSPENDER_ACTIVAR = 'SA_Suspender/activar usuarios';\r\nconst PERMISO_CAMBIAR_CONTRASENA = 'SA_Cambiar contrasena';\r\n\r\nexport function actionLoginUsuario(correo, contrasena, cambiar) {\r\n    var crypto = require('crypto');\r\n    var contrasenaEncryp = crypto.createHmac('sha256', correo).update(contrasena).digest('hex');\r\n    cambiar(true);\r\n    return (dispatch, getState) => {\r\n        axios.get(`${URL_BASE}/proyectosESCOM-web/api/login/${correo}/${contrasenaEncryp}`)\r\n            .then(response => {\r\n                if (response.status === 200) {\r\n                    var token = encriptar(response.data.token);\r\n                    localStorage.setItem('Token', token);\r\n                    dispatch({\r\n                        type: MENSAJE_LOGIN,\r\n                        mensaje: 'Login correcto'\r\n                    });\r\n                    var nombre = response.data.nombre + ' ' + response.data.apellido;\r\n                    localStorage.setItem('Nombre', nombre);\r\n                    dispatch({\r\n                        type: NOMBRE_USUARIO,\r\n                        nombre: nombre\r\n                    });\r\n                }\r\n            }).catch((error) => {\r\n                if (error.request.response === '') {\r\n                    dispatch({\r\n                        type: MENSAJE_LOGIN,\r\n                        mensaje: 'Servidor fuera de servicio temporalmente'\r\n                    });\r\n                    cambiar(false);\r\n                } else {\r\n                    if (error.request) {\r\n                        var o = JSON.parse(error.request.response);\r\n                        cambiar(false);\r\n                        dispatch({\r\n                            type: MENSAJE_LOGIN,\r\n                            mensaje: o.respuesta\r\n                        });\r\n                    }\r\n                }\r\n            })\r\n    };\r\n}\r\n\r\nexport function actionRecuperarContrasena(correo, cambiar) {\r\n    cambiar(true);\r\n    return (dispatch, getState) => {\r\n        axios.post(`${URL_BASE}/proyectosESCOM-web/api/login/recuperarContrasena/${correo}`)\r\n            .then(response => {\r\n                cambiar(false);\r\n                dispatch({\r\n                    type: MENSAJE_LOGIN,\r\n                    mensaje: 'Se enviaron las instrucciones para recuperar la contraseña a su correo'\r\n                });\r\n            }).catch((error) => {\r\n                if (error.request.response === '') {\r\n                    dispatch({\r\n                        type: MENSAJE_LOGIN,\r\n                        mensaje: 'Servidor fuera de servicio temporalmente'\r\n                    });\r\n                    cambiar(false);\r\n                } else {\r\n                    if (error.request) {\r\n                        var o = JSON.parse(error.request.response);\r\n                        let respuesta = mensajesDeErrorGenerarToken(o.respuesta);\r\n                        cambiar(false);\r\n                        dispatch({\r\n                            type: MENSAJE_LOGIN,\r\n                            mensaje: respuesta\r\n                        });\r\n                    }\r\n                }\r\n            })\r\n    };\r\n}\r\n\r\n\r\nexport function actionValidarToken(token) {\r\n    return (dispatch, getState) => {\r\n        axios.get(`${URL_BASE}/proyectosESCOM-web/api/login/validarTokenRecuperarContrasena/${token}`)\r\n            .then(response => {\r\n                dispatch({\r\n                    type: MENSAJE_CONTRASENA_EXTERNA,\r\n                    mensaje: 'Correcto'\r\n                });\r\n                dispatch({\r\n                    type: NOMBRE_USUARIO,\r\n                    nombre: response.data\r\n                });\r\n            }).catch((error) => {\r\n                if (error.request.response === '') {\r\n                    dispatch({\r\n                        type: MENSAJE_CONTRASENA_EXTERNA,\r\n                        mensaje: 'Servidor fuera de servicio temporalmente'\r\n                    });\r\n                } else {\r\n                    if (error.request) {\r\n                        var o = JSON.parse(error.request.response);\r\n                        let respuesta = mensajesDeValidarToken(o.respuesta);\r\n                        dispatch({\r\n                            type: MENSAJE_CONTRASENA_EXTERNA,\r\n                            mensaje: respuesta\r\n                        });\r\n                    }\r\n                }\r\n            })\r\n    };\r\n}\r\n\r\nexport function actionCambiarContrasenaExterna(correo, contrasena, token) {\r\n    var crypto = require('crypto');\r\n    var contrasenaEncryp = crypto.createHmac('sha256', correo).update(contrasena).digest('hex');\r\n    let datosSolicitud = {\r\n        'ip': localStorage.getItem('Ip'),\r\n        'token': token,\r\n        'operacion': PERMISO_CAMBIAR_CONTRASENA\r\n    };\r\n    return (dispatch, getState) => {\r\n        axios.put(`${URL_BASE}/proyectosESCOM-web/api/login/cambiarClaveExterna/${contrasenaEncryp}/${token}`,datosSolicitud)\r\n            .then(response => {\r\n                dispatch({\r\n                    type: MENSAJE_CONTRASENA_EXTERNA,\r\n                    mensaje: 'Contraseña actualizada'\r\n                });\r\n            }).catch((error) => {\r\n                if (error.request.response === '') {\r\n                    dispatch({\r\n                        type: MENSAJE_CONTRASENA_EXTERNA,\r\n                        mensaje: 'Servidor fuera de servicio temporalmente'\r\n                    });\r\n                } else {\r\n                    if (error.request) {\r\n                        var o = JSON.parse(error.request.response);\r\n                        let respuesta = mensajesDeCambiarContrasenaExterna(o.respuesta);\r\n                        dispatch({\r\n                            type: MENSAJE_CONTRASENA_EXTERNA,\r\n                            mensaje: respuesta\r\n                        });\r\n                    }\r\n                }\r\n            })\r\n    };\r\n}\r\n\r\nexport function actionCerrarSesion(token) {\r\n    const headers = {\r\n        'Content-Type': 'application/json',\r\n        'TokenAuto': desencriptar(token)\r\n    }\r\n    return (dispatch, getState) => {\r\n        axios.delete(`${URL_BASE}/proyectosESCOM-web/api/login/cerrarSesion/${desencriptar(token)}`, { headers: headers })\r\n            .then(response => {\r\n                dispatch({\r\n                    type: MENSAJE_CERRAR_SESION,\r\n                    mensaje: 'cerrada'\r\n                });\r\n            }).catch(function (error) {\r\n                dispatch({\r\n                    type: MENSAJE_CERRAR_SESION,\r\n                    mensaje: 'cerrada'\r\n                });\r\n            });\r\n    }\r\n}\r\n\r\nexport function actionCerrarSesionInicio(token) {\r\n    const headers = {\r\n        'Content-Type': 'application/json',\r\n        'TokenAuto': desencriptar(token)\r\n    }\r\n    return (dispatch, getState) => {\r\n        axios.delete(`${URL_BASE}/proyectosESCOM-web/api/login/cerrarSesion/${desencriptar(token)}`, { headers: headers })\r\n            .then(response => {\r\n                dispatch({\r\n                    type: MENSAJE_INICIO,\r\n                    mensaje: 'sesion cerrada'\r\n                });\r\n            }).catch(function (error) {\r\n                if (error.request.response === '') {\r\n                    dispatch({\r\n                        type: MENSAJE_INICIO,\r\n                        mensaje: 'sesion cerrada'\r\n                    });\r\n                } else {\r\n                    dispatch({\r\n                        type: MENSAJE_INICIO,\r\n                        mensaje: 'sesion cerrada'\r\n                    });\r\n                }\r\n            });\r\n    }\r\n}\r\n\r\n\r\n\r\nexport function actionConsultarCorreo(token) {\r\n    const headers = {\r\n        'Content-Type': 'application/json',\r\n        'TokenAuto': desencriptar(token)\r\n    }\r\n    return (dispatch, getState) => {\r\n        axios.get(`${URL_BASE}/proyectosESCOM-web/api/usuarios/devolverCorreo/${desencriptar(token)}`, { headers: headers })\r\n            .then(response => {\r\n                dispatch({\r\n                    type: EMAIL_USUARIO,\r\n                    email: response.data\r\n                });\r\n            }).catch((error) => {\r\n                if (error.request.response === '') {\r\n                    dispatch({\r\n                        type: MENSAJE_CONTRASENA,\r\n                        mensaje: 'Servidor fuera de servicio temporalmente'\r\n                    });\r\n                } else {\r\n                    if (error.request) {\r\n                        var o = JSON.parse(error.request.response);\r\n                        let respuesta = mensajesDeErrorConsultarCorreo(o.respuesta);\r\n                        dispatch({\r\n                            type: MENSAJE_CONTRASENA,\r\n                            mensaje: respuesta\r\n                        });\r\n                    }\r\n                }\r\n            });\r\n    };\r\n}\r\n\r\nexport function actionConsultarUsuarios(token) {\r\n    const headers = {\r\n        'Content-Type': 'application/json',\r\n        'TokenAuto': desencriptar(token),\r\n        'Permiso': PERMISO_CONSULTAR_USUARIOS\r\n    }\r\n    return (dispatch, getState) => {\r\n        axios.get(`${URL_BASE}/proyectosESCOM-web/api/usuarios/listar/${desencriptar(token)}`, { headers: headers })\r\n            .then(response => {\r\n                dispatch({\r\n                    type: MOSTRAR_USUARIOS,\r\n                    respuesta: response.data\r\n                });\r\n            }).catch((error) => {\r\n                if (error.request.response === '') {\r\n                    dispatch({\r\n                        type: MENSAJE_SUSPENDER,\r\n                        mensaje: 'Servidor fuera de servicio temporalmente'\r\n                    });\r\n                } else {\r\n                    if (error.request) {\r\n                        var o = JSON.parse(error.request.response);\r\n                        let respuesta = mensajesDeErrorListarUsuarios(o.respuesta);\r\n                        if (respuesta === 'Sin permiso') {\r\n                            dispatch({\r\n                                type: ESTADO_USUARIOS,\r\n                                estado: true\r\n                            });\r\n                        } else {\r\n                            dispatch({\r\n                                type: MENSAJE_SUSPENDER,\r\n                                mensaje: respuesta\r\n                            });\r\n                        }\r\n                    }\r\n                }\r\n            });\r\n    };\r\n}\r\n\r\nexport function actionCambiarContrasena(clave, correo, token) {\r\n    var crypto = require('crypto');\r\n    let claveObj = {\r\n        'nuevaClave': crypto.createHmac('sha256', correo).update(clave.nuevaClave).digest('hex'),\r\n        'antiguaClave': crypto.createHmac('sha256', correo).update(clave.antiguaClave).digest('hex'),\r\n        'token': desencriptar(token)\r\n    }\r\n    const headers = {\r\n        'Content-Type': 'application/json',\r\n        'TokenAuto': desencriptar(token)\r\n    }\r\n    claveObj.datosSolicitud = {\r\n        'ip': localStorage.getItem('Ip'),\r\n        'token': desencriptar(token),\r\n        'operacion': PERMISO_CAMBIAR_CONTRASENA\r\n    };\r\n    return (dispatch, getState) => {\r\n        axios.post(`${URL_BASE}/proyectosESCOM-web/api/usuarios/cambiarClaveInterna`, claveObj, { headers: headers })\r\n            .then(response => {\r\n                dispatch({\r\n                    type: MENSAJE_CONTRASENA,\r\n                    mensaje: 'Contraseña cambiada'\r\n                });\r\n            }).catch((error) => {\r\n                if (error.request.response === '') {\r\n                    dispatch({\r\n                        type: MENSAJE_CONTRASENA,\r\n                        mensaje: 'Servidor fuera de servicio temporalmente'\r\n                    });\r\n                } else {\r\n                    if (error.request) {\r\n                        var o = JSON.parse(error.request.response);\r\n                        let respuesta = mensajesDeErrorCambiarContrasena(o.respuesta);\r\n                        if (respuesta !== '') {\r\n                            dispatch({\r\n                                type: MENSAJE_CONTRASENA,\r\n                                mensaje: respuesta\r\n                            });\r\n                        }\r\n                    }\r\n                }\r\n\r\n            });\r\n    }\r\n}\r\n\r\nexport function actionConsultarModulosAcceso(token) {\r\n    const headers = {\r\n        'Content-Type': 'application/json',\r\n        'TokenAuto': desencriptar(token)\r\n    }\r\n    return (dispatch, getState) => {\r\n        axios.get(`${URL_BASE}/proyectosESCOM-web/api/usuarios/redireccion/${desencriptar(token)}`, { headers: headers })\r\n            .then(response => {\r\n                dispatch({\r\n                    type: MODULOS_ACCESO,\r\n                    respuesta: response.data\r\n                });\r\n            }).catch((error) => {\r\n                if (error.request.response === '') {\r\n                    dispatch({\r\n                        type: MENSAJE_INICIO,\r\n                        mensaje: 'Servidor fuera de servicio temporalmente'\r\n                    });\r\n                } else {\r\n                    if (error.request) {\r\n                        var o = JSON.parse(error.request.response);\r\n                        let respuesta = mensajesDeErrorModulosAcceso(o.respuesta);\r\n                        if (respuesta !== '') {\r\n                            dispatch({\r\n                                type: MENSAJE_INICIO,\r\n                                mensaje: respuesta\r\n                            });\r\n                        }\r\n                    }\r\n                }\r\n            });\r\n    };\r\n}\r\n\r\nexport function actionConsultarActividadesUsuario(numeroDocumento, token) {\r\n    const headers = {\r\n        'Content-Type': 'application/json',\r\n        'TokenAuto': desencriptar(token),\r\n        'Permiso': PERMISO_ASIGNACION_ACTIVIDADES\r\n    }\r\n    return (dispatch, getState) => {\r\n        axios.get(`${URL_BASE}/proyectosESCOM-web/api/usuarios/listarActividades/${numeroDocumento}`, { headers: headers })\r\n            .then(response => {\r\n                dispatch({\r\n                    type: MOSTRAR_ACTIVIDADES_USUARIO,\r\n                    respuesta: response.data\r\n                });\r\n            }).catch((error) => {\r\n                if (error.request.response === '') {\r\n                    dispatch({\r\n                        type: MENSAJE_ASIGNAR,\r\n                        mensaje: 'Servidor fuera de servicio temporalmente'\r\n                    });\r\n                } else {\r\n                    if (error.request) {\r\n                        var o = JSON.parse(error.request.response);\r\n                        let respuesta = mensajesDeErrorConsultarActividadesUsuario(o.respuesta);\r\n                        if (respuesta !== '') {\r\n                            dispatch({\r\n                                type: MENSAJE_ASIGNAR,\r\n                                mensaje: respuesta\r\n                            });\r\n                        }\r\n                    }\r\n                }\r\n            });\r\n    };\r\n}\r\n\r\nexport function actionConsultarDocumentos(token) {\r\n    const headers = {\r\n        'Content-Type': 'application/json',\r\n        'TokenAuto': desencriptar(token),\r\n        'Permiso': PERMISO_CONSULTAR_USUARIOS\r\n    }\r\n    return (dispatch, getState) => {\r\n        axios.get(`${URL_BASE}/proyectosESCOM-web/api/usuarios/tipoDocumento`, { headers: headers })\r\n            .then(response => {\r\n                dispatch({\r\n                    type: MOSTRAR_DOCUMENTOS,\r\n                    respuesta: response.data\r\n                });\r\n            }).catch((error) => {\r\n                if (error.request.response === '') {\r\n                    dispatch({\r\n                        type: MENSAJE_REGISTRAR,\r\n                        mensaje: 'Servidor fuera de servicio temporalmente'\r\n                    });\r\n                } else {\r\n                    let cedula = {\r\n                        'idTipoDocumento': '1',\r\n                        'tipoDocumento': 'Cedula'\r\n                    }\r\n                    let tarjetaIdentidad = {\r\n                        'idTipoDocumento': '2',\r\n                        'tipoDocumento': 'Tarjeta de identidad'\r\n                    }\r\n                    var documentos = [cedula, tarjetaIdentidad];\r\n                    if (error.request) {\r\n                        dispatch({\r\n                            type: MOSTRAR_DOCUMENTOS,\r\n                            respuesta: documentos\r\n                        });\r\n                    }\r\n                }\r\n            });\r\n    };\r\n}\r\n\r\nexport function actionAsignarIp() {\r\n    return (dispatch, getState) => {\r\n        axios.get(\"https://api.ipify.org/?format=json\")\r\n            .then(response => {\r\n                localStorage.setItem('Ip', response.data.ip)\r\n            }).catch((error) => {\r\n                if (error.request.response === '') {\r\n                    localStorage.setItem('Ip', '999.999.999');\r\n                }\r\n            });\r\n    };\r\n}\r\n\r\nexport function actionAgregarUsuario(usuario, token) {\r\n    const headers = {\r\n        'Content-Type': 'application/json; charset=UTF-8',\r\n        'TokenAuto': desencriptar(token),\r\n        'Permiso': PERMISO_REGISTRAR\r\n    }\r\n    usuario.datosSolicitud = {\r\n        'ip': localStorage.getItem('Ip'),\r\n        'token': desencriptar(token),\r\n        'operacion': PERMISO_REGISTRAR\r\n    };\r\n    return (dispatch, getState) => {\r\n        axios.post(`${URL_BASE}/proyectosESCOM-web/api/usuarios/registrar`, usuario, { headers: headers })\r\n            .then(response => {\r\n                dispatch({\r\n                    type: AGREGAR_USUARIO,\r\n                    usuarioARegistrar: usuario\r\n                });\r\n                dispatch({\r\n                    type: MENSAJE_REGISTRAR,\r\n                    mensaje: 'Usuario registrado'\r\n                });\r\n            }).catch((error) => {\r\n                if (error.request.response === '') {\r\n                    dispatch({\r\n                        type: MENSAJE_REGISTRAR,\r\n                        mensaje: 'Servidor fuera de servicio temporalmente'\r\n                    });\r\n                } else {\r\n                    if (error.request) {\r\n                        var o = JSON.parse(error.request.response);\r\n                        let respuesta = mensajesDeErrorRegistroUsuarios(o.respuesta);\r\n                        if (respuesta !== '') {\r\n                            dispatch({\r\n                                type: MENSAJE_REGISTRAR,\r\n                                mensaje: respuesta\r\n                            });\r\n                        }\r\n                    }\r\n                }\r\n\r\n            });\r\n\r\n    }\r\n}\r\n\r\nexport function actionAsignarActividad(token, numeroDocumento, actividad) {\r\n    const headers = {\r\n        'Content-Type': 'application/json',\r\n        'TokenAuto': desencriptar(token),\r\n        'Permiso': PERMISO_ASIGNACION_ACTIVIDADES\r\n    }\r\n    actividad.datosSolicitud = {\r\n        'ip': localStorage.getItem('Ip'),\r\n        'token': desencriptar(token),\r\n        'operacion': PERMISO_ASIGNACION_ACTIVIDADES\r\n    }\r\n    return (dispatch, getState) => {\r\n        axios.post(`${URL_BASE}/proyectosESCOM-web/api/usuarios/asignarActividad/${numeroDocumento}`, actividad, { headers: headers })\r\n            .then(response => {\r\n                dispatch({\r\n                    type: MENSAJE_ASIGNAR,\r\n                    mensaje: 'Actividad asignada'\r\n                });\r\n            }).catch((error) => {\r\n                if (error.request.response === '') {\r\n                    dispatch({\r\n                        type: MENSAJE_ASIGNAR,\r\n                        mensaje: 'Servidor fuera de servicio temporalmente'\r\n                    });\r\n                } else {\r\n                    if (error.request) {\r\n                        var o = JSON.parse(error.request.response);\r\n                        let respuesta = mensajesDeErrorAsignarActividad(o.respuesta);\r\n                        if (respuesta !== '') {\r\n                            dispatch({\r\n                                type: MENSAJE_ASIGNAR,\r\n                                mensaje: respuesta\r\n                            });\r\n                        }\r\n                    }\r\n                }\r\n\r\n            });\r\n    }\r\n}\r\n\r\nexport function actionSuspenderActivarUsuario(cedula, token, actualizados) {\r\n    const headers = {\r\n        'Content-Type': 'application/json',\r\n        'TokenAuto': desencriptar(token),\r\n        'Permiso': PERMISO_SUSPENDER_ACTIVAR\r\n    }\r\n    let datosSolicitud = {\r\n        'ip': localStorage.getItem('Ip'),\r\n        'token': desencriptar(token),\r\n        'operacion': PERMISO_SUSPENDER_ACTIVAR\r\n    };\r\n    return (dispatch, getState) => {\r\n        axios.put(`${URL_BASE}/proyectosESCOM-web/api/usuarios/cambiarEstado/${cedula}`, datosSolicitud, { headers: headers })\r\n            .then(response => {\r\n                dispatch({\r\n                    type: MENSAJE_SUSPENDER,\r\n                    mensaje: 'Operacion hecha con exito'\r\n                });\r\n                dispatch({\r\n                    type: ACTUALIZAR_USUARIOS,\r\n                    usuario: actualizados\r\n                });\r\n\r\n            }).catch((error) => {\r\n                if (error.request.response === '') {\r\n                    dispatch({\r\n                        type: MENSAJE_SUSPENDER,\r\n                        mensaje: 'Servidor fuera de servicio temporalmente'\r\n                    });\r\n                } else {\r\n                    if (error.request) {\r\n                        var o = JSON.parse(error.request.response);\r\n                        let respuesta = mensajesDeErrorCambiarEstadoUsuario(o.respuesta);\r\n                        if (respuesta !== '') {\r\n                            dispatch({\r\n                                type: MENSAJE_SUSPENDER,\r\n                                mensaje: respuesta\r\n                            });\r\n                        }\r\n                    }\r\n                }\r\n\r\n            });\r\n\r\n    }\r\n}\r\n\r\nexport function actionCargarInformacionDeUsuario(cedula, token) {\r\n    const headers = {\r\n        'Content-Type': 'application/json',\r\n        'TokenAuto': desencriptar(token),\r\n        'Permiso': PERMISO_EDITAR_USUARIOS\r\n    }\r\n    return (dispatch, getState) => {\r\n        axios.get(`${URL_BASE}/proyectosESCOM-web/api/usuarios/datos/${cedula}`, { headers: headers })\r\n            .then(response => {\r\n                dispatch({\r\n                    type: INFORMACION_USUARIO,\r\n                    informacionUsuario: response.data\r\n                });\r\n            }).catch((error) => {\r\n                if (error.request.response === '') {\r\n                    dispatch({\r\n                        type: MENSAJE_EDITAR,\r\n                        mensaje: 'Servidor fuera de servicio temporalmente'\r\n                    });\r\n                } else {\r\n                    if (error.request) {\r\n                        var o = JSON.parse(error.request.response);\r\n                        let respuesta = mensajesDeErrorCargarInformacion(o.respuesta);\r\n                        if (respuesta !== '') {\r\n                            dispatch({\r\n                                type: MENSAJE_EDITAR,\r\n                                mensaje: respuesta\r\n                            });\r\n                        }\r\n                    }\r\n                }\r\n            });\r\n    };\r\n}\r\n\r\nexport function actionConsultarModulos(token) {\r\n\r\n    const headers = {\r\n        'Content-Type': 'application/json',\r\n        'TokenAuto': desencriptar(token),\r\n        'Permiso': PERMISO_ASIGNACION_ACTIVIDADES\r\n    }\r\n    return (dispatch, getState) => {\r\n        axios.get(`${URL_BASE}/proyectosESCOM-web/api/modulos/listar`, { headers: headers })\r\n            .then(response => {\r\n                dispatch({\r\n                    type: MODULOS_REGISTRADOS,\r\n                    respuesta: response.data\r\n                });\r\n\r\n            }).catch((error) => {\r\n                if (error.request.response === '') {\r\n                    dispatch({\r\n                        type: MENSAJE_ASIGNAR,\r\n                        mensaje: 'Servidor fuera de servicio temporalmente'\r\n                    });\r\n                } else {\r\n                    if (error.request) {\r\n                        var o = JSON.parse(error.request.response);\r\n                        let respuesta = mensajesDeErrorConsultarModulosUsuario(o.respuesta);\r\n                        if (respuesta === 'Sin permiso') {\r\n                            dispatch({\r\n                                type: ESTADO_ASIGNAR,\r\n                                estado: true\r\n                            });\r\n                        } else {\r\n                            dispatch({\r\n                                type: MENSAJE_ASIGNAR,\r\n                                mensaje: respuesta\r\n                            });\r\n                        }\r\n                    }\r\n                }\r\n            });\r\n    };\r\n}\r\n\r\n\r\n\r\nexport function actionEliminarActividades(actividades, token, numeroDocumento) {\r\n    const headers = {\r\n        'Content-Type': 'application/json',\r\n        'TokenAuto': desencriptar(token),\r\n        'Permiso': PERMISO_ASIGNACION_ACTIVIDADES\r\n    }\r\n    actividades[0].datosSolicitud = {\r\n        'ip': localStorage.getItem('Ip'),\r\n        'token': desencriptar(token),\r\n        'operacion': PERMISO_ASIGNACION_ACTIVIDADES\r\n    }\r\n    return (dispatch, getState) => {\r\n        axios.put(`${URL_BASE}/proyectosESCOM-web/api/usuarios/eliminarActividad/${numeroDocumento}`, actividades, { headers: headers })\r\n            .then(response => {\r\n                dispatch({\r\n                    type: MENSAJE_ASIGNAR,\r\n                    mensaje: 'Actividades eliminadas'\r\n                });\r\n            }).catch((error) => {\r\n                try{if (error.request.response === '') {\r\n                    dispatch({\r\n                        type: MENSAJE_ASIGNAR,\r\n                        mensaje: 'Servidor fuera de servicio temporalmente'\r\n                    });\r\n                } else {\r\n                    if (error.request) {\r\n                        var o = JSON.parse(error.request.response);\r\n                        let respuesta = mensajesDeErrorConsultarActividadesUsuario(o.respuesta);\r\n                        if (respuesta !== '') {\r\n                            dispatch({\r\n                                type: MENSAJE_ASIGNAR,\r\n                                mensaje: respuesta\r\n                            });\r\n                        }\r\n                    }\r\n                }}catch(error){\r\n                    dispatch({\r\n                        type: MENSAJE_ASIGNAR,\r\n                        mensaje: 'Ocurrio un error en el servidor'\r\n                    });\r\n                }\r\n\r\n            });\r\n\r\n    }\r\n}\r\n\r\nexport function actionConsultarActividadesSinAsignar(token, numeroDocumento, codigoModulo) {\r\n    const headers = {\r\n        'Content-Type': 'application/json',\r\n        'TokenAuto': desencriptar(token),\r\n        'Permiso': PERMISO_ASIGNACION_ACTIVIDADES\r\n    }\r\n    return (dispatch, getState) => {\r\n        axios.get(`${URL_BASE}/proyectosESCOM-web/api/usuarios/listarActividadesNoAsociadas/${numeroDocumento}/${codigoModulo}`, { headers: headers })\r\n            .then(response => {\r\n                dispatch({\r\n                    type: ACTIVIDADES_SIN_ASIGNAR,\r\n                    respuesta: response.data\r\n                });\r\n\r\n            }).catch((error) => {\r\n                if (error.request.response === '') {\r\n                    dispatch({\r\n                        type: MENSAJE_ASIGNAR,\r\n                        mensaje: 'Servidor fuera de servicio temporalmente'\r\n                    });\r\n                } else {\r\n                    if (error.request) {\r\n                        var o = JSON.parse(error.request.response);\r\n                        let respuesta = mensajesDeErrorConsultarActividadesUsuario(o.respuesta);\r\n                        if (respuesta === 'Sin permiso') {\r\n                            dispatch({\r\n                                type: ESTADO_ASIGNAR,\r\n                                estado: true\r\n                            });\r\n                        } else {\r\n                            dispatch({\r\n                                type: MENSAJE_ASIGNAR,\r\n                                mensaje: respuesta\r\n                            });\r\n                        }\r\n                    }\r\n                }\r\n            });\r\n    };\r\n}\r\n\r\n\r\nexport function actionEditarUsuario(usuario, cedula, token) {\r\n    const headers = {\r\n        'Content-Type': 'application/json; charset=UTF-8',\r\n        'TokenAuto': desencriptar(token),\r\n        'Permiso': PERMISO_EDITAR_USUARIOS\r\n    }\r\n    usuario.datosSolicitud = {\r\n        'ip': localStorage.getItem('Ip'),\r\n        'token': desencriptar(token),\r\n        'operacion': PERMISO_EDITAR_USUARIOS\r\n    };\r\n    return (dispatch, getState) => {\r\n        axios.put(`${URL_BASE}/proyectosESCOM-web/api/usuarios/editar/${cedula}`, usuario, { headers: headers })\r\n            .then(response => {\r\n                dispatch({\r\n                    type: EDITAR_USUARIO,\r\n                    payload: usuario\r\n                });\r\n                dispatch({\r\n                    type: MENSAJE_EDITAR,\r\n                    mensaje: 'Modificado'\r\n                });\r\n            }).catch((error) => {\r\n                if (error.request.response === '') {\r\n                    dispatch({\r\n                        type: MENSAJE_EDITAR,\r\n                        mensaje: 'Servidor fuera de servicio temporalmente'\r\n                    });\r\n                } else {\r\n                    if (error.request) {\r\n                        var o = JSON.parse(error.request.response);\r\n                        let respuesta = mensajesDeErrorEditarUsuario(o.respuesta);\r\n                        if (respuesta !== '') {\r\n                            dispatch({\r\n                                type: EDITAR_USUARIO,\r\n                                payload: usuario\r\n                            });\r\n                            dispatch({\r\n                                type: MENSAJE_EDITAR,\r\n                                mensaje: respuesta\r\n                            });\r\n                        }\r\n                    }\r\n                }\r\n\r\n            });\r\n    }\r\n}\r\n\r\nexport function actualizarMensajeCerrar(mensaje) {\r\n    return (dispatch, getState) => {\r\n        dispatch({\r\n            type: MENSAJE_CERRAR_SESION,\r\n            mensaje: mensaje\r\n        });\r\n    };\r\n}\r\n\r\nexport function actualizarMensajeInicio(mensaje) {\r\n    return (dispatch, getState) => {\r\n        dispatch({\r\n            type: MENSAJE_INICIO,\r\n            mensaje: mensaje\r\n        });\r\n    };\r\n}\r\n\r\nexport function actualizarMensajeEditar(mensaje) {\r\n    return (dispatch, getState) => {\r\n        dispatch({\r\n            type: MENSAJE_EDITAR,\r\n            mensaje: mensaje\r\n        });\r\n    };\r\n}\r\n\r\nexport function actualizarMensajeRecuperarContrasena(mensaje) {\r\n    return (dispatch, getState) => {\r\n        dispatch({\r\n            type: MENSAJE_CONTRASENA_EXTERNA,\r\n            mensaje: mensaje\r\n        });\r\n    };\r\n}\r\n\r\nexport function actualizarMensajeLogin(mensaje) {\r\n    return (dispatch, getState) => {\r\n        dispatch({\r\n            type: MENSAJE_LOGIN,\r\n            mensaje: mensaje\r\n        });\r\n    };\r\n}\r\n\r\nexport function actualizarMensajeRegistrar(mensaje) {\r\n    return (dispatch, getState) => {\r\n        dispatch({\r\n            type: MENSAJE_REGISTRAR,\r\n            mensaje: mensaje\r\n        });\r\n    };\r\n}\r\n\r\nexport function actualizarMensajeSuspender(mensaje) {\r\n    return (dispatch, getState) => {\r\n        dispatch({\r\n            type: MENSAJE_SUSPENDER,\r\n            mensaje: mensaje\r\n        });\r\n    };\r\n}\r\n\r\n\r\nexport function asignarNombreUsuario(nombre) {\r\n    return (dispatch, getState) => {\r\n        dispatch({\r\n            type: NOMBRE_USUARIO,\r\n            nombre: nombre\r\n        });\r\n    };\r\n}\r\n\r\nexport function actualizarMensajeAsignar(mensaje) {\r\n    return (dispatch, getState) => {\r\n        dispatch({\r\n            type: MENSAJE_ASIGNAR,\r\n            mensaje: mensaje\r\n        });\r\n    };\r\n}\r\n\r\nexport function actualizarMensajeCambiarContrasena(mensaje) {\r\n    return (dispatch, getState) => {\r\n        dispatch({\r\n            type: MENSAJE_CONTRASENA,\r\n            mensaje: mensaje\r\n        });\r\n    };\r\n}\r\n\r\nexport function actionAsignarCedula(cedula) {\r\n    return (dispatch, getState) => {\r\n        dispatch({\r\n            type: ANADIR_CEDULA_EDITAR,\r\n            cedula: cedula\r\n        });\r\n    }\r\n}\r\n\r\nexport function actionAsignarActividades() {\r\n    return (dispatch, getState) => {\r\n        dispatch({\r\n            type: ACTIVIDADES_SIN_ASIGNAR,\r\n            respuesta: null\r\n        });\r\n    }\r\n}\r\n\r\n\r\nexport function actionActualizarUsuarios(usuarios) {\r\n    return (dispatch, getState) => {\r\n        dispatch({\r\n            type: ACTUALIZAR_USUARIOS,\r\n            usuario: usuarios\r\n        });\r\n    }\r\n}"]},"metadata":{},"sourceType":"module"}