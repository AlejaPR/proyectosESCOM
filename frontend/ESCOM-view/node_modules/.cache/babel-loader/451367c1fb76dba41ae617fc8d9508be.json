{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\jeiso\\\\Desktop\\\\proyectosESCOM\\\\frontend\\\\ESCOM-view\\\\src\\\\SuperAdministrador\\\\componentes\\\\editar\\\\editarModulo.js\";\nimport React from 'react'; //componentes\n\nimport Barra from '../general/BarraDirecciones';\nimport Button from '@material-ui/core/Button';\nimport { NotificationContainer, NotificationManager } from 'react-notifications';\nimport { withRouter } from 'react-router-dom';\nimport { campo } from '../../utilitario/GenerarInputs.js';\nimport PropTypes from \"prop-types\";\nimport { requerido, validacionCuarentaCaracteres, validacionDoscientosCaracteres } from '../../utilitario/validacionCampos.js';\nimport Alert from '@material-ui/lab/Alert';\nimport AlertTitle from '@material-ui/lab/AlertTitle';\nimport DoneOutlineIcon from '@material-ui/icons/DoneOutline'; //redux\n\nimport { actionCargarInformacionDeModulo, actionEditarModulo, actionConsultarActividadesModulo, actualizarMensajeEditar } from '../../actions/actionsModulo.js';\nimport { connect } from \"react-redux\";\nimport { reduxForm, Field } from 'redux-form';\n\nclass EditarModulo extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      habilitado: false,\n      actividadesSeleccionadas: []\n    };\n\n    this.validateImageWeight = imageFile => {\n      if (imageFile && imageFile.size) {\n        const imageFileKb = imageFile.size / 1024;\n        const pesoMaximo = this.props.pesoMaximo;\n\n        if (imageFileKb > pesoMaximo) {\n          return `El tamaÃ±o de la imagen debe ser menor o igual a ${pesoMaximo}kb`;\n        }\n      }\n    };\n\n    this.validateImageWidth = imageFile => {\n      if (imageFile) {\n        const anchuraMaxima = this.props.anchuraMaxima;\n\n        if (imageFile.width > anchuraMaxima) {\n          return `El ancho de la imagen debe ser menor o igual a ${anchuraMaxima}px`;\n        }\n      }\n    };\n\n    this.validateImageHeight = imageFile => {\n      if (imageFile) {\n        const alturaMaxima = this.props.alturaMaxima;\n\n        if (imageFile.height > alturaMaxima) {\n          return `La altura de la imagen debe ser menor o igual a ${alturaMaxima}px`;\n        }\n      }\n    };\n\n    this.validateImageFormat = imageFile => {\n      if (imageFile) {\n        const tipoDeImagen = this.props.tipoDeImagen;\n\n        if (!tipoDeImagen.includes(imageFile.type)) {\n          return `El tipo de imagen debe ser ${tipoDeImagen}`;\n        }\n      }\n    };\n\n    this.handlePreview = imageUrl => {\n      const previewImageDom = document.querySelector(\".preview-image\");\n      previewImageDom.src = imageUrl;\n    };\n\n    this.handleChange = (event, input) => {\n      event.preventDefault();\n      let imageFile = event.target.files[0];\n      const tipoDeImagen = this.props.tipoDeImagen;\n\n      if (imageFile) {\n        if (!tipoDeImagen.includes(imageFile.type)) {\n          NotificationManager.error('Seleccione un archivo de imagen .jpg o .png');\n          event.target.value = null;\n        } else {\n          const localImageUrl = URL.createObjectURL(imageFile);\n          const imageObject = new window.Image();\n\n          imageObject.onload = () => {\n            imageFile.width = imageObject.naturalWidth;\n            imageFile.height = imageObject.naturalHeight;\n            input.onChange(imageFile);\n            URL.revokeObjectURL(imageFile);\n          };\n\n          imageObject.src = localImageUrl;\n          this.handlePreview(localImageUrl);\n        }\n      }\n    };\n\n    this.renderFileInput = ({\n      input,\n      type,\n      meta\n    }) => {\n      const tipoDeImagen = this.props.tipoDeImagen;\n      const touched = meta.touched,\n            error = meta.error,\n            warning = meta.warning;\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 111\n        },\n        __self: this\n      }, React.createElement(\"input\", {\n        name: input.name,\n        type: type,\n        accept: tipoDeImagen,\n        onChange: event => this.handleChange(event, input),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 112\n        },\n        __self: this\n      }), touched && (error && React.createElement(\"span\", {\n        className: \"text-danger letra form-group\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 118\n        },\n        __self: this\n      }, error) || warning && React.createElement(\"span\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 118\n        },\n        __self: this\n      }, warning)));\n    };\n\n    this.handleSubmitForm = values => {\n      if (values.image === undefined | values.image === null) {\n        let modulo = {\n          nombreModulo: values.nombre,\n          descripcionModulo: values.descripcion,\n          imagenModulo: campo(this.props.initialValues.imagen),\n          estadoModulo: 'Activo'\n        };\n        this.props.actionEditarModulo(modulo, this.props.codigoModulo, localStorage.getItem('Token')); // this.props.actionAgregarModulo(modulo, localStorage.getItem('Token'));\n      } else {\n        this.getBase64(values.image, result => {\n          let modulo = {\n            nombreModulo: values.nombre,\n            descripcionModulo: values.descripcion,\n            imagenModulo: result,\n            estadoModulo: 'Activo'\n          };\n          this.props.actionEditarModulo(modulo, this.props.codigoModulo, localStorage.getItem('Token'));\n        });\n      }\n    };\n\n    this.onClickCancelar = event => {\n      event.preventDefault();\n      this.props.history.push('/adminModulo');\n    };\n  }\n\n  getBase64(file, cb) {\n    let reader = new FileReader();\n    reader.readAsDataURL(file);\n\n    reader.onload = function () {\n      cb(reader.result);\n    };\n\n    reader.onerror = function (error) {\n      console.log('Error: ', error);\n    };\n  }\n\n  componentDidUpdate() {\n    if (this.props.mensajeEditar === 'Sin permiso') {\n      if (!this.state.habilitado) {\n        this.setState({\n          habilitado: true\n        });\n      }\n\n      ; // this.props.history.push('/adminUsuario');\n    }\n\n    if (this.props.mensajeEditar === 'modulo editado') {\n      NotificationManager.success('Informacion actualizada correctamente');\n      this.props.actualizarMensajeEditar('');\n      this.props.history.push('/adminModulo');\n    }\n  }\n\n  componentDidMount() {\n    if (this.props.codigoModulo === undefined || this.props.codigoModulo.length === 0) {\n      this.props.history.push('/adminModulo');\n    } else {\n      this.props.actionCargarInformacionDeModulo(this.props.codigoModulo, localStorage.getItem('Token'));\n    }\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 189\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"text-left titulo\",\n      style: estiloLetrero,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 190\n      },\n      __self: this\n    }, React.createElement(\"h4\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 191\n      },\n      __self: this\n    }, \"Editar modulo\")), React.createElement(Barra, {\n      texto: \"Inicio > Editar modulo\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 193\n      },\n      __self: this\n    }), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 194\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      className: \"col-sm-12\",\n      style: {\n        paddingTop: \"0px\",\n        paddingRight: \"40px\",\n        paddingLeft: \"40px\",\n        paddingBottom: \"0px\",\n        margin: \"0px 0px 30px\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 195\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"container shadow\",\n      style: fondoBarraSuperior,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 204\n      },\n      __self: this\n    }, React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 205\n      },\n      __self: this\n    }), this.state.habilitado ? React.createElement(\"div\", {\n      className: \"col-sm-12\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 207\n      },\n      __self: this\n    }, React.createElement(Alert, {\n      severity: \"error\",\n      variant: \"outlined\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 208\n      },\n      __self: this\n    }, React.createElement(AlertTitle, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 209\n      },\n      __self: this\n    }, \"Sin permiso\"), \"No tiene permisos suficientes para editar la informacion de los modulos\"), React.createElement(\"div\", {\n      style: {\n        padding: \"25px 44px 25px 395px\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 212\n      },\n      __self: this\n    }, React.createElement(Button, {\n      style: {\n        background: this.props.configuracion.botones,\n        fontSize: \"14px\",\n        fontFamily: \"sans-serif\",\n        textTransform: \"none\"\n      },\n      className: \"btn btn-dark\",\n      variant: \"contained\",\n      onClick: this.onClickCancelar,\n      startIcon: React.createElement(DoneOutlineIcon, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 213\n        },\n        __self: this\n      }),\n      type: \"submit\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 213\n      },\n      __self: this\n    }, \"Aceptar\"), '')) : React.createElement(React.Fragment, null, React.createElement(\"div\", {\n      style: {\n        padding: \"30px 30px 30px 77px\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 217\n      },\n      __self: this\n    }, React.createElement(\"img\", {\n      src: campo(this.props.initialValues.imagen),\n      alt: \"preview\",\n      className: \"preview-image\",\n      style: {\n        height: \"200px\",\n        width: \"200px\",\n        borderRadius: \"50%\",\n        objectFit: \"cover\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 218\n      },\n      __self: this\n    })), React.createElement(\"table\", {\n      border: \"2px\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 222\n      },\n      __self: this\n    }, React.createElement(\"tr\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 223\n      },\n      __self: this\n    }, React.createElement(\"td\", {\n      colspan: \"2\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 224\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"row\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 225\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"col-sm-12\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 226\n      },\n      __self: this\n    }, React.createElement(\"label\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 227\n      },\n      __self: this\n    }, \"Nombre\"), React.createElement(Field, {\n      name: \"nombre\",\n      validate: [requerido, validacionCuarentaCaracteres],\n      component: generarInput,\n      label: \"Nombre\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 228\n      },\n      __self: this\n    })))), React.createElement(\"td\", {\n      colspan: \"2\",\n      rowspan: \"2\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 232\n      },\n      __self: this\n    }, React.createElement(\"label\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 233\n      },\n      __self: this\n    }, \"Imagen\"), React.createElement(Field, {\n      name: \"image\",\n      type: \"file\",\n      validate: [this.validateImageWeight, this.validateImageWidth, this.validateImageHeight, this.validateImageFormat],\n      component: this.renderFileInput,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 234\n      },\n      __self: this\n    }))), React.createElement(\"tr\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 247\n      },\n      __self: this\n    }, React.createElement(\"td\", {\n      colspan: \"2\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 248\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"row\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 249\n      },\n      __self: this\n    }, React.createElement(\"label\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 250\n      },\n      __self: this\n    }, \"Descripcion\"), React.createElement(\"div\", {\n      className: \"col-sm-12\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 251\n      },\n      __self: this\n    }, React.createElement(Field, {\n      name: \"descripcion\",\n      validate: [requerido, validacionDoscientosCaracteres],\n      component: renderTextArea,\n      label: \"Apellido\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 252\n      },\n      __self: this\n    }))))), React.createElement(\"tr\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 257\n      },\n      __self: this\n    }, React.createElement(\"td\", {\n      colspan: \"2\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 258\n      },\n      __self: this\n    }, \"4\"), React.createElement(\"td\", {\n      colspan: \"2\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 259\n      },\n      __self: this\n    }, \"5\"))), React.createElement(\"form\", {\n      className: \"letra\",\n      onSubmit: this.props.handleSubmit(this.handleSubmitForm),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 262\n      },\n      __self: this\n    }, React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 264\n      },\n      __self: this\n    }), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 266\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 267\n      },\n      __self: this\n    }, React.createElement(Button, {\n      style: fondoBoton,\n      type: \"submit\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 268\n      },\n      __self: this\n    }, \"Guardar\"), '', React.createElement(Button, {\n      style: fondoBotonS,\n      color: \"secondary\",\n      onClick: this.onClickCancelar,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 269\n      },\n      __self: this\n    }, \"Cancelar\")), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 271\n      },\n      __self: this\n    }), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 272\n      },\n      __self: this\n    })), React.createElement(NotificationContainer, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 274\n      },\n      __self: this\n    })), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 277\n      },\n      __self: this\n    }))));\n  }\n\n}\n\nEditarModulo.propTypes = {\n  previewLogoUrl: PropTypes.string,\n  tipoDeImagen: PropTypes.string,\n  pesoMaximo: PropTypes.number,\n  anchuraMaxima: PropTypes.number,\n  alturaMaxima: PropTypes.number,\n  handleSubmit: PropTypes.func.isRequired\n};\nEditarModulo.defaultProps = {\n  previewLogoUrl: \"https://imgplaceholder.com/400x300\",\n  tipoDeImagen: \"image/jpeg, image/png\",\n  pesoMaximo: 100,\n  anchuraMaxima: 100,\n  alturaMaxima: 100\n};\n\nconst generarInput = ({\n  input,\n  placeholder,\n  label,\n  type,\n  meta: {\n    touched,\n    warning,\n    error\n  }\n}) => React.createElement(\"div\", {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 289\n  },\n  __self: this\n}, React.createElement(\"div\", {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 290\n  },\n  __self: this\n}, React.createElement(\"input\", Object.assign({}, input, {\n  type: type,\n  style: {\n    fontSize: \"12px\"\n  },\n  className: \"form-control letra form-control-solid placeholder-no-fix\",\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 291\n  },\n  __self: this\n})), touched && (error && React.createElement(\"span\", {\n  className: \"text-danger letra form-group\",\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 292\n  },\n  __self: this\n}, error) || warning && React.createElement(\"span\", {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 292\n  },\n  __self: this\n}, warning))));\n\nconst renderTextArea = ({\n  input,\n  meta: {\n    touched,\n    error,\n    warning\n  }\n}) => React.createElement(\"div\", {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 298\n  },\n  __self: this\n}, React.createElement(\"div\", {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 299\n  },\n  __self: this\n}, React.createElement(\"textarea\", Object.assign({}, input, {\n  style: {\n    fontSize: \"12px\"\n  },\n  className: \"form-control letra form-control-solid placeholder-no-fix\",\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 300\n  },\n  __self: this\n})), touched && (error && React.createElement(\"span\", {\n  className: \"text-danger letra form-group\",\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 301\n  },\n  __self: this\n}, error) || warning && React.createElement(\"span\", {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 301\n  },\n  __self: this\n}, warning))));\n\nconst estiloLetrero = {\n  paddingTop: \"20px\",\n  paddingRight: \"12px\",\n  paddingLeft: \"40px\",\n  paddingBottom: \"1px\"\n};\nconst fondoBarraSuperior = {\n  background: \"#FFFFFF\"\n};\nconst fondoBoton = {\n  background: \"#ec671d\",\n  fontSize: \"14px\",\n  fontFamily: \"Open sans, sans-serif\"\n};\nconst fondoBotonS = {\n  background: \"secondary\",\n  fontSize: \"14px\",\n  fontFamily: \"Open sans, sans-serif\"\n};\n\nfunction mapStateToProps(state) {\n  return {\n    codigoModulo: state.mod.codigoModulo,\n    mensajeEditar: state.mod.mensajeEditarModulo,\n    configuracion: state.conf.configuracion,\n    initialValues: {\n      nombre: state.mod.moduloEditar.nombreModulo,\n      descripcion: state.mod.moduloEditar.descripcionModulo,\n      imagen: state.mod.moduloEditar.imagenModulo\n    }\n  };\n}\n\nlet formularioEditar = reduxForm({\n  form: 'editarModulo',\n  enableReinitialize: true\n})(EditarModulo);\nexport default withRouter(connect(mapStateToProps, {\n  actionCargarInformacionDeModulo,\n  actionEditarModulo,\n  actionConsultarActividadesModulo,\n  actualizarMensajeEditar\n})(formularioEditar));","map":{"version":3,"sources":["C:/Users/jeiso/Desktop/proyectosESCOM/frontend/ESCOM-view/src/SuperAdministrador/componentes/editar/editarModulo.js"],"names":["React","Barra","Button","NotificationContainer","NotificationManager","withRouter","campo","PropTypes","requerido","validacionCuarentaCaracteres","validacionDoscientosCaracteres","Alert","AlertTitle","DoneOutlineIcon","actionCargarInformacionDeModulo","actionEditarModulo","actionConsultarActividadesModulo","actualizarMensajeEditar","connect","reduxForm","Field","EditarModulo","Component","state","habilitado","actividadesSeleccionadas","validateImageWeight","imageFile","size","imageFileKb","pesoMaximo","props","validateImageWidth","anchuraMaxima","width","validateImageHeight","alturaMaxima","height","validateImageFormat","tipoDeImagen","includes","type","handlePreview","imageUrl","previewImageDom","document","querySelector","src","handleChange","event","input","preventDefault","target","files","error","value","localImageUrl","URL","createObjectURL","imageObject","window","Image","onload","naturalWidth","naturalHeight","onChange","revokeObjectURL","renderFileInput","meta","touched","warning","name","handleSubmitForm","values","image","undefined","modulo","nombreModulo","nombre","descripcionModulo","descripcion","imagenModulo","initialValues","imagen","estadoModulo","codigoModulo","localStorage","getItem","getBase64","result","onClickCancelar","history","push","file","cb","reader","FileReader","readAsDataURL","onerror","console","log","componentDidUpdate","mensajeEditar","setState","success","componentDidMount","length","render","estiloLetrero","paddingTop","paddingRight","paddingLeft","paddingBottom","margin","fondoBarraSuperior","padding","background","configuracion","botones","fontSize","fontFamily","textTransform","borderRadius","objectFit","generarInput","renderTextArea","handleSubmit","fondoBoton","fondoBotonS","propTypes","previewLogoUrl","string","number","func","isRequired","defaultProps","placeholder","label","mapStateToProps","mod","mensajeEditarModulo","conf","moduloEditar","formularioEditar","form","enableReinitialize"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB,C,CAEA;;AACA,OAAOC,KAAP,MAAkB,6BAAlB;AACA,OAAOC,MAAP,MAAmB,0BAAnB;AACA,SAASC,qBAAT,EAAgCC,mBAAhC,QAA2D,qBAA3D;AACA,SAASC,UAAT,QAA2B,kBAA3B;AACA,SAASC,KAAT,QAAsB,mCAAtB;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,SAASC,SAAT,EAAoBC,4BAApB,EAAkDC,8BAAlD,QAAwF,sCAAxF;AACA,OAAOC,KAAP,MAAkB,wBAAlB;AACA,OAAOC,UAAP,MAAuB,6BAAvB;AACA,OAAOC,eAAP,MAA4B,gCAA5B,C,CACA;;AACA,SAASC,+BAAT,EAA0CC,kBAA1C,EAA8DC,gCAA9D,EAAgGC,uBAAhG,QAA+H,gCAA/H;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,SAAT,EAAoBC,KAApB,QAAiC,YAAjC;;AAGA,MAAMC,YAAN,SAA2BrB,KAAK,CAACsB,SAAjC,CAA2C;AAAA;AAAA;AAAA,SAEvCC,KAFuC,GAE/B;AACJC,MAAAA,UAAU,EAAE,KADR;AAEJC,MAAAA,wBAAwB,EAAE;AAFtB,KAF+B;;AAAA,SAuBvCC,mBAvBuC,GAuBjBC,SAAS,IAAI;AAC/B,UAAIA,SAAS,IAAIA,SAAS,CAACC,IAA3B,EAAiC;AAC7B,cAAMC,WAAW,GAAGF,SAAS,CAACC,IAAV,GAAiB,IAArC;AAD6B,cAErBE,UAFqB,GAEN,KAAKC,KAFC,CAErBD,UAFqB;;AAI7B,YAAID,WAAW,GAAGC,UAAlB,EAA8B;AAC1B,iBAAQ,mDAAkDA,UAAW,IAArE;AACH;AACJ;AACJ,KAhCsC;;AAAA,SAiCvCE,kBAjCuC,GAiClBL,SAAS,IAAI;AAC9B,UAAIA,SAAJ,EAAe;AAAA,cACHM,aADG,GACe,KAAKF,KADpB,CACHE,aADG;;AAEX,YAAIN,SAAS,CAACO,KAAV,GAAkBD,aAAtB,EAAqC;AACjC,iBAAQ,kDAAiDA,aAAc,IAAvE;AACH;AACJ;AACJ,KAxCsC;;AAAA,SAyCvCE,mBAzCuC,GAyCjBR,SAAS,IAAI;AAC/B,UAAIA,SAAJ,EAAe;AAAA,cACHS,YADG,GACc,KAAKL,KADnB,CACHK,YADG;;AAGX,YAAIT,SAAS,CAACU,MAAV,GAAmBD,YAAvB,EAAqC;AACjC,iBAAQ,mDAAkDA,YAAa,IAAvE;AACH;AACJ;AACJ,KAjDsC;;AAAA,SAkDvCE,mBAlDuC,GAkDjBX,SAAS,IAAI;AAC/B,UAAIA,SAAJ,EAAe;AAAA,cACHY,YADG,GACc,KAAKR,KADnB,CACHQ,YADG;;AAEX,YAAI,CAACA,YAAY,CAACC,QAAb,CAAsBb,SAAS,CAACc,IAAhC,CAAL,EAA4C;AACxC,iBAAQ,8BAA6BF,YAAa,EAAlD;AACH;AACJ;AACJ,KAzDsC;;AAAA,SA0DvCG,aA1DuC,GA0DvBC,QAAQ,IAAI;AACxB,YAAMC,eAAe,GAAGC,QAAQ,CAACC,aAAT,CAAuB,gBAAvB,CAAxB;AACAF,MAAAA,eAAe,CAACG,GAAhB,GAAsBJ,QAAtB;AACH,KA7DsC;;AAAA,SA+DvCK,YA/DuC,GA+DxB,CAACC,KAAD,EAAQC,KAAR,KAAkB;AAC7BD,MAAAA,KAAK,CAACE,cAAN;AACA,UAAIxB,SAAS,GAAGsB,KAAK,CAACG,MAAN,CAAaC,KAAb,CAAmB,CAAnB,CAAhB;AAF6B,YAGrBd,YAHqB,GAGJ,KAAKR,KAHD,CAGrBQ,YAHqB;;AAI7B,UAAIZ,SAAJ,EAAe;AACX,YAAI,CAACY,YAAY,CAACC,QAAb,CAAsBb,SAAS,CAACc,IAAhC,CAAL,EAA4C;AACxCrC,UAAAA,mBAAmB,CAACkD,KAApB,CAA0B,6CAA1B;AACAL,UAAAA,KAAK,CAACG,MAAN,CAAaG,KAAb,GAAqB,IAArB;AACH,SAHD,MAGO;AACH,gBAAMC,aAAa,GAAGC,GAAG,CAACC,eAAJ,CAAoB/B,SAApB,CAAtB;AACA,gBAAMgC,WAAW,GAAG,IAAIC,MAAM,CAACC,KAAX,EAApB;;AAEAF,UAAAA,WAAW,CAACG,MAAZ,GAAqB,MAAM;AACvBnC,YAAAA,SAAS,CAACO,KAAV,GAAkByB,WAAW,CAACI,YAA9B;AACApC,YAAAA,SAAS,CAACU,MAAV,GAAmBsB,WAAW,CAACK,aAA/B;AACAd,YAAAA,KAAK,CAACe,QAAN,CAAetC,SAAf;AACA8B,YAAAA,GAAG,CAACS,eAAJ,CAAoBvC,SAApB;AACH,WALD;;AAMAgC,UAAAA,WAAW,CAACZ,GAAZ,GAAkBS,aAAlB;AACA,eAAKd,aAAL,CAAmBc,aAAnB;AACH;AACJ;AACJ,KArFsC;;AAAA,SAuFvCW,eAvFuC,GAuFrB,CAAC;AAAEjB,MAAAA,KAAF;AAAST,MAAAA,IAAT;AAAe2B,MAAAA;AAAf,KAAD,KAA2B;AAAA,YACjC7B,YADiC,GAChB,KAAKR,KADW,CACjCQ,YADiC;AAAA,YAEjC8B,OAFiC,GAELD,IAFK,CAEjCC,OAFiC;AAAA,YAExBf,KAFwB,GAELc,IAFK,CAExBd,KAFwB;AAAA,YAEjBgB,OAFiB,GAELF,IAFK,CAEjBE,OAFiB;AAGzC,aACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI;AACI,QAAA,IAAI,EAAEpB,KAAK,CAACqB,IADhB;AAEI,QAAA,IAAI,EAAE9B,IAFV;AAGI,QAAA,MAAM,EAAEF,YAHZ;AAII,QAAA,QAAQ,EAAEU,KAAK,IAAI,KAAKD,YAAL,CAAkBC,KAAlB,EAAyBC,KAAzB,CAJvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADJ,EAOKmB,OAAO,KAAMf,KAAK,IAAI;AAAM,QAAA,SAAS,EAAC,8BAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAgDA,KAAhD,CAAV,IAA6EgB,OAAO,IAAI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAOA,OAAP,CAA7F,CAPZ,CADJ;AAWH,KArGsC;;AAAA,SAwGvCE,gBAxGuC,GAwGpBC,MAAM,IAAI;AACzB,UAAIA,MAAM,CAACC,KAAP,KAAiBC,SAAjB,GAA6BF,MAAM,CAACC,KAAP,KAAiB,IAAlD,EAAwD;AACpD,YAAIE,MAAM,GAAG;AACTC,UAAAA,YAAY,EAAEJ,MAAM,CAACK,MADZ;AAETC,UAAAA,iBAAiB,EAAEN,MAAM,CAACO,WAFjB;AAGTC,UAAAA,YAAY,EAAE3E,KAAK,CAAC,KAAKyB,KAAL,CAAWmD,aAAX,CAAyBC,MAA1B,CAHV;AAITC,UAAAA,YAAY,EAAE;AAJL,SAAb;AAMA,aAAKrD,KAAL,CAAWhB,kBAAX,CAA8B6D,MAA9B,EAAsC,KAAK7C,KAAL,CAAWsD,YAAjD,EAA+DC,YAAY,CAACC,OAAb,CAAqB,OAArB,CAA/D,EAPoD,CAQpD;AACH,OATD,MASO;AACH,aAAKC,SAAL,CAAef,MAAM,CAACC,KAAtB,EAA8Be,MAAD,IAAY;AACrC,cAAIb,MAAM,GAAG;AACTC,YAAAA,YAAY,EAAEJ,MAAM,CAACK,MADZ;AAETC,YAAAA,iBAAiB,EAAEN,MAAM,CAACO,WAFjB;AAGTC,YAAAA,YAAY,EAAEQ,MAHL;AAITL,YAAAA,YAAY,EAAE;AAJL,WAAb;AAMA,eAAKrD,KAAL,CAAWhB,kBAAX,CAA8B6D,MAA9B,EAAsC,KAAK7C,KAAL,CAAWsD,YAAjD,EAA+DC,YAAY,CAACC,OAAb,CAAqB,OAArB,CAA/D;AACH,SARD;AASH;AACJ,KA7HsC;;AAAA,SAkKvCG,eAlKuC,GAkKpBzC,KAAD,IAAW;AACzBA,MAAAA,KAAK,CAACE,cAAN;AACA,WAAKpB,KAAL,CAAW4D,OAAX,CAAmBC,IAAnB,CAAwB,cAAxB;AACH,KArKsC;AAAA;;AAkIvCJ,EAAAA,SAAS,CAACK,IAAD,EAAOC,EAAP,EAAW;AAChB,QAAIC,MAAM,GAAG,IAAIC,UAAJ,EAAb;AACAD,IAAAA,MAAM,CAACE,aAAP,CAAqBJ,IAArB;;AACAE,IAAAA,MAAM,CAACjC,MAAP,GAAgB,YAAY;AACxBgC,MAAAA,EAAE,CAACC,MAAM,CAACN,MAAR,CAAF;AACH,KAFD;;AAGAM,IAAAA,MAAM,CAACG,OAAP,GAAiB,UAAU5C,KAAV,EAAiB;AAC9B6C,MAAAA,OAAO,CAACC,GAAR,CAAY,SAAZ,EAAuB9C,KAAvB;AACH,KAFD;AAGH;;AAED+C,EAAAA,kBAAkB,GAAG;AACjB,QAAI,KAAKtE,KAAL,CAAWuE,aAAX,KAA6B,aAAjC,EAAgD;AAC5C,UAAI,CAAC,KAAK/E,KAAL,CAAWC,UAAhB,EAA4B;AAAE,aAAK+E,QAAL,CAAc;AAAE/E,UAAAA,UAAU,EAAE;AAAd,SAAd;AAAqC;;AAAA,OADvB,CAE5C;AACH;;AACD,QAAI,KAAKO,KAAL,CAAWuE,aAAX,KAA6B,gBAAjC,EAAmD;AAC/ClG,MAAAA,mBAAmB,CAACoG,OAApB,CAA4B,uCAA5B;AACA,WAAKzE,KAAL,CAAWd,uBAAX,CAAmC,EAAnC;AACA,WAAKc,KAAL,CAAW4D,OAAX,CAAmBC,IAAnB,CAAwB,cAAxB;AACH;AACJ;;AAEDa,EAAAA,iBAAiB,GAAG;AAChB,QAAI,KAAK1E,KAAL,CAAWsD,YAAX,KAA4BV,SAA5B,IAAyC,KAAK5C,KAAL,CAAWsD,YAAX,CAAwBqB,MAAxB,KAAmC,CAAhF,EAAmF;AAC/E,WAAK3E,KAAL,CAAW4D,OAAX,CAAmBC,IAAnB,CAAwB,cAAxB;AACH,KAFD,MAEO;AACH,WAAK7D,KAAL,CAAWjB,+BAAX,CAA2C,KAAKiB,KAAL,CAAWsD,YAAtD,EAAoEC,YAAY,CAACC,OAAb,CAAqB,OAArB,CAApE;AACH;AACJ;;AAQDoB,EAAAA,MAAM,GAAG;AACL,WACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI;AAAK,MAAA,SAAS,EAAC,kBAAf;AAAkC,MAAA,KAAK,EAAEC,aAAzC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uBADJ,CADJ,EAII,oBAAC,KAAD;AAAO,MAAA,KAAK,EAAC,wBAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAJJ,EAKI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MALJ,EAMI;AAAK,MAAA,SAAS,EAAC,WAAf;AAA2B,MAAA,KAAK,EAAE;AAC9BC,QAAAA,UAAU,EAAE,KADkB;AAE9BC,QAAAA,YAAY,EAAE,MAFgB;AAG9BC,QAAAA,WAAW,EAAE,MAHiB;AAI9BC,QAAAA,aAAa,EAAE,KAJe;AAK9BC,QAAAA,MAAM,EAAE;AALsB,OAAlC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OASI;AAAK,MAAA,SAAS,EAAC,kBAAf;AAAkC,MAAA,KAAK,EAAEC,kBAAzC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADJ,EAGQ,KAAK3F,KAAL,CAAWC,UAAX,GAAwB;AAAK,MAAA,SAAS,EAAC,WAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACpB,oBAAC,KAAD;AAAO,MAAA,QAAQ,EAAC,OAAhB;AAAwB,MAAA,OAAO,EAAC,UAAhC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI,oBAAC,UAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBADJ,4EADoB,EAKpB;AAAK,MAAA,KAAK,EAAE;AAAE2F,QAAAA,OAAO,EAAE;AAAX,OAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI,oBAAC,MAAD;AAAQ,MAAA,KAAK,EAAE;AAAEC,QAAAA,UAAU,EAAE,KAAKrF,KAAL,CAAWsF,aAAX,CAAyBC,OAAvC;AAAgDC,QAAAA,QAAQ,EAAE,MAA1D;AAAkEC,QAAAA,UAAU,EAAE,YAA9E;AAA4FC,QAAAA,aAAa,EAAE;AAA3G,OAAf;AAAoI,MAAA,SAAS,EAAC,cAA9I;AAA6J,MAAA,OAAO,EAAC,WAArK;AAAiL,MAAA,OAAO,EAAE,KAAK/B,eAA/L;AAAgN,MAAA,SAAS,EAAE,oBAAC,eAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAA3N;AAAgP,MAAA,IAAI,EAAC,QAArP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBADJ,EACmR,EADnR,CALoB,CAAxB,GASI,0CACI;AAAK,MAAA,KAAK,EAAE;AAAEyB,QAAAA,OAAO,EAAE;AAAX,OAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI;AAAK,MAAA,GAAG,EAAE7G,KAAK,CAAC,KAAKyB,KAAL,CAAWmD,aAAX,CAAyBC,MAA1B,CAAf;AAAkD,MAAA,GAAG,EAAC,SAAtD;AACI,MAAA,SAAS,EAAC,eADd;AAEI,MAAA,KAAK,EAAE;AAAE9C,QAAAA,MAAM,EAAE,OAAV;AAAmBH,QAAAA,KAAK,EAAE,OAA1B;AAAmCwF,QAAAA,YAAY,EAAE,KAAjD;AAAwDC,QAAAA,SAAS,EAAE;AAAnE,OAFX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADJ,CADJ,EAMI;AAAO,MAAA,MAAM,EAAC,KAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI;AAAI,MAAA,OAAO,EAAC,GAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI;AAAK,MAAA,SAAS,EAAC,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI;AAAK,MAAA,SAAS,EAAC,WAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADJ,EAEI,oBAAC,KAAD;AAAO,MAAA,IAAI,EAAC,QAAZ;AAAqB,MAAA,QAAQ,EAAE,CAACnH,SAAD,EAAYC,4BAAZ,CAA/B;AAA0E,MAAA,SAAS,EAAEmH,YAArF;AAAmG,MAAA,KAAK,EAAC,QAAzG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFJ,CADJ,CADJ,CADJ,EASI;AAAI,MAAA,OAAO,EAAC,GAAZ;AAAgB,MAAA,OAAO,EAAC,GAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADJ,EAEI,oBAAC,KAAD;AACI,MAAA,IAAI,EAAC,OADT;AAEI,MAAA,IAAI,EAAC,MAFT;AAGI,MAAA,QAAQ,EAAE,CACN,KAAKlG,mBADC,EAEN,KAAKM,kBAFC,EAGN,KAAKG,mBAHC,EAIN,KAAKG,mBAJC,CAHd;AASI,MAAA,SAAS,EAAE,KAAK6B,eATpB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFJ,CATJ,CADJ,EAyBI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI;AAAI,MAAA,OAAO,EAAC,GAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI;AAAK,MAAA,SAAS,EAAC,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBADJ,EAEI;AAAK,MAAA,SAAS,EAAC,WAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI,oBAAC,KAAD;AAAO,MAAA,IAAI,EAAC,aAAZ;AAA0B,MAAA,QAAQ,EAAE,CAAC3D,SAAD,EAAYE,8BAAZ,CAApC;AAAiF,MAAA,SAAS,EAAEmH,cAA5F;AAA4G,MAAA,KAAK,EAAC,UAAlH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADJ,CAFJ,CADJ,CADJ,CAzBJ,EAmCI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI;AAAI,MAAA,OAAO,EAAC,GAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WADJ,EAEI;AAAI,MAAA,OAAO,EAAC,GAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WAFJ,CAnCJ,CANJ,EA8CI;AAAM,MAAA,SAAS,EAAC,OAAhB;AAAwB,MAAA,QAAQ,EAAE,KAAK9F,KAAL,CAAW+F,YAAX,CAAwB,KAAKtD,gBAA7B,CAAlC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAEI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFJ,EAII;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAJJ,EAKI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI,oBAAC,MAAD;AAAQ,MAAA,KAAK,EAAEuD,UAAf;AAA2B,MAAA,IAAI,EAAC,QAAhC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBADJ,EAC8D,EAD9D,EAEI,oBAAC,MAAD;AAAQ,MAAA,KAAK,EAAEC,WAAf;AAA4B,MAAA,KAAK,EAAC,WAAlC;AAA8C,MAAA,OAAO,EAAE,KAAKtC,eAA5D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAFJ,CALJ,EASI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MATJ,EAUI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAVJ,CA9CJ,EA0DI,oBAAC,qBAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MA1DJ,CAZZ,EAyEI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAzEJ,CATJ,CANJ,CADJ;AAgGH;;AAxQsC;;AAArCrE,Y,CAQK4G,S,GAAY;AACfC,EAAAA,cAAc,EAAE3H,SAAS,CAAC4H,MADX;AAEf5F,EAAAA,YAAY,EAAEhC,SAAS,CAAC4H,MAFT;AAGfrG,EAAAA,UAAU,EAAEvB,SAAS,CAAC6H,MAHP;AAIfnG,EAAAA,aAAa,EAAE1B,SAAS,CAAC6H,MAJV;AAKfhG,EAAAA,YAAY,EAAE7B,SAAS,CAAC6H,MALT;AAMfN,EAAAA,YAAY,EAAEvH,SAAS,CAAC8H,IAAV,CAAeC;AANd,C;AARjBjH,Y,CAgBKkH,Y,GAAe;AAClBL,EAAAA,cAAc,EAAE,oCADE;AAElB3F,EAAAA,YAAY,EAAE,uBAFI;AAGlBT,EAAAA,UAAU,EAAE,GAHM;AAIlBG,EAAAA,aAAa,EAAE,GAJG;AAKlBG,EAAAA,YAAY,EAAE;AALI,C;;AA4P1B,MAAMwF,YAAY,GAAG,CAAC;AAAE1E,EAAAA,KAAF;AAASsF,EAAAA,WAAT;AAAsBC,EAAAA,KAAtB;AAA6BhG,EAAAA,IAA7B;AAAmC2B,EAAAA,IAAI,EAAE;AAAEC,IAAAA,OAAF;AAAWC,IAAAA,OAAX;AAAoBhB,IAAAA;AAApB;AAAzC,CAAD,KACjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GACI,+CAAWJ,KAAX;AAAkB,EAAA,IAAI,EAAET,IAAxB;AAA8B,EAAA,KAAK,EAAE;AAAE8E,IAAAA,QAAQ,EAAE;AAAZ,GAArC;AAA2D,EAAA,SAAS,EAAC,0DAArE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GADJ,EAEKlD,OAAO,KAAMf,KAAK,IAAI;AAAM,EAAA,SAAS,EAAC,8BAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAgDA,KAAhD,CAAV,IAA6EgB,OAAO,IAAI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAOA,OAAP,CAA7F,CAFZ,CADJ,CADJ;;AASA,MAAMuD,cAAc,GAAG,CAAC;AAAE3E,EAAAA,KAAF;AAASkB,EAAAA,IAAI,EAAE;AAAEC,IAAAA,OAAF;AAAWf,IAAAA,KAAX;AAAkBgB,IAAAA;AAAlB;AAAf,CAAD,KACnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GACI,kDAAcpB,KAAd;AAAqB,EAAA,KAAK,EAAE;AAAEqE,IAAAA,QAAQ,EAAE;AAAZ,GAA5B;AAAkD,EAAA,SAAS,EAAC,0DAA5D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GADJ,EAEKlD,OAAO,KAAMf,KAAK,IAAI;AAAM,EAAA,SAAS,EAAC,8BAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAgDA,KAAhD,CAAV,IAA6EgB,OAAO,IAAI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAOA,OAAP,CAA7F,CAFZ,CADJ,CADJ;;AASA,MAAMsC,aAAa,GAAG;AAClBC,EAAAA,UAAU,EAAE,MADM;AAElBC,EAAAA,YAAY,EAAE,MAFI;AAGlBC,EAAAA,WAAW,EAAE,MAHK;AAIlBC,EAAAA,aAAa,EAAE;AAJG,CAAtB;AAQA,MAAME,kBAAkB,GAAG;AACvBE,EAAAA,UAAU,EAAE;AADW,CAA3B;AAOA,MAAMW,UAAU,GAAG;AACfX,EAAAA,UAAU,EAAE,SADG;AAEfG,EAAAA,QAAQ,EAAE,MAFK;AAGfC,EAAAA,UAAU,EAAE;AAHG,CAAnB;AAOA,MAAMQ,WAAW,GAAG;AAChBZ,EAAAA,UAAU,EAAE,WADI;AAEhBG,EAAAA,QAAQ,EAAE,MAFM;AAGhBC,EAAAA,UAAU,EAAE;AAHI,CAApB;;AAOA,SAASkB,eAAT,CAAyBnH,KAAzB,EAAgC;AAC5B,SAAO;AACH8D,IAAAA,YAAY,EAAE9D,KAAK,CAACoH,GAAN,CAAUtD,YADrB;AAEHiB,IAAAA,aAAa,EAAE/E,KAAK,CAACoH,GAAN,CAAUC,mBAFtB;AAGHvB,IAAAA,aAAa,EAAE9F,KAAK,CAACsH,IAAN,CAAWxB,aAHvB;AAIHnC,IAAAA,aAAa,EAAE;AACXJ,MAAAA,MAAM,EAAEvD,KAAK,CAACoH,GAAN,CAAUG,YAAV,CAAuBjE,YADpB;AAEXG,MAAAA,WAAW,EAAEzD,KAAK,CAACoH,GAAN,CAAUG,YAAV,CAAuB/D,iBAFzB;AAGXI,MAAAA,MAAM,EAAE5D,KAAK,CAACoH,GAAN,CAAUG,YAAV,CAAuB7D;AAHpB;AAJZ,GAAP;AAUH;;AAGD,IAAI8D,gBAAgB,GAAG5H,SAAS,CAAC;AAC7B6H,EAAAA,IAAI,EAAE,cADuB;AAE7BC,EAAAA,kBAAkB,EAAE;AAFS,CAAD,CAAT,CAGpB5H,YAHoB,CAAvB;AAKA,eAAehB,UAAU,CAACa,OAAO,CAACwH,eAAD,EAAkB;AAAE5H,EAAAA,+BAAF;AAAmCC,EAAAA,kBAAnC;AAAuDC,EAAAA,gCAAvD;AAAyFC,EAAAA;AAAzF,CAAlB,CAAP,CAA6I8H,gBAA7I,CAAD,CAAzB","sourcesContent":["import React from 'react';\r\n\r\n//componentes\r\nimport Barra from '../general/BarraDirecciones';\r\nimport Button from '@material-ui/core/Button';\r\nimport { NotificationContainer, NotificationManager } from 'react-notifications';\r\nimport { withRouter } from 'react-router-dom';\r\nimport { campo } from '../../utilitario/GenerarInputs.js';\r\nimport PropTypes from \"prop-types\";\r\nimport { requerido, validacionCuarentaCaracteres, validacionDoscientosCaracteres } from '../../utilitario/validacionCampos.js';\r\nimport Alert from '@material-ui/lab/Alert';\r\nimport AlertTitle from '@material-ui/lab/AlertTitle';\r\nimport DoneOutlineIcon from '@material-ui/icons/DoneOutline';\r\n//redux\r\nimport { actionCargarInformacionDeModulo, actionEditarModulo, actionConsultarActividadesModulo, actualizarMensajeEditar } from '../../actions/actionsModulo.js'\r\nimport { connect } from \"react-redux\";\r\nimport { reduxForm, Field } from 'redux-form';\r\n\r\n\r\nclass EditarModulo extends React.Component {\r\n\r\n    state = {\r\n        habilitado: false,\r\n        actividadesSeleccionadas: []\r\n    }\r\n\r\n\r\n    static propTypes = {\r\n        previewLogoUrl: PropTypes.string,\r\n        tipoDeImagen: PropTypes.string,\r\n        pesoMaximo: PropTypes.number,\r\n        anchuraMaxima: PropTypes.number,\r\n        alturaMaxima: PropTypes.number,\r\n        handleSubmit: PropTypes.func.isRequired\r\n    };\r\n    static defaultProps = {\r\n        previewLogoUrl: \"https://imgplaceholder.com/400x300\",\r\n        tipoDeImagen: \"image/jpeg, image/png\",\r\n        pesoMaximo: 100,\r\n        anchuraMaxima: 100,\r\n        alturaMaxima: 100\r\n    };\r\n    validateImageWeight = imageFile => {\r\n        if (imageFile && imageFile.size) {\r\n            const imageFileKb = imageFile.size / 1024;\r\n            const { pesoMaximo } = this.props;\r\n\r\n            if (imageFileKb > pesoMaximo) {\r\n                return `El tamaÃ±o de la imagen debe ser menor o igual a ${pesoMaximo}kb`;\r\n            }\r\n        }\r\n    };\r\n    validateImageWidth = imageFile => {\r\n        if (imageFile) {\r\n            const { anchuraMaxima } = this.props;\r\n            if (imageFile.width > anchuraMaxima) {\r\n                return `El ancho de la imagen debe ser menor o igual a ${anchuraMaxima}px`;\r\n            }\r\n        }\r\n    };\r\n    validateImageHeight = imageFile => {\r\n        if (imageFile) {\r\n            const { alturaMaxima } = this.props;\r\n\r\n            if (imageFile.height > alturaMaxima) {\r\n                return `La altura de la imagen debe ser menor o igual a ${alturaMaxima}px`;\r\n            }\r\n        }\r\n    };\r\n    validateImageFormat = imageFile => {\r\n        if (imageFile) {\r\n            const { tipoDeImagen } = this.props;\r\n            if (!tipoDeImagen.includes(imageFile.type)) {\r\n                return `El tipo de imagen debe ser ${tipoDeImagen}`;\r\n            }\r\n        }\r\n    };\r\n    handlePreview = imageUrl => {\r\n        const previewImageDom = document.querySelector(\".preview-image\");\r\n        previewImageDom.src = imageUrl;\r\n    };\r\n\r\n    handleChange = (event, input) => {\r\n        event.preventDefault();\r\n        let imageFile = event.target.files[0];\r\n        const { tipoDeImagen } = this.props;\r\n        if (imageFile) {\r\n            if (!tipoDeImagen.includes(imageFile.type)) {\r\n                NotificationManager.error('Seleccione un archivo de imagen .jpg o .png');\r\n                event.target.value = null;\r\n            } else {\r\n                const localImageUrl = URL.createObjectURL(imageFile);\r\n                const imageObject = new window.Image();\r\n\r\n                imageObject.onload = () => {\r\n                    imageFile.width = imageObject.naturalWidth;\r\n                    imageFile.height = imageObject.naturalHeight;\r\n                    input.onChange(imageFile);\r\n                    URL.revokeObjectURL(imageFile);\r\n                };\r\n                imageObject.src = localImageUrl;\r\n                this.handlePreview(localImageUrl);\r\n            }\r\n        }\r\n    };\r\n\r\n    renderFileInput = ({ input, type, meta }) => {\r\n        const { tipoDeImagen } = this.props;\r\n        const { touched, error, warning } = meta;\r\n        return (\r\n            <div>\r\n                <input\r\n                    name={input.name}\r\n                    type={type}\r\n                    accept={tipoDeImagen}\r\n                    onChange={event => this.handleChange(event, input)}\r\n                />\r\n                {touched && ((error && <span className=\"text-danger letra form-group\">{error}</span>) || (warning && <span>{warning}</span>))}\r\n            </div>\r\n        );\r\n    };\r\n\r\n\r\n    handleSubmitForm = values => {\r\n        if (values.image === undefined | values.image === null) {\r\n            let modulo = {\r\n                nombreModulo: values.nombre,\r\n                descripcionModulo: values.descripcion,\r\n                imagenModulo: campo(this.props.initialValues.imagen),\r\n                estadoModulo: 'Activo'\r\n            }\r\n            this.props.actionEditarModulo(modulo, this.props.codigoModulo, localStorage.getItem('Token'));\r\n            // this.props.actionAgregarModulo(modulo, localStorage.getItem('Token'));\r\n        } else {\r\n            this.getBase64(values.image, (result) => {\r\n                let modulo = {\r\n                    nombreModulo: values.nombre,\r\n                    descripcionModulo: values.descripcion,\r\n                    imagenModulo: result,\r\n                    estadoModulo: 'Activo'\r\n                }\r\n                this.props.actionEditarModulo(modulo, this.props.codigoModulo, localStorage.getItem('Token'));\r\n            });\r\n        }\r\n    };\r\n\r\n\r\n\r\n\r\n    getBase64(file, cb) {\r\n        let reader = new FileReader();\r\n        reader.readAsDataURL(file);\r\n        reader.onload = function () {\r\n            cb(reader.result)\r\n        };\r\n        reader.onerror = function (error) {\r\n            console.log('Error: ', error);\r\n        };\r\n    }\r\n\r\n    componentDidUpdate() {\r\n        if (this.props.mensajeEditar === 'Sin permiso') {\r\n            if (!this.state.habilitado) { this.setState({ habilitado: true }) };\r\n            // this.props.history.push('/adminUsuario');\r\n        }\r\n        if (this.props.mensajeEditar === 'modulo editado') {\r\n            NotificationManager.success('Informacion actualizada correctamente');\r\n            this.props.actualizarMensajeEditar('');\r\n            this.props.history.push('/adminModulo');\r\n        }\r\n    }\r\n\r\n    componentDidMount() {\r\n        if (this.props.codigoModulo === undefined || this.props.codigoModulo.length === 0) {\r\n            this.props.history.push('/adminModulo');\r\n        } else {\r\n            this.props.actionCargarInformacionDeModulo(this.props.codigoModulo, localStorage.getItem('Token'));\r\n        }\r\n    }\r\n\r\n\r\n    onClickCancelar = (event) => {\r\n        event.preventDefault();\r\n        this.props.history.push('/adminModulo');\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                <div className=\"text-left titulo\" style={estiloLetrero}>\r\n                    <h4>Editar modulo</h4>\r\n                </div>\r\n                <Barra texto=\"Inicio > Editar modulo\" />\r\n                <br />\r\n                <div className=\"col-sm-12\" style={{\r\n                    paddingTop: \"0px\",\r\n                    paddingRight: \"40px\",\r\n                    paddingLeft: \"40px\",\r\n                    paddingBottom: \"0px\",\r\n                    margin: \"0px 0px 30px\"\r\n\r\n                }}>\r\n\r\n                    <div className=\"container shadow\" style={fondoBarraSuperior}>\r\n                        <br />\r\n                        {\r\n                            this.state.habilitado ? <div className=\"col-sm-12\">\r\n                                <Alert severity=\"error\" variant=\"outlined\">\r\n                                    <AlertTitle>Sin permiso</AlertTitle>\r\n                                    No tiene permisos suficientes para editar la informacion de los modulos\r\n                                </Alert>\r\n                                <div style={{ padding: \"25px 44px 25px 395px\" }}>\r\n                                    <Button style={{ background: this.props.configuracion.botones, fontSize: \"14px\", fontFamily: \"sans-serif\", textTransform: \"none\" }} className=\"btn btn-dark\" variant=\"contained\" onClick={this.onClickCancelar} startIcon={<DoneOutlineIcon />} type=\"submit\">Aceptar</Button>{''}\r\n                                </div>\r\n                            </div> :\r\n                                <>\r\n                                    <div style={{ padding: \"30px 30px 30px 77px\" }}>\r\n                                        <img src={campo(this.props.initialValues.imagen)} alt=\"preview\"\r\n                                            className=\"preview-image\"\r\n                                            style={{ height: \"200px\", width: \"200px\", borderRadius: \"50%\", objectFit: \"cover\" }} />\r\n                                    </div>\r\n                                    <table border=\"2px\">\r\n                                        <tr>\r\n                                            <td colspan=\"2\">\r\n                                                <div className=\"row\">\r\n                                                    <div className=\"col-sm-12\">\r\n                                                        <label>Nombre</label>\r\n                                                        <Field name=\"nombre\" validate={[requerido, validacionCuarentaCaracteres]} component={generarInput} label=\"Nombre\" />\r\n                                                    </div>\r\n                                                </div>\r\n                                            </td>\r\n                                            <td colspan=\"2\" rowspan=\"2\">\r\n                                                <label>Imagen</label>\r\n                                                <Field\r\n                                                    name=\"image\"\r\n                                                    type=\"file\"\r\n                                                    validate={[\r\n                                                        this.validateImageWeight,\r\n                                                        this.validateImageWidth,\r\n                                                        this.validateImageHeight,\r\n                                                        this.validateImageFormat\r\n                                                    ]}\r\n                                                    component={this.renderFileInput}\r\n                                                />\r\n                                            </td>\r\n                                        </tr>\r\n                                        <tr>\r\n                                            <td colspan=\"2\">\r\n                                                <div className=\"row\">\r\n                                                    <label>Descripcion</label>\r\n                                                    <div className=\"col-sm-12\">\r\n                                                        <Field name=\"descripcion\" validate={[requerido, validacionDoscientosCaracteres]} component={renderTextArea} label=\"Apellido\" />\r\n                                                    </div>\r\n                                                </div>\r\n                                            </td>\r\n                                        </tr>\r\n                                        <tr>\r\n                                            <td colspan=\"2\">4</td>\r\n                                            <td colspan=\"2\">5</td>\r\n                                        </tr>\r\n                                    </table>\r\n                                    <form className=\"letra\" onSubmit={this.props.handleSubmit(this.handleSubmitForm)}>\r\n\r\n                                        <br />\r\n\r\n                                        <br />\r\n                                        <div>\r\n                                            <Button style={fondoBoton} type=\"submit\">Guardar</Button>{''}\r\n                                            <Button style={fondoBotonS} color=\"secondary\" onClick={this.onClickCancelar}>Cancelar</Button>\r\n                                        </div>\r\n                                        <br />\r\n                                        <br />\r\n                                    </form>\r\n                                    <NotificationContainer />\r\n                                </>\r\n                        }\r\n                        <br />\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        )\r\n\r\n\r\n    }\r\n}\r\n\r\n\r\nconst generarInput = ({ input, placeholder, label, type, meta: { touched, warning, error } }) => (\r\n    <div>\r\n        <div>\r\n            <input {...input} type={type} style={{ fontSize: \"12px\" }} className=\"form-control letra form-control-solid placeholder-no-fix\" />\r\n            {touched && ((error && <span className=\"text-danger letra form-group\">{error}</span>) || (warning && <span>{warning}</span>))}\r\n        </div>\r\n    </div>\r\n)\r\n\r\nconst renderTextArea = ({ input, meta: { touched, error, warning } }) => (\r\n    <div>\r\n        <div>\r\n            <textarea {...input} style={{ fontSize: \"12px\" }} className=\"form-control letra form-control-solid placeholder-no-fix\" />\r\n            {touched && ((error && <span className=\"text-danger letra form-group\">{error}</span>) || (warning && <span>{warning}</span>))}\r\n        </div>\r\n    </div>\r\n);\r\n\r\nconst estiloLetrero = {\r\n    paddingTop: \"20px\",\r\n    paddingRight: \"12px\",\r\n    paddingLeft: \"40px\",\r\n    paddingBottom: \"1px\"\r\n}\r\n\r\n\r\nconst fondoBarraSuperior = {\r\n    background: \"#FFFFFF\"\r\n\r\n}\r\n\r\n\r\n\r\nconst fondoBoton = {\r\n    background: \"#ec671d\",\r\n    fontSize: \"14px\",\r\n    fontFamily: \"Open sans, sans-serif\"\r\n\r\n}\r\n\r\nconst fondoBotonS = {\r\n    background: \"secondary\",\r\n    fontSize: \"14px\",\r\n    fontFamily: \"Open sans, sans-serif\"\r\n\r\n}\r\n\r\nfunction mapStateToProps(state) {\r\n    return {\r\n        codigoModulo: state.mod.codigoModulo,\r\n        mensajeEditar: state.mod.mensajeEditarModulo,\r\n        configuracion: state.conf.configuracion,\r\n        initialValues: {\r\n            nombre: state.mod.moduloEditar.nombreModulo,\r\n            descripcion: state.mod.moduloEditar.descripcionModulo,\r\n            imagen: state.mod.moduloEditar.imagenModulo,\r\n        }\r\n    }\r\n}\r\n\r\n\r\nlet formularioEditar = reduxForm({\r\n    form: 'editarModulo',\r\n    enableReinitialize: true\r\n})(EditarModulo)\r\n\r\nexport default withRouter(connect(mapStateToProps, { actionCargarInformacionDeModulo, actionEditarModulo, actionConsultarActividadesModulo, actualizarMensajeEditar })(formularioEditar));\r\n\r\n"]},"metadata":{},"sourceType":"module"}