{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\jeiso\\\\Desktop\\\\REACT\\\\proyectosESCOM\\\\frontend\\\\ESCOM-view\\\\src\\\\SuperAdministrador\\\\componentes\\\\editar\\\\editarModulo.js\";\nimport React from 'react'; //estilos\n\nimport '../../css/business-casual.css';\nimport '../../css/estilos.css';\nimport '../../css/bootstrap.min.css';\nimport '../../css/menu.css';\nimport { Button } from 'reactstrap'; //componentes\n\nimport Barra from '../general/BarraDirecciones';\nimport { NotificationContainer, NotificationManager } from 'react-notifications';\nimport { withRouter } from 'react-router-dom';\nimport Alerta from '@icons/material/AlertIcon.js';\nimport { campo } from '../../utilitario/GenerarInputs.js';\nimport PropTypes from \"prop-types\";\nimport { requerido, validacionCuarentaCaracteres, validacionDoscientosCaracteres } from '../../utilitario/validacionCampos.js'; //redux\n\nimport { actionCargarInformacionDeModulo, actionEditarModulo, actionConsultarActividadesModulo, actualizarMensajeEditar } from '../../actions/actionsModulo.js';\nimport { connect } from \"react-redux\";\nimport { reduxForm, Field } from 'redux-form';\n\nclass EditarModulo extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      habilitado: false,\n      actividadesSeleccionadas: []\n    };\n\n    this.validateImageWeight = imageFile => {\n      if (imageFile && imageFile.size) {\n        const imageFileKb = imageFile.size / 1024;\n        const pesoMaximo = this.props.pesoMaximo;\n\n        if (imageFileKb > pesoMaximo) {\n          return `El tamaÃ±o de la imagen debe ser menor o igual a ${pesoMaximo}kb`;\n        }\n      }\n    };\n\n    this.validateImageWidth = imageFile => {\n      if (imageFile) {\n        const anchuraMaxima = this.props.anchuraMaxima;\n\n        if (imageFile.width > anchuraMaxima) {\n          return `El ancho de la imagen debe ser menor o igual a ${anchuraMaxima}px`;\n        }\n      }\n    };\n\n    this.validateImageHeight = imageFile => {\n      if (imageFile) {\n        const alturaMaxima = this.props.alturaMaxima;\n\n        if (imageFile.height > alturaMaxima) {\n          return `La altura de la imagen debe ser menor o igual a ${alturaMaxima}px`;\n        }\n      }\n    };\n\n    this.validateImageFormat = imageFile => {\n      if (imageFile) {\n        const tipoDeImagen = this.props.tipoDeImagen;\n\n        if (!tipoDeImagen.includes(imageFile.type)) {\n          return `El tipo de imagen debe ser ${tipoDeImagen}`;\n        }\n      }\n    };\n\n    this.handlePreview = imageUrl => {\n      const previewImageDom = document.querySelector(\".preview-image\");\n      previewImageDom.src = imageUrl;\n    };\n\n    this.handleChange = (event, input) => {\n      event.preventDefault();\n      let imageFile = event.target.files[0];\n      const tipoDeImagen = this.props.tipoDeImagen;\n\n      if (imageFile) {\n        if (!tipoDeImagen.includes(imageFile.type)) {\n          NotificationManager.error('Seleccione un archivo de imagen .jpg o .png');\n          event.target.value = null;\n        } else {\n          const localImageUrl = URL.createObjectURL(imageFile);\n          const imageObject = new window.Image();\n\n          imageObject.onload = () => {\n            imageFile.width = imageObject.naturalWidth;\n            imageFile.height = imageObject.naturalHeight;\n            input.onChange(imageFile);\n            URL.revokeObjectURL(imageFile);\n          };\n\n          imageObject.src = localImageUrl;\n          this.handlePreview(localImageUrl);\n        }\n      }\n    };\n\n    this.renderFileInput = ({\n      input,\n      type,\n      meta\n    }) => {\n      const mimeType = this.props.mimeType;\n      const touched = meta.touched,\n            error = meta.error,\n            warning = meta.warning;\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 118\n        },\n        __self: this\n      }, React.createElement(\"input\", {\n        name: input.name,\n        type: type,\n        accept: mimeType,\n        onChange: event => this.handleChange(event, input),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 119\n        },\n        __self: this\n      }), touched && (error && React.createElement(\"span\", {\n        className: \"text-danger letra form-group\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 125\n        },\n        __self: this\n      }, error) || warning && React.createElement(\"span\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 125\n        },\n        __self: this\n      }, warning)));\n    };\n\n    this.handleSubmitForm = values => {\n      console.log('values image', values.image);\n\n      if (!(values.image === undefined | values.image === null)) {\n        this.getBase64(values.image, result => {\n          let modulo = {\n            nombreModulo: values.nombre,\n            descripcionModulo: values.descripcion,\n            imagenModulo: result,\n            estadoModulo: 'Activo'\n          };\n          this.props.actionEditarModulo(modulo, this.props.codigoModulo, localStorage.getItem('Token'));\n        });\n        this.props.actionEditarModulo(modulo, this.props.codigoModulo, localStorage.getItem('Token'));\n      } else {\n        NotificationManager.error('Seleccione un archivo de imagen .jpg o .png');\n      }\n    };\n\n    this.onClickCancelar = event => {\n      event.preventDefault();\n      this.props.history.push('/adminModulo');\n    };\n  }\n\n  getBase64(file, cb) {\n    let reader = new FileReader();\n    reader.readAsDataURL(file);\n\n    reader.onload = function () {\n      cb(reader.result);\n    };\n\n    reader.onerror = function (error) {\n      console.log('Error: ', error);\n    };\n  }\n\n  componentDidUpdate() {\n    if (this.props.mensajeEditar === 'Sin permiso') {\n      if (!this.state.habilitado) {\n        this.setState({\n          habilitado: true\n        });\n      }\n\n      ; // this.props.history.push('/adminUsuario');\n    }\n\n    if (this.props.mensajeEditar === 'modulo editado') {\n      NotificationManager.success('Informacion actualizada correctamente');\n      this.props.actualizarMensajeEditar('');\n      this.props.history.push('/adminModulo');\n    }\n  }\n\n  componentDidMount() {\n    if (this.props.codigoModulo === undefined || this.props.codigoModulo.length === 0) {\n      this.props.history.push('/adminModulo');\n    } else {\n      this.props.actionCargarInformacionDeModulo(this.props.codigoModulo, localStorage.getItem('Token'));\n    }\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 192\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      class: \"text-left titulo\",\n      style: estiloLetrero,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 193\n      },\n      __self: this\n    }, React.createElement(\"h4\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 194\n      },\n      __self: this\n    }, \"Editar modulo\")), React.createElement(Barra, {\n      texto: \"Inicio > Editar modulo\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 196\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      className: \"col-sm-12\",\n      style: {\n        paddingTop: \"0px\",\n        paddingRight: \"40px\",\n        paddingLeft: \"40px\",\n        paddingBottom: \"0px\",\n        margin: \"0px 0px 30px\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 197\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"container shadow\",\n      style: fondoBarraSuperior,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 206\n      },\n      __self: this\n    }, React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 207\n      },\n      __self: this\n    }), this.state.habilitado ? React.createElement(\"div\", {\n      className: \"col-sm-12\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 209\n      },\n      __self: this\n    }, \" \", React.createElement(\"span\", {\n      className: \"col-sm-2 center\",\n      style: {\n        textShadow: \"none!important\",\n        fontSize: \"16px\",\n        fontFamily: \"Open Sans,sans-serif\",\n        fontWeight: \"300\",\n        padding: \"13px 122px\",\n        color: \"#fff\",\n        background: \"rgb(158, 35, 45)\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 209\n      },\n      __self: this\n    }, React.createElement(Alerta, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 217\n      },\n      __self: this\n    }), \"No tiene los permisos suficientes para editar informacion del modulo\"), React.createElement(\"div\", {\n      style: {\n        padding: \"25px 44px 25px 287px\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 218\n      },\n      __self: this\n    }, React.createElement(Button, {\n      style: fondoBoton,\n      onClick: this.onClickCancelar,\n      type: \"submit\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 219\n      },\n      __self: this\n    }, \"Aceptar\"), '')) : React.createElement(React.Fragment, null, React.createElement(\"div\", {\n      style: {\n        padding: \"30px 30px 30px 77px\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 223\n      },\n      __self: this\n    }, React.createElement(\"img\", {\n      src: campo(this.props.initialValues.imagen),\n      alt: \"preview\",\n      className: \"preview-image\",\n      style: {\n        height: \"200px\",\n        width: \"200px\",\n        borderRadius: \"50%\",\n        objectFit: \"cover\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 224\n      },\n      __self: this\n    })), React.createElement(\"form\", {\n      className: \"letra\",\n      onSubmit: this.props.handleSubmit(this.handleSubmitForm),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 228\n      },\n      __self: this\n    }, React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 229\n      },\n      __self: this\n    }), React.createElement(\"label\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 230\n      },\n      __self: this\n    }, \"Imagen\"), React.createElement(Field, {\n      name: \"image\",\n      type: \"file\",\n      validate: [this.validateImageWeight, this.validateImageWidth, this.validateImageHeight, this.validateImageFormat],\n      component: this.renderFileInput,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 231\n      },\n      __self: this\n    }), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 242\n      },\n      __self: this\n    }), React.createElement(\"label\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 243\n      },\n      __self: this\n    }, \"Nombre\"), React.createElement(\"div\", {\n      className: \"row\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 244\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"col-sm-5\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 245\n      },\n      __self: this\n    }, React.createElement(Field, {\n      name: \"nombre\",\n      validate: [requerido, nombre],\n      component: generarInput,\n      label: \"Nombre\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 246\n      },\n      __self: this\n    }))), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 249\n      },\n      __self: this\n    }), React.createElement(\"label\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 250\n      },\n      __self: this\n    }, \"Descripcion\"), React.createElement(\"div\", {\n      className: \"row\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 251\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"col-sm-5\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 252\n      },\n      __self: this\n    }, React.createElement(Field, {\n      name: \"descripcion\",\n      validate: [requerido, apellido],\n      component: renderTextArea,\n      label: \"Apellido\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 253\n      },\n      __self: this\n    }))), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 256\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 257\n      },\n      __self: this\n    }, React.createElement(Button, {\n      style: fondoBoton,\n      type: \"submit\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 258\n      },\n      __self: this\n    }, \"Guardar\"), '', React.createElement(Button, {\n      style: fondoBotonS,\n      color: \"secondary\",\n      onClick: this.onClickCancelar,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 259\n      },\n      __self: this\n    }, \"Cancelar\")), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 261\n      },\n      __self: this\n    }), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 262\n      },\n      __self: this\n    })), React.createElement(NotificationContainer, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 264\n      },\n      __self: this\n    })), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 267\n      },\n      __self: this\n    }))));\n  }\n\n}\n\nEditarModulo.propTypes = {\n  previewLogoUrl: PropTypes.string,\n  tipoDeImagen: PropTypes.string,\n  pesoMaximo: PropTypes.number,\n  anchuraMaxima: PropTypes.number,\n  alturaMaxima: PropTypes.number,\n  handleSubmit: PropTypes.func.isRequired\n};\nEditarModulo.defaultProps = {\n  previewLogoUrl: \"https://imgplaceholder.com/400x300\",\n  tipoDeImagen: \"image/jpeg, image/png\",\n  pesoMaximo: 100,\n  anchuraMaxima: 100,\n  alturaMaxima: 100\n};\n\nconst generarInput = ({\n  input,\n  placeholder,\n  label,\n  type,\n  meta: {\n    touched,\n    warning,\n    error\n  }\n}) => React.createElement(\"div\", {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 279\n  },\n  __self: this\n}, React.createElement(\"div\", {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 280\n  },\n  __self: this\n}, React.createElement(\"input\", Object.assign({}, input, {\n  type: type,\n  style: {\n    fontSize: \"12px\"\n  },\n  className: \"form-control letra form-control-solid placeholder-no-fix\",\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 281\n  },\n  __self: this\n})), touched && (error && React.createElement(\"span\", {\n  className: \"text-danger letra form-group\",\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 282\n  },\n  __self: this\n}, error) || warning && React.createElement(\"span\", {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 282\n  },\n  __self: this\n}, warning))));\n\nconst renderTextArea = ({\n  input,\n  meta: {\n    touched,\n    error,\n    warning\n  }\n}) => React.createElement(\"div\", {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 288\n  },\n  __self: this\n}, React.createElement(\"div\", {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 289\n  },\n  __self: this\n}, React.createElement(\"textarea\", Object.assign({}, input, {\n  style: {\n    fontSize: \"12px\"\n  },\n  className: \"form-control letra form-control-solid placeholder-no-fix\",\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 290\n  },\n  __self: this\n})), touched && (error && React.createElement(\"span\", {\n  className: \"text-danger letra form-group\",\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 291\n  },\n  __self: this\n}, error) || warning && React.createElement(\"span\", {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 291\n  },\n  __self: this\n}, warning))));\n\nconst estiloLetrero = {\n  paddingTop: \"20px\",\n  paddingRight: \"12px\",\n  paddingLeft: \"40px\",\n  paddingBottom: \"1px\"\n};\nconst fondoBarraSuperior = {\n  background: \"#FFFFFF\"\n};\nconst fondoBoton = {\n  background: \"#ec671d\",\n  fontSize: \"14px\",\n  fontFamily: \"Open sans, sans-serif\"\n};\nconst fondoBotonS = {\n  background: \"secondary\",\n  fontSize: \"14px\",\n  fontFamily: \"Open sans, sans-serif\"\n};\n\nfunction mapStateToProps(state) {\n  return {\n    codigoModulo: state.mod.codigoModulo,\n    mensajeEditar: state.mod.mensajeEditarModulo,\n    initialValues: {\n      nombre: state.mod.moduloEditar.nombreModulo,\n      descripcion: state.mod.moduloEditar.descripcionModulo,\n      imagen: state.mod.moduloEditar.imagenModulo\n    }\n  };\n}\n\nlet formularioEditar = reduxForm({\n  form: 'editarModulo',\n  enableReinitialize: true\n})(EditarModulo);\nexport default withRouter(connect(mapStateToProps, {\n  actionCargarInformacionDeModulo,\n  actionEditarModulo,\n  actionConsultarActividadesModulo,\n  actualizarMensajeEditar\n})(formularioEditar));","map":{"version":3,"sources":["C:/Users/jeiso/Desktop/REACT/proyectosESCOM/frontend/ESCOM-view/src/SuperAdministrador/componentes/editar/editarModulo.js"],"names":["React","Button","Barra","NotificationContainer","NotificationManager","withRouter","Alerta","campo","PropTypes","requerido","validacionCuarentaCaracteres","validacionDoscientosCaracteres","actionCargarInformacionDeModulo","actionEditarModulo","actionConsultarActividadesModulo","actualizarMensajeEditar","connect","reduxForm","Field","EditarModulo","Component","state","habilitado","actividadesSeleccionadas","validateImageWeight","imageFile","size","imageFileKb","pesoMaximo","props","validateImageWidth","anchuraMaxima","width","validateImageHeight","alturaMaxima","height","validateImageFormat","tipoDeImagen","includes","type","handlePreview","imageUrl","previewImageDom","document","querySelector","src","handleChange","event","input","preventDefault","target","files","error","value","localImageUrl","URL","createObjectURL","imageObject","window","Image","onload","naturalWidth","naturalHeight","onChange","revokeObjectURL","renderFileInput","meta","mimeType","touched","warning","name","handleSubmitForm","values","console","log","image","undefined","getBase64","result","modulo","nombreModulo","nombre","descripcionModulo","descripcion","imagenModulo","estadoModulo","codigoModulo","localStorage","getItem","onClickCancelar","history","push","file","cb","reader","FileReader","readAsDataURL","onerror","componentDidUpdate","mensajeEditar","setState","success","componentDidMount","length","render","estiloLetrero","paddingTop","paddingRight","paddingLeft","paddingBottom","margin","fondoBarraSuperior","textShadow","fontSize","fontFamily","fontWeight","padding","color","background","fondoBoton","initialValues","imagen","borderRadius","objectFit","handleSubmit","generarInput","apellido","renderTextArea","fondoBotonS","propTypes","previewLogoUrl","string","number","func","isRequired","defaultProps","placeholder","label","mapStateToProps","mod","mensajeEditarModulo","moduloEditar","formularioEditar","form","enableReinitialize"],"mappings":"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","sourcesContent":["import React from 'react';\r\n\r\n//estilos\r\nimport '../../css/business-casual.css'\r\nimport '../../css/estilos.css'\r\nimport '../../css/bootstrap.min.css'\r\nimport '../../css/menu.css'\r\n\r\nimport { Button } from 'reactstrap';\r\n\r\n\r\n//componentes\r\nimport Barra from '../general/BarraDirecciones';\r\nimport { NotificationContainer, NotificationManager } from 'react-notifications';\r\nimport { withRouter } from 'react-router-dom';\r\nimport Alerta from '@icons/material/AlertIcon.js';\r\nimport { campo } from '../../utilitario/GenerarInputs.js';\r\nimport PropTypes from \"prop-types\";\r\nimport {requerido,validacionCuarentaCaracteres,validacionDoscientosCaracteres} from '../../utilitario/validacionCampos.js';\r\n\r\n//redux\r\nimport { actionCargarInformacionDeModulo, actionEditarModulo, actionConsultarActividadesModulo, actualizarMensajeEditar } from '../../actions/actionsModulo.js'\r\nimport { connect } from \"react-redux\";\r\nimport { reduxForm, Field } from 'redux-form';\r\n\r\n\r\nclass EditarModulo extends React.Component {\r\n\r\n    state = {\r\n        habilitado: false,\r\n        actividadesSeleccionadas: []\r\n    }\r\n\r\n\r\n    static propTypes = {\r\n        previewLogoUrl: PropTypes.string,\r\n        tipoDeImagen: PropTypes.string,\r\n        pesoMaximo: PropTypes.number,\r\n        anchuraMaxima: PropTypes.number,\r\n        alturaMaxima: PropTypes.number,\r\n        handleSubmit: PropTypes.func.isRequired\r\n    };\r\n    static defaultProps = {\r\n        previewLogoUrl: \"https://imgplaceholder.com/400x300\",\r\n        tipoDeImagen: \"image/jpeg, image/png\",\r\n        pesoMaximo: 100,\r\n        anchuraMaxima: 100,\r\n        alturaMaxima: 100\r\n    };\r\n    validateImageWeight = imageFile => {\r\n        if (imageFile && imageFile.size) {\r\n            const imageFileKb = imageFile.size / 1024;\r\n            const { pesoMaximo } = this.props;\r\n\r\n            if (imageFileKb > pesoMaximo) {\r\n                return `El tamaÃ±o de la imagen debe ser menor o igual a ${pesoMaximo}kb`;\r\n            }\r\n        }\r\n    };\r\n    validateImageWidth = imageFile => {\r\n        if (imageFile) {\r\n            const { anchuraMaxima } = this.props;\r\n            if (imageFile.width > anchuraMaxima) {\r\n                return `El ancho de la imagen debe ser menor o igual a ${anchuraMaxima}px`;\r\n            }\r\n        }\r\n    };\r\n    validateImageHeight = imageFile => {\r\n        if (imageFile) {\r\n            const { alturaMaxima } = this.props;\r\n\r\n            if (imageFile.height > alturaMaxima) {\r\n                return `La altura de la imagen debe ser menor o igual a ${alturaMaxima}px`;\r\n            }\r\n        }\r\n    };\r\n    validateImageFormat = imageFile => {\r\n        if (imageFile) {\r\n            const { tipoDeImagen } = this.props;\r\n            if (!tipoDeImagen.includes(imageFile.type)) {\r\n                return `El tipo de imagen debe ser ${tipoDeImagen}`;\r\n            }\r\n        }\r\n    };\r\n    handlePreview = imageUrl => {\r\n        const previewImageDom = document.querySelector(\".preview-image\");\r\n        previewImageDom.src = imageUrl;\r\n    };\r\n\r\n    handleChange = (event, input) => {\r\n        event.preventDefault();\r\n        let imageFile = event.target.files[0];\r\n        const { tipoDeImagen } = this.props;\r\n        if (imageFile) {\r\n            if (!tipoDeImagen.includes(imageFile.type)) {\r\n                NotificationManager.error('Seleccione un archivo de imagen .jpg o .png');\r\n                event.target.value = null;\r\n            } else {\r\n                const localImageUrl = URL.createObjectURL(imageFile);\r\n                const imageObject = new window.Image();\r\n\r\n                imageObject.onload = () => {\r\n                    imageFile.width = imageObject.naturalWidth;\r\n                    imageFile.height = imageObject.naturalHeight;\r\n                    input.onChange(imageFile);\r\n                    URL.revokeObjectURL(imageFile);\r\n                };\r\n                imageObject.src = localImageUrl;\r\n                this.handlePreview(localImageUrl);\r\n            }\r\n        }\r\n    };\r\n\r\n    renderFileInput = ({ input, type, meta }) => {\r\n        const { mimeType } = this.props;\r\n        const { touched, error, warning } = meta;\r\n        return (\r\n            <div>\r\n                <input\r\n                    name={input.name}\r\n                    type={type}\r\n                    accept={mimeType}\r\n                    onChange={event => this.handleChange(event, input)}\r\n                />\r\n                {touched && ((error && <span className=\"text-danger letra form-group\">{error}</span>) || (warning && <span>{warning}</span>))}\r\n            </div>\r\n        );\r\n    };\r\n\r\n\r\n    handleSubmitForm = values => {\r\n        console.log('values image', values.image);\r\n        if (!(values.image === undefined | values.image === null)) {\r\n            this.getBase64(values.image, (result) => {\r\n                let modulo = {\r\n                    nombreModulo: values.nombre,\r\n                    descripcionModulo: values.descripcion,\r\n                    imagenModulo: result,\r\n                    estadoModulo: 'Activo'\r\n                }\r\n                this.props.actionEditarModulo(modulo, this.props.codigoModulo, localStorage.getItem('Token'));\r\n            });\r\n            this.props.actionEditarModulo(modulo, this.props.codigoModulo, localStorage.getItem('Token'));\r\n        } else {\r\n            NotificationManager.error('Seleccione un archivo de imagen .jpg o .png');\r\n        }\r\n\r\n    };\r\n\r\n\r\n\r\n\r\n    getBase64(file, cb) {\r\n        let reader = new FileReader();\r\n        reader.readAsDataURL(file);\r\n        reader.onload = function () {\r\n            cb(reader.result)\r\n        };\r\n        reader.onerror = function (error) {\r\n            console.log('Error: ', error);\r\n        };\r\n    }\r\n\r\n    componentDidUpdate() {\r\n        if (this.props.mensajeEditar === 'Sin permiso') {\r\n            if (!this.state.habilitado) { this.setState({ habilitado: true }) };\r\n            // this.props.history.push('/adminUsuario');\r\n        }\r\n        if (this.props.mensajeEditar === 'modulo editado') {\r\n            NotificationManager.success('Informacion actualizada correctamente');\r\n            this.props.actualizarMensajeEditar('');\r\n            this.props.history.push('/adminModulo');\r\n        }\r\n    }\r\n\r\n    componentDidMount() {\r\n        if (this.props.codigoModulo === undefined || this.props.codigoModulo.length === 0) {\r\n            this.props.history.push('/adminModulo');\r\n        } else {\r\n            this.props.actionCargarInformacionDeModulo(this.props.codigoModulo, localStorage.getItem('Token'));\r\n        }\r\n    }\r\n\r\n\r\n    onClickCancelar = (event) => {\r\n        event.preventDefault();\r\n        this.props.history.push('/adminModulo');\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                <div class=\"text-left titulo\" style={estiloLetrero}>\r\n                    <h4>Editar modulo</h4>\r\n                </div>\r\n                <Barra texto=\"Inicio > Editar modulo\" />\r\n                <div className=\"col-sm-12\" style={{\r\n                    paddingTop: \"0px\",\r\n                    paddingRight: \"40px\",\r\n                    paddingLeft: \"40px\",\r\n                    paddingBottom: \"0px\",\r\n                    margin: \"0px 0px 30px\"\r\n\r\n                }}>\r\n\r\n                    <div className=\"container shadow\" style={fondoBarraSuperior}>\r\n                        <br />\r\n                        {\r\n                            this.state.habilitado ? <div className=\"col-sm-12\"> <span className=\"col-sm-2 center\" style={{\r\n                                textShadow: \"none!important\",\r\n                                fontSize: \"16px\",\r\n                                fontFamily: \"Open Sans,sans-serif\",\r\n                                fontWeight: \"300\",\r\n                                padding: \"13px 122px\",\r\n                                color: \"#fff\",\r\n                                background: \"rgb(158, 35, 45)\"\r\n                            }}><Alerta />No tiene los permisos suficientes para editar informacion del modulo</span>\r\n                                <div style={{ padding: \"25px 44px 25px 287px\" }}>\r\n                                    <Button style={fondoBoton} onClick={this.onClickCancelar} type=\"submit\">Aceptar</Button>{''}\r\n                                </div>\r\n                            </div> :\r\n                                <>\r\n                                    <div style={{ padding: \"30px 30px 30px 77px\" }}>\r\n                                        <img src={campo(this.props.initialValues.imagen)} alt=\"preview\"\r\n                                            className=\"preview-image\"\r\n                                            style={{ height: \"200px\", width: \"200px\", borderRadius: \"50%\", objectFit: \"cover\" }} />\r\n                                    </div>\r\n                                    <form className=\"letra\" onSubmit={this.props.handleSubmit(this.handleSubmitForm)}>\r\n                                        <br />\r\n                                        <label>Imagen</label>\r\n                                        <Field\r\n                                            name=\"image\"\r\n                                            type=\"file\"\r\n                                            validate={[\r\n                                                this.validateImageWeight,\r\n                                                this.validateImageWidth,\r\n                                                this.validateImageHeight,\r\n                                                this.validateImageFormat\r\n                                            ]}\r\n                                            component={this.renderFileInput}\r\n                                        />\r\n                                        <br />\r\n                                        <label>Nombre</label>\r\n                                        <div className=\"row\">\r\n                                            <div className=\"col-sm-5\">\r\n                                                <Field name=\"nombre\" validate={[requerido, nombre]} component={generarInput} label=\"Nombre\" />\r\n                                            </div>\r\n                                        </div>\r\n                                        <br />\r\n                                        <label>Descripcion</label>\r\n                                        <div className=\"row\">\r\n                                            <div className=\"col-sm-5\">\r\n                                                <Field name=\"descripcion\" validate={[requerido, apellido]} component={renderTextArea} label=\"Apellido\" />\r\n                                            </div>\r\n                                        </div>\r\n                                        <br />\r\n                                        <div>\r\n                                            <Button style={fondoBoton} type=\"submit\">Guardar</Button>{''}\r\n                                            <Button style={fondoBotonS} color=\"secondary\" onClick={this.onClickCancelar}>Cancelar</Button>\r\n                                        </div>\r\n                                        <br />\r\n                                        <br />\r\n                                    </form>\r\n                                    <NotificationContainer />\r\n                                </>\r\n                        }\r\n                        <br />\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        )\r\n\r\n\r\n    }\r\n}\r\n\r\n\r\nconst generarInput = ({ input, placeholder, label, type, meta: { touched, warning, error } }) => (\r\n    <div>\r\n        <div>\r\n            <input {...input} type={type} style={{ fontSize: \"12px\" }} className=\"form-control letra form-control-solid placeholder-no-fix\" />\r\n            {touched && ((error && <span className=\"text-danger letra form-group\">{error}</span>) || (warning && <span>{warning}</span>))}\r\n        </div>\r\n    </div>\r\n)\r\n\r\nconst renderTextArea = ({ input, meta: { touched, error, warning } }) => (\r\n    <div>\r\n        <div>\r\n            <textarea {...input} style={{ fontSize: \"12px\" }} className=\"form-control letra form-control-solid placeholder-no-fix\" />\r\n            {touched && ((error && <span className=\"text-danger letra form-group\">{error}</span>) || (warning && <span>{warning}</span>))}\r\n        </div>\r\n    </div>\r\n);\r\n\r\nconst estiloLetrero = {\r\n    paddingTop: \"20px\",\r\n    paddingRight: \"12px\",\r\n    paddingLeft: \"40px\",\r\n    paddingBottom: \"1px\"\r\n}\r\n\r\n\r\nconst fondoBarraSuperior = {\r\n    background: \"#FFFFFF\"\r\n\r\n}\r\n\r\n\r\n\r\nconst fondoBoton = {\r\n    background: \"#ec671d\",\r\n    fontSize: \"14px\",\r\n    fontFamily: \"Open sans, sans-serif\"\r\n\r\n}\r\n\r\nconst fondoBotonS = {\r\n    background: \"secondary\",\r\n    fontSize: \"14px\",\r\n    fontFamily: \"Open sans, sans-serif\"\r\n\r\n}\r\n\r\nfunction mapStateToProps(state) {\r\n    return {\r\n        codigoModulo: state.mod.codigoModulo,\r\n        mensajeEditar: state.mod.mensajeEditarModulo,\r\n        initialValues: {\r\n            nombre: state.mod.moduloEditar.nombreModulo,\r\n            descripcion: state.mod.moduloEditar.descripcionModulo,\r\n            imagen: state.mod.moduloEditar.imagenModulo,\r\n        }\r\n    }\r\n}\r\n\r\n\r\nlet formularioEditar = reduxForm({\r\n    form: 'editarModulo',\r\n    enableReinitialize: true\r\n})(EditarModulo)\r\n\r\nexport default withRouter(connect(mapStateToProps, { actionCargarInformacionDeModulo, actionEditarModulo, actionConsultarActividadesModulo, actualizarMensajeEditar })(formularioEditar));\r\n\r\n"]},"metadata":{},"sourceType":"module"}