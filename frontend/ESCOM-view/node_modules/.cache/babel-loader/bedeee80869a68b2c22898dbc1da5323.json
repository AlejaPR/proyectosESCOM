{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\jeiso\\\\Desktop\\\\proyectosESCOM\\\\frontend\\\\ESCOM-view\\\\src\\\\ModuloDocumental\\\\components\\\\Setting\\\\Condition\\\\edit.js\";\nimport React from 'react';\nimport { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { reduxForm, Field } from 'redux-form';\nimport { getListProcesses } from '../../../redux/actions/processA.js';\nimport { editCondition } from '../../../redux/actions/conditionA.js';\nimport { withRouter } from 'react-router-dom';\nimport { required, thousand, threeHundred, minimum, select } from '../../utilitarian/validations.js';\nimport { toast } from 'react-toastify';\n\nclass Edit extends Component {\n  constructor(...args) {\n    super(...args);\n\n    this.handleSubmit = formValues => {\n      let dateS = new Date(formValues.startDate);\n      let dateF = new Date(formValues.finalDate);\n      let nowD = new Date();\n\n      if (dateS.getDay < nowD.getDay) {\n        toast.info('La fecha inicial tiene que ser igual o mayor al dÃ­a de hoy.');\n      } else if (dateF <= dateS) {\n        toast.info('La fecha final tiene que ser mayor a la fecha inicial.');\n      } else {\n        console.log(formValues);\n        let conditionN = {\n          id: this.props.condition.id,\n          name: formValues.name,\n          description: formValues.description,\n          state: 1,\n          startDate: dateS,\n          finalDate: dateF,\n          process: formValues.process,\n          requestData: null\n        };\n        console.log(conditionN);\n        this.props.editCondition(localStorage.getItem('Token'), conditionN);\n      }\n    };\n  }\n\n  componentWillMount() {\n    this.props.getListProcesses(localStorage.getItem('Token'), sessionStorage.getItem('documentId'));\n  }\n\n  loadList() {\n    return this.props.processes.map(process => {\n      return React.createElement(\"option\", {\n        value: process.id,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 45\n        },\n        __self: this\n      }, process.name);\n    });\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 52\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      class: \"modal fade\",\n      id: \"editModal\",\n      tabindex: \"-1\",\n      role: \"dialog\",\n      \"aria-labelledby\": \"exampleModalLabel\",\n      \"aria-hidden\": \"true\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 53\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      class: \"modal-dialog\",\n      role: \"document\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 54\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      class: \"modal-content\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 55\n      },\n      __self: this\n    }, React.createElement(\"form\", {\n      className: \"form-horizontal\",\n      onSubmit: this.props.handleSubmit(this.handleSubmit),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 56\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      class: \"modal-header\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 57\n      },\n      __self: this\n    }, React.createElement(\"h5\", {\n      class: \"modal-title\",\n      id: \"exampleModalLabel\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 58\n      },\n      __self: this\n    }, \"Editar condici\\xF3n\"), React.createElement(\"button\", {\n      type: \"button\",\n      class: \"close\",\n      \"data-dismiss\": \"modal\",\n      \"aria-label\": \"Close\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 59\n      },\n      __self: this\n    }, React.createElement(\"span\", {\n      \"aria-hidden\": \"true\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 60\n      },\n      __self: this\n    }, \"\\xD7\"))), React.createElement(\"div\", {\n      class: \"modal-body\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 63\n      },\n      __self: this\n    }, React.createElement(\"label\", {\n      for: \"form_control_1\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 64\n      },\n      __self: this\n    }, \"Nombre: \"), React.createElement(\"div\", {\n      className: \"row\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 65\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"col-sm\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 66\n      },\n      __self: this\n    }, React.createElement(Field, {\n      name: \"name\",\n      validate: [required, minimum, threeHundred],\n      component: generarInput,\n      label: \"Nombre\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 67\n      },\n      __self: this\n    }))), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 70\n      },\n      __self: this\n    }), React.createElement(\"label\", {\n      for: \"form_control_1\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 71\n      },\n      __self: this\n    }, \"Descripci\\xF3n: \"), React.createElement(\"div\", {\n      className: \"row\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 72\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"col-sm\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 73\n      },\n      __self: this\n    }, React.createElement(Field, {\n      name: \"description\",\n      validate: [required, minimum, thousand],\n      component: generarText,\n      label: \"Descripcion\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 74\n      },\n      __self: this\n    }))), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 77\n      },\n      __self: this\n    }), React.createElement(\"label\", {\n      for: \"form_control_1\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 78\n      },\n      __self: this\n    }, \"Fecha inicio: \"), React.createElement(\"div\", {\n      className: \"row\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 79\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"col-sm\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 80\n      },\n      __self: this\n    }, React.createElement(Field, {\n      name: \"startDate\",\n      validate: [required],\n      type: \"date\",\n      component: generarInput,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 81\n      },\n      __self: this\n    }))), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 84\n      },\n      __self: this\n    }), React.createElement(\"label\", {\n      for: \"form_control_1\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 85\n      },\n      __self: this\n    }, \"Fecha final: \"), React.createElement(\"div\", {\n      className: \"row\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 86\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"col-sm\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 87\n      },\n      __self: this\n    }, React.createElement(Field, {\n      name: \"finalDate\",\n      validate: [required],\n      type: \"date\",\n      component: generarInput,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 88\n      },\n      __self: this\n    }))), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 91\n      },\n      __self: this\n    }), React.createElement(\"label\", {\n      for: \"form_control_1\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 92\n      },\n      __self: this\n    }, \"Proceso: \"), React.createElement(\"div\", {\n      className: \"row\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 93\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"col-sm\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 94\n      },\n      __self: this\n    }, React.createElement(Field, {\n      name: \"process\",\n      validate: [select],\n      className: \"bs-select form-control\",\n      component: generarSelect,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 95\n      },\n      __self: this\n    }, React.createElement(\"option\", {\n      value: \"0\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 96\n      },\n      __self: this\n    }, \"Seleccione...\"), this.loadList())))), React.createElement(\"div\", {\n      class: \"modal-footer\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 103\n      },\n      __self: this\n    }, React.createElement(\"button\", {\n      type: \"button\",\n      class: \"btn btn-secondary\",\n      \"data-dismiss\": \"modal\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 104\n      },\n      __self: this\n    }, \"Close\"), React.createElement(\"button\", {\n      type: \"submit\",\n      className: \"btn btn-default naranja\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 105\n      },\n      __self: this\n    }, \"Guardar\")))))));\n  }\n\n}\n\nconst generarSelect = ({\n  input,\n  label,\n  type,\n  meta: {\n    touched,\n    error\n  },\n  children\n}) => React.createElement(\"div\", {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 118\n  },\n  __self: this\n}, React.createElement(\"div\", {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 119\n  },\n  __self: this\n}, React.createElement(\"select\", Object.assign({}, input, {\n  className: \"form-control letra\",\n  style: {\n    height: \"35px\",\n    fontSize: \"13px\"\n  },\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 120\n  },\n  __self: this\n}), children), touched && error && React.createElement(\"span\", {\n  className: \"text-danger letra form-group\",\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 123\n  },\n  __self: this\n}, error)));\n\nconst generarText = ({\n  input,\n  placeholder,\n  label,\n  type,\n  meta: {\n    touched,\n    warning,\n    error\n  }\n}) => React.createElement(\"div\", {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 129\n  },\n  __self: this\n}, React.createElement(\"div\", {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 130\n  },\n  __self: this\n}, React.createElement(\"textarea\", Object.assign({}, input, {\n  className: \"form-control letra form-control-solid placeholder-no-fix\",\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 131\n  },\n  __self: this\n})), touched && (error && React.createElement(\"span\", {\n  className: \"text-danger letra form-group\",\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 132\n  },\n  __self: this\n}, error) || warning && React.createElement(\"span\", {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 132\n  },\n  __self: this\n}, warning))));\n\nconst generarInput = ({\n  input,\n  placeholder,\n  label,\n  type,\n  meta: {\n    touched,\n    warning,\n    error\n  }\n}) => React.createElement(\"div\", {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 138\n  },\n  __self: this\n}, React.createElement(\"div\", {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 139\n  },\n  __self: this\n}, React.createElement(\"input\", Object.assign({}, input, {\n  type: type,\n  className: \"form-control letra form-control-solid placeholder-no-fix\",\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 140\n  },\n  __self: this\n})), touched && (error && React.createElement(\"span\", {\n  className: \"text-danger letra form-group\",\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 141\n  },\n  __self: this\n}, error) || warning && React.createElement(\"span\", {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 141\n  },\n  __self: this\n}, warning))));\n\nfunction mapStateToProps(state) {\n  return {\n    processes: state.process.listProcessR,\n    condition: state.condition.conditionR,\n    initialValues: {\n      name: state.condition.conditionR.name,\n      description: state.condition.conditionR.description,\n      process: state.condition.conditionR.process,\n      startDate: state.condition.conditionR.startDateS,\n      finalDate: state.condition.conditionR.finalDateS\n    }\n  };\n}\n\nlet formEdit = reduxForm({\n  form: 'editCondition',\n  enableReinitialize: true\n})(Edit);\nexport default withRouter(connect(mapStateToProps, {\n  getListProcesses,\n  editCondition\n})(formEdit));","map":{"version":3,"sources":["C:/Users/jeiso/Desktop/proyectosESCOM/frontend/ESCOM-view/src/ModuloDocumental/components/Setting/Condition/edit.js"],"names":["React","Component","connect","reduxForm","Field","getListProcesses","editCondition","withRouter","required","thousand","threeHundred","minimum","select","toast","Edit","handleSubmit","formValues","dateS","Date","startDate","dateF","finalDate","nowD","getDay","info","console","log","conditionN","id","props","condition","name","description","state","process","requestData","localStorage","getItem","componentWillMount","sessionStorage","loadList","processes","map","render","generarInput","generarText","generarSelect","input","label","type","meta","touched","error","children","height","fontSize","placeholder","warning","mapStateToProps","listProcessR","conditionR","initialValues","startDateS","finalDateS","formEdit","form","enableReinitialize"],"mappings":"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","sourcesContent":["import React from 'react';\r\nimport { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { reduxForm, Field } from 'redux-form';\r\nimport { getListProcesses } from '../../../redux/actions/processA.js';\r\nimport { editCondition } from '../../../redux/actions/conditionA.js';\r\nimport { withRouter } from 'react-router-dom';\r\nimport { required, thousand, threeHundred, minimum, select } from '../../utilitarian/validations.js';\r\nimport { toast } from 'react-toastify';\r\n\r\nclass Edit extends Component {\r\n\r\n    componentWillMount() {\r\n        this.props.getListProcesses(localStorage.getItem('Token'), sessionStorage.getItem('documentId'))\r\n    }\r\n\r\n    handleSubmit = formValues => {\r\n        let dateS = new Date(formValues.startDate);\r\n        let dateF = new Date(formValues.finalDate);\r\n        let nowD = new Date();\r\n        if (dateS.getDay < nowD.getDay) {\r\n            toast.info('La fecha inicial tiene que ser igual o mayor al dÃ­a de hoy.');\r\n        } else if (dateF <= dateS) {\r\n            toast.info('La fecha final tiene que ser mayor a la fecha inicial.');\r\n        } else {\r\n            console.log(formValues);\r\n            let conditionN = {\r\n                id: this.props.condition.id,\r\n                name: formValues.name,\r\n                description: formValues.description,\r\n                state: 1,\r\n                startDate: dateS,\r\n                finalDate: dateF,\r\n                process: formValues.process,\r\n                requestData: null\r\n            }\r\n            console.log(conditionN);\r\n            this.props.editCondition(localStorage.getItem('Token'), conditionN);\r\n        }\r\n    }\r\n\r\n    loadList() {\r\n        return this.props.processes.map((process) => {\r\n            return (\r\n                <option value={process.id}>{process.name}</option>\r\n            )\r\n        })\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                <div class=\"modal fade\" id=\"editModal\" tabindex=\"-1\" role=\"dialog\" aria-labelledby=\"exampleModalLabel\" aria-hidden=\"true\">\r\n                    <div class=\"modal-dialog\" role=\"document\">\r\n                        <div class=\"modal-content\">\r\n                            <form className=\"form-horizontal\" onSubmit={this.props.handleSubmit(this.handleSubmit)}>\r\n                                <div class=\"modal-header\">\r\n                                    <h5 class=\"modal-title\" id=\"exampleModalLabel\">Editar condiciÃ³n</h5>\r\n                                    <button type=\"button\" class=\"close\" data-dismiss=\"modal\" aria-label=\"Close\">\r\n                                        <span aria-hidden=\"true\">&times;</span>\r\n                                    </button>\r\n                                </div>\r\n                                <div class=\"modal-body\">\r\n                                    <label for=\"form_control_1\">Nombre: </label>\r\n                                    <div className=\"row\">\r\n                                        <div className=\"col-sm\">\r\n                                            <Field name=\"name\" validate={[required, minimum, threeHundred]} component={generarInput} label=\"Nombre\" />\r\n                                        </div>\r\n                                    </div>\r\n                                    <br />\r\n                                    <label for=\"form_control_1\">DescripciÃ³n: </label>\r\n                                    <div className=\"row\">\r\n                                        <div className=\"col-sm\">\r\n                                            <Field name=\"description\" validate={[required, minimum, thousand]} component={generarText} label=\"Descripcion\" />\r\n                                        </div>\r\n                                    </div>\r\n                                    <br />\r\n                                    <label for=\"form_control_1\">Fecha inicio: </label>\r\n                                    <div className=\"row\">\r\n                                        <div className=\"col-sm\">\r\n                                            <Field name=\"startDate\" validate={[required]} type=\"date\" component={generarInput} />\r\n                                        </div>\r\n                                    </div>\r\n                                    <br />\r\n                                    <label for=\"form_control_1\">Fecha final: </label>\r\n                                    <div className=\"row\">\r\n                                        <div className=\"col-sm\">\r\n                                            <Field name=\"finalDate\" validate={[required]} type=\"date\" component={generarInput} />\r\n                                        </div>\r\n                                    </div>\r\n                                    <br />\r\n                                    <label for=\"form_control_1\">Proceso: </label>\r\n                                    <div className=\"row\">\r\n                                        <div className=\"col-sm\">\r\n                                            <Field name=\"process\" validate={[select]} className=\"bs-select form-control\" component={generarSelect}>\r\n                                                <option value=\"0\">Seleccione...</option>\r\n                                                {this.loadList()}\r\n                                            </Field>\r\n                                        </div>\r\n                                    </div>\r\n\r\n                                </div>\r\n                                <div class=\"modal-footer\">\r\n                                    <button type=\"button\" class=\"btn btn-secondary\" data-dismiss=\"modal\">Close</button>\r\n                                    <button type=\"submit\" className=\"btn btn-default naranja\">Guardar</button>\r\n                                </div>\r\n                            </form>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n\r\n}\r\n\r\nconst generarSelect = ({ input, label, type, meta: { touched, error }, children }) => (\r\n    <div>\r\n        <div>\r\n            <select {...input} className=\"form-control letra\" style={{ height: \"35px\", fontSize: \"13px\" }}>\r\n                {children}\r\n            </select>\r\n            {touched && ((error && <span className=\"text-danger letra form-group\">{error}</span>))}\r\n        </div>\r\n    </div>\r\n)\r\n\r\nconst generarText = ({ input, placeholder, label, type, meta: { touched, warning, error } }) => (\r\n    <div>\r\n        <div>\r\n            <textarea {...input} className=\"form-control letra form-control-solid placeholder-no-fix\" />\r\n            {touched && ((error && <span className=\"text-danger letra form-group\">{error}</span>) || (warning && <span>{warning}</span>))}\r\n        </div>\r\n    </div>\r\n)\r\n\r\nconst generarInput = ({ input, placeholder, label, type, meta: { touched, warning, error } }) => (\r\n    <div>\r\n        <div>\r\n            <input {...input} type={type} className=\"form-control letra form-control-solid placeholder-no-fix\" />\r\n            {touched && ((error && <span className=\"text-danger letra form-group\">{error}</span>) || (warning && <span>{warning}</span>))}\r\n        </div>\r\n    </div>\r\n)\r\n\r\nfunction mapStateToProps(state) {\r\n    return {\r\n        processes: state.process.listProcessR,\r\n        condition: state.condition.conditionR,\r\n        initialValues: {\r\n            name: state.condition.conditionR.name,\r\n            description: state.condition.conditionR.description,\r\n            process: state.condition.conditionR.process,\r\n            startDate: state.condition.conditionR.startDateS,\r\n            finalDate: state.condition.conditionR.finalDateS\r\n        }\r\n    }\r\n\r\n}\r\n\r\nlet formEdit = reduxForm({\r\n    form: 'editCondition',\r\n    enableReinitialize: true\r\n})(Edit)\r\n\r\nexport default withRouter(connect(mapStateToProps, { getListProcesses, editCondition })(formEdit));"]},"metadata":{},"sourceType":"module"}