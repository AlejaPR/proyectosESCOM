{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\jeiso\\\\Desktop\\\\REACT\\\\proyectosESCOM\\\\frontend\\\\ESCOM-view\\\\src\\\\SuperAdministrador\\\\componentes\\\\administrar\\\\ContenidoAdminModulo.js\";\n// import React from 'react';\n// //estilos\n// import '../../css/business-casual.css'\n// import '../../css/estilos.css'\n// import '../../css/bootstrap.min.css'\n// import '../../css/menu.css'\n// import { Button } from 'reactstrap';\n// //componentes\n// import Barra from '../general/BarraDirecciones.js'\n// import PopUpModulo from '../popup/PopUpModulo.js'\n// import Fila from '../general/FilaTablaUsuario.js'\n// class ContenidoAdminModulo extends React.Component {\n// \tstate = {\n// \t\tpost: []\n// \t}\n// \teventoBorrado = (evento) => {\n// \t\tevento.preventDefault();\n// \t\tconsole.log(this.state.post)\n// \t}\n// \tonChange = (evento) => {\n// \t\tthis.setState({\n// \t\t\t[evento.target.name]: evento.target.value\n// \t\t});\n// \t}\n// \tasync componentDidMount() {\n// \t\tconst respuesta = await fetch('http://localhost:8080/SuperadminustradorESCOM-web/api/usu/');\n// \t\tconst transformado = await respuesta.json();\n// \t\tthis.setState({ post: transformado });\n// \t\tconsole.log(transformado);\n// \t}\n// \trenderTableData() {\n// \t\treturn this.state.post.map((post, index) => {\n// \t\t\tconst { id} = post //destructuring\n// \t\t\treturn (\n// \t\t\t\t<Fila modulo={post} key={id} />\n// \t\t\t)\n// \t\t})\n// \t}\n// \tanadirModulo = (logo, nombremodulo, descripcion) => {\n// \t\tconst nuevoModulo = {\n// \t\t\tlogo: logo,\n// \t\t\tnombremodulo: nombremodulo,\n// \t\t\tdescripcion: descripcion\n// \t\t}\n// \t\tthis.setState({\n// \t\t\tpost: [...this.state.post, nuevoModulo]\n// \t\t})\n// \t}\n// \trender() {\n// \t\treturn (\n// \t\t\t<div>\n// \t\t\t\t<div class=\"text-left titulo\" style={estiloLetrero}>\n// \t\t\t\t\t<h4>Administrar modulos</h4>\n// \t\t\t\t</div>\n// \t\t\t\t<Barra texto=\"Inicio > Administración de modulos\"/>\n// \t\t\t\t<div className=\"col-sm-12\" style={{\n// \t\t\t\t\tpaddingTop: \"20px\",\n// \t\t\t\t\tpaddingRight: \"46px\",\n// \t\t\t\t\tpaddingLeft: \"40px\",\n// \t\t\t\t\tpaddingBottom: \"7px\"\n// \t\t\t\t}}>\n// \t\t\t\t\t<div className=\"input-group\">\n// \t\t\t\t\t\t<input type=\"text\" style={{fontSize:\"14px\"}}  className=\"form-control\" placeholder=\"\" />\n// \t\t\t\t\t\t<span className=\"input-group-btn\">\n// \t\t\t\t\t\t<Button className=\"\" style={fondoBoton}>Buscar</Button>\n// \t\t\t\t\t\t</span>\n// \t\t\t\t\t</div>\n// \t\t\t\t</div>\n// \t\t\t\t<div className=\"container\" style={{\n// \t\t\t\t\tpaddingTop: \"7px\",\n// \t\t\t\t\tpaddingRight: \"12px\",\n// \t\t\t\t\tpaddingLeft: \"40px\",\n// \t\t\t\t\tpaddingBottom: \"20px\",\n// \t\t\t\t\tmargin: \"0px 0px 32px\"\n// \t\t\t\t}}>\n// \t\t\t\t\t<div className=\"container shadow\" style={fondoBarraSuperior}>\n// \t\t\t\t\t\t<br />\n// \t\t\t\t\t\t<PopUpModulo funcion={this.anadirModulo}/>\n// \t\t\t\t\t\t<br />\n// \t\t\t\t\t\t<div className=\"jumbotron p-1 jumbotron-fluid\" style={fondoTabla}>\n// \t\t\t\t\t\t\t<table className=\"table table-hover table-bordered table-checkable\" style={fondoBarraSuperior}>\n// \t\t\t\t\t\t\t\t<thead className=\"table table-hover table-striped col-md-12\">\n// \t\t\t\t\t\t\t\t\t<tr>\n// \t\t\t\t\t\t\t\t\t\t<th className=\"letra\"> Logo </th>\n// \t\t\t\t\t\t\t\t\t\t<th className=\"letra\"> Nombre de modulo </th>\n// \t\t\t\t\t\t\t\t\t\t<th className=\"letra\"> Descripción </th>\n// \t\t\t\t\t\t\t\t\t\t<th className=\"letra\"> Estado </th>\n// \t\t\t\t\t\t\t\t\t\t<th className=\"letra\"> Acciones </th>\n// \t\t\t\t\t\t\t\t\t</tr>\n// \t\t\t\t\t\t\t\t</thead>\n// \t\t\t\t\t\t\t\t<tbody>\n// \t\t\t\t\t\t\t\t\t{\n// \t\t\t\t\t\t\t\t\t\tthis.renderTableData()\n// \t\t\t\t\t\t\t\t\t}\n// \t\t\t\t\t\t\t\t</tbody>\n// \t\t\t\t\t\t\t</table>\n// \t\t\t\t\t\t</div>\n// \t\t\t\t\t</div>\n// \t\t\t\t</div>\n// \t\t\t</div>\n// \t\t);\n// \t}\n// }\n// const fondoBoton = {\n// \tbackground: \"#ec671d\",\n// \tfontSize: \"14px\",\n// \tfontFamily: \"Open sans, sans-serif\"\n//   }\n// const estiloLetrero = {\n// \tpaddingTop: \"20px\",\n// \tpaddingRight: \"12px\",\n// \tpaddingLeft: \"40px\",\n// \tpaddingBottom: \"1px\"\n// }\n// const fondoBarraSuperior = {\n// \tbackground: \"#FFFFFF\"\n// }\n// const fondoTabla = {\n// \tbackground: \"#EAF2F2\"\n// }\n// export default ContenidoAdminModulo;\nimport React, { Component } from \"react\";\nimport { Form, Field, reduxForm } from \"redux-form\";\nimport DropZoneField from \"../components/DropzoneField/dropzoneField\";\n\nconst imageIsRequired = value => !value ? \"Required\" : undefined;\n\nclass UploadImageForm extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      imageFile: []\n    };\n\n    this.handleFormSubmit = formProps => {\n      const fd = new FormData();\n      fd.append(\"imageFile\", formProps.imageToUpload.file); // append any additional Redux form fields\n      // create an AJAX request here with the created formData\n\n      alert(JSON.stringify(formProps, null, 4));\n    };\n\n    this.handleOnDrop = (newImageFile, onChange) => {\n      const imageFile = {\n        file: newImageFile[0],\n        name: newImageFile[0].name,\n        preview: URL.createObjectURL(newImageFile[0]),\n        size: newImageFile[0].size\n      };\n      this.setState({\n        imageFile: [imageFile]\n      }, () => onChange(imageFile));\n    };\n\n    this.resetForm = () => this.setState({\n      imageFile: []\n    }, () => this.props.reset());\n\n    this.render = () => React.createElement(\"div\", {\n      className: \"app-container\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 182\n      },\n      __self: this\n    }, React.createElement(\"h1\", {\n      className: \"title\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 183\n      },\n      __self: this\n    }, \"Upload An Image\"), React.createElement(\"hr\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 184\n      },\n      __self: this\n    }), React.createElement(Form, {\n      onSubmit: this.props.handleSubmit(this.handleFormSubmit),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 185\n      },\n      __self: this\n    }, React.createElement(Field, {\n      name: \"imageToUpload\",\n      component: DropZoneField,\n      type: \"file\",\n      imagefile: this.state.imageFile,\n      handleOnDrop: this.handleOnDrop,\n      validate: [imageIsRequired],\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 186\n      },\n      __self: this\n    }), React.createElement(\"button\", {\n      type: \"submit\",\n      className: \"uk-button uk-button-primary uk-button-large submit\",\n      disabled: this.props.submitting,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 194\n      },\n      __self: this\n    }, \"Submit\"), React.createElement(\"button\", {\n      type: \"button\",\n      className: \"uk-button uk-button-default uk-button-large clear\",\n      disabled: this.props.pristine || this.props.submitting,\n      onClick: this.resetForm,\n      style: {\n        float: \"right\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 201\n      },\n      __self: this\n    }, \"Clear\")), React.createElement(\"div\", {\n      className: \"clear\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 211\n      },\n      __self: this\n    }));\n  }\n\n}\n\nexport default reduxForm({\n  form: \"UploadImageForm\"\n})(UploadImageForm);","map":{"version":3,"sources":["C:/Users/jeiso/Desktop/REACT/proyectosESCOM/frontend/ESCOM-view/src/SuperAdministrador/componentes/administrar/ContenidoAdminModulo.js"],"names":["React","Component","Form","Field","reduxForm","DropZoneField","imageIsRequired","value","undefined","UploadImageForm","state","imageFile","handleFormSubmit","formProps","fd","FormData","append","imageToUpload","file","alert","JSON","stringify","handleOnDrop","newImageFile","onChange","name","preview","URL","createObjectURL","size","setState","resetForm","props","reset","render","handleSubmit","submitting","pristine","float","form"],"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","sourcesContent":["// import React from 'react';\r\n\r\n// //estilos\r\n// import '../../css/business-casual.css'\r\n// import '../../css/estilos.css'\r\n// import '../../css/bootstrap.min.css'\r\n// import '../../css/menu.css'\r\n\r\n// import { Button } from 'reactstrap';\r\n\r\n\r\n// //componentes\r\n// import Barra from '../general/BarraDirecciones.js'\r\n// import PopUpModulo from '../popup/PopUpModulo.js'\r\n// import Fila from '../general/FilaTablaUsuario.js'\r\n\r\n// class ContenidoAdminModulo extends React.Component {\r\n\r\n// \tstate = {\r\n// \t\tpost: []\r\n// \t}\r\n\r\n// \teventoBorrado = (evento) => {\r\n// \t\tevento.preventDefault();\r\n// \t\tconsole.log(this.state.post)\r\n// \t}\r\n\r\n\r\n\r\n// \tonChange = (evento) => {\r\n// \t\tthis.setState({\r\n// \t\t\t[evento.target.name]: evento.target.value\r\n// \t\t});\r\n// \t}\r\n\r\n// \tasync componentDidMount() {\r\n// \t\tconst respuesta = await fetch('http://localhost:8080/SuperadminustradorESCOM-web/api/usu/');\r\n// \t\tconst transformado = await respuesta.json();\r\n// \t\tthis.setState({ post: transformado });\r\n// \t\tconsole.log(transformado);\r\n// \t}\r\n\r\n\r\n// \trenderTableData() {\r\n// \t\treturn this.state.post.map((post, index) => {\r\n// \t\t\tconst { id} = post //destructuring\r\n// \t\t\treturn (\r\n// \t\t\t\t<Fila modulo={post} key={id} />\r\n// \t\t\t)\r\n// \t\t})\r\n\r\n// \t}\r\n\r\n// \tanadirModulo = (logo, nombremodulo, descripcion) => {\r\n// \t\tconst nuevoModulo = {\r\n// \t\t\tlogo: logo,\r\n// \t\t\tnombremodulo: nombremodulo,\r\n// \t\t\tdescripcion: descripcion\r\n// \t\t}\r\n// \t\tthis.setState({\r\n// \t\t\tpost: [...this.state.post, nuevoModulo]\r\n// \t\t})\r\n// \t}\r\n\r\n// \trender() {\r\n// \t\treturn (\r\n// \t\t\t<div>\r\n// \t\t\t\t<div class=\"text-left titulo\" style={estiloLetrero}>\r\n// \t\t\t\t\t<h4>Administrar modulos</h4>\r\n// \t\t\t\t</div>\r\n// \t\t\t\t<Barra texto=\"Inicio > Administración de modulos\"/>\r\n// \t\t\t\t<div className=\"col-sm-12\" style={{\r\n// \t\t\t\t\tpaddingTop: \"20px\",\r\n// \t\t\t\t\tpaddingRight: \"46px\",\r\n// \t\t\t\t\tpaddingLeft: \"40px\",\r\n// \t\t\t\t\tpaddingBottom: \"7px\"\r\n// \t\t\t\t}}>\r\n// \t\t\t\t\t<div className=\"input-group\">\r\n// \t\t\t\t\t\t<input type=\"text\" style={{fontSize:\"14px\"}}  className=\"form-control\" placeholder=\"\" />\r\n// \t\t\t\t\t\t<span className=\"input-group-btn\">\r\n// \t\t\t\t\t\t<Button className=\"\" style={fondoBoton}>Buscar</Button>\r\n// \t\t\t\t\t\t</span>\r\n// \t\t\t\t\t</div>\r\n// \t\t\t\t</div>\r\n// \t\t\t\t<div className=\"container\" style={{\r\n// \t\t\t\t\tpaddingTop: \"7px\",\r\n// \t\t\t\t\tpaddingRight: \"12px\",\r\n// \t\t\t\t\tpaddingLeft: \"40px\",\r\n// \t\t\t\t\tpaddingBottom: \"20px\",\r\n// \t\t\t\t\tmargin: \"0px 0px 32px\"\r\n// \t\t\t\t}}>\r\n// \t\t\t\t\t<div className=\"container shadow\" style={fondoBarraSuperior}>\r\n// \t\t\t\t\t\t<br />\r\n// \t\t\t\t\t\t<PopUpModulo funcion={this.anadirModulo}/>\r\n// \t\t\t\t\t\t<br />\r\n// \t\t\t\t\t\t<div className=\"jumbotron p-1 jumbotron-fluid\" style={fondoTabla}>\r\n// \t\t\t\t\t\t\t<table className=\"table table-hover table-bordered table-checkable\" style={fondoBarraSuperior}>\r\n// \t\t\t\t\t\t\t\t<thead className=\"table table-hover table-striped col-md-12\">\r\n// \t\t\t\t\t\t\t\t\t<tr>\r\n// \t\t\t\t\t\t\t\t\t\t<th className=\"letra\"> Logo </th>\r\n// \t\t\t\t\t\t\t\t\t\t<th className=\"letra\"> Nombre de modulo </th>\r\n// \t\t\t\t\t\t\t\t\t\t<th className=\"letra\"> Descripción </th>\r\n// \t\t\t\t\t\t\t\t\t\t<th className=\"letra\"> Estado </th>\r\n// \t\t\t\t\t\t\t\t\t\t<th className=\"letra\"> Acciones </th>\r\n// \t\t\t\t\t\t\t\t\t</tr>\r\n// \t\t\t\t\t\t\t\t</thead>\r\n// \t\t\t\t\t\t\t\t<tbody>\r\n// \t\t\t\t\t\t\t\t\t{\r\n// \t\t\t\t\t\t\t\t\t\tthis.renderTableData()\r\n// \t\t\t\t\t\t\t\t\t}\r\n// \t\t\t\t\t\t\t\t</tbody>\r\n// \t\t\t\t\t\t\t</table>\r\n// \t\t\t\t\t\t</div>\r\n// \t\t\t\t\t</div>\r\n// \t\t\t\t</div>\r\n// \t\t\t</div>\r\n// \t\t);\r\n// \t}\r\n\r\n\r\n// }\r\n\r\n\r\n\r\n// const fondoBoton = {\r\n// \tbackground: \"#ec671d\",\r\n// \tfontSize: \"14px\",\r\n// \tfontFamily: \"Open sans, sans-serif\"\r\n  \r\n//   }\r\n\r\n// const estiloLetrero = {\r\n// \tpaddingTop: \"20px\",\r\n// \tpaddingRight: \"12px\",\r\n// \tpaddingLeft: \"40px\",\r\n// \tpaddingBottom: \"1px\"\r\n// }\r\n\r\n// const fondoBarraSuperior = {\r\n// \tbackground: \"#FFFFFF\"\r\n\r\n// }\r\n\r\n// const fondoTabla = {\r\n// \tbackground: \"#EAF2F2\"\r\n// }\r\n\r\n\r\n// export default ContenidoAdminModulo;\r\nimport React, { Component } from \"react\";\r\nimport { Form, Field, reduxForm } from \"redux-form\";\r\nimport DropZoneField from \"../components/DropzoneField/dropzoneField\";\r\n\r\nconst imageIsRequired = value => (!value ? \"Required\" : undefined);\r\n\r\nclass UploadImageForm extends Component {\r\n  state = { imageFile: [] };\r\n\r\n  handleFormSubmit = formProps => {\r\n    const fd = new FormData();\r\n    fd.append(\"imageFile\", formProps.imageToUpload.file);\r\n    // append any additional Redux form fields\r\n    // create an AJAX request here with the created formData\r\n\r\n    alert(JSON.stringify(formProps, null, 4));\r\n  };\r\n\r\n  handleOnDrop = (newImageFile, onChange) => {\r\n    const imageFile = {\r\n      file: newImageFile[0],\r\n      name: newImageFile[0].name,\r\n      preview: URL.createObjectURL(newImageFile[0]),\r\n      size: newImageFile[0].size\r\n    };\r\n\r\n    this.setState({ imageFile: [imageFile] }, () => onChange(imageFile));\r\n  };\r\n\r\n  resetForm = () => this.setState({ imageFile: [] }, () => this.props.reset());\r\n\r\n  render = () => (\r\n    <div className=\"app-container\">\r\n      <h1 className=\"title\">Upload An Image</h1>\r\n      <hr />\r\n      <Form onSubmit={this.props.handleSubmit(this.handleFormSubmit)}>\r\n        <Field\r\n          name=\"imageToUpload\"\r\n          component={DropZoneField}\r\n          type=\"file\"\r\n          imagefile={this.state.imageFile}\r\n          handleOnDrop={this.handleOnDrop}\r\n          validate={[imageIsRequired]}\r\n        />\r\n        <button\r\n          type=\"submit\"\r\n          className=\"uk-button uk-button-primary uk-button-large submit\"\r\n          disabled={this.props.submitting}\r\n        >\r\n          Submit\r\n        </button>\r\n        <button\r\n          type=\"button\"\r\n          className=\"uk-button uk-button-default uk-button-large clear\"\r\n          disabled={this.props.pristine || this.props.submitting}\r\n          onClick={this.resetForm}\r\n          style={{ float: \"right\" }}\r\n        >\r\n          Clear\r\n        </button>\r\n      </Form>\r\n      <div className=\"clear\" />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default reduxForm({ form: \"UploadImageForm\" })(UploadImageForm);\r\n"]},"metadata":{},"sourceType":"module"}