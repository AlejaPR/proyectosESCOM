{"ast":null,"code":"import axios from 'axios';\nimport { encriptar, desencriptar } from '../componentes/general/Encriptar.js';\nimport { browserHistory } from 'react-router';\nexport const MOSTRAR_USUARIOS = 'MOSTRAR_USUARIOS';\nexport const AGREGAR_USUARIO = 'AGREGAR_USUARIO';\nexport const INFORMACION_USUARIO = 'INFORMACION_USUARIO';\nexport const ANADIR_CEDULA_EDITAR = \"ANADIR_CEDULA_EDITAR\";\nexport const EDITAR_USUARIO = \"EDITAR_USUARIO\";\nexport const ACTUALIZAR_USUARIOS = 'ACTUALIZAR_USUARIOS';\nexport const LOGIN_USUARIO = 'LOGIN_USUARIO';\nexport const REDIRECCIONAR_LOGIN = 'REDIRECCIONAR_LOGIN';\nexport function actionLoginUsuario(correo, contrasena, cambiar) {\n  var crypto = require('crypto');\n\n  var contrasenaEncryp = crypto.createHmac('sha256', correo).update(contrasena).digest('hex');\n  var bool;\n  return (dispatch, getState) => {\n    axios.get(\"http://localhost:9090/proyectosESCOM-web/api/login/\" + correo + '/' + contrasenaEncryp).then(response => {\n      if (response.status == 200) {\n        var token = encriptar(response.data.token);\n        localStorage.setItem('Token', token);\n        bool = true;\n        dispatch({\n          type: LOGIN_USUARIO,\n          token: 'Login correcto'\n        });\n        cambiar('e');\n      }\n\n      if (response.status == 401) {\n        dispatch({\n          type: LOGIN_USUARIO,\n          token: 'Credenciales incorrectas'\n        });\n      }\n    }).catch(function (error) {\n      // handle error\n      console.log('error es: ', error);\n      dispatch({\n        type: LOGIN_USUARIO,\n        token: 'Credenciales incorrectas'\n      });\n    });\n  };\n}\nexport function actionConsultarUsuarios() {\n  return (dispatch, getState) => {\n    axios.get(\"http://localhost:9090/SuperadministradorESCOM-web/api/usu/\").then(response => {\n      dispatch({\n        type: MOSTRAR_USUARIOS,\n        respuesta: response.data\n      });\n    });\n  };\n}\nexport function actionAgregarUsuario(usuario, token) {\n  var tokenRequest = desencriptar(token);\n  const headers = {\n    'Content-Type': 'application/json',\n    'TokenAuto': tokenRequest\n  };\n  return (dispatch, getState) => {\n    axios.post(\"http://localhost:9090/proyectosESCOM-web/api/usuario\", usuario, {\n      headers: headers\n    }).then(response => {\n      dispatch({\n        type: AGREGAR_USUARIO,\n        usuarioARegistrar: usuario\n      });\n    });\n  };\n}\nexport function actionCargarInformacionDeUsuario(cedula) {\n  return (dispatch, getState) => {\n    axios.get(\"http://localhost:9090/SuperadministradorESCOM-web/api/usu/\" + cedula).then(response => {\n      dispatch({\n        type: INFORMACION_USUARIO,\n        informacionUsuario: response.data\n      });\n    });\n  };\n}\nexport function actionAsignarCedula(cedula) {\n  return (dispatch, getState) => {\n    dispatch({\n      type: ANADIR_CEDULA_EDITAR,\n      cedula: cedula\n    });\n  };\n}\nexport function actionActualizarUsuarios(usuario) {\n  return (dispatch, getState) => {\n    dispatch({\n      type: ACTUALIZAR_USUARIOS,\n      usuario: usuario\n    });\n  };\n}\nexport function actionEditarUsuario(usuario, cedula) {\n  return (dispatch, getState) => {\n    axios.put(\"http://localhost:9090/SuperadministradorESCOM-web/api/usu/\" + cedula, usuario).then(response => {\n      console.log(\"RESULTADO\", response.status);\n    });\n    ;\n    dispatch({\n      type: EDITAR_USUARIO,\n      payload: usuario\n    });\n  };\n}","map":{"version":3,"sources":["C:\\Users\\jeiso\\Desktop\\REACT\\proyectosESCOM\\frontend\\ESCOM-view\\src\\SuperAdministrador\\actions\\actionsUsuario.js"],"names":["axios","encriptar","desencriptar","browserHistory","MOSTRAR_USUARIOS","AGREGAR_USUARIO","INFORMACION_USUARIO","ANADIR_CEDULA_EDITAR","EDITAR_USUARIO","ACTUALIZAR_USUARIOS","LOGIN_USUARIO","REDIRECCIONAR_LOGIN","actionLoginUsuario","correo","contrasena","cambiar","crypto","require","contrasenaEncryp","createHmac","update","digest","bool","dispatch","getState","get","then","response","status","token","data","localStorage","setItem","type","catch","error","console","log","actionConsultarUsuarios","respuesta","actionAgregarUsuario","usuario","tokenRequest","headers","post","usuarioARegistrar","actionCargarInformacionDeUsuario","cedula","informacionUsuario","actionAsignarCedula","actionActualizarUsuarios","actionEditarUsuario","put","payload"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,SAAT,EAAmBC,YAAnB,QAAuC,qCAAvC;AACA,SAASC,cAAT,QAA+B,cAA/B;AAEA,OAAO,MAAMC,gBAAgB,GAAG,kBAAzB;AACP,OAAO,MAAMC,eAAe,GAAG,iBAAxB;AACP,OAAO,MAAMC,mBAAmB,GAAG,qBAA5B;AACP,OAAO,MAAMC,oBAAoB,GAAG,sBAA7B;AACP,OAAO,MAAMC,cAAc,GAAG,gBAAvB;AACP,OAAO,MAAMC,mBAAmB,GAAG,qBAA5B;AACP,OAAO,MAAMC,aAAa,GAAG,eAAtB;AACP,OAAO,MAAMC,mBAAmB,GAAC,qBAA1B;AAGP,OAAO,SAASC,kBAAT,CAA4BC,MAA5B,EAAoCC,UAApC,EAA+CC,OAA/C,EAAwD;AAC3D,MAAIC,MAAM,GAAGC,OAAO,CAAC,QAAD,CAApB;;AACA,MAAIC,gBAAgB,GAAGF,MAAM,CAACG,UAAP,CAAkB,QAAlB,EAA4BN,MAA5B,EAAoCO,MAApC,CAA2CN,UAA3C,EAAuDO,MAAvD,CAA8D,KAA9D,CAAvB;AACA,MAAIC,IAAJ;AACA,SAAO,CAACC,QAAD,EAAWC,QAAX,KAAwB;AAC3BxB,IAAAA,KAAK,CAACyB,GAAN,CAAU,wDAAwDZ,MAAxD,GAA+D,GAA/D,GAAmEK,gBAA7E,EACKQ,IADL,CACUC,QAAQ,IAAI;AACd,UAAIA,QAAQ,CAACC,MAAT,IAAmB,GAAvB,EAA4B;AACxB,YAAIC,KAAK,GAAG5B,SAAS,CAAC0B,QAAQ,CAACG,IAAT,CAAcD,KAAf,CAArB;AACAE,QAAAA,YAAY,CAACC,OAAb,CAAqB,OAArB,EAA8BH,KAA9B;AACAP,QAAAA,IAAI,GAAC,IAAL;AACAC,QAAAA,QAAQ,CAAC;AACLU,UAAAA,IAAI,EAAEvB,aADD;AAELmB,UAAAA,KAAK,EAAE;AAFF,SAAD,CAAR;AAIAd,QAAAA,OAAO,CAAC,GAAD,CAAP;AACH;;AACD,UAAGY,QAAQ,CAACC,MAAT,IAAiB,GAApB,EAAwB;AACpBL,QAAAA,QAAQ,CAAC;AACLU,UAAAA,IAAI,EAAEvB,aADD;AAELmB,UAAAA,KAAK,EAAE;AAFF,SAAD,CAAR;AAIH;AAEJ,KAnBL,EAmBOK,KAnBP,CAmBa,UAAUC,KAAV,EAAiB;AACtB;AACAC,MAAAA,OAAO,CAACC,GAAR,CAAY,YAAZ,EAAyBF,KAAzB;AACAZ,MAAAA,QAAQ,CAAC;AACLU,QAAAA,IAAI,EAAEvB,aADD;AAELmB,QAAAA,KAAK,EAAE;AAFF,OAAD,CAAR;AAIH,KA1BL;AA2BH,GA5BD;AA6BH;AAID,OAAO,SAASS,uBAAT,GAAmC;AACtC,SAAO,CAACf,QAAD,EAAWC,QAAX,KAAwB;AAC3BxB,IAAAA,KAAK,CAACyB,GAAN,CAAU,4DAAV,EACKC,IADL,CACUC,QAAQ,IAAI;AACdJ,MAAAA,QAAQ,CAAC;AACLU,QAAAA,IAAI,EAAE7B,gBADD;AAELmC,QAAAA,SAAS,EAAEZ,QAAQ,CAACG;AAFf,OAAD,CAAR;AAIH,KANL;AAOH,GARD;AASH;AAED,OAAO,SAASU,oBAAT,CAA8BC,OAA9B,EAAsCZ,KAAtC,EAA6C;AAChD,MAAIa,YAAY,GAACxC,YAAY,CAAC2B,KAAD,CAA7B;AACA,QAAMc,OAAO,GAAG;AACZ,oBAAgB,kBADJ;AAEZ,iBAAaD;AAFD,GAAhB;AAIA,SAAO,CAACnB,QAAD,EAAWC,QAAX,KAAwB;AAC3BxB,IAAAA,KAAK,CAAC4C,IAAN,CAAW,sDAAX,EAAmEH,OAAnE,EAA2E;AAACE,MAAAA,OAAO,EAACA;AAAT,KAA3E,EACKjB,IADL,CACUC,QAAQ,IAAI;AACdJ,MAAAA,QAAQ,CAAC;AACLU,QAAAA,IAAI,EAAE5B,eADD;AAELwC,QAAAA,iBAAiB,EAAEJ;AAFd,OAAD,CAAR;AAIH,KANL;AAOH,GARD;AASH;AAED,OAAO,SAASK,gCAAT,CAA0CC,MAA1C,EAAkD;AACrD,SAAO,CAACxB,QAAD,EAAWC,QAAX,KAAwB;AAC3BxB,IAAAA,KAAK,CAACyB,GAAN,CAAU,+DAA+DsB,MAAzE,EACKrB,IADL,CACUC,QAAQ,IAAI;AACdJ,MAAAA,QAAQ,CAAC;AACLU,QAAAA,IAAI,EAAE3B,mBADD;AAEL0C,QAAAA,kBAAkB,EAAErB,QAAQ,CAACG;AAFxB,OAAD,CAAR;AAIH,KANL;AAOH,GARD;AASH;AAED,OAAO,SAASmB,mBAAT,CAA6BF,MAA7B,EAAqC;AACxC,SAAO,CAACxB,QAAD,EAAWC,QAAX,KAAwB;AAC3BD,IAAAA,QAAQ,CAAC;AACLU,MAAAA,IAAI,EAAE1B,oBADD;AAELwC,MAAAA,MAAM,EAAEA;AAFH,KAAD,CAAR;AAIH,GALD;AAMH;AAED,OAAO,SAASG,wBAAT,CAAkCT,OAAlC,EAA2C;AAC9C,SAAO,CAAClB,QAAD,EAAWC,QAAX,KAAwB;AAC3BD,IAAAA,QAAQ,CAAC;AACLU,MAAAA,IAAI,EAAExB,mBADD;AAELgC,MAAAA,OAAO,EAAEA;AAFJ,KAAD,CAAR;AAIH,GALD;AAMH;AAED,OAAO,SAASU,mBAAT,CAA6BV,OAA7B,EAAsCM,MAAtC,EAA8C;AACjD,SAAO,CAACxB,QAAD,EAAWC,QAAX,KAAwB;AAC3BxB,IAAAA,KAAK,CAACoD,GAAN,CAAU,+DAA+DL,MAAzE,EAAiFN,OAAjF,EAA0Ff,IAA1F,CAA+FC,QAAQ,IAAI;AACvGS,MAAAA,OAAO,CAACC,GAAR,CAAY,WAAZ,EAAyBV,QAAQ,CAACC,MAAlC;AACH,KAFD;AAEG;AAEHL,IAAAA,QAAQ,CAAC;AACLU,MAAAA,IAAI,EAAEzB,cADD;AAEL6C,MAAAA,OAAO,EAAEZ;AAFJ,KAAD,CAAR;AAIH,GATD;AAUH","sourcesContent":["import axios from 'axios';\r\nimport { encriptar,desencriptar } from '../componentes/general/Encriptar.js';\r\nimport { browserHistory } from 'react-router';\r\n\r\nexport const MOSTRAR_USUARIOS = 'MOSTRAR_USUARIOS'\r\nexport const AGREGAR_USUARIO = 'AGREGAR_USUARIO'\r\nexport const INFORMACION_USUARIO = 'INFORMACION_USUARIO'\r\nexport const ANADIR_CEDULA_EDITAR = \"ANADIR_CEDULA_EDITAR\"\r\nexport const EDITAR_USUARIO = \"EDITAR_USUARIO\"\r\nexport const ACTUALIZAR_USUARIOS = 'ACTUALIZAR_USUARIOS';\r\nexport const LOGIN_USUARIO = 'LOGIN_USUARIO';\r\nexport const REDIRECCIONAR_LOGIN='REDIRECCIONAR_LOGIN';\r\n\r\n\r\nexport function actionLoginUsuario(correo, contrasena,cambiar) {\r\n    var crypto = require('crypto');\r\n    var contrasenaEncryp = crypto.createHmac('sha256', correo).update(contrasena).digest('hex');\r\n    var bool;\r\n    return (dispatch, getState) => {\r\n        axios.get(\"http://localhost:9090/proyectosESCOM-web/api/login/\" + correo+'/'+contrasenaEncryp)\r\n            .then(response => {\r\n                if (response.status == 200) {\r\n                    var token = encriptar(response.data.token);\r\n                    localStorage.setItem('Token', token);\r\n                    bool=true;\r\n                    dispatch({\r\n                        type: LOGIN_USUARIO,\r\n                        token: 'Login correcto'\r\n                    });\r\n                    cambiar('e');\r\n                }\r\n                if(response.status==401){\r\n                    dispatch({\r\n                        type: LOGIN_USUARIO,\r\n                        token: 'Credenciales incorrectas'\r\n                    });\r\n                }\r\n\r\n            }).catch(function (error) {\r\n                // handle error\r\n                console.log('error es: ',error)\r\n                dispatch({\r\n                    type: LOGIN_USUARIO,\r\n                    token: 'Credenciales incorrectas'\r\n                });\r\n            })\r\n    };\r\n}\r\n\r\n\r\n\r\nexport function actionConsultarUsuarios() {\r\n    return (dispatch, getState) => {\r\n        axios.get(\"http://localhost:9090/SuperadministradorESCOM-web/api/usu/\")\r\n            .then(response => {\r\n                dispatch({\r\n                    type: MOSTRAR_USUARIOS,\r\n                    respuesta: response.data\r\n                });\r\n            });\r\n    };\r\n}\r\n\r\nexport function actionAgregarUsuario(usuario,token) {\r\n    var tokenRequest=desencriptar(token);\r\n    const headers = {\r\n        'Content-Type': 'application/json',\r\n        'TokenAuto': tokenRequest\r\n      }\r\n    return (dispatch, getState) => {\r\n        axios.post(\"http://localhost:9090/proyectosESCOM-web/api/usuario\", usuario,{headers:headers})\r\n            .then(response => {\r\n                dispatch({\r\n                    type: AGREGAR_USUARIO,\r\n                    usuarioARegistrar: usuario\r\n                });\r\n            });\r\n    }\r\n}\r\n\r\nexport function actionCargarInformacionDeUsuario(cedula) {\r\n    return (dispatch, getState) => {\r\n        axios.get(\"http://localhost:9090/SuperadministradorESCOM-web/api/usu/\" + cedula)\r\n            .then(response => {\r\n                dispatch({\r\n                    type: INFORMACION_USUARIO,\r\n                    informacionUsuario: response.data\r\n                });\r\n            });\r\n    };\r\n}\r\n\r\nexport function actionAsignarCedula(cedula) {\r\n    return (dispatch, getState) => {\r\n        dispatch({\r\n            type: ANADIR_CEDULA_EDITAR,\r\n            cedula: cedula\r\n        });\r\n    }\r\n}\r\n\r\nexport function actionActualizarUsuarios(usuario) {\r\n    return (dispatch, getState) => {\r\n        dispatch({\r\n            type: ACTUALIZAR_USUARIOS,\r\n            usuario: usuario\r\n        });\r\n    }\r\n}\r\n\r\nexport function actionEditarUsuario(usuario, cedula) {\r\n    return (dispatch, getState) => {\r\n        axios.put(\"http://localhost:9090/SuperadministradorESCOM-web/api/usu/\" + cedula, usuario).then(response => {\r\n            console.log(\"RESULTADO\", response.status);\r\n        });;\r\n\r\n        dispatch({\r\n            type: EDITAR_USUARIO,\r\n            payload: usuario\r\n        });\r\n    }\r\n}\r\n"]},"metadata":{},"sourceType":"module"}