{"ast":null,"code":"import axios from 'axios';\nimport { encriptar, desencriptar } from '../componentes/general/Encriptar.js';\nimport { browserHistory } from 'react-router';\nexport const MOSTRAR_USUARIOS = 'MOSTRAR_USUARIOS';\nexport const MOSTRAR_DOCUMENTOS = 'MOSTRAR_DOCUMENTOS';\nexport const AGREGAR_USUARIO = 'AGREGAR_USUARIO';\nexport const INFORMACION_USUARIO = 'INFORMACION_USUARIO';\nexport const ANADIR_CEDULA_EDITAR = \"ANADIR_CEDULA_EDITAR\";\nexport const EDITAR_USUARIO = \"EDITAR_USUARIO\";\nexport const ACTUALIZAR_USUARIOS = 'ACTUALIZAR_USUARIOS';\nexport const LOGIN_USUARIO = 'LOGIN_USUARIO';\nexport const REDIRECCIONAR_LOGIN = 'REDIRECCIONAR_LOGIN';\nexport function actionLoginUsuario(correo, contrasena, cambiar) {\n  var crypto = require('crypto');\n\n  var contrasenaEncryp = crypto.createHmac('sha256', correo).update(contrasena).digest('hex');\n  cambiar(true);\n  return (dispatch, getState) => {\n    axios.get(\"http://localhost:9090/proyectosESCOM-web/api/login/\" + correo + '/' + contrasenaEncryp).then(response => {\n      if (response.status == 200) {\n        var token = encriptar(response.data.token);\n        localStorage.setItem('Token', token);\n        dispatch({\n          type: LOGIN_USUARIO,\n          token: 'Login correcto'\n        });\n        cambiar(false);\n      }\n    }).catch(error => {\n      dispatch({\n        type: LOGIN_USUARIO,\n        token: 'Credenciales incorrectas'\n      });\n      cambiar(false);\n    });\n  };\n}\nexport function actionCerrarSesion(token) {\n  var tokenlim = desencriptar(token);\n  const headers = {\n    'Content-Type': 'application/json',\n    'TokenAuto': tokenlim\n  };\n  axios.delete(\"http://localhost:9090/SuperadministradorESCOM-web/api/usuario/\" + tokenlim, {\n    headers: headers\n  }).then(response => {\n    if (response.status == 200) {\n      console.log('cerrada');\n    }\n  }).catch(function (error) {\n    // handle error\n    console.log('error es: ', error);\n  });\n}\nexport function actionConsultarUsuarios() {\n  return (dispatch, getState) => {\n    axios.get(\"http://localhost:9090/SuperadministradorESCOM-web/api/usu/\").then(response => {\n      dispatch({\n        type: MOSTRAR_USUARIOS,\n        respuesta: response.data\n      });\n    });\n  };\n}\nexport function actionConsultarDocumentos(token) {\n  var tokenRequest = desencriptar(token);\n  const headers = {\n    'Content-Type': 'application/json',\n    'TokenAuto': tokenRequest,\n    'Permiso': 'SA_CREAR USUARIO'\n  };\n  return (dispatch, getState) => {\n    axios.get(\"http://localhost:9090/proyectosESCOM-web/api/usuario/tipoDocumento\", {\n      headers: headers\n    }).then(response => {\n      dispatch({\n        type: MOSTRAR_DOCUMENTOS,\n        respuesta: response.data\n      });\n    });\n  };\n}\nexport function actionAgregarUsuario(usuario, token) {\n  var tokenRequest = desencriptar(token);\n  const headers = {\n    'Content-Type': 'application/json',\n    'TokenAuto': tokenRequest,\n    'Permiso': 'SA_CREAR USUARIO'\n  };\n  return (dispatch, getState) => {\n    axios.post(\"http://localhost:9090/proyectosESCOM-web/api/usuario\", usuario, {\n      headers: headers\n    }).then(response => {\n      dispatch({\n        type: AGREGAR_USUARIO,\n        usuarioARegistrar: usuario\n      });\n    }).catch(error => {\n      if (error.request) {\n        let respuest = error.request.response;\n        let respue = respuest.respuesta;\n        console.log('error!!', respue); //ya hay un usuario registrado con el mismo correo o numero de documento\n      }\n    });\n  };\n}\nexport function actionCargarInformacionDeUsuario(cedula) {\n  return (dispatch, getState) => {\n    axios.get(\"http://localhost:9090/SuperadministradorESCOM-web/api/usu/\" + cedula).then(response => {\n      dispatch({\n        type: INFORMACION_USUARIO,\n        informacionUsuario: response.data\n      });\n    });\n  };\n}\nexport function actionAsignarCedula(cedula) {\n  return (dispatch, getState) => {\n    dispatch({\n      type: ANADIR_CEDULA_EDITAR,\n      cedula: cedula\n    });\n  };\n}\nexport function actionActualizarUsuarios(usuario) {\n  return (dispatch, getState) => {\n    dispatch({\n      type: ACTUALIZAR_USUARIOS,\n      usuario: usuario\n    });\n  };\n}\nexport function actionEditarUsuario(usuario, cedula) {\n  return (dispatch, getState) => {\n    axios.put(\"http://localhost:9090/SuperadministradorESCOM-web/api/usu/\" + cedula, usuario).then(response => {\n      console.log(\"RESULTADO\", response.status);\n    });\n    ;\n    dispatch({\n      type: EDITAR_USUARIO,\n      payload: usuario\n    });\n  };\n}","map":{"version":3,"sources":["C:/Users/jeiso/Desktop/REACT/proyectosESCOM/frontend/ESCOM-view/src/SuperAdministrador/actions/actionsUsuario.js"],"names":["axios","encriptar","desencriptar","browserHistory","MOSTRAR_USUARIOS","MOSTRAR_DOCUMENTOS","AGREGAR_USUARIO","INFORMACION_USUARIO","ANADIR_CEDULA_EDITAR","EDITAR_USUARIO","ACTUALIZAR_USUARIOS","LOGIN_USUARIO","REDIRECCIONAR_LOGIN","actionLoginUsuario","correo","contrasena","cambiar","crypto","require","contrasenaEncryp","createHmac","update","digest","dispatch","getState","get","then","response","status","token","data","localStorage","setItem","type","catch","error","actionCerrarSesion","tokenlim","headers","delete","console","log","actionConsultarUsuarios","respuesta","actionConsultarDocumentos","tokenRequest","actionAgregarUsuario","usuario","post","usuarioARegistrar","request","respuest","respue","actionCargarInformacionDeUsuario","cedula","informacionUsuario","actionAsignarCedula","actionActualizarUsuarios","actionEditarUsuario","put","payload"],"mappings":"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","sourcesContent":["import axios from 'axios';\r\nimport { encriptar, desencriptar } from '../componentes/general/Encriptar.js';\r\nimport { browserHistory } from 'react-router';\r\n\r\nexport const MOSTRAR_USUARIOS = 'MOSTRAR_USUARIOS';\r\nexport const MOSTRAR_DOCUMENTOS = 'MOSTRAR_DOCUMENTOS';\r\nexport const AGREGAR_USUARIO = 'AGREGAR_USUARIO';\r\nexport const INFORMACION_USUARIO = 'INFORMACION_USUARIO';\r\nexport const ANADIR_CEDULA_EDITAR = \"ANADIR_CEDULA_EDITAR\";\r\nexport const EDITAR_USUARIO = \"EDITAR_USUARIO\";\r\nexport const ACTUALIZAR_USUARIOS = 'ACTUALIZAR_USUARIOS';\r\nexport const LOGIN_USUARIO = 'LOGIN_USUARIO';\r\nexport const REDIRECCIONAR_LOGIN = 'REDIRECCIONAR_LOGIN';\r\n\r\n\r\nexport function actionLoginUsuario(correo, contrasena, cambiar) {\r\n    var crypto = require('crypto');\r\n    var contrasenaEncryp = crypto.createHmac('sha256', correo).update(contrasena).digest('hex');\r\n    cambiar(true);\r\n    return (dispatch, getState) => {\r\n        axios.get(\"http://localhost:9090/proyectosESCOM-web/api/login/\" + correo + '/' + contrasenaEncryp)\r\n            .then(response => {\r\n                if (response.status == 200) {\r\n                    var token = encriptar(response.data.token);\r\n                    localStorage.setItem('Token', token);\r\n                    dispatch({\r\n                        type: LOGIN_USUARIO,\r\n                        token: 'Login correcto'\r\n                    });\r\n                    cambiar(false);\r\n                }\r\n            }).catch((error) => {\r\n                dispatch({\r\n                    type: LOGIN_USUARIO,\r\n                    token: 'Credenciales incorrectas'\r\n                });\r\n                cambiar(false);\r\n            })\r\n    };\r\n}\r\n\r\nexport function actionCerrarSesion(token) {\r\n    var tokenlim = desencriptar(token);\r\n    const headers = {\r\n        'Content-Type': 'application/json',\r\n        'TokenAuto': tokenlim\r\n    }\r\n\r\n    axios.delete(\"http://localhost:9090/SuperadministradorESCOM-web/api/usuario/\" + tokenlim, { headers: headers })\r\n        .then(response => {\r\n            if (response.status == 200) {\r\n                console.log('cerrada')\r\n            }\r\n        }).catch(function (error) {\r\n            // handle error\r\n            console.log('error es: ', error)\r\n        });\r\n}\r\n\r\nexport function actionConsultarUsuarios() {\r\n    return (dispatch, getState) => {\r\n        axios.get(\"http://localhost:9090/SuperadministradorESCOM-web/api/usu/\")\r\n            .then(response => {\r\n                dispatch({\r\n                    type: MOSTRAR_USUARIOS,\r\n                    respuesta: response.data\r\n                });\r\n            });\r\n    };\r\n}\r\n\r\nexport function actionConsultarDocumentos(token) {\r\n    var tokenRequest = desencriptar(token);\r\n    const headers = {\r\n        'Content-Type': 'application/json',\r\n        'TokenAuto': tokenRequest,\r\n        'Permiso': 'SA_CREAR USUARIO'\r\n    }\r\n    return (dispatch, getState) => {\r\n        axios.get(\"http://localhost:9090/proyectosESCOM-web/api/usuario/tipoDocumento\",{headers:headers})\r\n            .then(response => {\r\n                dispatch({\r\n                    type: MOSTRAR_DOCUMENTOS,\r\n                    respuesta: response.data\r\n                });\r\n            });\r\n    };\r\n}\r\n\r\nexport function actionAgregarUsuario(usuario, token) {\r\n    var tokenRequest = desencriptar(token);\r\n    const headers = {\r\n        'Content-Type': 'application/json',\r\n        'TokenAuto': tokenRequest,\r\n        'Permiso': 'SA_CREAR USUARIO'\r\n    }\r\n    return (dispatch, getState) => {\r\n        \r\n        axios.post(\"http://localhost:9090/proyectosESCOM-web/api/usuario\", usuario, { headers: headers })\r\n            .then(response => {\r\n                dispatch({\r\n                    type: AGREGAR_USUARIO,\r\n                    usuarioARegistrar: usuario\r\n                });\r\n            }).catch((error) => {\r\n                if(error.request){\r\n                    let respuest=error.request.response;\r\n                    let respue=respuest.respuesta;\r\n                    console.log('error!!',respue);\r\n                    //ya hay un usuario registrado con el mismo correo o numero de documento\r\n                }\r\n            });\r\n       \r\n    }\r\n}\r\n\r\nexport function actionCargarInformacionDeUsuario(cedula) {\r\n    return (dispatch, getState) => {\r\n        axios.get(\"http://localhost:9090/SuperadministradorESCOM-web/api/usu/\" + cedula)\r\n            .then(response => {\r\n                dispatch({\r\n                    type: INFORMACION_USUARIO,\r\n                    informacionUsuario: response.data\r\n                });\r\n            });\r\n    };\r\n}\r\n\r\nexport function actionAsignarCedula(cedula) {\r\n    return (dispatch, getState) => {\r\n        dispatch({\r\n            type: ANADIR_CEDULA_EDITAR,\r\n            cedula: cedula\r\n        });\r\n    }\r\n}\r\n\r\nexport function actionActualizarUsuarios(usuario) {\r\n    return (dispatch, getState) => {\r\n        dispatch({\r\n            type: ACTUALIZAR_USUARIOS,\r\n            usuario: usuario\r\n        });\r\n    }\r\n}\r\n\r\nexport function actionEditarUsuario(usuario, cedula) {\r\n    return (dispatch, getState) => {\r\n        axios.put(\"http://localhost:9090/SuperadministradorESCOM-web/api/usu/\" + cedula, usuario).then(response => {\r\n            console.log(\"RESULTADO\", response.status);\r\n        });;\r\n\r\n        dispatch({\r\n            type: EDITAR_USUARIO,\r\n            payload: usuario\r\n        });\r\n    }\r\n}\r\n"]},"metadata":{},"sourceType":"module"}