{"ast":null,"code":"import axios from 'axios';\nimport { desencriptar } from '../../../SuperAdministrador/componentes/general/Encriptar.js';\nimport { URL_BASE } from '../../../SuperAdministrador/utilitario/Configuracion.js';\nexport const GET_LIST_PROCESSES = 'GET_LIST_PROCESSES';\nexport const ADD_PROCESS = 'ADD_PROCESS';\nexport const EDIT_PROCESS = 'EDIT_PROCESS';\nexport const DISABLE_PROCESS = 'DISABLE_PROCESS';\nexport const GET_PROCESS_ID = 'GET_PROCESS_ID';\nexport const ADD_MESSAGE_EDIT = 'ADD_MESSAGE_EDIT';\nexport const ADD_MESSAGE_ADD = 'ADD_MESSAGE_ADD';\nexport const ADD_MESSAGE_DISABLE = 'ADD_MESSAGE_DISABLE';\nexport const ADD_MESSAGE = 'ADD_MESSAGE';\nconst PERMIT_LIST_PROCESSES = 'MD_Lista procesos';\nconst PERMIT_GET_PROCESS = 'MD_Obtiene proceso';\nconst PERMIT_ADD_PROCESS = 'MD_Agregar proceso';\nconst PERMIT_EDIT_PROCESS = 'MD_Editar proceso';\nconst PERMIT_DISABLE_PROCESS = 'MD_Inhabilitar proceso';\nexport function addMessageEdit(mensaje) {\n  return (dispatch, getState) => {\n    dispatch({\n      type: ADD_MESSAGE_EDIT,\n      mensaje: mensaje\n    });\n  };\n}\nexport function addMessageAdd(mensaje) {\n  return (dispatch, getState) => {\n    dispatch({\n      type: ADD_MESSAGE_ADD,\n      mensaje: mensaje\n    });\n  };\n}\nexport function addMessageDisable(mensaje) {\n  return (dispatch, getState) => {\n    dispatch({\n      type: ADD_MESSAGE_DISABLE,\n      mensaje: mensaje\n    });\n  };\n} //MD_Lista procesos\n\nexport function getListProcesses(token, id) {\n  const headers = {\n    'Content-Type': 'application/json',\n    'TokenAuto': desencriptar(token),\n    'Permiso': PERMIT_LIST_PROCESSES\n  };\n  return (dispatch, getState) => {\n    axios.get(`${URL_BASE}/proyectosESCOM-web/api/process/list/${id}`, {\n      headers: headers\n    }).then(response => {\n      dispatch({\n        type: GET_LIST_PROCESSES,\n        payload: response.data\n      });\n    }).catch(error => {\n      if (error.request.response === '') {\n        dispatch({\n          type: ADD_MESSAGE,\n          payload: 'error server'\n        });\n      } else {\n        if (error.request) {\n          dispatch({\n            type: ADD_MESSAGE,\n            payload: 'error server'\n          });\n        }\n      }\n    });\n  };\n} //MD_Obtiene proceso\n\nexport function getProcessId(token, id) {\n  const headers = {\n    'Content-Type': 'application/json',\n    'TokenAuto': desencriptar(token),\n    'Permiso': PERMIT_GET_PROCESS\n  };\n  return (dispatch, getState) => {\n    axios.get(`${URL_BASE}/proyectosESCOM-web/api/process/get/${id}`, {\n      headers: headers\n    }).then(response => {\n      dispatch({\n        type: GET_PROCESS_ID,\n        payload: response.data\n      });\n    }).catch(error => {\n      if (error.request.response === '') {\n        dispatch({\n          type: ADD_MESSAGE,\n          payload: 'error server'\n        });\n      } else {\n        if (error.request) {\n          dispatch({\n            type: ADD_MESSAGE,\n            payload: 'error server'\n          });\n        }\n      }\n    });\n  };\n} //MD_Agregar proceso\n\nexport function addProcess(token, processN) {\n  const headers = {\n    'Content-Type': 'application/json; charset= UTF-8',\n    'TokenAuto': desencriptar(token),\n    'Permiso': PERMIT_ADD_PROCESS\n  };\n  processN.requestData = {\n    'ip': localStorage.getItem('Ip'),\n    'token': desencriptar(token),\n    'operacion': PERMIT_ADD_PROCESS\n  };\n  return (dispatch, getState) => {\n    axios.post(`${URL_BASE}/proyectosESCOM-web/api/process/add`, processN, {\n      headers: headers\n    }).then(response => {\n      dispatch({\n        type: ADD_PROCESS,\n        payload: response.data.respuesta\n      });\n    }).catch(error => {\n      if (error.request.response === '') {\n        dispatch({\n          type: ADD_MESSAGE_ADD,\n          payload: 'error server'\n        });\n      } else {\n        if (error.request) {\n          dispatch({\n            type: ADD_MESSAGE_ADD,\n            payload: 'error server'\n          });\n        }\n      }\n    });\n  };\n} //MD_Editar proceso\n\nexport function editProcess(token, processE) {\n  const headers = {\n    'Content-Type': 'application/json; charset= UTF-8',\n    'TokenAuto': desencriptar(token),\n    'Permiso': PERMIT_EDIT_PROCESS\n  };\n  processE.requestData = {\n    'ip': localStorage.getItem('Ip'),\n    'token': desencriptar(token),\n    'operacion': PERMIT_EDIT_PROCESS\n  };\n  return (dispatch, getState) => {\n    axios.put(`${URL_BASE}/proyectosESCOM-web/api/process/edit`, processE, {\n      headers: headers\n    }).then(response => {\n      dispatch({\n        type: EDIT_PROCESS,\n        payload: response.data.respuesta\n      });\n    }).catch(error => {\n      if (error.request.response === '') {\n        dispatch({\n          type: ADD_MESSAGE_EDIT,\n          payload: 'error server'\n        });\n      } else {\n        if (error.request) {\n          dispatch({\n            type: ADD_MESSAGE_EDIT,\n            payload: 'error server'\n          });\n        }\n      }\n    });\n  };\n} //MD_Inhabilitar proceso\n//disable the selected \n\nexport function disableProcess(token, id) {\n  const headers = {\n    'Content-Type': 'application/json',\n    'TokenAuto': desencriptar(token),\n    'Permiso': PERMIT_DISABLE_PROCESS\n  };\n  const requestData = {\n    'ip': localStorage.getItem('Ip'),\n    'token': desencriptar(token),\n    'operacion': PERMIT_DISABLE_PROCESS\n  };\n  return (dispatch, getState) => {\n    axios.put(`${URL_BASE}/proyectosESCOM-web/api/process/disable/${id}`, requestData, {\n      headers: headers\n    }).then(response => {\n      dispatch({\n        type: DISABLE_PROCESS,\n        payload: response.data.respuesta\n      });\n    }).catch(error => {\n      if (error.request.response === '') {\n        dispatch({\n          type: ADD_MESSAGE_DISABLE,\n          payload: 'error server'\n        });\n      } else {\n        if (error.request) {\n          dispatch({\n            type: ADD_MESSAGE_DISABLE,\n            payload: 'error server'\n          });\n        }\n      }\n    });\n  };\n}","map":{"version":3,"sources":["C:/Users/hashy/Desktop/proyectosESCOM/frontend/ESCOM-view/src/ModuloDocumental/redux/actions/processA.js"],"names":["axios","desencriptar","URL_BASE","GET_LIST_PROCESSES","ADD_PROCESS","EDIT_PROCESS","DISABLE_PROCESS","GET_PROCESS_ID","ADD_MESSAGE_EDIT","ADD_MESSAGE_ADD","ADD_MESSAGE_DISABLE","ADD_MESSAGE","PERMIT_LIST_PROCESSES","PERMIT_GET_PROCESS","PERMIT_ADD_PROCESS","PERMIT_EDIT_PROCESS","PERMIT_DISABLE_PROCESS","addMessageEdit","mensaje","dispatch","getState","type","addMessageAdd","addMessageDisable","getListProcesses","token","id","headers","get","then","response","payload","data","catch","error","request","getProcessId","addProcess","processN","requestData","localStorage","getItem","post","respuesta","editProcess","processE","put","disableProcess"],"mappings":"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","sourcesContent":["import axios from 'axios';\r\n\r\nimport { desencriptar } from '../../../SuperAdministrador/componentes/general/Encriptar.js';\r\nimport { URL_BASE } from '../../../SuperAdministrador/utilitario/Configuracion.js';\r\n\r\nexport const GET_LIST_PROCESSES = 'GET_LIST_PROCESSES';\r\nexport const ADD_PROCESS = 'ADD_PROCESS';\r\nexport const EDIT_PROCESS = 'EDIT_PROCESS';\r\nexport const DISABLE_PROCESS = 'DISABLE_PROCESS';\r\nexport const GET_PROCESS_ID = 'GET_PROCESS_ID';\r\n\r\nexport const ADD_MESSAGE_EDIT = 'ADD_MESSAGE_EDIT';\r\nexport const ADD_MESSAGE_ADD = 'ADD_MESSAGE_ADD';\r\nexport const ADD_MESSAGE_DISABLE = 'ADD_MESSAGE_DISABLE';\r\nexport const ADD_MESSAGE = 'ADD_MESSAGE';\r\n\r\nconst PERMIT_LIST_PROCESSES = 'MD_Lista procesos';\r\nconst PERMIT_GET_PROCESS = 'MD_Obtiene proceso';\r\nconst PERMIT_ADD_PROCESS = 'MD_Agregar proceso';\r\nconst PERMIT_EDIT_PROCESS = 'MD_Editar proceso';\r\nconst PERMIT_DISABLE_PROCESS = 'MD_Inhabilitar proceso';\r\n\r\nexport function addMessageEdit(mensaje) {\r\n  return (dispatch, getState) => {\r\n    dispatch({\r\n      type: ADD_MESSAGE_EDIT,\r\n      mensaje: mensaje\r\n    });\r\n  };\r\n}\r\n\r\nexport function addMessageAdd(mensaje) {\r\n  return (dispatch, getState) => {\r\n    dispatch({\r\n      type: ADD_MESSAGE_ADD,\r\n      mensaje: mensaje\r\n    });\r\n  };\r\n}\r\n\r\nexport function addMessageDisable(mensaje) {\r\n  return (dispatch, getState) => {\r\n    dispatch({\r\n      type: ADD_MESSAGE_DISABLE,\r\n      mensaje: mensaje\r\n    });\r\n  };\r\n}\r\n\r\n//MD_Lista procesos\r\nexport function getListProcesses(token, id) {\r\n  const headers = {\r\n    'Content-Type': 'application/json',\r\n    'TokenAuto': desencriptar(token),\r\n    'Permiso': PERMIT_LIST_PROCESSES\r\n  }\r\n  return (dispatch, getState) => {\r\n    axios.get(`${URL_BASE}/proyectosESCOM-web/api/process/list/${id}`, { headers: headers })\r\n      .then(response => {\r\n        dispatch({\r\n          type: GET_LIST_PROCESSES,\r\n          payload: response.data\r\n        });\r\n      }).catch(error => {\r\n        if (error.request.response === '') {\r\n          dispatch({\r\n            type: ADD_MESSAGE,\r\n            payload: 'error server'\r\n          });\r\n        } else {\r\n          if (error.request) {\r\n            dispatch({\r\n              type: ADD_MESSAGE,\r\n              payload: 'error server'\r\n            });\r\n          }\r\n        }\r\n\r\n      });\r\n  }\r\n}\r\n\r\n//MD_Obtiene proceso\r\nexport function getProcessId(token, id) {\r\n  const headers = {\r\n    'Content-Type': 'application/json',\r\n    'TokenAuto': desencriptar(token),\r\n    'Permiso': PERMIT_GET_PROCESS\r\n  }\r\n  return (dispatch, getState) => {\r\n    axios.get(`${URL_BASE}/proyectosESCOM-web/api/process/get/${id}`, { headers: headers })\r\n      .then(response => {\r\n        dispatch({\r\n          type: GET_PROCESS_ID,\r\n          payload: response.data\r\n        });\r\n      }).catch(error => {\r\n        if (error.request.response === '') {\r\n          dispatch({\r\n            type: ADD_MESSAGE,\r\n            payload: 'error server'\r\n          });\r\n        } else {\r\n          if (error.request) {\r\n            dispatch({\r\n              type: ADD_MESSAGE,\r\n              payload: 'error server'\r\n            });\r\n          }\r\n        }\r\n\r\n      });\r\n  }\r\n}\r\n\r\n//MD_Agregar proceso\r\nexport function addProcess(token, processN) {\r\n  const headers = {\r\n    'Content-Type': 'application/json; charset= UTF-8',\r\n    'TokenAuto': desencriptar(token),\r\n    'Permiso': PERMIT_ADD_PROCESS\r\n  }\r\n  processN.requestData = {\r\n    'ip': localStorage.getItem('Ip'),\r\n    'token': desencriptar(token),\r\n    'operacion': PERMIT_ADD_PROCESS\r\n  };\r\n  return (dispatch, getState) => {\r\n    axios.post(`${URL_BASE}/proyectosESCOM-web/api/process/add`, processN, { headers: headers })\r\n      .then(response => {\r\n        dispatch({\r\n          type: ADD_PROCESS,\r\n          payload: response.data.respuesta\r\n        });\r\n      }).catch(error => {\r\n        if (error.request.response === '') {\r\n          dispatch({\r\n            type: ADD_MESSAGE_ADD,\r\n            payload: 'error server'\r\n          });\r\n        } else {\r\n          if (error.request) {\r\n            dispatch({\r\n              type: ADD_MESSAGE_ADD,\r\n              payload: 'error server'\r\n            });\r\n          }\r\n        }\r\n\r\n      });\r\n  }\r\n}\r\n\r\n//MD_Editar proceso\r\nexport function editProcess(token, processE) {\r\n  const headers = {\r\n    'Content-Type': 'application/json; charset= UTF-8',\r\n    'TokenAuto': desencriptar(token),\r\n    'Permiso': PERMIT_EDIT_PROCESS\r\n  }\r\n  processE.requestData = {\r\n    'ip': localStorage.getItem('Ip'),\r\n    'token': desencriptar(token),\r\n    'operacion': PERMIT_EDIT_PROCESS\r\n  };\r\n  return (dispatch, getState) => {\r\n    axios.put(`${URL_BASE}/proyectosESCOM-web/api/process/edit`, processE, { headers: headers })\r\n      .then(response => {\r\n        dispatch({\r\n          type: EDIT_PROCESS,\r\n          payload: response.data.respuesta\r\n        });\r\n      }).catch(error => {\r\n        if (error.request.response === '') {\r\n          dispatch({\r\n            type: ADD_MESSAGE_EDIT,\r\n            payload: 'error server'\r\n          });\r\n        } else {\r\n          if (error.request) {\r\n            dispatch({\r\n              type: ADD_MESSAGE_EDIT,\r\n              payload: 'error server'\r\n            });\r\n          }\r\n        }\r\n\r\n      });\r\n  }\r\n}\r\n\r\n//MD_Inhabilitar proceso\r\n//disable the selected \r\nexport function disableProcess(token, id) {\r\n  const headers = {\r\n    'Content-Type': 'application/json',\r\n    'TokenAuto': desencriptar(token),\r\n    'Permiso': PERMIT_DISABLE_PROCESS\r\n  }\r\n  const requestData = {\r\n    'ip': localStorage.getItem('Ip'),\r\n    'token': desencriptar(token),\r\n    'operacion': PERMIT_DISABLE_PROCESS\r\n  };\r\n  return (dispatch, getState) => {\r\n    axios.put(`${URL_BASE}/proyectosESCOM-web/api/process/disable/${id}`, requestData, { headers: headers })\r\n      .then(response => {\r\n        dispatch({\r\n          type: DISABLE_PROCESS,\r\n          payload: response.data.respuesta\r\n        })\r\n      }).catch(error => {\r\n        if (error.request.response === '') {\r\n          dispatch({\r\n            type: ADD_MESSAGE_DISABLE,\r\n            payload: 'error server'\r\n          });\r\n        } else {\r\n          if (error.request) {\r\n            dispatch({\r\n              type: ADD_MESSAGE_DISABLE,\r\n              payload: 'error server'\r\n            });\r\n          }\r\n        }\r\n\r\n      });\r\n  }\r\n}\r\n"]},"metadata":{},"sourceType":"module"}