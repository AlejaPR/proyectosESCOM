{"ast":null,"code":"import axios from 'axios';\nimport { desencriptar } from '../componentes/general/Encriptar.js';\nimport { mensajesDeError } from '../utilitario/MensajesError.js';\nimport imagenDefecto from '../imagenes/defectoLogin.png';\nexport const ESTADO_CONFIGURACION = 'ESTADO_CONFIGURACION';\nexport const MOSTRAR_CONFIGURACION = 'MOSTRAR_CONFIGURACION';\nexport const ACTUALIZAR_BARRALATERAL = 'ACTUALIZAR_BARRALATERAL';\nexport const ACTUALIZAR_BARRASUPERIOR = 'ACTUALIZAR_BARRASUPERIOR';\nexport const ACTUALIZAR_FOTO_LOGIN = 'ACTUALIZAR_FOTO_LOGIN';\nexport const ACTUALIZAR_FOTO_LOGO = 'ACTUALIZAR_FOTO_LOGO';\nexport const ACTUALIZAR_BOTONES = 'ACTUALIZAR_BOTONES';\nexport const MENSAJE_CONFIGURACION = 'MENSAJE_CONFIGURACION';\nexport const CARGAR_CONFIGURACION = 'CARGAR_CONFIGURACION';\nexport const CONFIGURACION_LOGIN = 'CONFIGURACION_LOGIN';\nexport function actionActualizarConfiguracion(configuracion, token) {\n  var tokenRequest = desencriptar(token);\n  const headers = {\n    'Content-Type': 'application/json',\n    'TokenAuto': tokenRequest,\n    'Permiso': 'sa_Administrar configuracion de aspecto'\n  };\n  return (dispatch, getState) => {\n    axios.put(\"http://localhost:9090/proyectosESCOM-web/api/configuracion/registrarConfiguracion\", configuracion, {\n      headers: headers\n    }).then(response => {\n      dispatch({\n        type: MENSAJE_CONFIGURACION,\n        mensaje: 'Configuracion actualizada'\n      });\n      dispatch({\n        type: CARGAR_CONFIGURACION,\n        configuracion: configuracion\n      });\n    }).catch(error => {\n      if (error.request.response === '') {\n        dispatch({\n          type: MENSAJE_CONFIGURACION,\n          mensaje: 'Servidor fuera de servicio temporalmente'\n        });\n      } else {\n        if (error.request) {\n          var o = JSON.parse(error.request.response);\n          let respuesta = mensajesDeError(o.respuesta);\n\n          if (respuesta !== '') {\n            dispatch({\n              type: MENSAJE_CONFIGURACION,\n              mensaje: respuesta\n            });\n          } else {\n            dispatch({\n              type: MENSAJE_CONFIGURACION,\n              mensaje: 'Ya existen los datos registrados previamente'\n            });\n          }\n        }\n      }\n    });\n  };\n}\nexport function consultarConfiguracion() {\n  const headers = {\n    'Content-Type': 'application/json'\n  };\n  return (dispatch, getState) => {\n    axios.get(\"http://localhost:9090/proyectosESCOM-web/api/configuracion/listarEntorno\", {\n      headers: headers\n    }).then(response => {\n      dispatch({\n        type: MOSTRAR_CONFIGURACION,\n        configuracion: response.data[0]\n      });\n    }).catch(error => {\n      if (error.request.response === '') {\n        dispatch({\n          type: MOSTRAR_CONFIGURACION,\n          configuracion: {\n            barraLateral: \"#164D14\",\n            barraSuperior: \"white\",\n            botones: \"#164D14\"\n          }\n        });\n      } else {\n        if (error.request) {\n          var o = JSON.parse(error.request.response);\n          let respuesta = mensajesDeError(o.respuesta);\n\n          if (respuesta !== '') {\n            dispatch({\n              type: MOSTRAR_CONFIGURACION,\n              configuracion: {\n                barraLateral: \"#164D14\",\n                barraSuperior: \"#FFFFFF\",\n                botones: \"#164D14\"\n              }\n            });\n          } else {\n            dispatch({\n              type: MOSTRAR_CONFIGURACION,\n              configuracion: {\n                barraLateral: \"#164D14\",\n                fondoSuperior: \"#FFFFFF\",\n                botones: \"#164D14\"\n              }\n            });\n          }\n        }\n      }\n    });\n  };\n}\nexport function consultarConfiguracionLogin() {\n  const headers = {\n    'Content-Type': 'application/json'\n  };\n  return (dispatch, getState) => {\n    axios.get(\"http://localhost:9090/proyectosESCOM-web/api/configuracion/listarInicio\", {\n      headers: headers\n    }).then(response => {\n      dispatch({\n        type: CONFIGURACION_LOGIN,\n        configuracion: response.data[0]\n      });\n    }).catch(error => {\n      if (error.request.response === '') {\n        dispatch({\n          type: CONFIGURACION_LOGIN,\n          configuracion: {\n            botones: \"#0E3D38\",\n            imagenLogin: undefined\n          }\n        });\n      } else {\n        if (error.request) {\n          var o = JSON.parse(error.request.response);\n          let respuesta = mensajesDeError(o.respuesta);\n\n          if (respuesta !== '') {\n            dispatch({\n              type: CONFIGURACION_LOGIN,\n              configuracion: {\n                botones: \"#0E3D38\",\n                imagenLogin: undefined\n              }\n            });\n          } else {\n            dispatch({\n              type: CONFIGURACION_LOGIN,\n              configuracion: {\n                botones: \"#0E3D38\",\n                imagenLogin: undefined\n              }\n            });\n          }\n        }\n      }\n    });\n  };\n}\nexport function actionConsultarConfiguracionCompleta(token) {\n  var tokenRequest = desencriptar(token);\n  const headers = {\n    'Content-Type': 'application/json',\n    'TokenAuto': tokenRequest,\n    'Permiso': 'sa_Administrar configuracion de aspecto'\n  };\n  return (dispatch, getState) => {\n    axios.get(\"http://localhost:9090/proyectosESCOM-web/api/configuracion/listarConfiguracionCompleta\", {\n      headers: headers\n    }).then(response => {\n      dispatch({\n        type: CARGAR_CONFIGURACION,\n        configuracion: response.data[0]\n      });\n    }).catch(error => {\n      if (error.request.response === '') {} else {\n        if (error.request) {\n          var o = JSON.parse(error.request.response);\n          let respuesta = mensajesDeError(o.respuesta);\n\n          if (respuesta === 'Sin permiso') {\n            dispatch({\n              type: ESTADO_CONFIGURACION,\n              estado: true\n            });\n          } else {\n            dispatch({\n              type: MENSAJE_CONFIGURACION,\n              mensaje: 'Sin acceso al servicio'\n            });\n          }\n        }\n      }\n    });\n  };\n}\nexport function actionActualizarBarraLateral(color) {\n  return (dispatch, getState) => {\n    dispatch({\n      type: ACTUALIZAR_BARRALATERAL,\n      color: color\n    });\n  };\n}\nexport function actualizarMensaje(mensaje) {\n  return (dispatch, getState) => {\n    dispatch({\n      type: MENSAJE_CONFIGURACION,\n      mensaje: mensaje\n    });\n  };\n}\nexport function actionActualizarBarraSuperior(color) {\n  return (dispatch, getState) => {\n    dispatch({\n      type: ACTUALIZAR_BARRASUPERIOR,\n      color: color\n    });\n  };\n}\nexport function actualizarFotoLogin(foto) {\n  return (dispatch, getState) => {\n    dispatch({\n      type: ACTUALIZAR_FOTO_LOGIN,\n      fotoLogin: foto\n    });\n  };\n}\nexport function actualizarFotoLogo(foto) {\n  return (dispatch, getState) => {\n    dispatch({\n      type: ACTUALIZAR_FOTO_LOGO,\n      fotoLogo: foto\n    });\n  };\n}\nexport function actionActualizarBotones(color) {\n  return (dispatch, getState) => {\n    dispatch({\n      type: ACTUALIZAR_BOTONES,\n      color: color\n    });\n  };\n}","map":{"version":3,"sources":["C:/Users/jeiso/Desktop/proyectosESCOM/frontend/ESCOM-view/src/SuperAdministrador/actions/actionConfiguracion.js"],"names":["axios","desencriptar","mensajesDeError","imagenDefecto","ESTADO_CONFIGURACION","MOSTRAR_CONFIGURACION","ACTUALIZAR_BARRALATERAL","ACTUALIZAR_BARRASUPERIOR","ACTUALIZAR_FOTO_LOGIN","ACTUALIZAR_FOTO_LOGO","ACTUALIZAR_BOTONES","MENSAJE_CONFIGURACION","CARGAR_CONFIGURACION","CONFIGURACION_LOGIN","actionActualizarConfiguracion","configuracion","token","tokenRequest","headers","dispatch","getState","put","then","response","type","mensaje","catch","error","request","o","JSON","parse","respuesta","consultarConfiguracion","get","data","barraLateral","barraSuperior","botones","fondoSuperior","consultarConfiguracionLogin","imagenLogin","undefined","actionConsultarConfiguracionCompleta","estado","actionActualizarBarraLateral","color","actualizarMensaje","actionActualizarBarraSuperior","actualizarFotoLogin","foto","fotoLogin","actualizarFotoLogo","fotoLogo","actionActualizarBotones"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,YAAT,QAA6B,qCAA7B;AACA,SAASC,eAAT,QAAgC,gCAAhC;AACA,OAAOC,aAAP,MAA0B,8BAA1B;AAGA,OAAO,MAAMC,oBAAoB,GAAG,sBAA7B;AACP,OAAO,MAAMC,qBAAqB,GAAG,uBAA9B;AACP,OAAO,MAAMC,uBAAuB,GAAG,yBAAhC;AACP,OAAO,MAAMC,wBAAwB,GAAG,0BAAjC;AACP,OAAO,MAAMC,qBAAqB,GAAG,uBAA9B;AACP,OAAO,MAAMC,oBAAoB,GAAG,sBAA7B;AACP,OAAO,MAAMC,kBAAkB,GAAG,oBAA3B;AACP,OAAO,MAAMC,qBAAqB,GAAG,uBAA9B;AACP,OAAO,MAAMC,oBAAoB,GAAG,sBAA7B;AACP,OAAO,MAAMC,mBAAmB,GAAG,qBAA5B;AAEP,OAAO,SAASC,6BAAT,CAAuCC,aAAvC,EAAsDC,KAAtD,EAA6D;AAChE,MAAIC,YAAY,GAAGhB,YAAY,CAACe,KAAD,CAA/B;AACA,QAAME,OAAO,GAAG;AACZ,oBAAgB,kBADJ;AAEZ,iBAAaD,YAFD;AAGZ,eAAW;AAHC,GAAhB;AAKA,SAAO,CAACE,QAAD,EAAWC,QAAX,KAAwB;AAC3BpB,IAAAA,KAAK,CAACqB,GAAN,CAAU,mFAAV,EAA+FN,aAA/F,EAA8G;AAAEG,MAAAA,OAAO,EAAEA;AAAX,KAA9G,EACKI,IADL,CACUC,QAAQ,IAAI;AACdJ,MAAAA,QAAQ,CAAC;AACLK,QAAAA,IAAI,EAAEb,qBADD;AAELc,QAAAA,OAAO,EAAE;AAFJ,OAAD,CAAR;AAIAN,MAAAA,QAAQ,CAAC;AACLK,QAAAA,IAAI,EAAEZ,oBADD;AAELG,QAAAA,aAAa,EAAEA;AAFV,OAAD,CAAR;AAKH,KAXL,EAWOW,KAXP,CAWcC,KAAD,IAAW;AAChB,UAAIA,KAAK,CAACC,OAAN,CAAcL,QAAd,KAA2B,EAA/B,EAAmC;AAC/BJ,QAAAA,QAAQ,CAAC;AACLK,UAAAA,IAAI,EAAEb,qBADD;AAELc,UAAAA,OAAO,EAAE;AAFJ,SAAD,CAAR;AAIH,OALD,MAKO;AACH,YAAIE,KAAK,CAACC,OAAV,EAAmB;AACf,cAAIC,CAAC,GAAGC,IAAI,CAACC,KAAL,CAAWJ,KAAK,CAACC,OAAN,CAAcL,QAAzB,CAAR;AACA,cAAIS,SAAS,GAAG9B,eAAe,CAAC2B,CAAC,CAACG,SAAH,CAA/B;;AACA,cAAIA,SAAS,KAAK,EAAlB,EAAsB;AAClBb,YAAAA,QAAQ,CAAC;AACLK,cAAAA,IAAI,EAAEb,qBADD;AAELc,cAAAA,OAAO,EAAEO;AAFJ,aAAD,CAAR;AAIH,WALD,MAKO;AACHb,YAAAA,QAAQ,CAAC;AACLK,cAAAA,IAAI,EAAEb,qBADD;AAELc,cAAAA,OAAO,EAAE;AAFJ,aAAD,CAAR;AAIH;AACJ;AACJ;AAEJ,KAnCL;AAoCH,GArCD;AAsCH;AAED,OAAO,SAASQ,sBAAT,GAAkC;AACrC,QAAMf,OAAO,GAAG;AACZ,oBAAgB;AADJ,GAAhB;AAGA,SAAO,CAACC,QAAD,EAAWC,QAAX,KAAwB;AAC3BpB,IAAAA,KAAK,CAACkC,GAAN,CAAU,0EAAV,EAAsF;AAAEhB,MAAAA,OAAO,EAAEA;AAAX,KAAtF,EACKI,IADL,CACUC,QAAQ,IAAI;AACdJ,MAAAA,QAAQ,CAAC;AACLK,QAAAA,IAAI,EAAEnB,qBADD;AAELU,QAAAA,aAAa,EAAEQ,QAAQ,CAACY,IAAT,CAAc,CAAd;AAFV,OAAD,CAAR;AAIH,KANL,EAMOT,KANP,CAMcC,KAAD,IAAW;AAChB,UAAIA,KAAK,CAACC,OAAN,CAAcL,QAAd,KAA2B,EAA/B,EAAmC;AAC/BJ,QAAAA,QAAQ,CAAC;AACLK,UAAAA,IAAI,EAAEnB,qBADD;AAELU,UAAAA,aAAa,EAAE;AACXqB,YAAAA,YAAY,EAAE,SADH;AAEXC,YAAAA,aAAa,EAAE,OAFJ;AAGXC,YAAAA,OAAO,EAAE;AAHE;AAFV,SAAD,CAAR;AAQH,OATD,MASO;AACH,YAAIX,KAAK,CAACC,OAAV,EAAmB;AACf,cAAIC,CAAC,GAAGC,IAAI,CAACC,KAAL,CAAWJ,KAAK,CAACC,OAAN,CAAcL,QAAzB,CAAR;AACA,cAAIS,SAAS,GAAG9B,eAAe,CAAC2B,CAAC,CAACG,SAAH,CAA/B;;AACA,cAAIA,SAAS,KAAK,EAAlB,EAAsB;AAClBb,YAAAA,QAAQ,CAAC;AACLK,cAAAA,IAAI,EAAEnB,qBADD;AAELU,cAAAA,aAAa,EAAE;AACXqB,gBAAAA,YAAY,EAAE,SADH;AAEXC,gBAAAA,aAAa,EAAE,SAFJ;AAGXC,gBAAAA,OAAO,EAAE;AAHE;AAFV,aAAD,CAAR;AAQH,WATD,MASO;AACHnB,YAAAA,QAAQ,CAAC;AACLK,cAAAA,IAAI,EAAEnB,qBADD;AAELU,cAAAA,aAAa,EAAE;AACXqB,gBAAAA,YAAY,EAAE,SADH;AAEXG,gBAAAA,aAAa,EAAE,SAFJ;AAGXD,gBAAAA,OAAO,EAAE;AAHE;AAFV,aAAD,CAAR;AAQH;AACJ;AACJ;AAEJ,KA1CL;AA2CH,GA5CD;AA6CH;AAED,OAAO,SAASE,2BAAT,GAAuC;AAC1C,QAAMtB,OAAO,GAAG;AACZ,oBAAgB;AADJ,GAAhB;AAGA,SAAO,CAACC,QAAD,EAAWC,QAAX,KAAwB;AAC3BpB,IAAAA,KAAK,CAACkC,GAAN,CAAU,yEAAV,EAAqF;AAAEhB,MAAAA,OAAO,EAAEA;AAAX,KAArF,EACKI,IADL,CACUC,QAAQ,IAAI;AACdJ,MAAAA,QAAQ,CAAC;AACLK,QAAAA,IAAI,EAAEX,mBADD;AAELE,QAAAA,aAAa,EAAEQ,QAAQ,CAACY,IAAT,CAAc,CAAd;AAFV,OAAD,CAAR;AAIH,KANL,EAMOT,KANP,CAMcC,KAAD,IAAW;AAChB,UAAIA,KAAK,CAACC,OAAN,CAAcL,QAAd,KAA2B,EAA/B,EAAmC;AAC/BJ,QAAAA,QAAQ,CAAC;AACLK,UAAAA,IAAI,EAAEX,mBADD;AAELE,UAAAA,aAAa,EAAE;AACXuB,YAAAA,OAAO,EAAE,SADE;AAEXG,YAAAA,WAAW,EAACC;AAFD;AAFV,SAAD,CAAR;AAOH,OARD,MAQO;AACH,YAAIf,KAAK,CAACC,OAAV,EAAmB;AACf,cAAIC,CAAC,GAAGC,IAAI,CAACC,KAAL,CAAWJ,KAAK,CAACC,OAAN,CAAcL,QAAzB,CAAR;AACA,cAAIS,SAAS,GAAG9B,eAAe,CAAC2B,CAAC,CAACG,SAAH,CAA/B;;AACA,cAAIA,SAAS,KAAK,EAAlB,EAAsB;AAClBb,YAAAA,QAAQ,CAAC;AACLK,cAAAA,IAAI,EAAEX,mBADD;AAELE,cAAAA,aAAa,EAAE;AACXuB,gBAAAA,OAAO,EAAE,SADE;AAEXG,gBAAAA,WAAW,EAACC;AAFD;AAFV,aAAD,CAAR;AAOH,WARD,MAQO;AACHvB,YAAAA,QAAQ,CAAC;AACLK,cAAAA,IAAI,EAAEX,mBADD;AAELE,cAAAA,aAAa,EAAE;AACXuB,gBAAAA,OAAO,EAAE,SADE;AAEXG,gBAAAA,WAAW,EAACC;AAFD;AAFV,aAAD,CAAR;AAOH;AACJ;AACJ;AAEJ,KAvCL;AAwCH,GAzCD;AA0CH;AAED,OAAO,SAASC,oCAAT,CAA8C3B,KAA9C,EAAqD;AACxD,MAAIC,YAAY,GAAGhB,YAAY,CAACe,KAAD,CAA/B;AACA,QAAME,OAAO,GAAG;AACZ,oBAAgB,kBADJ;AAEZ,iBAAaD,YAFD;AAGZ,eAAW;AAHC,GAAhB;AAKA,SAAO,CAACE,QAAD,EAAWC,QAAX,KAAwB;AAC3BpB,IAAAA,KAAK,CAACkC,GAAN,CAAU,wFAAV,EAAoG;AAAEhB,MAAAA,OAAO,EAAEA;AAAX,KAApG,EACKI,IADL,CACUC,QAAQ,IAAI;AACdJ,MAAAA,QAAQ,CAAC;AACLK,QAAAA,IAAI,EAAEZ,oBADD;AAELG,QAAAA,aAAa,EAAEQ,QAAQ,CAACY,IAAT,CAAc,CAAd;AAFV,OAAD,CAAR;AAIH,KANL,EAMOT,KANP,CAMcC,KAAD,IAAW;AAChB,UAAIA,KAAK,CAACC,OAAN,CAAcL,QAAd,KAA2B,EAA/B,EAAmC,CAElC,CAFD,MAEO;AACH,YAAII,KAAK,CAACC,OAAV,EAAmB;AACf,cAAIC,CAAC,GAAGC,IAAI,CAACC,KAAL,CAAWJ,KAAK,CAACC,OAAN,CAAcL,QAAzB,CAAR;AACA,cAAIS,SAAS,GAAG9B,eAAe,CAAC2B,CAAC,CAACG,SAAH,CAA/B;;AACA,cAAIA,SAAS,KAAK,aAAlB,EAAiC;AAC7Bb,YAAAA,QAAQ,CAAC;AACLK,cAAAA,IAAI,EAAEpB,oBADD;AAELwC,cAAAA,MAAM,EAAE;AAFH,aAAD,CAAR;AAIH,WALD,MAKO;AACHzB,YAAAA,QAAQ,CAAC;AACLK,cAAAA,IAAI,EAAEb,qBADD;AAELc,cAAAA,OAAO,EAAE;AAFJ,aAAD,CAAR;AAIH;AACJ;AACJ;AAEJ,KA3BL;AA4BH,GA7BD;AA8BH;AAED,OAAO,SAASoB,4BAAT,CAAsCC,KAAtC,EAA6C;AAChD,SAAO,CAAC3B,QAAD,EAAWC,QAAX,KAAwB;AAC3BD,IAAAA,QAAQ,CAAC;AACLK,MAAAA,IAAI,EAAElB,uBADD;AAELwC,MAAAA,KAAK,EAAEA;AAFF,KAAD,CAAR;AAIH,GALD;AAMH;AAGD,OAAO,SAASC,iBAAT,CAA2BtB,OAA3B,EAAoC;AACvC,SAAO,CAACN,QAAD,EAAWC,QAAX,KAAwB;AAC3BD,IAAAA,QAAQ,CAAC;AACLK,MAAAA,IAAI,EAAEb,qBADD;AAELc,MAAAA,OAAO,EAAEA;AAFJ,KAAD,CAAR;AAIH,GALD;AAMH;AAED,OAAO,SAASuB,6BAAT,CAAuCF,KAAvC,EAA8C;AACjD,SAAO,CAAC3B,QAAD,EAAWC,QAAX,KAAwB;AAC3BD,IAAAA,QAAQ,CAAC;AACLK,MAAAA,IAAI,EAAEjB,wBADD;AAELuC,MAAAA,KAAK,EAAEA;AAFF,KAAD,CAAR;AAIH,GALD;AAMH;AAED,OAAO,SAASG,mBAAT,CAA6BC,IAA7B,EAAmC;AACtC,SAAO,CAAC/B,QAAD,EAAWC,QAAX,KAAwB;AAC3BD,IAAAA,QAAQ,CAAC;AACLK,MAAAA,IAAI,EAAEhB,qBADD;AAEL2C,MAAAA,SAAS,EAAED;AAFN,KAAD,CAAR;AAIH,GALD;AAMH;AAED,OAAO,SAASE,kBAAT,CAA4BF,IAA5B,EAAkC;AACrC,SAAO,CAAC/B,QAAD,EAAWC,QAAX,KAAwB;AAC3BD,IAAAA,QAAQ,CAAC;AACLK,MAAAA,IAAI,EAAEf,oBADD;AAEL4C,MAAAA,QAAQ,EAAEH;AAFL,KAAD,CAAR;AAIH,GALD;AAMH;AAED,OAAO,SAASI,uBAAT,CAAiCR,KAAjC,EAAwC;AAC3C,SAAO,CAAC3B,QAAD,EAAWC,QAAX,KAAwB;AAC3BD,IAAAA,QAAQ,CAAC;AACLK,MAAAA,IAAI,EAAEd,kBADD;AAELoC,MAAAA,KAAK,EAAEA;AAFF,KAAD,CAAR;AAIH,GALD;AAMH","sourcesContent":["import axios from 'axios';\r\nimport { desencriptar } from '../componentes/general/Encriptar.js';\r\nimport { mensajesDeError } from '../utilitario/MensajesError.js';\r\nimport imagenDefecto from '../imagenes/defectoLogin.png';\r\n\r\n\r\nexport const ESTADO_CONFIGURACION = 'ESTADO_CONFIGURACION';\r\nexport const MOSTRAR_CONFIGURACION = 'MOSTRAR_CONFIGURACION'\r\nexport const ACTUALIZAR_BARRALATERAL = 'ACTUALIZAR_BARRALATERAL'\r\nexport const ACTUALIZAR_BARRASUPERIOR = 'ACTUALIZAR_BARRASUPERIOR'\r\nexport const ACTUALIZAR_FOTO_LOGIN = 'ACTUALIZAR_FOTO_LOGIN'\r\nexport const ACTUALIZAR_FOTO_LOGO = 'ACTUALIZAR_FOTO_LOGO'\r\nexport const ACTUALIZAR_BOTONES = 'ACTUALIZAR_BOTONES';\r\nexport const MENSAJE_CONFIGURACION = 'MENSAJE_CONFIGURACION';\r\nexport const CARGAR_CONFIGURACION = 'CARGAR_CONFIGURACION';\r\nexport const CONFIGURACION_LOGIN = 'CONFIGURACION_LOGIN';\r\n\r\nexport function actionActualizarConfiguracion(configuracion, token) {\r\n    var tokenRequest = desencriptar(token);\r\n    const headers = {\r\n        'Content-Type': 'application/json',\r\n        'TokenAuto': tokenRequest,\r\n        'Permiso': 'sa_Administrar configuracion de aspecto'\r\n    }\r\n    return (dispatch, getState) => {\r\n        axios.put(\"http://localhost:9090/proyectosESCOM-web/api/configuracion/registrarConfiguracion\", configuracion, { headers: headers })\r\n            .then(response => {\r\n                dispatch({\r\n                    type: MENSAJE_CONFIGURACION,\r\n                    mensaje: 'Configuracion actualizada'\r\n                });\r\n                dispatch({\r\n                    type: CARGAR_CONFIGURACION,\r\n                    configuracion: configuracion\r\n                });\r\n\r\n            }).catch((error) => {\r\n                if (error.request.response === '') {\r\n                    dispatch({\r\n                        type: MENSAJE_CONFIGURACION,\r\n                        mensaje: 'Servidor fuera de servicio temporalmente'\r\n                    });\r\n                } else {\r\n                    if (error.request) {\r\n                        var o = JSON.parse(error.request.response);\r\n                        let respuesta = mensajesDeError(o.respuesta);\r\n                        if (respuesta !== '') {\r\n                            dispatch({\r\n                                type: MENSAJE_CONFIGURACION,\r\n                                mensaje: respuesta\r\n                            });\r\n                        } else {\r\n                            dispatch({\r\n                                type: MENSAJE_CONFIGURACION,\r\n                                mensaje: 'Ya existen los datos registrados previamente'\r\n                            });\r\n                        }\r\n                    }\r\n                }\r\n\r\n            });\r\n    }\r\n}\r\n\r\nexport function consultarConfiguracion() {\r\n    const headers = {\r\n        'Content-Type': 'application/json'\r\n    }\r\n    return (dispatch, getState) => {\r\n        axios.get(\"http://localhost:9090/proyectosESCOM-web/api/configuracion/listarEntorno\", { headers: headers })\r\n            .then(response => {\r\n                dispatch({\r\n                    type: MOSTRAR_CONFIGURACION,\r\n                    configuracion: response.data[0]\r\n                });\r\n            }).catch((error) => {\r\n                if (error.request.response === '') {\r\n                    dispatch({\r\n                        type: MOSTRAR_CONFIGURACION,\r\n                        configuracion: {\r\n                            barraLateral: \"#164D14\",\r\n                            barraSuperior: \"white\",\r\n                            botones: \"#164D14\"\r\n                        }\r\n                    });\r\n                } else {\r\n                    if (error.request) {\r\n                        var o = JSON.parse(error.request.response);\r\n                        let respuesta = mensajesDeError(o.respuesta);\r\n                        if (respuesta !== '') {\r\n                            dispatch({\r\n                                type: MOSTRAR_CONFIGURACION,\r\n                                configuracion: {\r\n                                    barraLateral: \"#164D14\",\r\n                                    barraSuperior: \"#FFFFFF\",\r\n                                    botones: \"#164D14\"\r\n                                }\r\n                            });\r\n                        } else {\r\n                            dispatch({\r\n                                type: MOSTRAR_CONFIGURACION,\r\n                                configuracion: {\r\n                                    barraLateral: \"#164D14\",\r\n                                    fondoSuperior: \"#FFFFFF\",\r\n                                    botones: \"#164D14\"\r\n                                }\r\n                            });\r\n                        }\r\n                    }\r\n                }\r\n\r\n            });\r\n    }\r\n}\r\n\r\nexport function consultarConfiguracionLogin() {\r\n    const headers = {\r\n        'Content-Type': 'application/json'\r\n    }\r\n    return (dispatch, getState) => {\r\n        axios.get(\"http://localhost:9090/proyectosESCOM-web/api/configuracion/listarInicio\", { headers: headers })\r\n            .then(response => {\r\n                dispatch({\r\n                    type: CONFIGURACION_LOGIN,\r\n                    configuracion: response.data[0]\r\n                });\r\n            }).catch((error) => {\r\n                if (error.request.response === '') {\r\n                    dispatch({\r\n                        type: CONFIGURACION_LOGIN,\r\n                        configuracion: {\r\n                            botones: \"#0E3D38\",\r\n                            imagenLogin:undefined\r\n                        }\r\n                    });\r\n                } else {\r\n                    if (error.request) {\r\n                        var o = JSON.parse(error.request.response);\r\n                        let respuesta = mensajesDeError(o.respuesta);\r\n                        if (respuesta !== '') {      \r\n                            dispatch({\r\n                                type: CONFIGURACION_LOGIN,\r\n                                configuracion: {\r\n                                    botones: \"#0E3D38\",\r\n                                    imagenLogin:undefined\r\n                                }\r\n                            });\r\n                        } else {\r\n                            dispatch({\r\n                                type: CONFIGURACION_LOGIN,\r\n                                configuracion: {\r\n                                    botones: \"#0E3D38\",\r\n                                    imagenLogin:undefined\r\n                                }\r\n                            });\r\n                        }\r\n                    }\r\n                }\r\n\r\n            });\r\n    }\r\n}\r\n\r\nexport function actionConsultarConfiguracionCompleta(token) {\r\n    var tokenRequest = desencriptar(token);\r\n    const headers = {\r\n        'Content-Type': 'application/json',\r\n        'TokenAuto': tokenRequest,\r\n        'Permiso': 'sa_Administrar configuracion de aspecto'\r\n    }\r\n    return (dispatch, getState) => {\r\n        axios.get(\"http://localhost:9090/proyectosESCOM-web/api/configuracion/listarConfiguracionCompleta\", { headers: headers })\r\n            .then(response => {\r\n                dispatch({\r\n                    type: CARGAR_CONFIGURACION,\r\n                    configuracion: response.data[0]\r\n                });\r\n            }).catch((error) => {\r\n                if (error.request.response === '') {\r\n\r\n                } else {\r\n                    if (error.request) {\r\n                        var o = JSON.parse(error.request.response);\r\n                        let respuesta = mensajesDeError(o.respuesta);\r\n                        if (respuesta === 'Sin permiso') {\r\n                            dispatch({\r\n                                type: ESTADO_CONFIGURACION,\r\n                                estado: true\r\n                            });\r\n                        } else {\r\n                            dispatch({\r\n                                type: MENSAJE_CONFIGURACION,\r\n                                mensaje: 'Sin acceso al servicio'\r\n                            });\r\n                        }\r\n                    }\r\n                }\r\n\r\n            });\r\n    }\r\n}\r\n\r\nexport function actionActualizarBarraLateral(color) {\r\n    return (dispatch, getState) => {\r\n        dispatch({\r\n            type: ACTUALIZAR_BARRALATERAL,\r\n            color: color\r\n        });\r\n    }\r\n}\r\n\r\n\r\nexport function actualizarMensaje(mensaje) {\r\n    return (dispatch, getState) => {\r\n        dispatch({\r\n            type: MENSAJE_CONFIGURACION,\r\n            mensaje: mensaje\r\n        });\r\n    };\r\n}\r\n\r\nexport function actionActualizarBarraSuperior(color) {\r\n    return (dispatch, getState) => {\r\n        dispatch({\r\n            type: ACTUALIZAR_BARRASUPERIOR,\r\n            color: color\r\n        });\r\n    }\r\n}\r\n\r\nexport function actualizarFotoLogin(foto) {\r\n    return (dispatch, getState) => {\r\n        dispatch({\r\n            type: ACTUALIZAR_FOTO_LOGIN,\r\n            fotoLogin: foto\r\n        });\r\n    }\r\n}\r\n\r\nexport function actualizarFotoLogo(foto) {\r\n    return (dispatch, getState) => {\r\n        dispatch({\r\n            type: ACTUALIZAR_FOTO_LOGO,\r\n            fotoLogo: foto\r\n        });\r\n    }\r\n}\r\n\r\nexport function actionActualizarBotones(color) {\r\n    return (dispatch, getState) => {\r\n        dispatch({\r\n            type: ACTUALIZAR_BOTONES,\r\n            color: color\r\n        });\r\n    }\r\n}\r\n"]},"metadata":{},"sourceType":"module"}