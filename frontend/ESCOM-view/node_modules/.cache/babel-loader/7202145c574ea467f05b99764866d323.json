{"ast":null,"code":"import axios from 'axios';\nimport { desencriptar } from '../../../SuperAdministrador/componentes/general/Encriptar.js';\nimport { URL_BASE } from '../../../SuperAdministrador/utilitario/Configuracion.js';\nexport const GET_CURRENT_VERSIONS = 'GET_CURRENT_VERSIONS';\nexport const GET_OLD_VERSIONS = 'GET_OLD_VERSIONS';\nexport const STATE_OLD_VERSION = 'STATE_OLD_VERSION';\nexport const STATE_CURRENT_VERSION = 'STATE_CURRENT_VERSION';\nexport const ADD_DOCUMENT_VERSION = 'ADD_DOCUMENT_VERSION';\nconst PERMIT_CURRENT_VERSIONS = 'MD_Prueba';\nconst PERMIT_OLD_VERSIONS = 'MD_Prueba';\nconst PERMIT_ADD_DOCUMENT_VERSION = 'MD_Prueba';\nexport const ADD_MESSAGE = 'ADD_MESSAGE';\nexport const ADD_MESSAGE_ADD = 'ADD_MESSAGE_ADD';\nexport function addMessageAdd(mensaje) {\n  return (dispatch, getState) => {\n    dispatch({\n      type: ADD_MESSAGE_ADD,\n      mensaje: mensaje\n    });\n  };\n} //MD_Lista versiones actuales\n\nexport function getCurrentVersions(token, id) {\n  const headers = {\n    'Content-Type': 'application/json',\n    'TokenAuto': desencriptar(token),\n    'Permiso': PERMIT_CURRENT_VERSIONS\n  };\n  return (dispatch, getState) => {\n    axios.get(`${URL_BASE}/proyectosESCOM-web/api/documentVersion/listCurrent/${id}`, {\n      headers: headers\n    }).then(response => {\n      dispatch({\n        type: GET_CURRENT_VERSIONS,\n        payload: response.data\n      });\n    }).catch(error => {\n      if (error.request.response === '') {\n        dispatch({\n          type: ADD_MESSAGE,\n          payload: 'error server'\n        });\n      } else {\n        if (error.request) {\n          var data = JSON.parse(error.request.response);\n          let respuesta = data.respuesta;\n\n          if (respuesta === 'Sin permiso') {\n            dispatch({\n              type: STATE_CURRENT_VERSION,\n              payload: true\n            });\n          } else {\n            dispatch({\n              type: ADD_MESSAGE,\n              payload: respuesta\n            });\n          }\n        }\n      }\n    });\n  };\n} //MD_Lista versiones anteriores\n\nexport function getOldVersions(token, id) {\n  const headers = {\n    'Content-Type': 'application/json',\n    'TokenAuto': desencriptar(token),\n    'Permiso': PERMIT_OLD_VERSIONS\n  };\n  return (dispatch, getState) => {\n    axios.get(`${URL_BASE}/proyectosESCOM-web/api/documentVersion/listOld/${id}`, {\n      headers: headers\n    }).then(response => {\n      dispatch({\n        type: GET_OLD_VERSIONS,\n        payload: response.data\n      });\n    }).catch(error => {\n      if (error.request.response === '') {\n        dispatch({\n          type: ADD_MESSAGE,\n          payload: 'error server'\n        });\n      } else {\n        if (error.request) {\n          var data = JSON.parse(error.request.response);\n          let respuesta = data.respuesta;\n\n          if (respuesta === 'Sin permiso') {\n            dispatch({\n              type: STATE_OLD_VERSION,\n              payload: true\n            });\n          } else {\n            dispatch({\n              type: ADD_MESSAGE,\n              payload: respuesta\n            });\n          }\n        }\n      }\n    });\n  };\n} //MD_Agregar version anexo\n\nexport function addDocumentVersion(token, data, document) {\n  const headers = {\n    'Content-Type': 'application/json; charset= UTF-8',\n    'TokenAuto': desencriptar(token),\n    'Permiso': PERMIT_ADD_DOCUMENT_VERSION\n  };\n  document.requestData = {\n    'ip': localStorage.getItem('Ip'),\n    'token': desencriptar(token),\n    'operacion': PERMIT_ADD_DOCUMENT_VERSION\n  };\n  return (dispatch, getState) => {\n    axios.post(\"http://localhost:8000/upload\", data).then(res => {\n      document.location = res.data;\n      axios.post(`${URL_BASE}/proyectosESCOM-web/api/documentVersion/add/`, document, {\n        headers: headers\n      }).then(response => {\n        dispatch({\n          type: ADD_DOCUMENT_VERSION,\n          payload: response.data.respuesta\n        });\n      }).catch(error => {\n        if (error.request.response === '') {\n          dispatch({\n            type: ADD_DOCUMENT_VERSION,\n            payload: 'error server'\n          });\n        } else {\n          if (error.request) {\n            var data = JSON.parse(error.request.response);\n            let respuesta = data.respuesta;\n            dispatch({\n              type: ADD_DOCUMENT_VERSION,\n              payload: respuesta\n            });\n          }\n        }\n      });\n    }).catch(err => {\n      dispatch({\n        type: ADD_DOCUMENT_VERSION,\n        payload: err.data\n      });\n    });\n  };\n}","map":{"version":3,"sources":["C:/Users/jeiso/Desktop/proyectosESCOM/frontend/ESCOM-view/src/ModuloDocumental/redux/actions/documentVersionA.js"],"names":["axios","desencriptar","URL_BASE","GET_CURRENT_VERSIONS","GET_OLD_VERSIONS","STATE_OLD_VERSION","STATE_CURRENT_VERSION","ADD_DOCUMENT_VERSION","PERMIT_CURRENT_VERSIONS","PERMIT_OLD_VERSIONS","PERMIT_ADD_DOCUMENT_VERSION","ADD_MESSAGE","ADD_MESSAGE_ADD","addMessageAdd","mensaje","dispatch","getState","type","getCurrentVersions","token","id","headers","get","then","response","payload","data","catch","error","request","JSON","parse","respuesta","getOldVersions","addDocumentVersion","document","requestData","localStorage","getItem","post","res","location","err"],"mappings":"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","sourcesContent":["import axios from 'axios';\r\nimport { desencriptar } from '../../../SuperAdministrador/componentes/general/Encriptar.js';\r\nimport { URL_BASE } from '../../../SuperAdministrador/utilitario/Configuracion.js';\r\n\r\nexport const GET_CURRENT_VERSIONS = 'GET_CURRENT_VERSIONS';\r\nexport const GET_OLD_VERSIONS = 'GET_OLD_VERSIONS';\r\nexport const STATE_OLD_VERSION = 'STATE_OLD_VERSION';\r\nexport const STATE_CURRENT_VERSION = 'STATE_CURRENT_VERSION';\r\nexport const ADD_DOCUMENT_VERSION = 'ADD_DOCUMENT_VERSION';\r\n\r\nconst PERMIT_CURRENT_VERSIONS = 'MD_Prueba';\r\nconst PERMIT_OLD_VERSIONS = 'MD_Prueba';\r\nconst PERMIT_ADD_DOCUMENT_VERSION = 'MD_Prueba';\r\n\r\nexport const ADD_MESSAGE = 'ADD_MESSAGE';\r\nexport const ADD_MESSAGE_ADD = 'ADD_MESSAGE_ADD';\r\n\r\nexport function addMessageAdd(mensaje) {\r\n    return (dispatch, getState) => {\r\n        dispatch({\r\n            type: ADD_MESSAGE_ADD,\r\n            mensaje: mensaje\r\n        });\r\n    };\r\n}\r\n\r\n//MD_Lista versiones actuales\r\nexport function getCurrentVersions(token, id) {\r\n    const headers = {\r\n        'Content-Type': 'application/json',\r\n        'TokenAuto': desencriptar(token),\r\n        'Permiso': PERMIT_CURRENT_VERSIONS\r\n    }\r\n    return (dispatch, getState) => {\r\n        axios.get(`${URL_BASE}/proyectosESCOM-web/api/documentVersion/listCurrent/${id}`, { headers: headers })\r\n            .then(response => {\r\n                dispatch({\r\n                    type: GET_CURRENT_VERSIONS,\r\n                    payload: response.data\r\n                });\r\n            }).catch(error => {\r\n                if (error.request.response === '') {\r\n                    dispatch({\r\n                        type: ADD_MESSAGE,\r\n                        payload: 'error server'\r\n                    });\r\n                } else {\r\n                    if (error.request) {\r\n                        var data = JSON.parse(error.request.response);\r\n                        let respuesta = data.respuesta;\r\n                        if (respuesta === 'Sin permiso') {\r\n                            dispatch({\r\n                                type: STATE_CURRENT_VERSION,\r\n                                payload: true\r\n                            });\r\n                        } else {\r\n                            dispatch({\r\n                                type: ADD_MESSAGE,\r\n                                payload: respuesta\r\n                            });\r\n                        }\r\n                    }\r\n                }\r\n\r\n            });\r\n    }\r\n}\r\n\r\n\r\n//MD_Lista versiones anteriores\r\nexport function getOldVersions(token, id) {\r\n    const headers = {\r\n        'Content-Type': 'application/json',\r\n        'TokenAuto': desencriptar(token),\r\n        'Permiso': PERMIT_OLD_VERSIONS\r\n    }\r\n    return (dispatch, getState) => {\r\n        axios.get(`${URL_BASE}/proyectosESCOM-web/api/documentVersion/listOld/${id}`, { headers: headers })\r\n            .then(response => {\r\n                dispatch({\r\n                    type: GET_OLD_VERSIONS,\r\n                    payload: response.data\r\n                });\r\n            }).catch(error => {\r\n                if (error.request.response === '') {\r\n                    dispatch({\r\n                        type: ADD_MESSAGE,\r\n                        payload: 'error server'\r\n                    });\r\n                } else {\r\n                    if (error.request) {\r\n                        var data = JSON.parse(error.request.response);\r\n                        let respuesta = data.respuesta;\r\n                        if (respuesta === 'Sin permiso') {\r\n                            dispatch({\r\n                                type: STATE_OLD_VERSION,\r\n                                payload: true\r\n                            });\r\n                        } else {\r\n                            dispatch({\r\n                                type: ADD_MESSAGE,\r\n                                payload: respuesta\r\n                            });\r\n                        }\r\n                    }\r\n                }\r\n\r\n            });\r\n    }\r\n}\r\n\r\n//MD_Agregar version anexo\r\nexport function addDocumentVersion(token, data, document) {\r\n    const headers = {\r\n        'Content-Type': 'application/json; charset= UTF-8',\r\n        'TokenAuto': desencriptar(token),\r\n        'Permiso': PERMIT_ADD_DOCUMENT_VERSION\r\n    }\r\n    document.requestData = {\r\n        'ip': localStorage.getItem('Ip'),\r\n        'token': desencriptar(token),\r\n        'operacion': PERMIT_ADD_DOCUMENT_VERSION\r\n    };\r\n    return (dispatch, getState) => {\r\n        axios.post(\"http://localhost:8000/upload\", data)\r\n            .then(res => {\r\n                document.location = res.data\r\n                axios.post(`${URL_BASE}/proyectosESCOM-web/api/documentVersion/add/`, document, { headers: headers })\r\n                    .then(response => {\r\n                        dispatch({\r\n                            type: ADD_DOCUMENT_VERSION,\r\n                            payload: response.data.respuesta\r\n                        });\r\n                    }).catch(error => {\r\n                        if (error.request.response === '') {\r\n                            dispatch({\r\n                                type: ADD_DOCUMENT_VERSION,\r\n                                payload: 'error server'\r\n                            });\r\n                        } else {\r\n                            if (error.request) {\r\n                                var data = JSON.parse(error.request.response);\r\n                                let respuesta = data.respuesta;\r\n                                dispatch({\r\n                                    type: ADD_DOCUMENT_VERSION,\r\n                                    payload: respuesta\r\n                                });\r\n                            }\r\n                        }\r\n\r\n                    })\r\n            }).catch(err => {\r\n                dispatch({\r\n                    type: ADD_DOCUMENT_VERSION,\r\n                    payload: err.data\r\n                });\r\n            })\r\n    }\r\n}\r\n"]},"metadata":{},"sourceType":"module"}