{"ast":null,"code":"import axios from 'axios';\nimport { desencriptar } from '../../../SuperAdministrador/componentes/general/Encriptar.js';\nexport const GET_LIST_CONDITIONS_USER = 'GET_LIST_CONDITIONS_USER';\nexport const GET_LIST_USERS = 'GET_LIST_USERS';\nexport const PERMIT_LIST_USERS = 'MD_Prueba';\nexport const PERMIT_LIST_CONDITIONS_USER = 'MD_Prueba';\nexport const ADD_MESSAGE = 'ADD_MESSAGE';\nconst URL_BASE = 'http://localhost:9090/proyectosESCOM-web'; //MD_Lista condiciones usuario\n\nexport function getConditionsUser(token, id) {\n  const headers = {\n    'Content-Type': 'application/json',\n    'TokenAuto': desencriptar(token),\n    'Permiso': PERMIT_LIST_CONDITIONS_USER\n  };\n  return (dispatch, getState) => {\n    axios.get(`${URL_BASE}/api/userCondition/list/` + id, {\n      headers: headers\n    }).then(response => {\n      dispatch({\n        type: GET_LIST_CONDITIONS_USER,\n        payload: response.data\n      });\n    }).catch(error => {\n      if (error.request.response === '') {\n        dispatch({\n          type: ADD_MESSAGE,\n          payload: 'error server'\n        });\n      } else {\n        if (error.request) {\n          dispatch({\n            type: ADD_MESSAGE,\n            payload: 'error server'\n          });\n        }\n      }\n    });\n  };\n} //MD_Lista usuarios\n\nexport function getListUser(token) {\n  const headers = {\n    'Content-Type': 'application/json',\n    'TokenAuto': desencriptar(token),\n    'Permiso': PERMIT_LIST_USERS\n  };\n  return (dispatch, getState) => {\n    axios.get(`${URL_BASE}/api/userCondition/listUsers/`, {\n      headers: headers\n    }).then(response => {\n      dispatch({\n        type: GET_LIST_USERS,\n        payload: response.data\n      });\n    }).catch(error => {\n      if (error.request.response === '') {\n        dispatch({\n          type: ADD_MESSAGE,\n          payload: 'error server'\n        });\n      } else {\n        if (error.request) {\n          dispatch({\n            type: ADD_MESSAGE,\n            payload: 'error server'\n          });\n        }\n      }\n    });\n  };\n}","map":{"version":3,"sources":["C:/Users/hashy/Desktop/proyectosESCOM/frontend/ESCOM-view/src/ModuloDocumental/redux/actions/userConditionA.js"],"names":["axios","desencriptar","GET_LIST_CONDITIONS_USER","GET_LIST_USERS","PERMIT_LIST_USERS","PERMIT_LIST_CONDITIONS_USER","ADD_MESSAGE","URL_BASE","getConditionsUser","token","id","headers","dispatch","getState","get","then","response","type","payload","data","catch","error","request","getListUser"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AAEA,SAASC,YAAT,QAA6B,8DAA7B;AAEA,OAAO,MAAMC,wBAAwB,GAAG,0BAAjC;AACP,OAAO,MAAMC,cAAc,GAAG,gBAAvB;AAEP,OAAO,MAAMC,iBAAiB,GAAG,WAA1B;AACP,OAAO,MAAMC,2BAA2B,GAAG,WAApC;AAEP,OAAO,MAAMC,WAAW,GAAG,aAApB;AAEP,MAAMC,QAAQ,GAAG,0CAAjB,C,CAEA;;AACA,OAAO,SAASC,iBAAT,CAA2BC,KAA3B,EAAkCC,EAAlC,EAAsC;AACzC,QAAMC,OAAO,GAAG;AACZ,oBAAgB,kBADJ;AAEZ,iBAAaV,YAAY,CAACQ,KAAD,CAFb;AAGZ,eAAWJ;AAHC,GAAhB;AAKA,SAAO,CAACO,QAAD,EAAWC,QAAX,KAAwB;AAC3Bb,IAAAA,KAAK,CAACc,GAAN,CAAW,GAAEP,QAAS,0BAAZ,GAAwCG,EAAlD,EAAsD;AAAEC,MAAAA,OAAO,EAAEA;AAAX,KAAtD,EACKI,IADL,CACUC,QAAQ,IAAI;AACdJ,MAAAA,QAAQ,CAAC;AACLK,QAAAA,IAAI,EAAEf,wBADD;AAELgB,QAAAA,OAAO,EAAEF,QAAQ,CAACG;AAFb,OAAD,CAAR;AAIH,KANL,EAMOC,KANP,CAMaC,KAAK,IAAI;AACd,UAAIA,KAAK,CAACC,OAAN,CAAcN,QAAd,KAA2B,EAA/B,EAAmC;AAC/BJ,QAAAA,QAAQ,CAAC;AACLK,UAAAA,IAAI,EAAEX,WADD;AAELY,UAAAA,OAAO,EAAE;AAFJ,SAAD,CAAR;AAIH,OALD,MAKO;AACH,YAAIG,KAAK,CAACC,OAAV,EAAmB;AACfV,UAAAA,QAAQ,CAAC;AACLK,YAAAA,IAAI,EAAEX,WADD;AAELY,YAAAA,OAAO,EAAE;AAFJ,WAAD,CAAR;AAIH;AACJ;AACJ,KApBL;AAqBH,GAtBD;AAuBH,C,CAED;;AACA,OAAO,SAASK,WAAT,CAAqBd,KAArB,EAA4B;AAC/B,QAAME,OAAO,GAAG;AACZ,oBAAgB,kBADJ;AAEZ,iBAAaV,YAAY,CAACQ,KAAD,CAFb;AAGZ,eAAWL;AAHC,GAAhB;AAKA,SAAO,CAACQ,QAAD,EAAWC,QAAX,KAAwB;AAC3Bb,IAAAA,KAAK,CAACc,GAAN,CAAW,GAAEP,QAAS,+BAAtB,EAAsD;AAAEI,MAAAA,OAAO,EAAEA;AAAX,KAAtD,EACKI,IADL,CACUC,QAAQ,IAAI;AACdJ,MAAAA,QAAQ,CAAC;AACLK,QAAAA,IAAI,EAAEd,cADD;AAELe,QAAAA,OAAO,EAAEF,QAAQ,CAACG;AAFb,OAAD,CAAR;AAIH,KANL,EAMOC,KANP,CAMaC,KAAK,IAAI;AACd,UAAIA,KAAK,CAACC,OAAN,CAAcN,QAAd,KAA2B,EAA/B,EAAmC;AAC/BJ,QAAAA,QAAQ,CAAC;AACLK,UAAAA,IAAI,EAAEX,WADD;AAELY,UAAAA,OAAO,EAAE;AAFJ,SAAD,CAAR;AAIH,OALD,MAKO;AACH,YAAIG,KAAK,CAACC,OAAV,EAAmB;AACfV,UAAAA,QAAQ,CAAC;AACLK,YAAAA,IAAI,EAAEX,WADD;AAELY,YAAAA,OAAO,EAAE;AAFJ,WAAD,CAAR;AAIH;AACJ;AACJ,KApBL;AAqBH,GAtBD;AAuBH","sourcesContent":["import axios from 'axios';\r\n\r\nimport { desencriptar } from '../../../SuperAdministrador/componentes/general/Encriptar.js';\r\n\r\nexport const GET_LIST_CONDITIONS_USER = 'GET_LIST_CONDITIONS_USER';\r\nexport const GET_LIST_USERS = 'GET_LIST_USERS';\r\n\r\nexport const PERMIT_LIST_USERS = 'MD_Prueba';\r\nexport const PERMIT_LIST_CONDITIONS_USER = 'MD_Prueba';\r\n\r\nexport const ADD_MESSAGE = 'ADD_MESSAGE';\r\n\r\nconst URL_BASE = 'http://localhost:9090/proyectosESCOM-web';\r\n\r\n//MD_Lista condiciones usuario\r\nexport function getConditionsUser(token, id) {\r\n    const headers = {\r\n        'Content-Type': 'application/json',\r\n        'TokenAuto': desencriptar(token),\r\n        'Permiso': PERMIT_LIST_CONDITIONS_USER\r\n    }\r\n    return (dispatch, getState) => {\r\n        axios.get(`${URL_BASE}/api/userCondition/list/` + id, { headers: headers })\r\n            .then(response => {\r\n                dispatch({\r\n                    type: GET_LIST_CONDITIONS_USER,\r\n                    payload: response.data\r\n                });\r\n            }).catch(error => {\r\n                if (error.request.response === '') {\r\n                    dispatch({\r\n                        type: ADD_MESSAGE,\r\n                        payload: 'error server'\r\n                    });\r\n                } else {\r\n                    if (error.request) {\r\n                        dispatch({\r\n                            type: ADD_MESSAGE,\r\n                            payload: 'error server'\r\n                        });\r\n                    }\r\n                }\r\n            });\r\n    }\r\n}\r\n\r\n//MD_Lista usuarios\r\nexport function getListUser(token) {\r\n    const headers = {\r\n        'Content-Type': 'application/json',\r\n        'TokenAuto': desencriptar(token),\r\n        'Permiso': PERMIT_LIST_USERS\r\n    }\r\n    return (dispatch, getState) => {\r\n        axios.get(`${URL_BASE}/api/userCondition/listUsers/`, { headers: headers })\r\n            .then(response => {\r\n                dispatch({\r\n                    type: GET_LIST_USERS,\r\n                    payload: response.data\r\n                });\r\n            }).catch(error => {\r\n                if (error.request.response === '') {\r\n                    dispatch({\r\n                        type: ADD_MESSAGE,\r\n                        payload: 'error server'\r\n                    });\r\n                } else {\r\n                    if (error.request) {\r\n                        dispatch({\r\n                            type: ADD_MESSAGE,\r\n                            payload: 'error server'\r\n                        });\r\n                    }\r\n                }\r\n            });\r\n    }\r\n}"]},"metadata":{},"sourceType":"module"}