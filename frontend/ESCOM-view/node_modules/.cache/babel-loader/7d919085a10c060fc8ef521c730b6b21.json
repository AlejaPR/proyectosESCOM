{"ast":null,"code":"import axios from 'axios';\nimport { desencriptar } from '../../../SuperAdministrador/componentes/general/Encriptar.js';\nexport const GET_ANNEX_VERSIONS = 'GET_ANNEX_VERSIONS';\nexport const ADD_ANNEX_VERSION = 'ADD_ANNEX_VERSION';\nconst URL_BASE = 'http://localhost:9090/proyectosESCOM-web';\nconst PERMIT_GET_ANNEX_VERSION = 'MD_Lista version anexo';\nconst PERMIT_ADD_ANNEX_VERSION = 'MD_Agregar version anexo'; //MD_Lista version anexo\n\nexport function getAnnexVersions(token, id) {\n  const headers = {\n    'Content-Type': 'application/json',\n    'TokenAuto': desencriptar(token),\n    'Permiso': PERMIT_GET_ANNEX_VERSION\n  };\n  return (dispatch, getState) => {\n    axios.get(`${URL_BASE}/api/annexVersion/list/${id}`, {\n      headers: headers\n    }).then(response => {\n      dispatch({\n        type: GET_ANNEX_VERSIONS,\n        payload: response.data\n      });\n    });\n  };\n} //MD_Agregar version anexo\n\nexport function addAnnexVersion(token, data, annexN) {\n  const headers = {\n    'Content-Type': 'application/json',\n    'TokenAuto': desencriptar(token),\n    'Permiso': PERMIT_ADD_ANNEX_VERSION\n  };\n  annexN.requestData = {\n    'ip': localStorage.getItem('Ip'),\n    'token': desencriptar(token),\n    'operacion': PERMIT_ADD_ANNEX_VERSION\n  };\n  return (dispatch, getState) => {\n    axios.post(\"http://localhost:8000/upload\", data).then(res => {\n      annexN.location = res.data;\n      axios.post(`${URL_BASE}/api/annexVersion/add/`, annexN, {\n        headers: headers\n      }).then(response => {\n        dispatch({\n          type: ADD_ANNEX_VERSION,\n          payload: response.data\n        });\n      });\n    }).catch(err => {\n      dispatch({\n        type: ADD_ANNEX_VERSION,\n        payload: err.data\n      });\n    });\n  };\n}","map":{"version":3,"sources":["C:/Users/jeiso/Desktop/proyectosESCOM/frontend/ESCOM-view/src/ModuloDocumental/redux/actions/annexVersionA.js"],"names":["axios","desencriptar","GET_ANNEX_VERSIONS","ADD_ANNEX_VERSION","URL_BASE","PERMIT_GET_ANNEX_VERSION","PERMIT_ADD_ANNEX_VERSION","getAnnexVersions","token","id","headers","dispatch","getState","get","then","response","type","payload","data","addAnnexVersion","annexN","requestData","localStorage","getItem","post","res","location","catch","err"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AAEA,SAASC,YAAT,QAA6B,8DAA7B;AAEA,OAAO,MAAMC,kBAAkB,GAAG,oBAA3B;AACP,OAAO,MAAMC,iBAAiB,GAAG,mBAA1B;AAEP,MAAMC,QAAQ,GAAG,0CAAjB;AACA,MAAMC,wBAAwB,GAAG,wBAAjC;AACA,MAAMC,wBAAwB,GAAG,0BAAjC,C,CAEA;;AACA,OAAO,SAASC,gBAAT,CAA0BC,KAA1B,EAAiCC,EAAjC,EAAqC;AACxC,QAAMC,OAAO,GAAG;AACZ,oBAAgB,kBADJ;AAEZ,iBAAaT,YAAY,CAACO,KAAD,CAFb;AAGZ,eAAWH;AAHC,GAAhB;AAKA,SAAO,CAACM,QAAD,EAAWC,QAAX,KAAwB;AAC3BZ,IAAAA,KAAK,CAACa,GAAN,CAAW,GAAET,QAAS,0BAAyBK,EAAG,EAAlD,EAAqD;AAAEC,MAAAA,OAAO,EAAEA;AAAX,KAArD,EACKI,IADL,CACUC,QAAQ,IAAI;AACdJ,MAAAA,QAAQ,CAAC;AACLK,QAAAA,IAAI,EAAEd,kBADD;AAELe,QAAAA,OAAO,EAAEF,QAAQ,CAACG;AAFb,OAAD,CAAR;AAIH,KANL;AAOH,GARD;AASH,C,CAED;;AACA,OAAO,SAASC,eAAT,CAAyBX,KAAzB,EAAgCU,IAAhC,EAAsCE,MAAtC,EAA8C;AACjD,QAAMV,OAAO,GAAG;AACZ,oBAAgB,kBADJ;AAEZ,iBAAaT,YAAY,CAACO,KAAD,CAFb;AAGZ,eAAWF;AAHC,GAAhB;AAKAc,EAAAA,MAAM,CAACC,WAAP,GAAqB;AACjB,UAAMC,YAAY,CAACC,OAAb,CAAqB,IAArB,CADW;AAEjB,aAAStB,YAAY,CAACO,KAAD,CAFJ;AAGjB,iBAAaF;AAHI,GAArB;AAKA,SAAO,CAACK,QAAD,EAAWC,QAAX,KAAwB;AAC3BZ,IAAAA,KAAK,CAACwB,IAAN,CAAW,8BAAX,EAA2CN,IAA3C,EACKJ,IADL,CACUW,GAAG,IAAI;AACTL,MAAAA,MAAM,CAACM,QAAP,GAAkBD,GAAG,CAACP,IAAtB;AACAlB,MAAAA,KAAK,CAACwB,IAAN,CAAY,GAAEpB,QAAS,wBAAvB,EAAgDgB,MAAhD,EAAwD;AAAEV,QAAAA,OAAO,EAAEA;AAAX,OAAxD,EACKI,IADL,CACUC,QAAQ,IAAI;AACdJ,QAAAA,QAAQ,CAAC;AACLK,UAAAA,IAAI,EAAEb,iBADD;AAELc,UAAAA,OAAO,EAAEF,QAAQ,CAACG;AAFb,SAAD,CAAR;AAIH,OANL;AAOH,KAVL,EAUOS,KAVP,CAUaC,GAAG,IAAI;AACZjB,MAAAA,QAAQ,CAAC;AACLK,QAAAA,IAAI,EAAEb,iBADD;AAELc,QAAAA,OAAO,EAAEW,GAAG,CAACV;AAFR,OAAD,CAAR;AAIH,KAfL;AAgBH,GAjBD;AAkBH","sourcesContent":["import axios from 'axios'\r\n\r\nimport { desencriptar } from '../../../SuperAdministrador/componentes/general/Encriptar.js';\r\n\r\nexport const GET_ANNEX_VERSIONS = 'GET_ANNEX_VERSIONS';\r\nexport const ADD_ANNEX_VERSION = 'ADD_ANNEX_VERSION';\r\n\r\nconst URL_BASE = 'http://localhost:9090/proyectosESCOM-web';\r\nconst PERMIT_GET_ANNEX_VERSION = 'MD_Lista version anexo';\r\nconst PERMIT_ADD_ANNEX_VERSION = 'MD_Agregar version anexo';\r\n\r\n//MD_Lista version anexo\r\nexport function getAnnexVersions(token, id) {\r\n    const headers = {\r\n        'Content-Type': 'application/json',\r\n        'TokenAuto': desencriptar(token),\r\n        'Permiso': PERMIT_GET_ANNEX_VERSION\r\n    }\r\n    return (dispatch, getState) => {\r\n        axios.get(`${URL_BASE}/api/annexVersion/list/${id}`, { headers: headers })\r\n            .then(response => {\r\n                dispatch({\r\n                    type: GET_ANNEX_VERSIONS,\r\n                    payload: response.data\r\n                });\r\n            });\r\n    }\r\n}\r\n\r\n//MD_Agregar version anexo\r\nexport function addAnnexVersion(token, data, annexN) {\r\n    const headers = {\r\n        'Content-Type': 'application/json',\r\n        'TokenAuto': desencriptar(token),\r\n        'Permiso': PERMIT_ADD_ANNEX_VERSION\r\n    }\r\n    annexN.requestData = {\r\n        'ip': localStorage.getItem('Ip'),\r\n        'token': desencriptar(token),\r\n        'operacion': PERMIT_ADD_ANNEX_VERSION\r\n    };\r\n    return (dispatch, getState) => {\r\n        axios.post(\"http://localhost:8000/upload\", data)\r\n            .then(res => {\r\n                annexN.location = res.data\r\n                axios.post(`${URL_BASE}/api/annexVersion/add/`, annexN, { headers: headers })\r\n                    .then(response => {\r\n                        dispatch({\r\n                            type: ADD_ANNEX_VERSION,\r\n                            payload: response.data\r\n                        });\r\n                    });\r\n            }).catch(err => {\r\n                dispatch({\r\n                    type: ADD_ANNEX_VERSION,\r\n                    payload: err.data\r\n                });\r\n            })\r\n    }\r\n}\r\n"]},"metadata":{},"sourceType":"module"}