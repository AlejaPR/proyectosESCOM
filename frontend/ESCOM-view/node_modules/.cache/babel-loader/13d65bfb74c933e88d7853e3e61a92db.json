{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\hashy\\\\Desktop\\\\proyectosESCOM\\\\frontend\\\\ESCOM-view\\\\src\\\\ModuloDocumental\\\\components\\\\Process\\\\processProgram.js\";\nimport React from 'react';\nimport { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { withRouter } from 'react-router-dom';\nimport { getConditionsPer } from '../../redux/actions/conditionA.js';\nimport { getAllInformation } from '../../redux/actions/activityA.js';\nimport MaterialTable from 'material-table';\nimport EditIcon from '@material-ui/icons/Edit';\nimport VisibilityIcon from '@material-ui/icons/Visibility';\nimport DeleteForeverIcon from '@material-ui/icons/DeleteForever';\n\nclass ProcessPrograma extends Component {\n  componentWillMount() {\n    this.props.getConditionsPer(localStorage.getItem('Token'), sessionStorage.getItem('processP'));\n    this.props.getAllInformation(localStorage.getItem('Token'), sessionStorage.getItem('processP'));\n  }\n\n  convertHtmlToPdf() {\n    fetch('https://v2018.api2pdf.com/chrome/html', {\n      method: 'post',\n      headers: {\n        'Accept': 'application/json',\n        'Content-Type': 'application/json',\n        'Authorization': '65f55388-ac76-43a3-b28b-ea4720dfe2f2' //Get your API key from https://portal.api2pdf.com\n\n      },\n      body: JSON.stringify({\n        html: this.props.allInformation.data,\n        inlinePdf: true,\n        fileName: 'test.pdf'\n      })\n    }).then(res => res.json()).then(res => {\n      var downloadLink = document.createElement(\"a\");\n      document.body.appendChild(downloadLink);\n      downloadLink.href = res.pdf;\n      downloadLink.target = \"_blank\";\n      downloadLink.download = \"nombres\";\n      downloadLink.click();\n      document.body.removeChild(downloadLink);\n    });\n  }\n\n  convertHtmlToWord() {\n    var preHtml = \"<html xmlns:o='urn:schemas-microsoft-com:office:office' xmlns:w='urn:schemas-microsoft-com:office:word' xmlns='http://www.w3.org/TR/REC-html40'><head><meta charset='utf-8'><title>Export HTML To Doc</title></head><body>\";\n    var postHtml = \"</body></html>\";\n    var html = preHtml + this.props.allInformation.data + postHtml;\n    var blob = new Blob(['ufeff', html], {\n      type: 'application/msword'\n    }); // Specify link url\n\n    var url = 'data:application/vnd.ms-word;charset=utf-8,' + encodeURIComponent(html); // Specify file name\n\n    var filename = 'document.doc'; // Create download link element\n\n    var downloadLink = document.createElement(\"a\");\n    document.body.appendChild(downloadLink);\n\n    if (navigator.msSaveOrOpenBlob) {\n      navigator.msSaveOrOpenBlob(blob, filename);\n    } else {\n      // Create a link to the file\n      downloadLink.href = url; // Setting the file name\n\n      downloadLink.download = filename; //triggering the function\n\n      downloadLink.click();\n    }\n\n    document.body.removeChild(downloadLink);\n  }\n\n  save(id) {\n    sessionStorage.setItem('condition', id);\n    this.props.history.push('/ProcessCondition');\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      className: \"container\",\n      style: {\n        width: \"90%\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 87\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"text-left titulo\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 88\n      },\n      __self: this\n    }, React.createElement(\"h4\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 89\n      },\n      __self: this\n    }, \"Lista de condiciones\")), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 91\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      className: \"shadow\",\n      style: {\n        background: \"#FFFFFF\",\n        padding: \"30px\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 92\n      },\n      __self: this\n    }, React.createElement(\"button\", {\n      onClick: () => this.convertHtmlToWord(),\n      className: \"btn btn-sm float-right naranja\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 93\n      },\n      __self: this\n    }, React.createElement(\"i\", {\n      class: \"fas fa-download\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 94\n      },\n      __self: this\n    })), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 96\n      },\n      __self: this\n    }), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 97\n      },\n      __self: this\n    }), React.createElement(MaterialTable, {\n      title: \"\",\n      localization: {\n        header: {\n          actions: ' '\n        },\n        pagination: {\n          nextTooltip: 'Siguiente ',\n          previousTooltip: 'Anterior',\n          labelDisplayedRows: '{from}-{to} de {count}',\n          lastTooltip: 'Ultima pagina',\n          firstTooltip: 'Primera pagina',\n          labelRowsSelect: 'Registros',\n          firstAriaLabel: 'oooo'\n        },\n        body: {\n          emptyDataSourceMessage: 'Aun no hay ninguna condición registrada'\n        },\n        toolbar: {\n          searchTooltip: 'Buscar',\n          searchPlaceholder: 'Buscar'\n        }\n      },\n      columns: [{\n        title: 'Nombre de la condición',\n        field: 'name'\n      }, {\n        title: 'Estado',\n        field: 'description',\n        render: rowData => {\n          if (rowData.state === 1) {\n            return 'Activo';\n          } else {\n            return 'Finalizado';\n          }\n        }\n      }, {\n        title: 'estado',\n        field: 'description',\n        render: rowData => {\n          return React.createElement(\"div\", {\n            className: \"progress\",\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 138\n            },\n            __self: this\n          }, React.createElement(\"div\", {\n            className: \"progress-bar\",\n            style: bar(rowData.percentage),\n            role: \"progressbar\",\n            \"aria-valuenow\": \"50\",\n            \"aria-valuemin\": \"0\",\n            \"aria-valuemax\": \"100\",\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 139\n            },\n            __self: this\n          }, rowData.percentage, \"%\"));\n        }\n      }, {\n        title: '',\n        field: 'id',\n        render: rowData => {\n          return React.createElement(\"div\", {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 148\n            },\n            __self: this\n          }, React.createElement(\"a\", {\n            onClick: () => this.save(rowData.id),\n            \"data-toggle\": \"modal\",\n            \"data-target\": \"#viewModal\",\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 149\n            },\n            __self: this\n          }, React.createElement(VisibilityIcon, {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 150\n            },\n            __self: this\n          })));\n        }\n      }],\n      data: this.props.conditions,\n      options: {\n        search: true\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 98\n      },\n      __self: this\n    })));\n  }\n\n}\n\nfunction bar(value) {\n  return {\n    border: \"1\",\n    color: \"#000\",\n    width: value + \"%\"\n  };\n}\n\nfunction mapStateToProps(state) {\n  return {\n    conditions: state.condition.listConditionsPer,\n    pro: state.condition.processId,\n    allInformation: state.activity.allInformation\n  };\n}\n\nexport default withRouter(connect(mapStateToProps, {\n  getConditionsPer,\n  getAllInformation\n})(ProcessPrograma));","map":{"version":3,"sources":["C:/Users/hashy/Desktop/proyectosESCOM/frontend/ESCOM-view/src/ModuloDocumental/components/Process/processProgram.js"],"names":["React","Component","connect","withRouter","getConditionsPer","getAllInformation","MaterialTable","EditIcon","VisibilityIcon","DeleteForeverIcon","ProcessPrograma","componentWillMount","props","localStorage","getItem","sessionStorage","convertHtmlToPdf","fetch","method","headers","body","JSON","stringify","html","allInformation","data","inlinePdf","fileName","then","res","json","downloadLink","document","createElement","appendChild","href","pdf","target","download","click","removeChild","convertHtmlToWord","preHtml","postHtml","blob","Blob","type","url","encodeURIComponent","filename","navigator","msSaveOrOpenBlob","save","id","setItem","history","push","render","width","background","padding","header","actions","pagination","nextTooltip","previousTooltip","labelDisplayedRows","lastTooltip","firstTooltip","labelRowsSelect","firstAriaLabel","emptyDataSourceMessage","toolbar","searchTooltip","searchPlaceholder","title","field","rowData","state","bar","percentage","conditions","search","value","border","color","mapStateToProps","condition","listConditionsPer","pro","processId","activity"],"mappings":"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","sourcesContent":["import React from 'react';\r\nimport { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { withRouter } from 'react-router-dom';\r\nimport { getConditionsPer } from '../../redux/actions/conditionA.js';\r\nimport { getAllInformation } from '../../redux/actions/activityA.js';\r\n\r\nimport MaterialTable from 'material-table';\r\nimport EditIcon from '@material-ui/icons/Edit';\r\nimport VisibilityIcon from '@material-ui/icons/Visibility';\r\nimport DeleteForeverIcon from '@material-ui/icons/DeleteForever';\r\n\r\nclass ProcessPrograma extends Component {\r\n\r\n    componentWillMount() {\r\n        this.props.getConditionsPer(localStorage.getItem('Token'), sessionStorage.getItem('processP'))\r\n        this.props.getAllInformation(localStorage.getItem('Token'), sessionStorage.getItem('processP'))\r\n    }\r\n\r\n    convertHtmlToPdf() {\r\n        fetch('https://v2018.api2pdf.com/chrome/html', {\r\n            method: 'post',\r\n            headers: {\r\n                'Accept': 'application/json',\r\n                'Content-Type': 'application/json',\r\n                'Authorization': '65f55388-ac76-43a3-b28b-ea4720dfe2f2' //Get your API key from https://portal.api2pdf.com\r\n            },\r\n            body: JSON.stringify({ html: this.props.allInformation.data, inlinePdf: true, fileName: 'test.pdf' })\r\n        }).then(res => res.json())\r\n            .then(res => {\r\n                var downloadLink = document.createElement(\"a\");\r\n                document.body.appendChild(downloadLink);\r\n                downloadLink.href = res.pdf;\r\n                downloadLink.target = \"_blank\";\r\n                downloadLink.download = \"nombres\";\r\n                downloadLink.click();\r\n                document.body.removeChild(downloadLink);\r\n\r\n            }\r\n            )\r\n    }\r\n\r\n    convertHtmlToWord() {\r\n        var preHtml = \"<html xmlns:o='urn:schemas-microsoft-com:office:office' xmlns:w='urn:schemas-microsoft-com:office:word' xmlns='http://www.w3.org/TR/REC-html40'><head><meta charset='utf-8'><title>Export HTML To Doc</title></head><body>\";\r\n        var postHtml = \"</body></html>\";\r\n        var html = preHtml + this.props.allInformation.data + postHtml;\r\n\r\n        var blob = new Blob(['ufeff', html], {\r\n            type: 'application/msword'\r\n        });\r\n\r\n        // Specify link url\r\n        var url = 'data:application/vnd.ms-word;charset=utf-8,' + encodeURIComponent(html);\r\n\r\n        // Specify file name\r\n        var filename = 'document.doc';\r\n\r\n        // Create download link element\r\n        var downloadLink = document.createElement(\"a\");\r\n\r\n        document.body.appendChild(downloadLink);\r\n\r\n        if (navigator.msSaveOrOpenBlob) {\r\n            navigator.msSaveOrOpenBlob(blob, filename);\r\n        } else {\r\n            // Create a link to the file\r\n            downloadLink.href = url;\r\n\r\n            // Setting the file name\r\n            downloadLink.download = filename;\r\n\r\n            //triggering the function\r\n            downloadLink.click();\r\n        }\r\n\r\n        document.body.removeChild(downloadLink);\r\n\r\n    }\r\n\r\n    save(id) {\r\n        sessionStorage.setItem('condition', id)\r\n        this.props.history.push('/ProcessCondition')\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"container\" style={{ width: \"90%\" }}>\r\n                <div className=\"text-left titulo\">\r\n                    <h4>Lista de condiciones</h4>\r\n                </div>\r\n                <br />\r\n                <div className=\"shadow\" style={{ background: \"#FFFFFF\", padding: \"30px\" }}>\r\n                    <button onClick={() => this.convertHtmlToWord()} className=\"btn btn-sm float-right naranja\">\r\n                        <i class=\"fas fa-download\"></i>\r\n                    </button>\r\n                    <br />\r\n                    <br />\r\n                    <MaterialTable\r\n                        title=\"\"\r\n                        localization={{\r\n                            header: {\r\n                                actions: ' '\r\n                            },\r\n                            pagination: {\r\n                                nextTooltip: 'Siguiente ',\r\n                                previousTooltip: 'Anterior',\r\n                                labelDisplayedRows: '{from}-{to} de {count}',\r\n                                lastTooltip: 'Ultima pagina',\r\n                                firstTooltip: 'Primera pagina',\r\n                                labelRowsSelect: 'Registros',\r\n                                firstAriaLabel: 'oooo'\r\n                            },\r\n                            body: {\r\n                                emptyDataSourceMessage: 'Aun no hay ninguna condición registrada'\r\n                            },\r\n                            toolbar: {\r\n                                searchTooltip: 'Buscar',\r\n                                searchPlaceholder: 'Buscar'\r\n                            }\r\n                        }}\r\n                        columns={[\r\n\r\n                            { title: 'Nombre de la condición', field: 'name' },\r\n                            {\r\n                                title: 'Estado', field: 'description',\r\n                                render: rowData => {\r\n                                    if (rowData.state === 1) {\r\n                                        return 'Activo'\r\n                                    } else {\r\n                                        return 'Finalizado'\r\n                                    }\r\n                                }\r\n                            },\r\n                            {\r\n                                title: 'estado', field: 'description',\r\n                                render: rowData => {\r\n                                    return (\r\n                                        <div className=\"progress\">\r\n                                            <div className=\"progress-bar\" style={bar(rowData.percentage)} role=\"progressbar\" aria-valuenow=\"50\" aria-valuemin=\"0\" aria-valuemax=\"100\">{rowData.percentage}%</div>\r\n                                        </div>\r\n                                    )\r\n                                }\r\n                            },\r\n                            {\r\n                                title: '', field: 'id',\r\n                                render: rowData => {\r\n                                    return (\r\n                                        <div>\r\n                                            <a onClick={() => this.save(rowData.id)} data-toggle=\"modal\" data-target=\"#viewModal\">\r\n                                                <VisibilityIcon />\r\n                                            </a>\r\n                                        </div>\r\n                                    )\r\n                                }\r\n                            }\r\n                        ]}\r\n                        data={this.props.conditions}\r\n                        options={{\r\n                            search: true\r\n                        }}\r\n\r\n                    />\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n\r\n}\r\n\r\nfunction bar(value) {\r\n    return {\r\n        border: \"1\",\r\n        color: \"#000\",\r\n        width: value + \"%\"\r\n    }\r\n\r\n}\r\n\r\nfunction mapStateToProps(state) {\r\n    return {\r\n        conditions: state.condition.listConditionsPer,\r\n        pro: state.condition.processId,\r\n        allInformation: state.activity.allInformation\r\n    }\r\n}\r\n\r\n\r\nexport default withRouter(connect(mapStateToProps, { getConditionsPer, getAllInformation })(ProcessPrograma));"]},"metadata":{},"sourceType":"module"}