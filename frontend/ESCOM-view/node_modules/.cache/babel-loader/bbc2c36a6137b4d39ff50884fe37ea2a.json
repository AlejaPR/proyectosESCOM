{"ast":null,"code":"import axios from 'axios';\nimport { desencriptar } from '../../../SuperAdministrador/componentes/general/Encriptar.js';\nexport const GET_LIST_GENERAL_CLASS = 'GET_LIST_GENERAL_CLASS';\nexport const ADD_GENERAL_CLASS = 'ADD_GENERAL_CLASS';\nexport const DELETE_GENERAL_CLASS = 'DELETE_GENERAL_CLASS';\nexport const ADD_MESSAGE = 'ADD_MESSAGE';\nexport const ADD_MESSAGE_ADD = 'ADD_MESSAGE_ADD';\nexport const ADD_MESSAGE_DELETE = 'ADD_MESSAGE_DELETE';\nconst URL_BASE = 'http://localhost:9090/proyectosESCOM-web';\nconst PERMIT_LIST_GENERAL_CLASS = 'MD_Prueba';\nconst PERMIT_ADD_GENERAL_CLASS = 'MD_Prueba';\nconst PERMIT_DELETE_GENERAL_CLASS = 'MD_Prueba';\nexport function addMessageAdd(mensaje) {\n  return (dispatch, getState) => {\n    dispatch({\n      type: ADD_MESSAGE_ADD,\n      mensaje: mensaje\n    });\n  };\n}\nexport function addMessageDelete(mensaje) {\n  return (dispatch, getState) => {\n    dispatch({\n      type: ADD_MESSAGE_DELETE,\n      mensaje: mensaje\n    });\n  };\n} //MD_Lista clase general\n\nexport function getListGeneralC(token, id, table) {\n  const headers = {\n    'Content-Type': 'application/json',\n    'TokenAuto': desencriptar(token),\n    'Permiso': PERMIT_LIST_GENERAL_CLASS\n  };\n  return (dispatch, getState) => {\n    axios.get(`${URL_BASE}/api/generalClass/list/${id}/${table}`, {\n      headers: headers\n    }).then(response => {\n      dispatch({\n        type: GET_LIST_GENERAL_CLASS,\n        payload: response.data\n      });\n    }).catch(error => {\n      if (error.request.response === '') {\n        dispatch({\n          type: ADD_MESSAGE,\n          payload: 'error server'\n        });\n      } else {\n        if (error.request) {\n          dispatch({\n            type: ADD_MESSAGE,\n            payload: 'error server'\n          });\n        }\n      }\n    });\n  };\n} //MD_Agregar clase general\n\nexport function addGeneralC(token, generalN) {\n  const headers = {\n    'Content-Type': 'application/json',\n    'TokenAuto': desencriptar(token),\n    'Permiso': PERMIT_ADD_GENERAL_CLASS\n  };\n  generalN.requestData = {\n    'ip': localStorage.getItem('Ip'),\n    'token': desencriptar(token),\n    'operacion': PERMIT_ADD_GENERAL_CLASS\n  };\n  return (dispatch, getState) => {\n    axios.post(`${URL_BASE}/api/generalClass/add`, generalN, {\n      headers: headers\n    }).then(response => {\n      dispatch({\n        type: ADD_GENERAL_CLASS,\n        payload: response.data.respuesta\n      });\n    }).catch(error => {\n      if (error.request.response === '') {\n        dispatch({\n          type: ADD_GENERAL_CLASS,\n          payload: 'error server'\n        });\n      } else {\n        if (error.request) {\n          dispatch({\n            type: ADD_GENERAL_CLASS,\n            payload: 'error server'\n          });\n        }\n      }\n    });\n  };\n} //MD_Eliminar clase general\n\nexport function deleteGeneralC(token, generalN) {\n  const headers = {\n    'Content-Type': 'application/json',\n    'TokenAuto': desencriptar(token),\n    'Permiso': PERMIT_DELETE_GENERAL_CLASS\n  };\n  generalN.requestData = {\n    'ip': localStorage.getItem('Ip'),\n    'token': desencriptar(token),\n    'operacion': PERMIT_DELETE_GENERAL_CLASS\n  };\n  return (dispatch, getState) => {\n    axios.put(`${URL_BASE}/api/generalClass/delete`, generalN, {\n      headers: headers\n    }).then(response => {\n      dispatch({\n        type: DELETE_GENERAL_CLASS,\n        payload: response.data.respuesta\n      });\n    }).catch(error => {\n      if (error.request.response === '') {\n        dispatch({\n          type: DELETE_GENERAL_CLASS,\n          payload: 'error server'\n        });\n      } else {\n        if (error.request) {\n          dispatch({\n            type: DELETE_GENERAL_CLASS,\n            payload: 'error server'\n          });\n        }\n      }\n    });\n  };\n}","map":{"version":3,"sources":["C:/Users/hashy/Desktop/proyectosESCOM/frontend/ESCOM-view/src/ModuloDocumental/redux/actions/generalClassA.js"],"names":["axios","desencriptar","GET_LIST_GENERAL_CLASS","ADD_GENERAL_CLASS","DELETE_GENERAL_CLASS","ADD_MESSAGE","ADD_MESSAGE_ADD","ADD_MESSAGE_DELETE","URL_BASE","PERMIT_LIST_GENERAL_CLASS","PERMIT_ADD_GENERAL_CLASS","PERMIT_DELETE_GENERAL_CLASS","addMessageAdd","mensaje","dispatch","getState","type","addMessageDelete","getListGeneralC","token","id","table","headers","get","then","response","payload","data","catch","error","request","addGeneralC","generalN","requestData","localStorage","getItem","post","respuesta","deleteGeneralC","put"],"mappings":"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","sourcesContent":["import axios from 'axios'\r\n\r\nimport { desencriptar } from '../../../SuperAdministrador/componentes/general/Encriptar.js';\r\n\r\nexport const GET_LIST_GENERAL_CLASS = 'GET_LIST_GENERAL_CLASS';\r\nexport const ADD_GENERAL_CLASS = 'ADD_GENERAL_CLASS';\r\nexport const DELETE_GENERAL_CLASS = 'DELETE_GENERAL_CLASS';\r\n\r\nexport const ADD_MESSAGE = 'ADD_MESSAGE';\r\nexport const ADD_MESSAGE_ADD = 'ADD_MESSAGE_ADD';\r\nexport const ADD_MESSAGE_DELETE = 'ADD_MESSAGE_DELETE';\r\n\r\nconst URL_BASE = 'http://localhost:9090/proyectosESCOM-web';\r\n\r\nconst PERMIT_LIST_GENERAL_CLASS = 'MD_Prueba';\r\nconst PERMIT_ADD_GENERAL_CLASS = 'MD_Prueba';\r\nconst PERMIT_DELETE_GENERAL_CLASS = 'MD_Prueba';\r\n\r\nexport function addMessageAdd(mensaje) {\r\n    return (dispatch, getState) => {\r\n        dispatch({\r\n            type: ADD_MESSAGE_ADD,\r\n            mensaje: mensaje\r\n        });\r\n    };\r\n}\r\n\r\nexport function addMessageDelete(mensaje) {\r\n    return (dispatch, getState) => {\r\n        dispatch({\r\n            type: ADD_MESSAGE_DELETE,\r\n            mensaje: mensaje\r\n        });\r\n    };\r\n}\r\n\r\n//MD_Lista clase general\r\nexport function getListGeneralC(token, id, table) {\r\n    const headers = {\r\n        'Content-Type': 'application/json',\r\n        'TokenAuto': desencriptar(token),\r\n        'Permiso': PERMIT_LIST_GENERAL_CLASS\r\n    }\r\n    return (dispatch, getState) => {\r\n        axios.get(`${URL_BASE}/api/generalClass/list/${id}/${table}`, { headers: headers })\r\n            .then(response => {\r\n                dispatch({\r\n                    type: GET_LIST_GENERAL_CLASS,\r\n                    payload: response.data\r\n                });\r\n            }).catch(error => {\r\n                if (error.request.response === '') {\r\n                    dispatch({\r\n                        type: ADD_MESSAGE,\r\n                        payload: 'error server'\r\n                    });\r\n                } else {\r\n                    if (error.request) {\r\n                        dispatch({\r\n                            type: ADD_MESSAGE,\r\n                            payload: 'error server'\r\n                        });\r\n                    }\r\n                }\r\n\r\n            });\r\n    }\r\n}\r\n\r\n//MD_Agregar clase general\r\nexport function addGeneralC(token, generalN) {\r\n    const headers = {\r\n        'Content-Type': 'application/json',\r\n        'TokenAuto': desencriptar(token),\r\n        'Permiso': PERMIT_ADD_GENERAL_CLASS\r\n    }\r\n    generalN.requestData = {\r\n        'ip': localStorage.getItem('Ip'),\r\n        'token': desencriptar(token),\r\n        'operacion': PERMIT_ADD_GENERAL_CLASS\r\n    };\r\n    return (dispatch, getState) => {\r\n        axios.post(`${URL_BASE}/api/generalClass/add`,generalN, { headers: headers })\r\n            .then(response => {\r\n                dispatch({\r\n                    type: ADD_GENERAL_CLASS,\r\n                    payload: response.data.respuesta\r\n                });\r\n            }).catch(error => {\r\n                if (error.request.response === '') {\r\n                    dispatch({\r\n                        type: ADD_GENERAL_CLASS,\r\n                        payload: 'error server'\r\n                    });\r\n                } else {\r\n                    if (error.request) {\r\n                        dispatch({\r\n                            type: ADD_GENERAL_CLASS,\r\n                            payload: 'error server'\r\n                        });\r\n                    }\r\n                }\r\n\r\n            });\r\n    }\r\n}\r\n\r\n//MD_Eliminar clase general\r\nexport function deleteGeneralC(token, generalN) {\r\n    const headers = {\r\n        'Content-Type': 'application/json',\r\n        'TokenAuto': desencriptar(token),\r\n        'Permiso': PERMIT_DELETE_GENERAL_CLASS\r\n    }\r\n    generalN.requestData = {\r\n        'ip': localStorage.getItem('Ip'),\r\n        'token': desencriptar(token),\r\n        'operacion': PERMIT_DELETE_GENERAL_CLASS\r\n    };\r\n    return (dispatch, getState) => {\r\n        axios.put(`${URL_BASE}/api/generalClass/delete`,generalN, { headers: headers })\r\n            .then(response => {\r\n                dispatch({\r\n                    type: DELETE_GENERAL_CLASS,\r\n                    payload: response.data.respuesta\r\n                });\r\n            }).catch(error => {\r\n                if (error.request.response === '') {\r\n                    dispatch({\r\n                        type: DELETE_GENERAL_CLASS,\r\n                        payload: 'error server'\r\n                    });\r\n                } else {\r\n                    if (error.request) {\r\n                        dispatch({\r\n                            type: DELETE_GENERAL_CLASS,\r\n                            payload: 'error server'\r\n                        });\r\n                    }\r\n                }\r\n\r\n            });\r\n    }\r\n}"]},"metadata":{},"sourceType":"module"}