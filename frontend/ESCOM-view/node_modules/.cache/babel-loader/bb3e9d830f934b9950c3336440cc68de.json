{"ast":null,"code":"import { ADD_MESSAGE_ADD, ADD_INFORMATION, ADD_MESSAGE_DELETE, DELETE_ACTIVITY, ADD_ACTIVITY, EDIT_ACTIVITY, ADD_MESSAGE_EDIT, GET_ACTIVITY_ID, GET_ALL_INFORMATION, GET_LIST_ACTIVITIES } from '../actions/activityA.js';\nimport { ADD_MESSAGE_DISABLE } from '../actions/conditionA.js';\nconst initialState = {\n  listActivityR: [],\n  activityR: [],\n  messageEdit: '',\n  messageAdd: '',\n  messageDelete: '',\n  allInformation: ''\n};\nexport function reducersActivity(state = initialState, action) {\n  switch (action.type) {\n    case GET_LIST_ACTIVITIES:\n      return Object.assign({}, state, {\n        listActivityR: action.payload\n      });\n\n    case GET_ACTIVITY_ID:\n      return Object.assign({}, state, {\n        activityR: action.payload\n      });\n\n    case ADD_ACTIVITY:\n      return Object.assign({}, state, {\n        messageAdd: action.payload\n      });\n\n    case EDIT_ACTIVITY:\n      return Object.assign({}, state, {\n        messageEdit: action.payload\n      });\n\n    case DELETE_ACTIVITY:\n      return Object.assign({}, state, {\n        messageDelete: action.payload\n      });\n\n    case ADD_INFORMATION:\n      return Object.assign({}, state, {\n        messageR: action.payload\n      });\n\n    case GET_ALL_INFORMATION:\n      return Object.assign({}, state, {\n        allInformation: action.payload\n      });\n\n    case ADD_MESSAGE_EDIT:\n      return Object.assign({}, state, {\n        messageEdit: action.payload\n      });\n\n    case ADD_MESSAGE_ADD:\n      return Object.assign({}, state, {\n        messageAdd: action.payload\n      });\n\n    case ADD_MESSAGE_DELETE:\n      return Object.assign({}, state, {\n        messageDelete: action.payload\n      });\n\n    default:\n      return state;\n  }\n}","map":{"version":3,"sources":["C:/Users/jeiso/Desktop/proyectosESCOM/frontend/ESCOM-view/src/ModuloDocumental/redux/reducers/activityR.js"],"names":["ADD_MESSAGE_ADD","ADD_INFORMATION","ADD_MESSAGE_DELETE","DELETE_ACTIVITY","ADD_ACTIVITY","EDIT_ACTIVITY","ADD_MESSAGE_EDIT","GET_ACTIVITY_ID","GET_ALL_INFORMATION","GET_LIST_ACTIVITIES","ADD_MESSAGE_DISABLE","initialState","listActivityR","activityR","messageEdit","messageAdd","messageDelete","allInformation","reducersActivity","state","action","type","Object","assign","payload","messageR"],"mappings":"AAAA,SAASA,eAAT,EAA0BC,eAA1B,EAA2CC,kBAA3C,EAA+DC,eAA/D,EAAgFC,YAAhF,EAA8FC,aAA9F,EAA6GC,gBAA7G,EAA+HC,eAA/H,EAAgJC,mBAAhJ,EAAqKC,mBAArK,QAAgM,yBAAhM;AACA,SAASC,mBAAT,QAAoC,0BAApC;AAEA,MAAMC,YAAY,GAAG;AACjBC,EAAAA,aAAa,EAAE,EADE;AAEjBC,EAAAA,SAAS,EAAE,EAFM;AAGjBC,EAAAA,WAAW,EAAE,EAHI;AAIjBC,EAAAA,UAAU,EAAE,EAJK;AAKjBC,EAAAA,aAAa,EAAE,EALE;AAMjBC,EAAAA,cAAc,EAAE;AANC,CAArB;AASA,OAAO,SAASC,gBAAT,CAA0BC,KAAK,GAAGR,YAAlC,EAAgDS,MAAhD,EAAwD;AAE3D,UAAQA,MAAM,CAACC,IAAf;AACI,SAAKZ,mBAAL;AACI,aAAOa,MAAM,CAACC,MAAP,CAAc,EAAd,EAAkBJ,KAAlB,EAAyB;AAAEP,QAAAA,aAAa,EAAEQ,MAAM,CAACI;AAAxB,OAAzB,CAAP;;AACJ,SAAKjB,eAAL;AACI,aAAOe,MAAM,CAACC,MAAP,CAAc,EAAd,EAAkBJ,KAAlB,EAAyB;AAAEN,QAAAA,SAAS,EAAEO,MAAM,CAACI;AAApB,OAAzB,CAAP;;AACJ,SAAKpB,YAAL;AACI,aAAOkB,MAAM,CAACC,MAAP,CAAc,EAAd,EAAkBJ,KAAlB,EAAyB;AAAEJ,QAAAA,UAAU,EAAEK,MAAM,CAACI;AAArB,OAAzB,CAAP;;AACJ,SAAKnB,aAAL;AACI,aAAOiB,MAAM,CAACC,MAAP,CAAc,EAAd,EAAkBJ,KAAlB,EAAyB;AAAEL,QAAAA,WAAW,EAAEM,MAAM,CAACI;AAAtB,OAAzB,CAAP;;AACJ,SAAKrB,eAAL;AACI,aAAOmB,MAAM,CAACC,MAAP,CAAc,EAAd,EAAkBJ,KAAlB,EAAyB;AAAEH,QAAAA,aAAa,EAAEI,MAAM,CAACI;AAAxB,OAAzB,CAAP;;AACJ,SAAKvB,eAAL;AACI,aAAOqB,MAAM,CAACC,MAAP,CAAc,EAAd,EAAkBJ,KAAlB,EAAyB;AAAEM,QAAAA,QAAQ,EAAEL,MAAM,CAACI;AAAnB,OAAzB,CAAP;;AACJ,SAAKhB,mBAAL;AACI,aAAOc,MAAM,CAACC,MAAP,CAAc,EAAd,EAAkBJ,KAAlB,EAAyB;AAAEF,QAAAA,cAAc,EAAEG,MAAM,CAACI;AAAzB,OAAzB,CAAP;;AACJ,SAAKlB,gBAAL;AACI,aAAOgB,MAAM,CAACC,MAAP,CAAc,EAAd,EAAkBJ,KAAlB,EAAyB;AAAEL,QAAAA,WAAW,EAAEM,MAAM,CAACI;AAAtB,OAAzB,CAAP;;AACJ,SAAKxB,eAAL;AACI,aAAOsB,MAAM,CAACC,MAAP,CAAc,EAAd,EAAkBJ,KAAlB,EAAyB;AAAEJ,QAAAA,UAAU,EAAEK,MAAM,CAACI;AAArB,OAAzB,CAAP;;AACJ,SAAKtB,kBAAL;AACI,aAAOoB,MAAM,CAACC,MAAP,CAAc,EAAd,EAAkBJ,KAAlB,EAAyB;AAAEH,QAAAA,aAAa,EAAEI,MAAM,CAACI;AAAxB,OAAzB,CAAP;;AACJ;AACI,aAAOL,KAAP;AAtBR;AAyBH","sourcesContent":["import { ADD_MESSAGE_ADD, ADD_INFORMATION, ADD_MESSAGE_DELETE, DELETE_ACTIVITY, ADD_ACTIVITY, EDIT_ACTIVITY, ADD_MESSAGE_EDIT, GET_ACTIVITY_ID, GET_ALL_INFORMATION, GET_LIST_ACTIVITIES } from '../actions/activityA.js'\r\nimport { ADD_MESSAGE_DISABLE } from '../actions/conditionA.js'\r\n\r\nconst initialState = {\r\n    listActivityR: [],\r\n    activityR: [],\r\n    messageEdit: '',\r\n    messageAdd: '',\r\n    messageDelete: '',\r\n    allInformation: ''\r\n}\r\n\r\nexport function reducersActivity(state = initialState, action) {\r\n\r\n    switch (action.type) {\r\n        case GET_LIST_ACTIVITIES:\r\n            return Object.assign({}, state, { listActivityR: action.payload })\r\n        case GET_ACTIVITY_ID:\r\n            return Object.assign({}, state, { activityR: action.payload })\r\n        case ADD_ACTIVITY:\r\n            return Object.assign({}, state, { messageAdd: action.payload })\r\n        case EDIT_ACTIVITY:\r\n            return Object.assign({}, state, { messageEdit: action.payload })\r\n        case DELETE_ACTIVITY:\r\n            return Object.assign({}, state, { messageDelete: action.payload })\r\n        case ADD_INFORMATION:\r\n            return Object.assign({}, state, { messageR: action.payload })\r\n        case GET_ALL_INFORMATION:\r\n            return Object.assign({}, state, { allInformation: action.payload })\r\n        case ADD_MESSAGE_EDIT:\r\n            return Object.assign({}, state, { messageEdit: action.payload })\r\n        case ADD_MESSAGE_ADD:\r\n            return Object.assign({}, state, { messageAdd: action.payload })\r\n        case ADD_MESSAGE_DELETE:\r\n            return Object.assign({}, state, { messageDelete: action.payload })\r\n        default:\r\n            return state\r\n    }\r\n\r\n}\r\n"]},"metadata":{},"sourceType":"module"}