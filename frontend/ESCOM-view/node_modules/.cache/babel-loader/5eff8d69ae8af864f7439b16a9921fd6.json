{"ast":null,"code":"import axios from 'axios';\nimport { desencriptar } from '../../../SuperAdministrador/componentes/general/Encriptar.js';\nimport { URL_BASE } from '../../../SuperAdministrador/utilitario/Configuracion.js';\nexport const GET_ANNEX_VERSIONS = 'GET_ANNEX_VERSIONS';\nexport const ADD_ANNEX_VERSION = 'ADD_ANNEX_VERSION';\nexport const STATE_ANNEX_VERSION = 'STATE_ANNEX_VERSION';\nconst PERMIT_GET_ANNEX_VERSION = 'MD_Lista version anexo';\nconst PERMIT_ADD_ANNEX_VERSION = 'MD_Agregar version anexo';\nexport const ADD_MESSAGE_ADD = 'ADD_MESSAGE_ADD';\nexport function addMessageAdd(mensaje) {\n  return (dispatch, getState) => {\n    dispatch({\n      type: ADD_MESSAGE_ADD,\n      mensaje: mensaje\n    });\n  };\n} //MD_Lista version anexo\n\nexport function getAnnexVersions(token, id) {\n  const headers = {\n    'Content-Type': 'application/json',\n    'TokenAuto': desencriptar(token),\n    'Permiso': PERMIT_GET_ANNEX_VERSION\n  };\n  return (dispatch, getState) => {\n    axios.get(`${URL_BASE}/proyectosESCOM-web/api/annexVersion/list/${id}`, {\n      headers: headers\n    }).then(response => {\n      dispatch({\n        type: GET_ANNEX_VERSIONS,\n        payload: response.data\n      });\n    }).catch(error => {\n      if (error.request.response === '') {\n        dispatch({\n          type: ADD_MESSAGE,\n          payload: 'error server'\n        });\n      } else {\n        if (error.request) {\n          var data = JSON.parse(error.request.response);\n          let respuesta = data.respuesta;\n\n          if (respuesta === 'Sin permiso') {\n            dispatch({\n              type: STATE_ANNEX_VERSION,\n              payload: true\n            });\n          } else {\n            dispatch({\n              type: ADD_MESSAGE,\n              payload: respuesta\n            });\n          }\n        }\n      }\n    });\n  };\n} //MD_Agregar version anexo\n\nexport function addAnnexVersion(token, data, annexN) {\n  const headers = {\n    'Content-Type': 'application/json; charset= UTF-8',\n    'TokenAuto': desencriptar(token),\n    'Permiso': PERMIT_ADD_ANNEX_VERSION\n  };\n  annexN.requestData = {\n    'ip': localStorage.getItem('Ip'),\n    'token': desencriptar(token),\n    'operacion': PERMIT_ADD_ANNEX_VERSION\n  };\n  return (dispatch, getState) => {\n    axios.post(\"http://localhost:8000/upload\", data).then(res => {\n      annexN.location = res.data;\n      axios.post(`${URL_BASE}/proyectosESCOM-web/api/annexVersion/add/`, annexN, {\n        headers: headers\n      }).then(response => {\n        dispatch({\n          type: ADD_ANNEX_VERSION,\n          payload: response.data.respuesta\n        });\n      }).catch(error => {\n        if (error.request.response === '') {\n          dispatch({\n            type: ADD_ANNEX_VERSION,\n            payload: 'error server'\n          });\n        } else {\n          if (error.request) {\n            var data = JSON.parse(error.request.response);\n            let respuesta = data.respuesta;\n            dispatch({\n              type: ADD_ANNEX_VERSION,\n              payload: respuesta\n            });\n          }\n        }\n      });\n    }).catch(err => {\n      dispatch({\n        type: ADD_ANNEX_VERSION,\n        payload: err.data\n      });\n    });\n  };\n}","map":{"version":3,"sources":["C:/Users/hashy/Desktop/proyectosESCOM/frontend/ESCOM-view/src/ModuloDocumental/redux/actions/annexVersionA.js"],"names":["axios","desencriptar","URL_BASE","GET_ANNEX_VERSIONS","ADD_ANNEX_VERSION","STATE_ANNEX_VERSION","PERMIT_GET_ANNEX_VERSION","PERMIT_ADD_ANNEX_VERSION","ADD_MESSAGE_ADD","addMessageAdd","mensaje","dispatch","getState","type","getAnnexVersions","token","id","headers","get","then","response","payload","data","catch","error","request","ADD_MESSAGE","JSON","parse","respuesta","addAnnexVersion","annexN","requestData","localStorage","getItem","post","res","location","err"],"mappings":"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","sourcesContent":["import axios from 'axios'\r\n\r\nimport { desencriptar } from '../../../SuperAdministrador/componentes/general/Encriptar.js';\r\nimport { URL_BASE } from '../../../SuperAdministrador/utilitario/Configuracion.js';\r\n\r\nexport const GET_ANNEX_VERSIONS = 'GET_ANNEX_VERSIONS';\r\nexport const ADD_ANNEX_VERSION = 'ADD_ANNEX_VERSION';\r\nexport const STATE_ANNEX_VERSION = 'STATE_ANNEX_VERSION';\r\n\r\nconst PERMIT_GET_ANNEX_VERSION = 'MD_Lista version anexo';\r\nconst PERMIT_ADD_ANNEX_VERSION = 'MD_Agregar version anexo';\r\n\r\nexport const ADD_MESSAGE_ADD = 'ADD_MESSAGE_ADD';\r\n\r\nexport function addMessageAdd(mensaje) {\r\n    return (dispatch, getState) => {\r\n        dispatch({\r\n            type: ADD_MESSAGE_ADD,\r\n            mensaje: mensaje\r\n        });\r\n    };\r\n}\r\n\r\n//MD_Lista version anexo\r\nexport function getAnnexVersions(token, id) {\r\n    const headers = {\r\n        'Content-Type': 'application/json',\r\n        'TokenAuto': desencriptar(token),\r\n        'Permiso': PERMIT_GET_ANNEX_VERSION\r\n    }\r\n    return (dispatch, getState) => {\r\n        axios.get(`${URL_BASE}/proyectosESCOM-web/api/annexVersion/list/${id}`, { headers: headers })\r\n            .then(response => {\r\n                dispatch({\r\n                    type: GET_ANNEX_VERSIONS,\r\n                    payload: response.data\r\n                });\r\n            }).catch(error => {\r\n                if (error.request.response === '') {\r\n                    dispatch({\r\n                        type: ADD_MESSAGE,\r\n                        payload: 'error server'\r\n                    });\r\n                } else {\r\n                    if (error.request) {\r\n                        var data = JSON.parse(error.request.response);\r\n                        let respuesta = data.respuesta;\r\n                        if (respuesta === 'Sin permiso') {\r\n                            dispatch({\r\n                                type: STATE_ANNEX_VERSION,\r\n                                payload: true\r\n                            });\r\n                        } else {\r\n                            dispatch({\r\n                                type: ADD_MESSAGE,\r\n                                payload: respuesta\r\n                            });\r\n                        }\r\n                    }\r\n                }\r\n\r\n            });\r\n    }\r\n}\r\n\r\n//MD_Agregar version anexo\r\nexport function addAnnexVersion(token, data, annexN) {\r\n    const headers = {\r\n        'Content-Type': 'application/json; charset= UTF-8',\r\n        'TokenAuto': desencriptar(token),\r\n        'Permiso': PERMIT_ADD_ANNEX_VERSION\r\n    }\r\n    annexN.requestData = {\r\n        'ip': localStorage.getItem('Ip'),\r\n        'token': desencriptar(token),\r\n        'operacion': PERMIT_ADD_ANNEX_VERSION\r\n    };\r\n    return (dispatch, getState) => {\r\n        axios.post(\"http://localhost:8000/upload\", data)\r\n            .then(res => {\r\n                annexN.location = res.data\r\n                axios.post(`${URL_BASE}/proyectosESCOM-web/api/annexVersion/add/`, annexN, { headers: headers })\r\n                    .then(response => {\r\n                        dispatch({\r\n                            type: ADD_ANNEX_VERSION,\r\n                            payload: response.data.respuesta\r\n                        });\r\n                    }).catch(error => {\r\n                        if (error.request.response === '') {\r\n                            dispatch({\r\n                                type: ADD_ANNEX_VERSION,\r\n                                payload: 'error server'\r\n                            });\r\n                        } else {\r\n                            if (error.request) {\r\n                                var data = JSON.parse(error.request.response);\r\n                                let respuesta = data.respuesta;\r\n                                dispatch({\r\n                                    type: ADD_ANNEX_VERSION,\r\n                                    payload: respuesta\r\n                                });\r\n                            }\r\n                        }\r\n\r\n                    })\r\n            }).catch(err => {\r\n                dispatch({\r\n                    type: ADD_ANNEX_VERSION,\r\n                    payload: err.data\r\n                });\r\n            })\r\n    }\r\n}\r\n"]},"metadata":{},"sourceType":"module"}