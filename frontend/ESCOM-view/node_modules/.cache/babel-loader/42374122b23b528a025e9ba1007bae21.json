{"ast":null,"code":"import _objectWithoutProperties from \"C:\\\\Users\\\\jeiso\\\\Desktop\\\\REACT\\\\proyectosESCOM\\\\frontend\\\\ESCOM-view\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/objectWithoutProperties\";\nvar _jsxFileName = \"C:\\\\Users\\\\jeiso\\\\Desktop\\\\REACT\\\\proyectosESCOM\\\\frontend\\\\ESCOM-view\\\\src\\\\SuperAdministrador\\\\componentes\\\\general\\\\Login.js\";\n// import React from 'react';\n// import '../../css/menu.css'\n// import '../../css/registro.css'\n// import { Button } from 'reactstrap';\n// import { reduxForm, Field } from 'redux-form';\n// import { actionLoginUsuario } from '../../actions/actionsUsuario.js'\n// import { connect } from 'react-redux';\n// import { requerido, correo } from '../../utilitario/validacionCampos.js';\n// import CircularProgress from '@material-ui/core/CircularProgress';\n// import { withRouter } from 'react-router-dom';\n// class Login extends React.Component {\n// \tstate = {\n// \t\thabilitado: false\n// \t}\n// \tcomponentDidUpdate() {\n// \t\tif (this.props.token === 'Login correcto') {\n// \t\t\tconsole.log('paso');\n// \t\t\tthis.props.history.push('/inicio');\n// \t\t}\n// \t}\n// \thabilitarBoton = (valor) => {\n// \t\tif (!this.state.habilitado) {\n// \t\t\tthis.setState({\n// \t\t\t\thabilitado: valor\n// \t\t\t});\n// \t\t}\n// \t}\n// \thandleSubmit = formValues => {\n// \t\tthis.setState({ habilitado: true });\n// \t\tthis.props.actionLoginUsuario(formValues.correo, formValues.contrasena, this.habilitarBoton);\n// \t}\n// \trender() {\n// \t\treturn (\n// \t\t\t<div>\n// \t\t\t\t<div className=\"container-fluid fondo-blanco\">\n// \t\t\t\t\t<div className=\"row no-gutter\">\n// \t\t\t\t\t\t<div className=\"d-none d-md-flex col-md-4 col-lg-6 bg-image\"></div>\n// \t\t\t\t\t\t<div className=\"col-md-8 col-lg-6\">\n// \t\t\t\t\t\t\t<div className=\"login d-flex align-items-center py-5\">\n// \t\t\t\t\t\t\t\t<div className=\"container\">\n// \t\t\t\t\t\t\t\t\t<div className=\"row\">\n// \t\t\t\t\t\t\t\t\t\t<div className=\"col-md-6 col-lg-10 mx-auto\">\n// \t\t\t\t\t\t\t\t\t\t\t<form onSubmit={this.props.handleSubmit(this.handleSubmit)} className=\"center\">\n// \t\t\t\t\t\t\t\t\t\t\t\t<h3 className=\"login-heading mb-4\">Sistema para el apoyo administrativo</h3>\n// \t\t\t\t\t\t\t\t\t\t\t\t<div className=\"row\">\n// \t\t\t\t\t\t\t\t\t\t\t\t\t<div className=\"col-md-12\">\n// \t\t\t\t\t\t\t\t\t\t\t\t\t\t<Field name=\"correo\" component={generarInput} validate={[requerido, correo]} label=\"Correo electronico\" />\n// \t\t\t\t\t\t\t\t\t\t\t\t\t</div>\n// \t\t\t\t\t\t\t\t\t\t\t\t</div>\n// \t\t\t\t\t\t\t\t\t\t\t\t<br />\n// \t\t\t\t\t\t\t\t\t\t\t\t<div className=\"row\">\n// \t\t\t\t\t\t\t\t\t\t\t\t\t<div className=\"col-md-12 center\">\n// \t\t\t\t\t\t\t\t\t\t\t\t\t\t<Field name=\"contrasena\" type=\"password\" component={generarInput} validate={[requerido]} label=\"Contraseña\" />\n// \t\t\t\t\t\t\t\t\t\t\t\t\t</div>\n// \t\t\t\t\t\t\t\t\t\t\t\t</div>\n// \t\t\t\t\t\t\t\t\t\t\t\t<div className=\"row\">\n// \t\t\t\t\t\t\t\t\t\t\t\t\t<div className=\"col-sm-12 center\">\n// \t\t\t\t\t\t\t\t\t\t\t\t\t\t<Field name=\"mensaje\" component={generarMensaje} label={this.props.token} />\n// \t\t\t\t\t\t\t\t\t\t\t\t\t</div>\n// \t\t\t\t\t\t\t\t\t\t\t\t</div>\n// \t\t\t\t\t\t\t\t\t\t\t\t<div className=\"row\">\n// \t\t\t\t\t\t\t\t\t\t\t\t\t<div className=\"col-sm-12 center\">\n// \t\t\t\t\t\t\t\t\t\t\t\t\t\t<a href=\"/editar\" id=\"forget-password\" className=\"small\" >¿Olvido su contraseña?</a>\n// \t\t\t\t\t\t\t\t\t\t\t\t\t</div>\n// \t\t\t\t\t\t\t\t\t\t\t\t</div>\n// \t\t\t\t\t\t\t\t\t\t\t\t<br />\n// \t\t\t\t\t\t\t\t\t\t\t\t<div className=\"row\">\n// \t\t\t\t\t\t\t\t\t\t\t\t\t<div className=\"col-sm-6 center\">\n// \t\t\t\t\t\t\t\t\t\t\t\t\t\t<Button style={fondoBoton} disabled={this.state.habilitado} type=\"submit\">Iniciar sesion</Button>\n// \t\t\t\t\t\t\t\t\t\t\t\t\t</div>\n// \t\t\t\t\t\t\t\t\t\t\t\t\t{this.state.habilitado ? <div className=\"col-sm-2 center\"><CircularProgress color=\"secondary\" /></div> : <div></div>}\n// \t\t\t\t\t\t\t\t\t\t\t\t</div>\n// \t\t\t\t\t\t\t\t\t\t\t</form>\n// \t\t\t\t\t\t\t\t\t\t</div>\n// \t\t\t\t\t\t\t\t\t</div>\n// \t\t\t\t\t\t\t\t</div>\n// \t\t\t\t\t\t\t</div>\n// \t\t\t\t\t\t</div>\n// \t\t\t\t\t</div>\n// \t\t\t\t</div>\n// \t\t\t</div>\n// \t\t)\n// \t}\n// }\n// const generarInput = ({ input, label, type, meta: { touched, error, warning } }) => (\n// \t<div>\n// \t\t<div>\n// \t\t\t<input {...input} placeholder={label} type={type} className=\"form-control letra form-control-solid placeholder-no-fix\" />\n// \t\t\t{touched && ((error && <span className=\"text-danger letra form-group\">{error}</span>) || (warning && <span>{warning}</span>))}\n// \t\t</div>\n// \t</div>\n// )\n// const generarMensaje = ({ input, label, type, meta: { touched, error, warning } }) => (\n// \t<div>\n// \t\t<div>\n// \t\t\t<input {...input} value={label} placeholder={label} type={type} style={{ background: \"none\", border: \"none\", height: \"10px\", width: \"400px\", fontSize: \"13px\", fontFamily: \"sans-serif\", color: \"#dc3545\", margin: \"0px 0px 16px\" }} disabled={true} className=\"letra\" />\n// \t\t</div>\n// \t</div>\n// )\n// const fondoBoton = {\n// \tbackground: \"#ec671d\"\n// }\n// function mapStateToProps(state) {\n// \treturn {\n// \t\ttoken: state.user.token\n// \t}\n// }\n// let formulario = reduxForm({\n// \tform: 'loginUsuario'\n// })(Login)\n// export default withRouter(connect(mapStateToProps, { actionLoginUsuario })(formulario));\nimport React from \"react\";\nimport { BrowserRouter as Router, Switch, Route, Link, Redirect, useHistory, useLocation } from \"react-router-dom\"; // This example has 3 pages: a public page, a protected\n// page, and a login screen. In order to see the protected\n// page, you must first login. Pretty standard stuff.\n//\n// First, visit the public page. Then, visit the protected\n// page. You're not yet logged in, so you are redirected\n// to the login page. After you login, you are redirected\n// back to the protected page.\n//\n// Notice the URL change each time. If you click the back\n// button at this point, would you expect to go back to the\n// login page? No! You're already logged in. Try it out,\n// and you'll see you go back to the page you visited\n// just *before* logging in, the public page.\n\nexport default function AuthExample() {\n  return React.createElement(Router, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 159\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 160\n    },\n    __self: this\n  }, React.createElement(AuthButton, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 161\n    },\n    __self: this\n  }), React.createElement(\"ul\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 163\n    },\n    __self: this\n  }, React.createElement(\"li\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 164\n    },\n    __self: this\n  }, React.createElement(Link, {\n    to: \"/public\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 165\n    },\n    __self: this\n  }, \"Public Page\")), React.createElement(\"li\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 167\n    },\n    __self: this\n  }, React.createElement(Link, {\n    to: \"/protected\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 168\n    },\n    __self: this\n  }, \"Protected Page\"))), React.createElement(Switch, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 172\n    },\n    __self: this\n  }, React.createElement(Route, {\n    path: \"/public\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 173\n    },\n    __self: this\n  }, React.createElement(PublicPage, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 174\n    },\n    __self: this\n  })), React.createElement(Route, {\n    path: \"/login\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 176\n    },\n    __self: this\n  }, React.createElement(LoginPage, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 177\n    },\n    __self: this\n  })), React.createElement(PrivateRoute, {\n    path: \"/protected\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 179\n    },\n    __self: this\n  }, React.createElement(ProtectedPage, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 180\n    },\n    __self: this\n  })))));\n}\nconst fakeAuth = {\n  isAuthenticated: false,\n\n  authenticate(cb) {\n    fakeAuth.isAuthenticated = true;\n    setTimeout(cb, 100); // fake async\n  },\n\n  signout(cb) {\n    fakeAuth.isAuthenticated = false;\n    setTimeout(cb, 100);\n  }\n\n};\n\nfunction AuthButton() {\n  let history = useHistory();\n  return fakeAuth.isAuthenticated ? React.createElement(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 204\n    },\n    __self: this\n  }, \"Welcome!\", \" \", React.createElement(\"button\", {\n    onClick: () => {\n      fakeAuth.signout(() => history.push(\"/\"));\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 206\n    },\n    __self: this\n  }, \"Sign out\")) : React.createElement(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 215\n    },\n    __self: this\n  }, \"You are not logged in.\");\n} // A wrapper for <Route> that redirects to the login\n// screen if you're not yet authenticated.\n\n\nfunction PrivateRoute(_ref) {\n  let children = _ref.children,\n      rest = _objectWithoutProperties(_ref, [\"children\"]);\n\n  return React.createElement(Route, Object.assign({}, rest, {\n    render: ({\n      location\n    }) => fakeAuth.isAuthenticated ? children : React.createElement(Redirect, {\n      to: {\n        pathname: \"/login\",\n        state: {\n          from: location\n        }\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 229\n      },\n      __self: this\n    }),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 223\n    },\n    __self: this\n  }));\n}\n\nfunction PublicPage() {\n  return React.createElement(\"h3\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 242\n    },\n    __self: this\n  }, \"Public\");\n}\n\nfunction ProtectedPage() {\n  return React.createElement(\"h3\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 246\n    },\n    __self: this\n  }, \"Protected\");\n}\n\nfunction LoginPage() {\n  let history = useHistory();\n  let location = useLocation();\n\n  let _ref2 = location.state || {\n    from: {\n      pathname: \"/\"\n    }\n  },\n      from = _ref2.from;\n\n  let login = () => {\n    fakeAuth.authenticate(() => {\n      history.replace(from);\n    });\n  };\n\n  return React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 261\n    },\n    __self: this\n  }, React.createElement(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 262\n    },\n    __self: this\n  }, \"You must log in to view the page at \", from.pathname), React.createElement(\"button\", {\n    onClick: login,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 263\n    },\n    __self: this\n  }, \"Log in\"));\n}","map":{"version":3,"sources":["C:\\Users\\jeiso\\Desktop\\REACT\\proyectosESCOM\\frontend\\ESCOM-view\\src\\SuperAdministrador\\componentes\\general\\Login.js"],"names":["React","BrowserRouter","Router","Switch","Route","Link","Redirect","useHistory","useLocation","AuthExample","fakeAuth","isAuthenticated","authenticate","cb","setTimeout","signout","AuthButton","history","push","PrivateRoute","children","rest","location","pathname","state","from","PublicPage","ProtectedPage","LoginPage","login","replace"],"mappingskB,OAAlB;AACA,SACEC,aAAa,IAAIC,MADnB,EAEEC,MAFF,EAGEC,KAHF,EAIEC,IAJF,EAKEC,QALF,EAMEC,UANF,EAOEC,WAPF,QAQO,kBARP,C,CAUA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,eAAe,SAASC,WAAT,GAAuB;AACpC,SACE,oBAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,UAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,EAGE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,IAAD;AAAM,IAAA,EAAE,EAAC,SAAT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBADF,CADF,EAIE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,IAAD;AAAM,IAAA,EAAE,EAAC,YAAT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBADF,CAJF,CAHF,EAYE,oBAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,KAAD;AAAO,IAAA,IAAI,EAAC,SAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,UAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CADF,EAIE,oBAAC,KAAD;AAAO,IAAA,IAAI,EAAC,QAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CAJF,EAOE,oBAAC,YAAD;AAAc,IAAA,IAAI,EAAC,YAAnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,aAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CAPF,CAZF,CADF,CADF;AA4BD;AAED,MAAMC,QAAQ,GAAG;AACfC,EAAAA,eAAe,EAAE,KADF;;AAEfC,EAAAA,YAAY,CAACC,EAAD,EAAK;AACfH,IAAAA,QAAQ,CAACC,eAAT,GAA2B,IAA3B;AACAG,IAAAA,UAAU,CAACD,EAAD,EAAK,GAAL,CAAV,CAFe,CAEM;AACtB,GALc;;AAMfE,EAAAA,OAAO,CAACF,EAAD,EAAK;AACVH,IAAAA,QAAQ,CAACC,eAAT,GAA2B,KAA3B;AACAG,IAAAA,UAAU,CAACD,EAAD,EAAK,GAAL,CAAV;AACD;;AATc,CAAjB;;AAYA,SAASG,UAAT,GAAsB;AACpB,MAAIC,OAAO,GAAGV,UAAU,EAAxB;AAEA,SAAOG,QAAQ,CAACC,eAAT,GACL;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBACW,GADX,EAEE;AACE,IAAA,OAAO,EAAE,MAAM;AACbD,MAAAA,QAAQ,CAACK,OAAT,CAAiB,MAAME,OAAO,CAACC,IAAR,CAAa,GAAb,CAAvB;AACD,KAHH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAFF,CADK,GAYL;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,8BAZF;AAcD,C,CAED;AACA;;;AACA,SAASC,YAAT,OAA6C;AAAA,MAArBC,QAAqB,QAArBA,QAAqB;AAAA,MAARC,IAAQ;;AAC3C,SACE,oBAAC,KAAD,oBACMA,IADN;AAEE,IAAA,MAAM,EAAE,CAAC;AAAEC,MAAAA;AAAF,KAAD,KACNZ,QAAQ,CAACC,eAAT,GACES,QADF,GAGE,oBAAC,QAAD;AACE,MAAA,EAAE,EAAE;AACFG,QAAAA,QAAQ,EAAE,QADR;AAEFC,QAAAA,KAAK,EAAE;AAAEC,UAAAA,IAAI,EAAEH;AAAR;AAFL,OADN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MANN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KADF;AAiBD;;AAED,SAASI,UAAT,GAAsB;AACpB,SAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAAP;AACD;;AAED,SAASC,aAAT,GAAyB;AACvB,SAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBAAP;AACD;;AAED,SAASC,SAAT,GAAqB;AACnB,MAAIX,OAAO,GAAGV,UAAU,EAAxB;AACA,MAAIe,QAAQ,GAAGd,WAAW,EAA1B;;AAFmB,cAIJc,QAAQ,CAACE,KAAT,IAAkB;AAAEC,IAAAA,IAAI,EAAE;AAAEF,MAAAA,QAAQ,EAAE;AAAZ;AAAR,GAJd;AAAA,MAIbE,IAJa,SAIbA,IAJa;;AAKnB,MAAII,KAAK,GAAG,MAAM;AAChBnB,IAAAA,QAAQ,CAACE,YAAT,CAAsB,MAAM;AAC1BK,MAAAA,OAAO,CAACa,OAAR,CAAgBL,IAAhB;AACD,KAFD;AAGD,GAJD;;AAMA,SACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,6CAAwCA,IAAI,CAACF,QAA7C,CADF,EAEE;AAAQ,IAAA,OAAO,EAAEM,KAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAFF,CADF;AAMD","sourcesContent":["// import React from 'react';\r\n\r\n// import '../../css/menu.css'\r\n// import '../../css/registro.css'\r\n\r\n// import { Button } from 'reactstrap';\r\n// import { reduxForm, Field } from 'redux-form';\r\n\r\n// import { actionLoginUsuario } from '../../actions/actionsUsuario.js'\r\n// import { connect } from 'react-redux';\r\n// import { requerido, correo } from '../../utilitario/validacionCampos.js';\r\n// import CircularProgress from '@material-ui/core/CircularProgress';\r\n// import { withRouter } from 'react-router-dom';\r\n\r\n// class Login extends React.Component {\r\n\r\n// \tstate = {\r\n// \t\thabilitado: false\r\n// \t}\r\n\r\n// \tcomponentDidUpdate() {\r\n// \t\tif (this.props.token === 'Login correcto') {\r\n// \t\t\tconsole.log('paso');\r\n// \t\t\tthis.props.history.push('/inicio');\r\n// \t\t}\r\n// \t}\r\n\r\n// \thabilitarBoton = (valor) => {\r\n// \t\tif (!this.state.habilitado) {\r\n// \t\t\tthis.setState({\r\n// \t\t\t\thabilitado: valor\r\n// \t\t\t});\r\n// \t\t}\r\n// \t}\r\n\r\n// \thandleSubmit = formValues => {\r\n// \t\tthis.setState({ habilitado: true });\r\n// \t\tthis.props.actionLoginUsuario(formValues.correo, formValues.contrasena, this.habilitarBoton);\r\n// \t}\r\n\r\n\r\n// \trender() {\r\n// \t\treturn (\r\n// \t\t\t<div>\r\n// \t\t\t\t<div className=\"container-fluid fondo-blanco\">\r\n// \t\t\t\t\t<div className=\"row no-gutter\">\r\n// \t\t\t\t\t\t<div className=\"d-none d-md-flex col-md-4 col-lg-6 bg-image\"></div>\r\n// \t\t\t\t\t\t<div className=\"col-md-8 col-lg-6\">\r\n// \t\t\t\t\t\t\t<div className=\"login d-flex align-items-center py-5\">\r\n// \t\t\t\t\t\t\t\t<div className=\"container\">\r\n// \t\t\t\t\t\t\t\t\t<div className=\"row\">\r\n// \t\t\t\t\t\t\t\t\t\t<div className=\"col-md-6 col-lg-10 mx-auto\">\r\n// \t\t\t\t\t\t\t\t\t\t\t<form onSubmit={this.props.handleSubmit(this.handleSubmit)} className=\"center\">\r\n// \t\t\t\t\t\t\t\t\t\t\t\t<h3 className=\"login-heading mb-4\">Sistema para el apoyo administrativo</h3>\r\n// \t\t\t\t\t\t\t\t\t\t\t\t<div className=\"row\">\r\n// \t\t\t\t\t\t\t\t\t\t\t\t\t<div className=\"col-md-12\">\r\n// \t\t\t\t\t\t\t\t\t\t\t\t\t\t<Field name=\"correo\" component={generarInput} validate={[requerido, correo]} label=\"Correo electronico\" />\r\n// \t\t\t\t\t\t\t\t\t\t\t\t\t</div>\r\n// \t\t\t\t\t\t\t\t\t\t\t\t</div>\r\n// \t\t\t\t\t\t\t\t\t\t\t\t<br />\r\n// \t\t\t\t\t\t\t\t\t\t\t\t<div className=\"row\">\r\n// \t\t\t\t\t\t\t\t\t\t\t\t\t<div className=\"col-md-12 center\">\r\n// \t\t\t\t\t\t\t\t\t\t\t\t\t\t<Field name=\"contrasena\" type=\"password\" component={generarInput} validate={[requerido]} label=\"Contraseña\" />\r\n// \t\t\t\t\t\t\t\t\t\t\t\t\t</div>\r\n// \t\t\t\t\t\t\t\t\t\t\t\t</div>\r\n// \t\t\t\t\t\t\t\t\t\t\t\t<div className=\"row\">\r\n// \t\t\t\t\t\t\t\t\t\t\t\t\t<div className=\"col-sm-12 center\">\r\n// \t\t\t\t\t\t\t\t\t\t\t\t\t\t<Field name=\"mensaje\" component={generarMensaje} label={this.props.token} />\r\n// \t\t\t\t\t\t\t\t\t\t\t\t\t</div>\r\n// \t\t\t\t\t\t\t\t\t\t\t\t</div>\r\n// \t\t\t\t\t\t\t\t\t\t\t\t<div className=\"row\">\r\n// \t\t\t\t\t\t\t\t\t\t\t\t\t<div className=\"col-sm-12 center\">\r\n// \t\t\t\t\t\t\t\t\t\t\t\t\t\t<a href=\"/editar\" id=\"forget-password\" className=\"small\" >¿Olvido su contraseña?</a>\r\n// \t\t\t\t\t\t\t\t\t\t\t\t\t</div>\r\n// \t\t\t\t\t\t\t\t\t\t\t\t</div>\r\n// \t\t\t\t\t\t\t\t\t\t\t\t<br />\r\n// \t\t\t\t\t\t\t\t\t\t\t\t<div className=\"row\">\r\n// \t\t\t\t\t\t\t\t\t\t\t\t\t<div className=\"col-sm-6 center\">\r\n// \t\t\t\t\t\t\t\t\t\t\t\t\t\t<Button style={fondoBoton} disabled={this.state.habilitado} type=\"submit\">Iniciar sesion</Button>\r\n\r\n// \t\t\t\t\t\t\t\t\t\t\t\t\t</div>\r\n// \t\t\t\t\t\t\t\t\t\t\t\t\t{this.state.habilitado ? <div className=\"col-sm-2 center\"><CircularProgress color=\"secondary\" /></div> : <div></div>}\r\n// \t\t\t\t\t\t\t\t\t\t\t\t</div>\r\n// \t\t\t\t\t\t\t\t\t\t\t</form>\r\n// \t\t\t\t\t\t\t\t\t\t</div>\r\n// \t\t\t\t\t\t\t\t\t</div>\r\n// \t\t\t\t\t\t\t\t</div>\r\n// \t\t\t\t\t\t\t</div>\r\n// \t\t\t\t\t\t</div>\r\n// \t\t\t\t\t</div>\r\n// \t\t\t\t</div>\r\n// \t\t\t</div>\r\n// \t\t)\r\n// \t}\r\n// }\r\n\r\n// const generarInput = ({ input, label, type, meta: { touched, error, warning } }) => (\r\n// \t<div>\r\n// \t\t<div>\r\n// \t\t\t<input {...input} placeholder={label} type={type} className=\"form-control letra form-control-solid placeholder-no-fix\" />\r\n// \t\t\t{touched && ((error && <span className=\"text-danger letra form-group\">{error}</span>) || (warning && <span>{warning}</span>))}\r\n// \t\t</div>\r\n// \t</div>\r\n// )\r\n\r\n// const generarMensaje = ({ input, label, type, meta: { touched, error, warning } }) => (\r\n// \t<div>\r\n// \t\t<div>\r\n// \t\t\t<input {...input} value={label} placeholder={label} type={type} style={{ background: \"none\", border: \"none\", height: \"10px\", width: \"400px\", fontSize: \"13px\", fontFamily: \"sans-serif\", color: \"#dc3545\", margin: \"0px 0px 16px\" }} disabled={true} className=\"letra\" />\r\n// \t\t</div>\r\n// \t</div>\r\n// )\r\n\r\n// const fondoBoton = {\r\n// \tbackground: \"#ec671d\"\r\n// }\r\n\r\n// function mapStateToProps(state) {\r\n// \treturn {\r\n// \t\ttoken: state.user.token\r\n// \t}\r\n// }\r\n\r\n// let formulario = reduxForm({\r\n// \tform: 'loginUsuario'\r\n// })(Login)\r\n\r\n\r\n\r\n// export default withRouter(connect(mapStateToProps, { actionLoginUsuario })(formulario));\r\nimport React from \"react\";\r\nimport {\r\n  BrowserRouter as Router,\r\n  Switch,\r\n  Route,\r\n  Link,\r\n  Redirect,\r\n  useHistory,\r\n  useLocation\r\n} from \"react-router-dom\";\r\n\r\n// This example has 3 pages: a public page, a protected\r\n// page, and a login screen. In order to see the protected\r\n// page, you must first login. Pretty standard stuff.\r\n//\r\n// First, visit the public page. Then, visit the protected\r\n// page. You're not yet logged in, so you are redirected\r\n// to the login page. After you login, you are redirected\r\n// back to the protected page.\r\n//\r\n// Notice the URL change each time. If you click the back\r\n// button at this point, would you expect to go back to the\r\n// login page? No! You're already logged in. Try it out,\r\n// and you'll see you go back to the page you visited\r\n// just *before* logging in, the public page.\r\n\r\nexport default function AuthExample() {\r\n  return (\r\n    <Router>\r\n      <div>\r\n        <AuthButton />\r\n\r\n        <ul>\r\n          <li>\r\n            <Link to=\"/public\">Public Page</Link>\r\n          </li>\r\n          <li>\r\n            <Link to=\"/protected\">Protected Page</Link>\r\n          </li>\r\n        </ul>\r\n\r\n        <Switch>\r\n          <Route path=\"/public\">\r\n            <PublicPage />\r\n          </Route>\r\n          <Route path=\"/login\">\r\n            <LoginPage />\r\n          </Route>\r\n          <PrivateRoute path=\"/protected\">\r\n            <ProtectedPage />\r\n          </PrivateRoute>\r\n        </Switch>\r\n      </div>\r\n    </Router>\r\n  );\r\n}\r\n\r\nconst fakeAuth = {\r\n  isAuthenticated: false,\r\n  authenticate(cb) {\r\n    fakeAuth.isAuthenticated = true;\r\n    setTimeout(cb, 100); // fake async\r\n  },\r\n  signout(cb) {\r\n    fakeAuth.isAuthenticated = false;\r\n    setTimeout(cb, 100);\r\n  }\r\n};\r\n\r\nfunction AuthButton() {\r\n  let history = useHistory();\r\n\r\n  return fakeAuth.isAuthenticated ? (\r\n    <p>\r\n      Welcome!{\" \"}\r\n      <button\r\n        onClick={() => {\r\n          fakeAuth.signout(() => history.push(\"/\"));\r\n        }}\r\n      >\r\n        Sign out\r\n      </button>\r\n    </p>\r\n  ) : (\r\n    <p>You are not logged in.</p>\r\n  );\r\n}\r\n\r\n// A wrapper for <Route> that redirects to the login\r\n// screen if you're not yet authenticated.\r\nfunction PrivateRoute({ children, ...rest }) {\r\n  return (\r\n    <Route\r\n      {...rest}\r\n      render={({ location }) =>\r\n        fakeAuth.isAuthenticated ? (\r\n          children\r\n        ) : (\r\n          <Redirect\r\n            to={{\r\n              pathname: \"/login\",\r\n              state: { from: location }\r\n            }}\r\n          />\r\n        )\r\n      }\r\n    />\r\n  );\r\n}\r\n\r\nfunction PublicPage() {\r\n  return <h3>Public</h3>;\r\n}\r\n\r\nfunction ProtectedPage() {\r\n  return <h3>Protected</h3>;\r\n}\r\n\r\nfunction LoginPage() {\r\n  let history = useHistory();\r\n  let location = useLocation();\r\n\r\n  let { from } = location.state || { from: { pathname: \"/\" } };\r\n  let login = () => {\r\n    fakeAuth.authenticate(() => {\r\n      history.replace(from);\r\n    });\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <p>You must log in to view the page at {from.pathname}</p>\r\n      <button onClick={login}>Log in</button>\r\n    </div>\r\n  );\r\n}"]},"metadata":{},"sourceType":"module"}