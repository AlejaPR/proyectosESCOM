{"ast":null,"code":"import axios from 'axios';\nimport { desencriptar } from '../componentes/general/Encriptar.js';\nimport { mensajesDeError } from '../utilitario/MensajesError.js';\nexport const MOSTRAR_MODULOS = 'MOSTRAR_USUARIOS';\nexport const ESTADO_MODULOS = 'ESTADO_MODULOS';\nexport const ANADIR_CODIGO_EDITAR = 'ANADIR_CODIGO_EDITAR';\nexport const INFORMACION_MODULO = 'INFORMACION_MODULO';\nexport const MENSAJE_EDITAR_MODULO = 'MENSAJE_EDITAR_MODULO';\nexport const MENSAJE_SUSPENDER_MODULO = 'MENSAJE_SUSPENDER_MODULO';\nexport const MENSAJE_ACTIVIDADES = 'MENSAJE_ACTIVIDADES';\nexport const ACTIVIDADES_MODULO = 'ACTIVIDADES_MODULO';\nexport const ACTUALIZAR_MODULOS = 'ACTUALIZAR_MODULOS';\nexport const AGREGAR_MODULO = 'AGREGAR_MODULO';\nexport const MENSAJE_REGISTRAR_MODULO = 'MENSAJE_REGISTRAR_MODULO';\nexport function actionAgregarModulo(modulo, token) {\n  var tokenRequest = desencriptar(token);\n  const headers = {\n    'Content-Type': 'application/json',\n    'TokenAuto': tokenRequest,\n    'Permiso': 'dios'\n  };\n  return (dispatch, getState) => {\n    axios.post(\"http://localhost:9090/proyectosESCOM-web/api/modulo/registrarModulo\", modulo, {\n      headers: headers\n    }).then(response => {\n      dispatch({\n        type: AGREGAR_MODULO,\n        moduloARegistrar: modulo\n      });\n      dispatch({\n        type: MENSAJE_REGISTRAR_MODULO,\n        mensaje: 'modulo registrado'\n      });\n    }).catch(error => {\n      if (error.request.response === '') {\n        dispatch({\n          type: MENSAJE_REGISTRAR_MODULO,\n          mensaje: 'Servidor fuera de servicio temporalmente'\n        });\n      } else {\n        if (error.request) {\n          var o = JSON.parse(error.request.response);\n          let respuesta = mensajesDeError(o.respuesta);\n\n          if (respuesta !== '') {\n            dispatch({\n              type: MENSAJE_REGISTRAR_MODULO,\n              mensaje: respuesta\n            });\n          }\n        }\n      }\n    });\n  };\n}\nexport function actualizarMensajeSuspenderModulo(mensaje) {\n  return (dispatch, getState) => {\n    dispatch({\n      type: MENSAJE_SUSPENDER_MODULO,\n      mensaje: mensaje\n    });\n  };\n}\nexport function actualizarMensajeActividades(mensaje) {\n  return (dispatch, getState) => {\n    dispatch({\n      type: MENSAJE_ACTIVIDADES,\n      mensaje: mensaje\n    });\n  };\n}\nexport function actionAsignarModulo(codigoModulo) {\n  return (dispatch, getState) => {\n    dispatch({\n      type: ANADIR_CODIGO_EDITAR,\n      codigo: codigoModulo\n    });\n  };\n}\nexport function actionConsultarModulos(token) {\n  var tokenRequest = desencriptar(token);\n  const headers = {\n    'Content-Type': 'application/json',\n    'TokenAuto': tokenRequest,\n    'Permiso': 'dios'\n  };\n  return (dispatch, getState) => {\n    axios.get(\"http://localhost:9090/proyectosESCOM-web/api/modulo/listarModulos\", {\n      headers: headers\n    }).then(response => {\n      dispatch({\n        type: MOSTRAR_MODULOS,\n        respuesta: response.data\n      });\n    }).catch(error => {\n      if (error.request.response === '') {} else {\n        if (error.request) {\n          var o = JSON.parse(error.request.response);\n          let respuesta = mensajesDeError(o.respuesta);\n\n          if (respuesta === 'Sin permiso') {\n            dispatch({\n              type: ESTADO_MODULOS,\n              estado: true\n            });\n          } else {//\n          }\n        }\n      }\n    });\n  };\n}\nexport function actionCargarInformacionDeModulo(codigoModulo, token) {\n  const headers = {\n    'Content-Type': 'application/json',\n    'TokenAuto': desencriptar(token),\n    'Permiso': 'dios'\n  };\n  return (dispatch, getState) => {\n    axios.get(\"http://localhost:9090/proyectosESCOM-web/api/modulo/datosModulo/\" + codigoModulo, {\n      headers: headers\n    }).then(response => {\n      dispatch({\n        type: INFORMACION_MODULO,\n        informacionModulo: response.data\n      });\n    }).catch(error => {\n      if (error.request.response === '') {\n        dispatch({\n          type: MENSAJE_EDITAR_MODULO,\n          mensaje: 'Servidor fuera de servicio temporalmente'\n        });\n      } else {\n        if (error.request) {\n          var o = JSON.parse(error.request.response);\n          let respuesta = mensajesDeError(o.respuesta);\n\n          if (respuesta !== '') {\n            dispatch({\n              type: MENSAJE_EDITAR_MODULO,\n              mensaje: respuesta\n            });\n          } else {\n            dispatch({\n              type: MENSAJE_EDITAR_MODULO,\n              mensaje: 'Sin acceso al servicio'\n            });\n          }\n        }\n      }\n    });\n  };\n}\nexport function actionConsultarActividadesModulo(codigoModulo, token) {\n  const headers = {\n    'Content-Type': 'application/json',\n    'TokenAuto': desencriptar(token),\n    'Permiso': 'dios'\n  };\n  return (dispatch, getState) => {\n    axios.get(\"http://localhost:9090/proyectosESCOM-web/api/modulo/listarActividadesModulo/\" + codigoModulo, {\n      headers: headers\n    }).then(response => {\n      dispatch({\n        type: ACTIVIDADES_MODULO,\n        actividades: response.data\n      });\n    }).catch(error => {\n      if (error.request.response === '') {\n        dispatch({\n          type: MENSAJE_ACTIVIDADES,\n          mensaje: 'Servidor fuera de servicio temporalmente'\n        });\n      } else {\n        if (error.request) {\n          var o = JSON.parse(error.request.response);\n          let respuesta = mensajesDeError(o.respuesta);\n\n          if (respuesta !== '') {\n            dispatch({\n              type: MENSAJE_ACTIVIDADES,\n              mensaje: respuesta\n            });\n          } else {\n            dispatch({\n              type: MENSAJE_ACTIVIDADES,\n              mensaje: 'Sin acceso al servicio'\n            });\n          }\n        }\n      }\n    });\n  };\n}\nexport function actionSuspenderActivarModulo(codigoModulo, token, actualizados) {\n  var tokenRequest = desencriptar(token);\n  const headers = {\n    'Content-Type': 'application/json',\n    'TokenAuto': tokenRequest,\n    'Permiso': 'dios'\n  };\n  return (dispatch, getState) => {\n    axios.get(\"http://localhost:9090/proyectosESCOM-web/api/modulo/cambiarEstadoModulo/\" + codigoModulo, {\n      headers: headers\n    }).then(response => {\n      dispatch({\n        type: MENSAJE_SUSPENDER_MODULO,\n        mensaje: 'Operacion hecha con exito'\n      });\n      dispatch({\n        type: ACTUALIZAR_MODULOS,\n        modulo: actualizados\n      });\n    }).catch(error => {\n      console.log(error);\n\n      if (error.request.response === '') {\n        dispatch({\n          type: MENSAJE_SUSPENDER_MODULO,\n          mensaje: 'Servidor fuera de servicio temporalmente'\n        });\n      } else {\n        if (error.request) {\n          var o = JSON.parse(error.request.response);\n          let respuesta = mensajesDeError(o.respuesta);\n          console.log('respuesta', respuesta);\n\n          if (respuesta !== '') {\n            dispatch({\n              type: MENSAJE_SUSPENDER_MODULO,\n              mensaje: respuesta\n            });\n          } else {\n            dispatch({\n              type: MENSAJE_SUSPENDER_MODULO,\n              mensaje: 'Sin acceso al servicio'\n            });\n          }\n        }\n      }\n    });\n  };\n}\nexport function actionCambiarEstadoActividades(actividades, token) {\n  var tokenRequest = desencriptar(token);\n  const headers = {\n    'Content-Type': 'application/json',\n    'TokenAuto': tokenRequest,\n    'Permiso': 'dios'\n  };\n  return (dispatch, getState) => {\n    axios.put(\"http://localhost:9090/proyectosESCOM-web/api/modulo/cambiarEstadoActividadModulo/\", actividades, {\n      headers: headers\n    }).then(response => {\n      dispatch({\n        type: MENSAJE_ACTIVIDADES,\n        mensaje: 'Operacion hecha con exito'\n      });\n    }).catch(error => {\n      console.log(error);\n\n      if (error.request.response === '') {\n        dispatch({\n          type: MENSAJE_ACTIVIDADES,\n          mensaje: 'Servidor fuera de servicio temporalmente'\n        });\n      } else {\n        if (error.request) {\n          var o = JSON.parse(error.request.response);\n          let respuesta = mensajesDeError(o.respuesta);\n          console.log('respuesta', respuesta);\n\n          if (respuesta !== '') {\n            dispatch({\n              type: MENSAJE_ACTIVIDADES,\n              mensaje: respuesta\n            });\n          } else {\n            dispatch({\n              type: MENSAJE_ACTIVIDADES,\n              mensaje: 'Sin acceso al servicio'\n            });\n          }\n        }\n      }\n    });\n  };\n}\nexport function actualizarMensajeEditar(mensaje) {\n  return (dispatch, getState) => {\n    dispatch({\n      type: MENSAJE_EDITAR_MODULO,\n      mensaje: mensaje\n    });\n  };\n}\nexport function actionEditarModulo(modulo, codigoModulo, token) {\n  const headers = {\n    'Content-Type': 'application/json',\n    'TokenAuto': desencriptar(token),\n    'Permiso': 'dios'\n  };\n  return (dispatch, getState) => {\n    axios.put(\"http://localhost:9090/proyectosESCOM-web/api/modulo/editarModulo/\" + codigoModulo, modulo, {\n      headers: headers\n    }).then(response => {\n      dispatch({\n        type: MENSAJE_EDITAR_MODULO,\n        mensaje: 'modulo editado'\n      });\n    }).catch(error => {\n      if (error.request.response === '') {\n        dispatch({\n          type: MENSAJE_EDITAR_MODULO,\n          mensaje: 'Sin acceso al servicio'\n        });\n      } else {\n        if (error.request) {\n          var o = JSON.parse(error.request.response);\n          let respuesta = mensajesDeError(o.respuesta);\n\n          if (respuesta !== '') {\n            dispatch({\n              type: MENSAJE_EDITAR_MODULO,\n              mensaje: 'Sin acceso al servicio'\n            });\n          } else {\n            dispatch({\n              type: MENSAJE_EDITAR_MODULO,\n              mensaje: 'Sin acceso al servicio'\n            });\n          }\n        }\n      }\n    });\n  };\n}","map":{"version":3,"sources":["C:/Users/jeiso/Desktop/proyectosESCOM/frontend/ESCOM-view/src/SuperAdministrador/actions/actionsModulo.js"],"names":["axios","desencriptar","mensajesDeError","MOSTRAR_MODULOS","ESTADO_MODULOS","ANADIR_CODIGO_EDITAR","INFORMACION_MODULO","MENSAJE_EDITAR_MODULO","MENSAJE_SUSPENDER_MODULO","MENSAJE_ACTIVIDADES","ACTIVIDADES_MODULO","ACTUALIZAR_MODULOS","AGREGAR_MODULO","MENSAJE_REGISTRAR_MODULO","actionAgregarModulo","modulo","token","tokenRequest","headers","dispatch","getState","post","then","response","type","moduloARegistrar","mensaje","catch","error","request","o","JSON","parse","respuesta","actualizarMensajeSuspenderModulo","actualizarMensajeActividades","actionAsignarModulo","codigoModulo","codigo","actionConsultarModulos","get","data","estado","actionCargarInformacionDeModulo","informacionModulo","actionConsultarActividadesModulo","actividades","actionSuspenderActivarModulo","actualizados","console","log","actionCambiarEstadoActividades","put","actualizarMensajeEditar","actionEditarModulo"],"mappings":"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","sourcesContent":["import axios from 'axios';\r\nimport { desencriptar } from '../componentes/general/Encriptar.js';\r\nimport {mensajesDeError} from '../utilitario/MensajesError.js';\r\n\r\nexport const MOSTRAR_MODULOS = 'MOSTRAR_USUARIOS';\r\nexport const ESTADO_MODULOS = 'ESTADO_MODULOS';\r\nexport const ANADIR_CODIGO_EDITAR = 'ANADIR_CODIGO_EDITAR';\r\n\r\nexport const INFORMACION_MODULO='INFORMACION_MODULO';\r\nexport const MENSAJE_EDITAR_MODULO='MENSAJE_EDITAR_MODULO';\r\nexport const MENSAJE_SUSPENDER_MODULO='MENSAJE_SUSPENDER_MODULO';\r\nexport const MENSAJE_ACTIVIDADES='MENSAJE_ACTIVIDADES';\r\nexport const ACTIVIDADES_MODULO='ACTIVIDADES_MODULO';\r\nexport const ACTUALIZAR_MODULOS='ACTUALIZAR_MODULOS';\r\nexport const AGREGAR_MODULO='AGREGAR_MODULO';\r\nexport const MENSAJE_REGISTRAR_MODULO='MENSAJE_REGISTRAR_MODULO';\r\n\r\nexport function actionAgregarModulo(modulo, token) {\r\n    var tokenRequest = desencriptar(token);\r\n    const headers = {\r\n        'Content-Type': 'application/json',\r\n        'TokenAuto': tokenRequest,\r\n        'Permiso': 'dios'\r\n    }\r\n    return (dispatch, getState) => {\r\n        axios.post(\"http://localhost:9090/proyectosESCOM-web/api/modulo/registrarModulo\", modulo, { headers: headers })\r\n            .then(response => {\r\n                dispatch({\r\n                    type: AGREGAR_MODULO,\r\n                    moduloARegistrar: modulo\r\n                });\r\n                dispatch({\r\n                    type: MENSAJE_REGISTRAR_MODULO,\r\n                    mensaje: 'modulo registrado'\r\n                });\r\n            }).catch((error) => {\r\n                if (error.request.response === '') {\r\n                    dispatch({\r\n                        type: MENSAJE_REGISTRAR_MODULO,\r\n                        mensaje: 'Servidor fuera de servicio temporalmente'\r\n                    });\r\n                }else{\r\n                    if (error.request) {\r\n                        var o = JSON.parse(error.request.response);\r\n                        let respuesta=mensajesDeError(o.respuesta);\r\n                        if(respuesta!==''){\r\n                            dispatch({\r\n                                type: MENSAJE_REGISTRAR_MODULO,\r\n                                mensaje: respuesta\r\n                            });\r\n                        }\r\n                    }\r\n                } \r\n                \r\n            });\r\n\r\n    }\r\n}\r\n\r\nexport function actualizarMensajeSuspenderModulo(mensaje) {\r\n    return (dispatch, getState) => {\r\n        dispatch({\r\n            type: MENSAJE_SUSPENDER_MODULO,\r\n            mensaje: mensaje\r\n        });\r\n    };\r\n}\r\n\r\nexport function actualizarMensajeActividades(mensaje) {\r\n    return (dispatch, getState) => {\r\n        dispatch({\r\n            type: MENSAJE_ACTIVIDADES,\r\n            mensaje: mensaje\r\n        });\r\n    };\r\n}\r\n\r\nexport function actionAsignarModulo(codigoModulo) {\r\n    return (dispatch, getState) => {\r\n        dispatch({\r\n            type: ANADIR_CODIGO_EDITAR,\r\n            codigo: codigoModulo\r\n        });\r\n    }\r\n}\r\n\r\nexport function actionConsultarModulos(token) {\r\n    var tokenRequest = desencriptar(token);\r\n    const headers = {\r\n        'Content-Type': 'application/json',\r\n        'TokenAuto': tokenRequest,\r\n        'Permiso': 'dios'\r\n    }\r\n    return (dispatch, getState) => {\r\n        axios.get(\"http://localhost:9090/proyectosESCOM-web/api/modulo/listarModulos\", { headers: headers })\r\n            .then(response => {\r\n                dispatch({\r\n                    type: MOSTRAR_MODULOS,\r\n                    respuesta: response.data\r\n                });\r\n                \r\n            }).catch((error) => {\r\n                if (error.request.response === '') {\r\n                    \r\n\r\n                }else{\r\n                    if (error.request) {\r\n                        var o = JSON.parse(error.request.response);\r\n                        let respuesta=mensajesDeError(o.respuesta);\r\n                        if(respuesta==='Sin permiso'){\r\n                            dispatch({\r\n                                type: ESTADO_MODULOS,\r\n                                estado: true\r\n                            });\r\n                        }else{\r\n                            //\r\n                        }\r\n                    }\r\n                } \r\n            });\r\n    };\r\n}\r\n\r\nexport function actionCargarInformacionDeModulo(codigoModulo, token) {\r\n    const headers = {\r\n        'Content-Type': 'application/json',\r\n        'TokenAuto': desencriptar(token),\r\n        'Permiso': 'dios'\r\n    }\r\n\r\n    return (dispatch, getState) => {\r\n        axios.get(\"http://localhost:9090/proyectosESCOM-web/api/modulo/datosModulo/\" + codigoModulo, { headers: headers })\r\n            .then(response => {\r\n                dispatch({\r\n                    type: INFORMACION_MODULO,\r\n                    informacionModulo: response.data\r\n                });\r\n            }).catch((error) => {\r\n                if (error.request.response === '') {\r\n                    dispatch({\r\n                        type: MENSAJE_EDITAR_MODULO,\r\n                        mensaje: 'Servidor fuera de servicio temporalmente'\r\n                    });\r\n                }else{\r\n                    if (error.request) {\r\n                        var o = JSON.parse(error.request.response);\r\n                        let respuesta=mensajesDeError(o.respuesta);\r\n                        if(respuesta!==''){\r\n                            dispatch({\r\n                                type: MENSAJE_EDITAR_MODULO,\r\n                                mensaje: respuesta\r\n                            });\r\n                        }else{\r\n                            dispatch({\r\n                                type: MENSAJE_EDITAR_MODULO,\r\n                                mensaje: 'Sin acceso al servicio'\r\n                            });\r\n                        }\r\n                    }\r\n                } \r\n            });\r\n    };\r\n}\r\n\r\nexport function actionConsultarActividadesModulo(codigoModulo, token) {\r\n    const headers = {\r\n        'Content-Type': 'application/json',\r\n        'TokenAuto': desencriptar(token),\r\n        'Permiso': 'dios'\r\n    }\r\n\r\n    return (dispatch, getState) => {\r\n        axios.get(\"http://localhost:9090/proyectosESCOM-web/api/modulo/listarActividadesModulo/\" + codigoModulo, { headers: headers })\r\n            .then(response => {\r\n                dispatch({\r\n                    type: ACTIVIDADES_MODULO,\r\n                    actividades: response.data\r\n                });\r\n            }).catch((error) => {\r\n                if (error.request.response === '') {\r\n                    dispatch({\r\n                        type: MENSAJE_ACTIVIDADES,\r\n                        mensaje: 'Servidor fuera de servicio temporalmente'\r\n                    });\r\n                }else{\r\n                    if (error.request) {\r\n                        var o = JSON.parse(error.request.response);\r\n                        let respuesta=mensajesDeError(o.respuesta);\r\n                        if(respuesta!==''){\r\n                            dispatch({\r\n                                type: MENSAJE_ACTIVIDADES,\r\n                                mensaje: respuesta\r\n                            });\r\n                        }else{\r\n                            dispatch({\r\n                                type: MENSAJE_ACTIVIDADES,\r\n                                mensaje: 'Sin acceso al servicio'\r\n                            });\r\n                        }\r\n                    }\r\n                } \r\n            });\r\n    };\r\n}\r\n\r\nexport function actionSuspenderActivarModulo(codigoModulo, token,actualizados) {\r\n    var tokenRequest = desencriptar(token);\r\n    const headers = {\r\n        'Content-Type': 'application/json',\r\n        'TokenAuto': tokenRequest,\r\n        'Permiso': 'dios'\r\n    }\r\n    return (dispatch, getState) => {\r\n        axios.get(\"http://localhost:9090/proyectosESCOM-web/api/modulo/cambiarEstadoModulo/\"+codigoModulo, { headers: headers })\r\n            .then(response => {\r\n                dispatch({\r\n                    type: MENSAJE_SUSPENDER_MODULO,\r\n                    mensaje: 'Operacion hecha con exito'\r\n                });\r\n                dispatch({\r\n                    type: ACTUALIZAR_MODULOS,\r\n                    modulo: actualizados\r\n                });\r\n            }).catch((error) => {\r\n                console.log(error);\r\n\r\n                if (error.request.response === '') {\r\n                    dispatch({\r\n                        type: MENSAJE_SUSPENDER_MODULO,\r\n                        mensaje: 'Servidor fuera de servicio temporalmente'\r\n                    });\r\n                }else{\r\n                    if (error.request) {\r\n                        var o = JSON.parse(error.request.response);\r\n                        let respuesta=mensajesDeError(o.respuesta);\r\n                        console.log('respuesta',respuesta);\r\n                        if(respuesta!==''){\r\n                            dispatch({\r\n                                type: MENSAJE_SUSPENDER_MODULO,\r\n                                mensaje: respuesta\r\n                            });\r\n                        }else{\r\n                            dispatch({\r\n                                type: MENSAJE_SUSPENDER_MODULO,\r\n                                mensaje: 'Sin acceso al servicio'\r\n                            });\r\n                        }\r\n                    }\r\n                } \r\n                \r\n            });\r\n\r\n    }\r\n}\r\n\r\nexport function actionCambiarEstadoActividades(actividades, token) {\r\n    var tokenRequest = desencriptar(token);\r\n    const headers = {\r\n        'Content-Type': 'application/json',\r\n        'TokenAuto': tokenRequest,\r\n        'Permiso': 'dios'\r\n    }\r\n    return (dispatch, getState) => {\r\n        axios.put(\"http://localhost:9090/proyectosESCOM-web/api/modulo/cambiarEstadoActividadModulo/\",actividades, { headers: headers })\r\n            .then(response => {\r\n                dispatch({\r\n                    type: MENSAJE_ACTIVIDADES,\r\n                    mensaje: 'Operacion hecha con exito'\r\n                });\r\n            }).catch((error) => {\r\n                console.log(error);\r\n\r\n                if (error.request.response === '') {\r\n                    dispatch({\r\n                        type: MENSAJE_ACTIVIDADES,\r\n                        mensaje: 'Servidor fuera de servicio temporalmente'\r\n                    });\r\n                }else{\r\n                    if (error.request) {\r\n                        var o = JSON.parse(error.request.response);\r\n                        let respuesta=mensajesDeError(o.respuesta);\r\n                        console.log('respuesta',respuesta);\r\n                        if(respuesta!==''){\r\n                            dispatch({\r\n                                type: MENSAJE_ACTIVIDADES,\r\n                                mensaje: respuesta\r\n                            });\r\n                        }else{\r\n                            dispatch({\r\n                                type: MENSAJE_ACTIVIDADES,\r\n                                mensaje: 'Sin acceso al servicio'\r\n                            });\r\n                        }\r\n                    }\r\n                } \r\n                \r\n            });\r\n\r\n    }\r\n}\r\n\r\nexport function actualizarMensajeEditar(mensaje) {\r\n    return (dispatch, getState) => {\r\n        dispatch({\r\n            type: MENSAJE_EDITAR_MODULO,\r\n            mensaje: mensaje\r\n        });\r\n    };\r\n}\r\n\r\nexport function actionEditarModulo(modulo, codigoModulo, token) {\r\n    const headers = {\r\n        'Content-Type': 'application/json',\r\n        'TokenAuto': desencriptar(token),\r\n        'Permiso': 'dios'\r\n    }\r\n    return (dispatch, getState) => {\r\n        axios.put(\"http://localhost:9090/proyectosESCOM-web/api/modulo/editarModulo/\" + codigoModulo, modulo, { headers: headers })\r\n            .then(response => {\r\n                dispatch({\r\n                    type: MENSAJE_EDITAR_MODULO,\r\n                    mensaje: 'modulo editado'\r\n                });\r\n            }).catch((error) => {\r\n                if (error.request.response === '') {\r\n                    dispatch({\r\n                        type: MENSAJE_EDITAR_MODULO,\r\n                        mensaje: 'Sin acceso al servicio'\r\n                    });\r\n                }else{\r\n                    if (error.request) {\r\n                        var o = JSON.parse(error.request.response);\r\n                        let respuesta=mensajesDeError(o.respuesta);\r\n                        if(respuesta!==''){\r\n                            dispatch({\r\n                                type: MENSAJE_EDITAR_MODULO,\r\n                                mensaje: 'Sin acceso al servicio'\r\n                            });\r\n                        }else{\r\n                            dispatch({\r\n                                type: MENSAJE_EDITAR_MODULO,\r\n                                mensaje: 'Sin acceso al servicio'\r\n                            });\r\n                        }\r\n                    }\r\n                } \r\n                \r\n            });\r\n    }\r\n}"]},"metadata":{},"sourceType":"module"}