{"ast":null,"code":"import axios from 'axios';\nimport { desencriptar } from '../../../SuperAdministrador/componentes/general/Encriptar.js';\nimport { URL_BASE } from '../../../SuperAdministrador/utilitario/Configuracion.js';\nexport const ADD_COMMENTARY = 'ADD_COMMENTARY';\nexport const GET_LIST_COMMENTS = 'GET_LIST_COMMENTS';\nexport const DELETE_COMMENTARY = 'DELETE_COMMENTARY';\nexport const STATE_COMMENTARY = 'STATE_COMMENTARY';\nexport const ADD_MESSAGE_ADD = 'ADD_MESSAGE_ADD';\nexport const ADD_MESSAGE_DELETE = 'ADD_MESSAGE_DELETE';\nexport const ADD_MESSAGE = 'ADD_MESSAGE';\nconst PERMIT_ADD_COMMENTARY = 'MD_Prueba';\nconst PERMIT_LIST_COMMENTS = 'MD_Prueba';\nconst PERMIT_DELETE_COMMENTARY = 'MD_Prueba';\nexport function addMessageAdd(mensaje) {\n  return (dispatch, getState) => {\n    dispatch({\n      type: ADD_MESSAGE_ADD,\n      mensaje: mensaje\n    });\n  };\n}\nexport function addMessageDelete(mensaje) {\n  return (dispatch, getState) => {\n    dispatch({\n      type: ADD_MESSAGE_DELETE,\n      mensaje: mensaje\n    });\n  };\n} //MD_Agregar comentario\n\nexport function addCommentary(token, commentaryN) {\n  const headers = {\n    'Content-Type': 'application/json; charset= UTF-8',\n    'TokenAuto': desencriptar(token),\n    'Permiso': PERMIT_ADD_COMMENTARY\n  };\n  commentaryN.requestData = {\n    'ip': localStorage.getItem('Ip'),\n    'token': desencriptar(token),\n    'operacion': PERMIT_ADD_COMMENTARY\n  };\n  return (dispatch, getState) => {\n    axios.post(`${URL_BASE}/proyectosESCOM-web/api/commentary/add`, commentaryN, {\n      headers: headers\n    }).then(response => {\n      dispatch({\n        type: ADD_COMMENTARY,\n        payload: response.data.respuesta\n      });\n    }).catch(error => {\n      if (error.request.response === '') {\n        dispatch({\n          type: ADD_MESSAGE_ADD,\n          payload: 'error server'\n        });\n      } else {\n        if (error.request) {\n          var data = JSON.parse(error.request.response);\n          let respuesta = data.respuesta;\n          dispatch({\n            type: ADD_MESSAGE_ADD,\n            payload: respuesta\n          });\n        }\n      }\n    });\n  };\n} //MD_Lista comentarios\n\nexport function getListComments(token, id) {\n  const headers = {\n    'Content-Type': 'application/json',\n    'TokenAuto': desencriptar(token),\n    'Permiso': PERMIT_LIST_COMMENTS\n  };\n  return (dispatch, getState) => {\n    axios.get(`${URL_BASE}/proyectosESCOM-web/api/commentary/list/${id}`, {\n      headers: headers\n    }).then(response => {\n      dispatch({\n        type: GET_LIST_COMMENTS,\n        payload: response.data\n      });\n    }).catch(error => {\n      if (error.request.response === '') {\n        dispatch({\n          type: ADD_MESSAGE,\n          payload: 'error server'\n        });\n      } else {\n        if (error.request) {\n          var data = JSON.parse(error.request.response);\n          let respuesta = data.respuesta;\n\n          if (respuesta === 'Sin permiso') {\n            dispatch({\n              type: STATE_COMMENTARY,\n              payload: true\n            });\n          } else {\n            dispatch({\n              type: ADD_MESSAGE,\n              payload: respuesta\n            });\n          }\n        }\n      }\n    });\n  };\n} //MD_Lista comentarios\n\nexport function deleteCommentary(token, id) {\n  const headers = {\n    'Content-Type': 'application/json',\n    'TokenAuto': desencriptar(token),\n    'Permiso': PERMIT_DELETE_COMMENTARY\n  };\n  const requestData = {\n    'ip': localStorage.getItem('Ip'),\n    'token': desencriptar(token),\n    'operacion': PERMIT_DELETE_COMMENTARY\n  };\n  return (dispatch, getState) => {\n    axios.post(`${URL_BASE}/proyectosESCOM-web/api/commentary/delete/${id}`, requestData, {\n      headers: headers\n    }).then(response => {\n      dispatch({\n        type: DELETE_COMMENTARY,\n        payload: response.data.respuesta\n      });\n    }).catch(error => {\n      if (error.request.response === '') {\n        dispatch({\n          type: ADD_MESSAGE_DELETE,\n          payload: 'error server'\n        });\n      } else {\n        if (error.request) {\n          var data = JSON.parse(error.request.response);\n          let respuesta = data.respuesta;\n          dispatch({\n            type: ADD_MESSAGE_DELETE,\n            payload: respuesta\n          });\n        }\n      }\n    });\n  };\n}","map":{"version":3,"sources":["C:/Users/jeiso/Desktop/proyectosESCOM/frontend/ESCOM-view/src/ModuloDocumental/redux/actions/commentaryA.js"],"names":["axios","desencriptar","URL_BASE","ADD_COMMENTARY","GET_LIST_COMMENTS","DELETE_COMMENTARY","STATE_COMMENTARY","ADD_MESSAGE_ADD","ADD_MESSAGE_DELETE","ADD_MESSAGE","PERMIT_ADD_COMMENTARY","PERMIT_LIST_COMMENTS","PERMIT_DELETE_COMMENTARY","addMessageAdd","mensaje","dispatch","getState","type","addMessageDelete","addCommentary","token","commentaryN","headers","requestData","localStorage","getItem","post","then","response","payload","data","respuesta","catch","error","request","JSON","parse","getListComments","id","get","deleteCommentary"],"mappings":"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","sourcesContent":["import axios from 'axios';\r\nimport { desencriptar } from '../../../SuperAdministrador/componentes/general/Encriptar.js';\r\nimport { URL_BASE } from '../../../SuperAdministrador/utilitario/Configuracion.js';\r\n\r\nexport const ADD_COMMENTARY = 'ADD_COMMENTARY';\r\nexport const GET_LIST_COMMENTS = 'GET_LIST_COMMENTS';\r\nexport const DELETE_COMMENTARY = 'DELETE_COMMENTARY';\r\nexport const STATE_COMMENTARY = 'STATE_COMMENTARY';\r\n\r\nexport const ADD_MESSAGE_ADD = 'ADD_MESSAGE_ADD';\r\nexport const ADD_MESSAGE_DELETE = 'ADD_MESSAGE_DELETE';\r\nexport const ADD_MESSAGE = 'ADD_MESSAGE';\r\n\r\nconst PERMIT_ADD_COMMENTARY = 'MD_Prueba';\r\nconst PERMIT_LIST_COMMENTS = 'MD_Prueba';\r\nconst PERMIT_DELETE_COMMENTARY = 'MD_Prueba';\r\n\r\n\r\n\r\nexport function addMessageAdd(mensaje) {\r\n    return (dispatch, getState) => {\r\n        dispatch({\r\n            type: ADD_MESSAGE_ADD,\r\n            mensaje: mensaje\r\n        });\r\n    };\r\n}\r\n\r\nexport function addMessageDelete(mensaje) {\r\n    return (dispatch, getState) => {\r\n        dispatch({\r\n            type: ADD_MESSAGE_DELETE,\r\n            mensaje: mensaje\r\n        });\r\n    };\r\n}\r\n\r\n//MD_Agregar comentario\r\nexport function addCommentary(token, commentaryN) {\r\n    const headers = {\r\n        'Content-Type': 'application/json; charset= UTF-8',\r\n        'TokenAuto': desencriptar(token),\r\n        'Permiso': PERMIT_ADD_COMMENTARY\r\n    }\r\n    commentaryN.requestData = {\r\n        'ip': localStorage.getItem('Ip'),\r\n        'token': desencriptar(token),\r\n        'operacion': PERMIT_ADD_COMMENTARY\r\n    };\r\n    return (dispatch, getState) => {\r\n        axios.post(`${URL_BASE}/proyectosESCOM-web/api/commentary/add`, commentaryN, { headers: headers })\r\n            .then(response => {\r\n                dispatch({\r\n                    type: ADD_COMMENTARY,\r\n                    payload: response.data.respuesta\r\n                });\r\n            }).catch(error => {\r\n                if (error.request.response === '') {\r\n                    dispatch({\r\n                        type: ADD_MESSAGE_ADD,\r\n                        payload: 'error server'\r\n                    });\r\n                } else {\r\n                    if (error.request) {\r\n                        var data = JSON.parse(error.request.response);\r\n                        let respuesta = data.respuesta;\r\n                        dispatch({\r\n                            type: ADD_MESSAGE_ADD,\r\n                            payload: respuesta\r\n                        });\r\n                    }\r\n                }\r\n            });\r\n    }\r\n}\r\n\r\n\r\n//MD_Lista comentarios\r\nexport function getListComments(token, id) {\r\n    const headers = {\r\n        'Content-Type': 'application/json',\r\n        'TokenAuto': desencriptar(token),\r\n        'Permiso': PERMIT_LIST_COMMENTS\r\n    }\r\n    return (dispatch, getState) => {\r\n        axios.get(`${URL_BASE}/proyectosESCOM-web/api/commentary/list/${id}`, { headers: headers })\r\n            .then(response => {\r\n                dispatch({\r\n                    type: GET_LIST_COMMENTS,\r\n                    payload: response.data\r\n                });\r\n            }).catch(error => {\r\n                if (error.request.response === '') {\r\n                    dispatch({\r\n                        type: ADD_MESSAGE,\r\n                        payload: 'error server'\r\n                    });\r\n                } else {\r\n                    if (error.request) {\r\n                        var data = JSON.parse(error.request.response);\r\n                        let respuesta = data.respuesta;\r\n                        if (respuesta === 'Sin permiso') {\r\n                            dispatch({\r\n                                type: STATE_COMMENTARY,\r\n                                payload: true\r\n                            });\r\n                        } else {\r\n                            dispatch({\r\n                                type: ADD_MESSAGE,\r\n                                payload: respuesta\r\n                            });\r\n                        }\r\n                    }\r\n                }\r\n            });\r\n    }\r\n}\r\n\r\n//MD_Lista comentarios\r\nexport function deleteCommentary(token, id) {\r\n    const headers = {\r\n        'Content-Type': 'application/json',\r\n        'TokenAuto': desencriptar(token),\r\n        'Permiso': PERMIT_DELETE_COMMENTARY\r\n    }\r\n    const requestData = {\r\n        'ip': localStorage.getItem('Ip'),\r\n        'token': desencriptar(token),\r\n        'operacion': PERMIT_DELETE_COMMENTARY\r\n    };\r\n    return (dispatch, getState) => {\r\n        axios.post(`${URL_BASE}/proyectosESCOM-web/api/commentary/delete/${id}`, requestData, { headers: headers })\r\n            .then(response => {\r\n                dispatch({\r\n                    type: DELETE_COMMENTARY,\r\n                    payload: response.data.respuesta\r\n                });\r\n            }).catch(error => {\r\n                if (error.request.response === '') {\r\n                    dispatch({\r\n                        type: ADD_MESSAGE_DELETE,\r\n                        payload: 'error server'\r\n                    });\r\n                } else {\r\n                    if (error.request) {\r\n                        var data = JSON.parse(error.request.response);\r\n                        let respuesta = data.respuesta;\r\n                        dispatch({\r\n                            type: ADD_MESSAGE_DELETE,\r\n                            payload: respuesta\r\n                        });\r\n                    }\r\n                }\r\n            });\r\n    }\r\n}"]},"metadata":{},"sourceType":"module"}