{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\hashy\\\\Desktop\\\\proyectosESCOM\\\\frontend\\\\ESCOM-view\\\\src\\\\ModuloDocumental\\\\components\\\\Setting\\\\Document\\\\edit.js\";\nimport React from 'react';\nimport { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { reduxForm, Field } from 'redux-form';\nimport { withRouter } from 'react-router-dom';\nimport { getListPrograms } from '../../../redux/actions/programA.js';\nimport { editDocument } from '../../../redux/actions/documentA.js';\nimport { required, thousand, twoHundred, minimum, select } from '../../utilitarian/validations.js';\nimport { Button, Modal, ModalHeader, ModalBody, ModalFooter } from 'reactstrap';\n\nclass Edit extends Component {\n  constructor(...args) {\n    super(...args);\n\n    this.handleSubmit = formValues => {\n      let documentE = {\n        id: this.props.document.id,\n        description: formValues.description,\n        idUser: formValues.idUser,\n        state: this.props.document.state,\n        program: formValues.program,\n        type: formValues.type,\n        requestData: null\n      };\n      this.props.editDocument(localStorage.getItem('Token'), documentE);\n      this.props.history.push(\"/ListDocument\");\n    };\n\n    this.valor = this.props.modal;\n  }\n\n  componentWillMount() {\n    this.props.getListPrograms(localStorage.getItem('Token'));\n  }\n\n  loadProgram() {\n    return this.props.listProgram.map(program => {\n      return React.createElement(\"option\", {\n        value: program.id,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 34\n        },\n        __self: this\n      }, program.name);\n    });\n  }\n\n  loadUser() {\n    return React.createElement(\"option\", {\n      value: \"1\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 41\n      },\n      __self: this\n    }, \"Cristian Estevez\");\n  }\n\n  toggle() {\n    valor = !this.valor;\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 53\n      },\n      __self: this\n    }, React.createElement(Modal, {\n      isOpen: this.valor,\n      toggle: this.toggle,\n      className: \"\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 54\n      },\n      __self: this\n    }, React.createElement(ModalHeader, {\n      toggle: this.toggle,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 55\n      },\n      __self: this\n    }, \"Modal title\"), React.createElement(ModalBody, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 56\n      },\n      __self: this\n    }, \"Lorem ipsum dolor sit amet, consectetur adipisicing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat. Duis aute irure dolor in reprehenderit in voluptate velit esse cillum dolore eu fugiat nulla pariatur. Excepteur sint occaecat cupidatat non proident, sunt in culpa qui officia deserunt mollit anim id est laborum.\"), React.createElement(ModalFooter, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 59\n      },\n      __self: this\n    }, React.createElement(Button, {\n      color: \"primary\",\n      onClick: this.toggle,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 60\n      },\n      __self: this\n    }, \"Do Something\"), ' ', React.createElement(Button, {\n      color: \"secondary\",\n      onClick: this.toggle,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 61\n      },\n      __self: this\n    }, \"Cancel\"))));\n  }\n\n}\n\nconst generarInput = ({\n  input,\n  placeholder,\n  label,\n  type,\n  meta: {\n    touched,\n    warning,\n    error\n  }\n}) => React.createElement(\"div\", {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 131\n  },\n  __self: this\n}, React.createElement(\"div\", {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 132\n  },\n  __self: this\n}, React.createElement(\"input\", Object.assign({}, input, {\n  type: type,\n  className: \"form-control letra form-control-solid placeholder-no-fix\",\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 133\n  },\n  __self: this\n})), touched && (error && React.createElement(\"span\", {\n  className: \"text-danger letra form-group\",\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 134\n  },\n  __self: this\n}, error) || warning && React.createElement(\"span\", {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 134\n  },\n  __self: this\n}, warning))));\n\nconst generarText = ({\n  input,\n  placeholder,\n  label,\n  type,\n  meta: {\n    touched,\n    warning,\n    error\n  }\n}) => React.createElement(\"div\", {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 140\n  },\n  __self: this\n}, React.createElement(\"div\", {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 141\n  },\n  __self: this\n}, React.createElement(\"textarea\", Object.assign({}, input, {\n  className: \"form-control letra form-control-solid placeholder-no-fix\",\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 142\n  },\n  __self: this\n})), touched && (error && React.createElement(\"span\", {\n  className: \"text-danger letra form-group\",\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 143\n  },\n  __self: this\n}, error) || warning && React.createElement(\"span\", {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 143\n  },\n  __self: this\n}, warning))));\n\nfunction mapStateToProps(state) {\n  return {\n    listProgram: state.program.listProgramR,\n    document: state.document.documentR,\n    initialValues: {\n      description: state.document.documentR.description,\n      idUser: state.document.documentR.idUser,\n      program: state.document.documentR.program,\n      type: state.document.documentR.type\n    }\n  };\n}\n\nlet formEdit = reduxForm({\n  form: 'editDocument',\n  enableReinitialize: true\n})(Edit);\nexport default withRouter(connect(mapStateToProps, {\n  getListPrograms,\n  editDocument\n})(formEdit));","map":{"version":3,"sources":["C:/Users/hashy/Desktop/proyectosESCOM/frontend/ESCOM-view/src/ModuloDocumental/components/Setting/Document/edit.js"],"names":["React","Component","connect","reduxForm","Field","withRouter","getListPrograms","editDocument","required","thousand","twoHundred","minimum","select","Button","Modal","ModalHeader","ModalBody","ModalFooter","Edit","handleSubmit","formValues","documentE","id","props","document","description","idUser","state","program","type","requestData","localStorage","getItem","history","push","valor","modal","componentWillMount","loadProgram","listProgram","map","name","loadUser","toggle","render","generarInput","input","placeholder","label","meta","touched","warning","error","generarText","mapStateToProps","listProgramR","documentR","initialValues","formEdit","form","enableReinitialize"],"mappings":"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","sourcesContent":["import React from 'react';\r\nimport { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { reduxForm, Field } from 'redux-form';\r\nimport { withRouter } from 'react-router-dom';\r\nimport { getListPrograms } from '../../../redux/actions/programA.js';\r\nimport { editDocument } from '../../../redux/actions/documentA.js';\r\nimport { required, thousand, twoHundred, minimum, select } from '../../utilitarian/validations.js';\r\nimport { Button, Modal, ModalHeader, ModalBody, ModalFooter } from 'reactstrap';\r\n\r\nclass Edit extends Component {\r\n\r\n    componentWillMount() {\r\n        this.props.getListPrograms(localStorage.getItem('Token'))\r\n    }\r\n\r\n    handleSubmit = formValues => {\r\n        let documentE = {\r\n            id: this.props.document.id,\r\n            description: formValues.description,\r\n            idUser: formValues.idUser,\r\n            state: this.props.document.state,\r\n            program: formValues.program,\r\n            type: formValues.type,\r\n            requestData: null\r\n        }\r\n        this.props.editDocument(localStorage.getItem('Token'), documentE);\r\n        this.props.history.push(\"/ListDocument\");\r\n    }\r\n\r\n    loadProgram() {\r\n        return this.props.listProgram.map((program) => {\r\n            return (\r\n                <option value={program.id}>{program.name}</option>\r\n            )\r\n        })\r\n    }\r\n\r\n    loadUser() {\r\n        return (\r\n            <option value=\"1\">Cristian Estevez</option>\r\n        )\r\n    }\r\n\r\n    valor = this.props.modal;\r\n\r\n    toggle() {\r\n        valor = !this.valor;\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div >\r\n                <Modal isOpen={this.valor} toggle={this.toggle} className=\"\">\r\n                    <ModalHeader toggle={this.toggle}>Modal title</ModalHeader>\r\n                    <ModalBody>\r\n                        Lorem ipsum dolor sit amet, consectetur adipisicing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat. Duis aute irure dolor in reprehenderit in voluptate velit esse cillum dolore eu fugiat nulla pariatur. Excepteur sint occaecat cupidatat non proident, sunt in culpa qui officia deserunt mollit anim id est laborum.\r\n                    </ModalBody>\r\n                    <ModalFooter>\r\n                        <Button color=\"primary\" onClick={this.toggle}>Do Something</Button>{' '}\r\n                        <Button color=\"secondary\" onClick={this.toggle}>Cancel</Button>\r\n                    </ModalFooter>\r\n                </Modal>\r\n\r\n                {/*\r\n                <div class=\"modal fade\" id=\"editModal\" tabindex=\"-1\" role=\"dialog\" aria-labelledby=\"exampleModalLabel\" aria-hidden=\"true\">\r\n                    <div class=\"modal-dialog\" role=\"document\">\r\n                        <div class=\"modal-content\">\r\n                            <form className=\"form-horizontal\" onSubmit={this.props.handleSubmit(this.handleSubmit)}>\r\n                                <div class=\"modal-header\">\r\n                                    <h4 class=\"modal-title\" id=\"exampleModalLabel\">NUEVO DOCUMENTO</h4>\r\n                                    <button type=\"button\" class=\"close\" data-dismiss=\"modal\" aria-label=\"Close\">\r\n                                        <span aria-hidden=\"true\">&times;</span>\r\n                                    </button>\r\n                                </div>\r\n                                <div class=\"modal-body\">\r\n                                    <label for=\"form_control_1\">Programa academico: </label>\r\n                                    <div className=\"row\">\r\n                                        <div className=\"col-sm-8\">\r\n                                            <Field name=\"program\" validate={[select]} className=\"bs-select form-control\" component=\"select\">\r\n                                                <option selected value=\"0\">Seleccione...</option>\r\n                                                {this.loadProgram()}\r\n                                            </Field>\r\n                                        </div>\r\n                                    </div>\r\n                                    <br />\r\n\r\n                                    <label for=\"form_control_1\">Descripción: </label>\r\n                                    <div className=\"row\">\r\n                                        <div className=\"col-sm-8\">\r\n                                            <Field name=\"description\" validate={[required, thousand, minimum]} component={generarText} label=\"Denominación del programa\" />\r\n                                        </div>\r\n                                    </div>\r\n                                    <br />\r\n\r\n                                    <label for=\"form_control_1\">Usuario encargado: </label>\r\n                                    <div className=\"row\">\r\n                                        <div className=\"col-sm-8\">\r\n                                            <Field name=\"idUser\" validate={[select]} className=\"bs-select form-control\" component=\"select\">\r\n                                                <option selected value=\"0\">Seleccione...</option>\r\n                                                {this.loadUser()}\r\n                                            </Field>\r\n                                        </div>\r\n                                    </div>\r\n                                    <br />\r\n\r\n                                    <label for=\"form_control_1\">Tipo Documento: </label>\r\n                                    <div className=\"row\">\r\n                                        <div className=\"col-sm-8\">\r\n                                            <Field name=\"type\" validate={[required, twoHundred, minimum]} component={generarInput} label=\"Denominación del programa\" />\r\n                                        </div>\r\n\r\n                                    </div>\r\n                                </div>\r\n                                <div class=\"modal-footer\">\r\n                                    <button type=\"button\" class=\"btn btn-secondary\" data-dismiss=\"modal\">Cancelar</button>\r\n                                    <button type=\"submit\" className=\"btn btn-default naranja\">Guardar</button>\r\n\r\n                                </div>\r\n                            </form>\r\n                        </div>\r\n                    </div>\r\n                </div>*/}\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\n\r\nconst generarInput = ({ input, placeholder, label, type, meta: { touched, warning, error } }) => (\r\n    <div>\r\n        <div>\r\n            <input {...input} type={type} className=\"form-control letra form-control-solid placeholder-no-fix\" />\r\n            {touched && ((error && <span className=\"text-danger letra form-group\">{error}</span>) || (warning && <span>{warning}</span>))}\r\n        </div>\r\n    </div>\r\n)\r\n\r\nconst generarText = ({ input, placeholder, label, type, meta: { touched, warning, error } }) => (\r\n    <div>\r\n        <div>\r\n            <textarea {...input} className=\"form-control letra form-control-solid placeholder-no-fix\" />\r\n            {touched && ((error && <span className=\"text-danger letra form-group\">{error}</span>) || (warning && <span>{warning}</span>))}\r\n        </div>\r\n    </div>\r\n)\r\n\r\nfunction mapStateToProps(state) {\r\n    return {\r\n        listProgram: state.program.listProgramR,\r\n        document: state.document.documentR,\r\n        initialValues: {\r\n            description: state.document.documentR.description,\r\n            idUser: state.document.documentR.idUser,\r\n            program: state.document.documentR.program,\r\n            type: state.document.documentR.type\r\n        }\r\n    }\r\n}\r\n\r\nlet formEdit = reduxForm({\r\n    form: 'editDocument',\r\n    enableReinitialize: true\r\n})(Edit)\r\n\r\nexport default withRouter(connect(mapStateToProps, { getListPrograms, editDocument })(formEdit));"]},"metadata":{},"sourceType":"module"}