{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\jeiso\\\\Desktop\\\\proyectosESCOM\\\\frontend\\\\ESCOM-view\\\\src\\\\SuperAdministrador\\\\componentes\\\\editar\\\\editarModulo.js\";\nimport React from 'react'; //componentes\n\nimport Barra from '../general/BarraDirecciones';\nimport Button from '@material-ui/core/Button';\nimport { NotificationContainer, NotificationManager } from 'react-notifications';\nimport { withRouter } from 'react-router-dom';\nimport { campo, generarInput, generarTextArea } from '../../utilitario/GenerarInputs.js';\nimport PropTypes from \"prop-types\";\nimport { requerido, validacionCuarentaCaracteres, validacionDoscientosCaracteres } from '../../utilitario/validacionCampos.js';\nimport Alert from '@material-ui/lab/Alert';\nimport AlertTitle from '@material-ui/lab/AlertTitle';\nimport DoneOutlineIcon from '@material-ui/icons/DoneOutline';\nimport PhotoCamera from '@material-ui/icons/PhotoCamera';\nimport SaveAltIcon from '@material-ui/icons/SaveAlt';\nimport CancelIcon from '@material-ui/icons/Cancel';\nimport Divider from '@material-ui/core/Divider'; //redux\n\nimport { actionCargarInformacionDeModulo, actionEditarModulo, actionConsultarActividadesModulo, actualizarMensajeEditar } from '../../actions/actionsModulo.js';\nimport { connect } from \"react-redux\";\nimport { reduxForm, Field } from 'redux-form';\n\nclass EditarModulo extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      habilitado: false,\n      actividadesSeleccionadas: []\n    };\n\n    this.validateImageWeight = imageFile => {\n      if (imageFile && imageFile.size) {\n        const imageFileKb = imageFile.size / 1024;\n        const pesoMaximo = this.props.pesoMaximo;\n\n        if (imageFileKb > pesoMaximo) {\n          return `El tamaÃ±o de la imagen debe ser menor o igual a ${pesoMaximo}kb`;\n        }\n      }\n    };\n\n    this.validateImageWidth = imageFile => {\n      if (imageFile) {\n        const anchuraMaxima = this.props.anchuraMaxima;\n\n        if (imageFile.width > anchuraMaxima) {\n          return `El ancho de la imagen debe ser menor o igual a ${anchuraMaxima}px`;\n        }\n      }\n    };\n\n    this.validateImageHeight = imageFile => {\n      if (imageFile) {\n        const alturaMaxima = this.props.alturaMaxima;\n\n        if (imageFile.height > alturaMaxima) {\n          return `La altura de la imagen debe ser menor o igual a ${alturaMaxima}px`;\n        }\n      }\n    };\n\n    this.validateImageFormat = imageFile => {\n      if (imageFile) {\n        const tipoDeImagen = this.props.tipoDeImagen;\n\n        if (!tipoDeImagen.includes(imageFile.type)) {\n          return `El tipo de imagen debe ser ${tipoDeImagen}`;\n        }\n      }\n    };\n\n    this.handlePreview = imageUrl => {\n      const previewImageDom = document.querySelector(\".preview-image\");\n      previewImageDom.src = imageUrl;\n    };\n\n    this.handleChange = (event, input) => {\n      event.preventDefault();\n      let imageFile = event.target.files[0];\n      const tipoDeImagen = this.props.tipoDeImagen;\n\n      if (imageFile) {\n        if (!tipoDeImagen.includes(imageFile.type)) {\n          NotificationManager.error('Seleccione un archivo de imagen .jpg o .png');\n          event.target.value = null;\n        } else {\n          const localImageUrl = URL.createObjectURL(imageFile);\n          const imageObject = new window.Image();\n\n          imageObject.onload = () => {\n            imageFile.width = imageObject.naturalWidth;\n            imageFile.height = imageObject.naturalHeight;\n            input.onChange(imageFile);\n            URL.revokeObjectURL(imageFile);\n          };\n\n          imageObject.src = localImageUrl;\n          this.handlePreview(localImageUrl);\n        }\n      }\n    };\n\n    this.renderFileInput = ({\n      input,\n      type,\n      meta\n    }) => {\n      const tipoDeImagen = this.props.tipoDeImagen;\n      const touched = meta.touched,\n            error = meta.error,\n            warning = meta.warning;\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 117\n        },\n        __self: this\n      }, React.createElement(\"input\", {\n        id: \"numeroUno\",\n        style: {\n          display: 'none'\n        },\n        name: input.name,\n        type: type,\n        accept: tipoDeImagen,\n        onChange: event => this.handleChange(event, input),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 118\n        },\n        __self: this\n      }), React.createElement(\"label\", {\n        htmlFor: \"numeroUno\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 126\n        },\n        __self: this\n      }, React.createElement(Button, {\n        component: \"span\",\n        startIcon: React.createElement(PhotoCamera, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 127\n          },\n          __self: this\n        }),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 127\n        },\n        __self: this\n      }, \"Seleccionar imagen\")), touched && (error && React.createElement(\"span\", {\n        className: \"text-danger letra form-group\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 129\n        },\n        __self: this\n      }, error) || warning && React.createElement(\"span\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 129\n        },\n        __self: this\n      }, warning)));\n    };\n\n    this.handleSubmitForm = values => {\n      if (values.image === undefined | values.image === null) {\n        let modulo = {\n          nombreModulo: values.nombre,\n          descripcionModulo: values.descripcion,\n          imagenModulo: campo(this.props.initialValues.imagen),\n          estadoModulo: 'Activo'\n        };\n        this.props.actionEditarModulo(modulo, this.props.codigoModulo, localStorage.getItem('Token')); // this.props.actionAgregarModulo(modulo, localStorage.getItem('Token'));\n      } else {\n        this.getBase64(values.image, result => {\n          let modulo = {\n            nombreModulo: values.nombre,\n            descripcionModulo: values.descripcion,\n            imagenModulo: result,\n            estadoModulo: 'Activo'\n          };\n          this.props.actionEditarModulo(modulo, this.props.codigoModulo, localStorage.getItem('Token'));\n        });\n      }\n    };\n\n    this.onClickCancelar = event => {\n      event.preventDefault();\n      this.props.history.push('/adminModulo');\n    };\n  }\n\n  getBase64(file, cb) {\n    let reader = new FileReader();\n    reader.readAsDataURL(file);\n\n    reader.onload = function () {\n      cb(reader.result);\n    };\n\n    reader.onerror = function (error) {\n      console.log('Error: ', error);\n    };\n  }\n\n  componentDidUpdate() {\n    switch (this.props.mensajeEditar) {\n      case 'Sin permiso':\n        if (!this.state.habilitado) {\n          this.setState({\n            habilitado: true\n          });\n        }\n\n        ;\n        break;\n\n      case 'modulo editado':\n        NotificationManager.success('Informacion actualizada correctamente');\n        this.props.actionCargarInformacionDeModulo(this.props.codigoModulo, localStorage.getItem('Token'));\n        this.props.actualizarMensajeEditar('');\n        break;\n\n      default:\n        break;\n    }\n  }\n\n  componentDidMount() {\n    if (this.props.codigoModulo === undefined || this.props.codigoModulo.length === 0) {\n      this.props.history.push('/adminModulo');\n    } else {\n      this.props.actionCargarInformacionDeModulo(this.props.codigoModulo, localStorage.getItem('Token'));\n    }\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 203\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"text-left titulo\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 204\n      },\n      __self: this\n    }, React.createElement(\"h4\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 205\n      },\n      __self: this\n    }, \"Editar modulo\")), React.createElement(Barra, {\n      texto: \"Inicio > Editar modulo\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 207\n      },\n      __self: this\n    }), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 208\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      className: \"col-sm-12\",\n      style: {\n        paddingTop: \"0px\",\n        paddingRight: \"40px\",\n        paddingLeft: \"40px\",\n        paddingBottom: \"0px\",\n        margin: \"0px 0px 30px\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 209\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"container shadow\",\n      style: {\n        background: \"white\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 218\n      },\n      __self: this\n    }, React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 219\n      },\n      __self: this\n    }), this.state.habilitado ? React.createElement(\"div\", {\n      className: \"col-sm-12\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 221\n      },\n      __self: this\n    }, React.createElement(Alert, {\n      severity: \"error\",\n      variant: \"outlined\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 222\n      },\n      __self: this\n    }, React.createElement(AlertTitle, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 223\n      },\n      __self: this\n    }, \"Sin permiso\"), \"No tiene permisos suficientes para editar la informacion de los modulos\"), React.createElement(\"div\", {\n      style: {\n        padding: \"25px 44px 25px 395px\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 226\n      },\n      __self: this\n    }, React.createElement(Button, {\n      style: {\n        background: this.props.configuracion.botones,\n        fontSize: \"14px\",\n        fontFamily: \"sans-serif\",\n        textTransform: \"none\"\n      },\n      className: \"btn btn-dark\",\n      variant: \"contained\",\n      onClick: this.onClickCancelar,\n      startIcon: React.createElement(DoneOutlineIcon, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 227\n        },\n        __self: this\n      }),\n      type: \"submit\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 227\n      },\n      __self: this\n    }, \"Aceptar\"), '')) : React.createElement(React.Fragment, null, React.createElement(\"form\", {\n      className: \"letra\",\n      onSubmit: this.props.handleSubmit(this.handleSubmitForm),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 231\n      },\n      __self: this\n    }, React.createElement(\"table\", {\n      border: \"0px\",\n      style: {\n        width: \"100%\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 232\n      },\n      __self: this\n    }, React.createElement(\"tr\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 233\n      },\n      __self: this\n    }, React.createElement(\"td\", {\n      colspan: \"2\",\n      style: {\n        width: \"65%\",\n        paddingRight: \"39px\",\n        paddingLeft: \"39px\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 234\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"row\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 235\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"col-sm-12\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 236\n      },\n      __self: this\n    }, React.createElement(Field, {\n      name: \"nombre\",\n      validate: [requerido, validacionCuarentaCaracteres],\n      component: generarInput,\n      label: \"Nombre\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 238\n      },\n      __self: this\n    })))), React.createElement(\"td\", {\n      colspan: \"2\",\n      rowspan: \"2\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 242\n      },\n      __self: this\n    }, React.createElement(\"label\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 243\n      },\n      __self: this\n    }, \"Imagen\"), React.createElement(\"div\", {\n      style: {\n        padding: \"30px 30px 30px 77px\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 244\n      },\n      __self: this\n    }, React.createElement(\"img\", {\n      src: campo(this.props.initialValues.imagen),\n      alt: \"preview\",\n      className: \"preview-image\",\n      style: {\n        height: \"200px\",\n        width: \"200px\",\n        borderRadius: \"50%\",\n        objectFit: \"cover\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 245\n      },\n      __self: this\n    })), React.createElement(Field, {\n      name: \"image\",\n      type: \"file\",\n      validate: [this.validateImageWeight],\n      component: this.renderFileInput,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 249\n      },\n      __self: this\n    }))), React.createElement(\"tr\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 259\n      },\n      __self: this\n    }, React.createElement(\"td\", {\n      colspan: \"2\",\n      style: {\n        width: \"65%\",\n        paddingRight: \"39px\",\n        paddingLeft: \"39px\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 260\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"row\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 261\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"col-sm-12\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 262\n      },\n      __self: this\n    }, React.createElement(Field, {\n      name: \"descripcion\",\n      validate: [requerido, validacionDoscientosCaracteres],\n      component: generarTextArea,\n      filas: 10,\n      label: \"Apellido\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 263\n      },\n      __self: this\n    })))))), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 269\n      },\n      __self: this\n    }), React.createElement(Divider, {\n      variant: \"middle\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 270\n      },\n      __self: this\n    }), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 271\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      className: \"row\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 272\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"col-md-6\",\n      style: {\n        paddingLeft: \"334px\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 273\n      },\n      __self: this\n    }, React.createElement(Button, {\n      type: \"submit\",\n      startIcon: React.createElement(SaveAltIcon, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 276\n        },\n        __self: this\n      }),\n      className: \"btn btn-dark\",\n      style: {\n        background: this.props.configuracion.botones,\n        fontSize: \"14px\",\n        textTransform: \"none\"\n      },\n      variant: \"contained\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 274\n      },\n      __self: this\n    }, \"Guardar\")), React.createElement(\"div\", {\n      className: \"col-md-6\",\n      style: {\n        paddingLeft: \"0px\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 283\n      },\n      __self: this\n    }, React.createElement(Button, {\n      startIcon: React.createElement(CancelIcon, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 284\n        },\n        __self: this\n      }),\n      style: fondoBotonCancelar,\n      variant: \"contained\",\n      className: \"btn btn-dark\",\n      onClick: this.onClickCancelar,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 284\n      },\n      __self: this\n    }, \"Salir\")))), React.createElement(NotificationContainer, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 292\n      },\n      __self: this\n    })), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 295\n      },\n      __self: this\n    }))));\n  }\n\n}\n\nEditarModulo.propTypes = {\n  previewLogoUrl: PropTypes.string,\n  tipoDeImagen: PropTypes.string,\n  pesoMaximo: PropTypes.number,\n  anchuraMaxima: PropTypes.number,\n  alturaMaxima: PropTypes.number,\n  handleSubmit: PropTypes.func.isRequired\n};\nEditarModulo.defaultProps = {\n  previewLogoUrl: \"https://imgplaceholder.com/400x300\",\n  tipoDeImagen: \"image/jpeg, image/png\",\n  pesoMaximo: 100,\n  anchuraMaxima: 100,\n  alturaMaxima: 100\n};\nconst fondoBotonCancelar = {\n  background: \"gray\",\n  fontSize: \"14px\",\n  fontFamily: \"sans-serif\",\n  textTransform: \"none\"\n};\n\nfunction mapStateToProps(state) {\n  return {\n    codigoModulo: state.mod.codigoModulo,\n    mensajeEditar: state.mod.mensajeEditarModulo,\n    configuracion: state.conf.configuracion,\n    initialValues: {\n      nombre: state.mod.moduloEditar.nombreModulo,\n      descripcion: state.mod.moduloEditar.descripcionModulo,\n      imagen: state.mod.moduloEditar.imagenModulo\n    }\n  };\n}\n\nlet formularioEditar = reduxForm({\n  form: 'editarModulo',\n  enableReinitialize: true\n})(EditarModulo);\nexport default withRouter(connect(mapStateToProps, {\n  actionCargarInformacionDeModulo,\n  actionEditarModulo,\n  actionConsultarActividadesModulo,\n  actualizarMensajeEditar\n})(formularioEditar));","map":{"version":3,"sources":["C:/Users/jeiso/Desktop/proyectosESCOM/frontend/ESCOM-view/src/SuperAdministrador/componentes/editar/editarModulo.js"],"names":["React","Barra","Button","NotificationContainer","NotificationManager","withRouter","campo","generarInput","generarTextArea","PropTypes","requerido","validacionCuarentaCaracteres","validacionDoscientosCaracteres","Alert","AlertTitle","DoneOutlineIcon","PhotoCamera","SaveAltIcon","CancelIcon","Divider","actionCargarInformacionDeModulo","actionEditarModulo","actionConsultarActividadesModulo","actualizarMensajeEditar","connect","reduxForm","Field","EditarModulo","Component","state","habilitado","actividadesSeleccionadas","validateImageWeight","imageFile","size","imageFileKb","pesoMaximo","props","validateImageWidth","anchuraMaxima","width","validateImageHeight","alturaMaxima","height","validateImageFormat","tipoDeImagen","includes","type","handlePreview","imageUrl","previewImageDom","document","querySelector","src","handleChange","event","input","preventDefault","target","files","error","value","localImageUrl","URL","createObjectURL","imageObject","window","Image","onload","naturalWidth","naturalHeight","onChange","revokeObjectURL","renderFileInput","meta","touched","warning","display","name","handleSubmitForm","values","image","undefined","modulo","nombreModulo","nombre","descripcionModulo","descripcion","imagenModulo","initialValues","imagen","estadoModulo","codigoModulo","localStorage","getItem","getBase64","result","onClickCancelar","history","push","file","cb","reader","FileReader","readAsDataURL","onerror","console","log","componentDidUpdate","mensajeEditar","setState","success","componentDidMount","length","render","paddingTop","paddingRight","paddingLeft","paddingBottom","margin","background","padding","configuracion","botones","fontSize","fontFamily","textTransform","handleSubmit","borderRadius","objectFit","fondoBotonCancelar","propTypes","previewLogoUrl","string","number","func","isRequired","defaultProps","mapStateToProps","mod","mensajeEditarModulo","conf","moduloEditar","formularioEditar","form","enableReinitialize"],"mappings":"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","sourcesContent":["import React from 'react';\r\n\r\n//componentes\r\nimport Barra from '../general/BarraDirecciones';\r\nimport Button from '@material-ui/core/Button';\r\nimport { NotificationContainer, NotificationManager } from 'react-notifications';\r\nimport { withRouter } from 'react-router-dom';\r\nimport { campo, generarInput,generarTextArea } from '../../utilitario/GenerarInputs.js';\r\nimport PropTypes from \"prop-types\";\r\nimport { requerido, validacionCuarentaCaracteres, validacionDoscientosCaracteres } from '../../utilitario/validacionCampos.js';\r\nimport Alert from '@material-ui/lab/Alert';\r\nimport AlertTitle from '@material-ui/lab/AlertTitle';\r\nimport DoneOutlineIcon from '@material-ui/icons/DoneOutline';\r\nimport PhotoCamera from '@material-ui/icons/PhotoCamera';\r\nimport SaveAltIcon from '@material-ui/icons/SaveAlt';\r\nimport CancelIcon from '@material-ui/icons/Cancel';\r\nimport Divider from '@material-ui/core/Divider';\r\n\r\n\r\n//redux\r\nimport { actionCargarInformacionDeModulo, actionEditarModulo, actionConsultarActividadesModulo, actualizarMensajeEditar } from '../../actions/actionsModulo.js'\r\nimport { connect } from \"react-redux\";\r\nimport { reduxForm, Field } from 'redux-form';\r\n\r\n\r\nclass EditarModulo extends React.Component {\r\n\r\n    state = {\r\n        habilitado: false,\r\n        actividadesSeleccionadas: []\r\n    }\r\n\r\n\r\n    static propTypes = {\r\n        previewLogoUrl: PropTypes.string,\r\n        tipoDeImagen: PropTypes.string,\r\n        pesoMaximo: PropTypes.number,\r\n        anchuraMaxima: PropTypes.number,\r\n        alturaMaxima: PropTypes.number,\r\n        handleSubmit: PropTypes.func.isRequired\r\n    };\r\n    static defaultProps = {\r\n        previewLogoUrl: \"https://imgplaceholder.com/400x300\",\r\n        tipoDeImagen: \"image/jpeg, image/png\",\r\n        pesoMaximo: 100,\r\n        anchuraMaxima: 100,\r\n        alturaMaxima: 100\r\n    };\r\n    validateImageWeight = imageFile => {\r\n        if (imageFile && imageFile.size) {\r\n            const imageFileKb = imageFile.size / 1024;\r\n            const { pesoMaximo } = this.props;\r\n\r\n            if (imageFileKb > pesoMaximo) {\r\n                return `El tamaÃ±o de la imagen debe ser menor o igual a ${pesoMaximo}kb`;\r\n            }\r\n        }\r\n    };\r\n    validateImageWidth = imageFile => {\r\n        if (imageFile) {\r\n            const { anchuraMaxima } = this.props;\r\n            if (imageFile.width > anchuraMaxima) {\r\n                return `El ancho de la imagen debe ser menor o igual a ${anchuraMaxima}px`;\r\n            }\r\n        }\r\n    };\r\n    validateImageHeight = imageFile => {\r\n        if (imageFile) {\r\n            const { alturaMaxima } = this.props;\r\n\r\n            if (imageFile.height > alturaMaxima) {\r\n                return `La altura de la imagen debe ser menor o igual a ${alturaMaxima}px`;\r\n            }\r\n        }\r\n    };\r\n    validateImageFormat = imageFile => {\r\n        if (imageFile) {\r\n            const { tipoDeImagen } = this.props;\r\n            if (!tipoDeImagen.includes(imageFile.type)) {\r\n                return `El tipo de imagen debe ser ${tipoDeImagen}`;\r\n            }\r\n        }\r\n    };\r\n    handlePreview = imageUrl => {\r\n        const previewImageDom = document.querySelector(\".preview-image\");\r\n        previewImageDom.src = imageUrl;\r\n    };\r\n\r\n    handleChange = (event, input) => {\r\n        event.preventDefault();\r\n        let imageFile = event.target.files[0];\r\n        const { tipoDeImagen } = this.props;\r\n        if (imageFile) {\r\n            if (!tipoDeImagen.includes(imageFile.type)) {\r\n                NotificationManager.error('Seleccione un archivo de imagen .jpg o .png');\r\n                event.target.value = null;\r\n            } else {\r\n                const localImageUrl = URL.createObjectURL(imageFile);\r\n                const imageObject = new window.Image();\r\n\r\n                imageObject.onload = () => {\r\n                    imageFile.width = imageObject.naturalWidth;\r\n                    imageFile.height = imageObject.naturalHeight;\r\n                    input.onChange(imageFile);\r\n                    URL.revokeObjectURL(imageFile);\r\n                };\r\n                imageObject.src = localImageUrl;\r\n                this.handlePreview(localImageUrl);\r\n            }\r\n        }\r\n    };\r\n\r\n    renderFileInput = ({ input, type, meta }) => {\r\n        const { tipoDeImagen } = this.props;\r\n        const { touched, error, warning } = meta;\r\n        return (\r\n            <div>\r\n                <input\r\n                    id=\"numeroUno\"\r\n                    style={{ display: 'none' }}\r\n                    name={input.name}\r\n                    type={type}\r\n                    accept={tipoDeImagen}\r\n                    onChange={event => this.handleChange(event, input)}\r\n                />\r\n                <label htmlFor=\"numeroUno\">\r\n                    <Button component=\"span\" startIcon={<PhotoCamera />}>Seleccionar imagen</Button>\r\n                </label>\r\n                {touched && ((error && <span className=\"text-danger letra form-group\">{error}</span>) || (warning && <span>{warning}</span>))}\r\n            </div>\r\n        );\r\n    };\r\n\r\n\r\n    handleSubmitForm = values => {\r\n        if (values.image === undefined | values.image === null) {\r\n            let modulo = {\r\n                nombreModulo: values.nombre,\r\n                descripcionModulo: values.descripcion,\r\n                imagenModulo: campo(this.props.initialValues.imagen),\r\n                estadoModulo: 'Activo'\r\n            }\r\n            this.props.actionEditarModulo(modulo, this.props.codigoModulo, localStorage.getItem('Token'));\r\n            // this.props.actionAgregarModulo(modulo, localStorage.getItem('Token'));\r\n        } else {\r\n            this.getBase64(values.image, (result) => {\r\n                let modulo = {\r\n                    nombreModulo: values.nombre,\r\n                    descripcionModulo: values.descripcion,\r\n                    imagenModulo: result,\r\n                    estadoModulo: 'Activo'\r\n                }\r\n                this.props.actionEditarModulo(modulo, this.props.codigoModulo, localStorage.getItem('Token'));\r\n            });\r\n        }\r\n    };\r\n\r\n\r\n\r\n\r\n    getBase64(file, cb) {\r\n        let reader = new FileReader();\r\n        reader.readAsDataURL(file);\r\n        reader.onload = function () {\r\n            cb(reader.result)\r\n        };\r\n        reader.onerror = function (error) {\r\n            console.log('Error: ', error);\r\n        };\r\n    }\r\n\r\n    componentDidUpdate() {\r\n        switch (this.props.mensajeEditar) {\r\n            case 'Sin permiso':\r\n                if (!this.state.habilitado) { this.setState({ habilitado: true }) };\r\n                break;\r\n            case 'modulo editado':\r\n                NotificationManager.success('Informacion actualizada correctamente');\r\n                this.props.actionCargarInformacionDeModulo(this.props.codigoModulo, localStorage.getItem('Token'));\r\n                this.props.actualizarMensajeEditar('');\r\n                break;\r\n            default:\r\n                break;\r\n        }\r\n    }\r\n\r\n    componentDidMount() {\r\n        if (this.props.codigoModulo === undefined || this.props.codigoModulo.length === 0) {\r\n            this.props.history.push('/adminModulo');\r\n        } else {\r\n            this.props.actionCargarInformacionDeModulo(this.props.codigoModulo, localStorage.getItem('Token'));\r\n        }\r\n    }\r\n\r\n\r\n    onClickCancelar = (event) => {\r\n        event.preventDefault();\r\n        this.props.history.push('/adminModulo');\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                <div className=\"text-left titulo\">\r\n                    <h4>Editar modulo</h4>\r\n                </div>\r\n                <Barra texto=\"Inicio > Editar modulo\" />\r\n                <br />\r\n                <div className=\"col-sm-12\" style={{\r\n                    paddingTop: \"0px\",\r\n                    paddingRight: \"40px\",\r\n                    paddingLeft: \"40px\",\r\n                    paddingBottom: \"0px\",\r\n                    margin: \"0px 0px 30px\"\r\n\r\n                }}>\r\n\r\n                    <div className=\"container shadow\" style={{ background: \"white\" }}>\r\n                        <br />\r\n                        {\r\n                            this.state.habilitado ? <div className=\"col-sm-12\">\r\n                                <Alert severity=\"error\" variant=\"outlined\">\r\n                                    <AlertTitle>Sin permiso</AlertTitle>\r\n                                    No tiene permisos suficientes para editar la informacion de los modulos\r\n                                </Alert>\r\n                                <div style={{ padding: \"25px 44px 25px 395px\" }}>\r\n                                    <Button style={{ background: this.props.configuracion.botones, fontSize: \"14px\", fontFamily: \"sans-serif\", textTransform: \"none\" }} className=\"btn btn-dark\" variant=\"contained\" onClick={this.onClickCancelar} startIcon={<DoneOutlineIcon />} type=\"submit\">Aceptar</Button>{''}\r\n                                </div>\r\n                            </div> :\r\n                                <>\r\n                                    <form className=\"letra\" onSubmit={this.props.handleSubmit(this.handleSubmitForm)}>\r\n                                        <table border=\"0px\" style={{ width: \"100%\" }}>\r\n                                            <tr>\r\n                                                <td colspan=\"2\" style={{ width: \"65%\", paddingRight: \"39px\", paddingLeft: \"39px\" }}>\r\n                                                    <div className=\"row\">\r\n                                                        <div className=\"col-sm-12\">\r\n                                                            \r\n                                                            <Field name=\"nombre\" validate={[requerido, validacionCuarentaCaracteres]} component={generarInput} label=\"Nombre\" />\r\n                                                        </div>\r\n                                                    </div>\r\n                                                </td>\r\n                                                <td colspan=\"2\" rowspan=\"2\">\r\n                                                    <label>Imagen</label>\r\n                                                    <div style={{ padding: \"30px 30px 30px 77px\" }}>\r\n                                                        <img src={campo(this.props.initialValues.imagen)} alt=\"preview\"\r\n                                                            className=\"preview-image\"\r\n                                                            style={{ height: \"200px\", width: \"200px\", borderRadius: \"50%\", objectFit: \"cover\" }} />\r\n                                                    </div>\r\n                                                    <Field\r\n                                                        name=\"image\"\r\n                                                        type=\"file\"\r\n                                                        validate={[\r\n                                                            this.validateImageWeight\r\n                                                        ]}\r\n                                                        component={this.renderFileInput}\r\n                                                    />\r\n                                                </td>\r\n                                            </tr>\r\n                                            <tr>\r\n                                                <td colspan=\"2\" style={{ width: \"65%\", paddingRight: \"39px\", paddingLeft: \"39px\" }}>\r\n                                                    <div className=\"row\">\r\n                                                        <div className=\"col-sm-12\">\r\n                                                            <Field name=\"descripcion\" validate={[requerido, validacionDoscientosCaracteres]} component={generarTextArea} filas={10} label=\"Apellido\" />\r\n                                                        </div>\r\n                                                    </div>\r\n                                                </td>\r\n                                            </tr>\r\n                                        </table>\r\n                                        <br />\r\n                                        <Divider variant=\"middle\" />\r\n                                        <br />\r\n                                        <div className=\"row\">\r\n                                            <div className=\"col-md-6\" style={{ paddingLeft: \"334px\" }}>\r\n                                                <Button\r\n                                                    type=\"submit\"\r\n                                                    startIcon={<SaveAltIcon />}\r\n                                                    className=\"btn btn-dark\"\r\n                                                    style={{ background: this.props.configuracion.botones, fontSize: \"14px\", textTransform: \"none\" }}\r\n                                                    variant=\"contained\">\r\n                                                    Guardar\r\n                                        </Button>\r\n                                            </div>\r\n                                            <div className=\"col-md-6\" style={{ paddingLeft: \"0px\" }}>\r\n                                                <Button startIcon={<CancelIcon />}\r\n                                                    style={fondoBotonCancelar}\r\n                                                    variant=\"contained\"\r\n                                                    className=\"btn btn-dark\"\r\n                                                    onClick={this.onClickCancelar}>Salir</Button>\r\n                                            </div>\r\n                                        </div>\r\n                                    </form>\r\n                                    <NotificationContainer />\r\n                                </>\r\n                        }\r\n                        <br />\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nconst fondoBotonCancelar = {\r\n    background: \"gray\",\r\n    fontSize: \"14px\",\r\n    fontFamily: \"sans-serif\",\r\n    textTransform: \"none\"\r\n\r\n}\r\n\r\nfunction mapStateToProps(state) {\r\n    return {\r\n        codigoModulo: state.mod.codigoModulo,\r\n        mensajeEditar: state.mod.mensajeEditarModulo,\r\n        configuracion: state.conf.configuracion,\r\n        initialValues: {\r\n            nombre: state.mod.moduloEditar.nombreModulo,\r\n            descripcion: state.mod.moduloEditar.descripcionModulo,\r\n            imagen: state.mod.moduloEditar.imagenModulo,\r\n        }\r\n    }\r\n}\r\n\r\n\r\nlet formularioEditar = reduxForm({\r\n    form: 'editarModulo',\r\n    enableReinitialize: true\r\n})(EditarModulo)\r\n\r\nexport default withRouter(connect(mapStateToProps, { actionCargarInformacionDeModulo, actionEditarModulo, actionConsultarActividadesModulo, actualizarMensajeEditar })(formularioEditar));\r\n\r\n"]},"metadata":{},"sourceType":"module"}