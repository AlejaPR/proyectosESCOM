{"ast":null,"code":"import axios from 'axios';\nimport { desencriptar } from '../componentes/general/Encriptar.js';\nimport { mensajesDeError } from '../utilitario/MensajesError.js';\nexport const MOSTRAR_ACTIVIDADES = 'MOSTRAR_ACTIVIDADES';\nexport const ESTADO_ACTIVIDADES = 'ESTADO_ACTIVIDADES';\nexport const AGREGAR_ACTIVIDAD = 'AGREGAR_ACTIVIDAD';\nexport const EDITAR_USUARIO = \"EDITAR_USUARIO\";\nexport const MENSAJE_REGISTRAR = 'MENSAJE_REGISTRAR';\nexport const MENSAJE_SUSPENDER = 'MENSAJE_SUSPENDER';\nexport const MODULOS_REGISTRADOS = 'MODULOS_REGISTRADOS';\nexport const ACTUALIZAR_ACTIVIDADES = 'ACTUALIZAR_ACTIVIDADES';\nexport const ANADIR_CODIGO_EDITAR = 'ANADIR_CODIGO_EDITAR';\nexport const INFORMACION_ACTIVIDAD = 'INFORMACION_ACTIVIDAD';\nexport const MENSAJE_EDITAR = 'MENSAJE_EDITAR';\nexport const EDITAR_ACTIVIDAD = 'EDITAR_ACTIVIDAD';\nexport function actionAsignarCodigoActividad(codigoActividad) {\n  return (dispatch, getState) => {\n    dispatch({\n      type: ANADIR_CODIGO_EDITAR,\n      codigo: codigoActividad\n    });\n  };\n}\nexport function actualizarMensajeRegistrar(mensaje) {\n  return (dispatch, getState) => {\n    dispatch({\n      type: MENSAJE_REGISTRAR,\n      mensaje: mensaje\n    });\n  };\n}\nexport function actualizarMensajeEditar(mensaje) {\n  return (dispatch, getState) => {\n    dispatch({\n      type: MENSAJE_EDITAR,\n      mensaje: mensaje\n    });\n  };\n}\nexport function actualizarMensajeSuspender(mensaje) {\n  return (dispatch, getState) => {\n    dispatch({\n      type: MENSAJE_SUSPENDER,\n      mensaje: mensaje\n    });\n  };\n}\nexport function actionConsultarActividades(token) {\n  var tokenRequest = desencriptar(token);\n  const headers = {\n    'Content-Type': 'application/json',\n    'TokenAuto': tokenRequest,\n    'Permiso': 'sa_Consultar actividades registradas'\n  };\n  return (dispatch, getState) => {\n    axios.get(\"http://localhost:9090/proyectosESCOM-web/api/actividad/listarActividades\", {\n      headers: headers\n    }).then(response => {\n      dispatch({\n        type: MOSTRAR_ACTIVIDADES,\n        respuesta: response.data\n      });\n    }).catch(error => {\n      if (error.request.response === '') {} else {\n        if (error.request) {\n          var o = JSON.parse(error.request.response);\n          let respuesta = mensajesDeError(o.respuesta);\n\n          if (respuesta === 'Sin permiso') {\n            dispatch({\n              type: ESTADO_ACTIVIDADES,\n              estado: true\n            });\n          } else {//\n          }\n        }\n      }\n    });\n  };\n}\nexport function actionAgregarActividad(actividad, token) {\n  var tokenRequest = desencriptar(token);\n  const headers = {\n    'Content-Type': 'application/json',\n    'TokenAuto': tokenRequest,\n    'Permiso': 'sa_Registrar actividad'\n  };\n  return (dispatch, getState) => {\n    axios.post(\"http://localhost:9090/proyectosESCOM-web/api/actividad/registrarActividad\", actividad, {\n      headers: headers\n    }).then(response => {\n      debugger;\n      dispatch({\n        type: AGREGAR_ACTIVIDAD,\n        actividadARegistrar: actividad\n      });\n      dispatch({\n        type: MENSAJE_REGISTRAR,\n        mensaje: 'actividad registrada'\n      });\n    }).catch(error => {\n      debugger;\n\n      if (error.request.response === '') {\n        dispatch({\n          type: MENSAJE_REGISTRAR,\n          mensaje: 'Servidor fuera de servicio temporalmente'\n        });\n      } else {\n        if (error.request) {\n          var o = JSON.parse(error.request.response);\n          let respuesta = mensajesDeError(o.respuesta);\n\n          if (respuesta !== '') {\n            dispatch({\n              type: MENSAJE_REGISTRAR,\n              mensaje: respuesta\n            });\n          } else {\n            dispatch({\n              type: MENSAJE_REGISTRAR,\n              mensaje: 'Ya existen los datos registrados previamente'\n            });\n          }\n        }\n      }\n    });\n  };\n}\nexport function actionConsultarModulos(token) {\n  var tokenRequest = desencriptar(token);\n  const headers = {\n    'Content-Type': 'application/json',\n    'TokenAuto': tokenRequest,\n    'Permiso': 'sa_Consultar actividades registradas'\n  };\n  return (dispatch, getState) => {\n    axios.get(\"http://localhost:9090/proyectosESCOM-web/api/modulo/listarModulos\", {\n      headers: headers\n    }).then(response => {\n      dispatch({\n        type: MODULOS_REGISTRADOS,\n        respuesta: response.data\n      });\n    }).catch(error => {\n      if (error.request.response === '') {} else {\n        if (error.request) {\n          var o = JSON.parse(error.request.response);\n          let respuesta = mensajesDeError(o.respuesta);\n\n          if (respuesta === 'Sin permiso') {\n            dispatch({\n              type: ESTADO_ACTIVIDADES,\n              estado: true\n            });\n          } else {//\n          }\n        }\n      }\n    });\n  };\n}\nexport function actionSuspenderActivarActividad(codigoActividad, token, actualizados) {\n  var tokenRequest = desencriptar(token);\n  const headers = {\n    'Content-Type': 'application/json',\n    'TokenAuto': tokenRequest,\n    'Permiso': 'sa_Suspender/activar actividades de modulos'\n  };\n  return (dispatch, getState) => {\n    axios.get(\"http://localhost:9090/proyectosESCOM-web/api/actividad/cambiarEstadoActividad/\" + codigoActividad, {\n      headers: headers\n    }).then(response => {\n      dispatch({\n        type: MENSAJE_SUSPENDER,\n        mensaje: 'Operacion hecha con exito'\n      });\n      dispatch({\n        type: ACTUALIZAR_ACTIVIDADES,\n        actividad: actualizados\n      });\n    }).catch(error => {\n      console.log(error);\n\n      if (error.request.response === '') {\n        dispatch({\n          type: MENSAJE_SUSPENDER,\n          mensaje: 'Servidor fuera de servicio temporalmente'\n        });\n      } else {\n        if (error.request) {\n          var o = JSON.parse(error.request.response);\n          let respuesta = mensajesDeError(o.respuesta);\n\n          if (respuesta !== '') {\n            dispatch({\n              type: MENSAJE_SUSPENDER,\n              mensaje: respuesta\n            });\n          } else {\n            dispatch({\n              type: MENSAJE_SUSPENDER,\n              mensaje: 'Sin acceso al servicio'\n            });\n          }\n        }\n      }\n    });\n  };\n}\nexport function actionCargarInformacionDeActividad(codigoActividad, token) {\n  const headers = {\n    'Content-Type': 'application/json',\n    'TokenAuto': desencriptar(token),\n    'Permiso': 'sa_Editar informacion de la actividad'\n  };\n  return (dispatch, getState) => {\n    axios.get(\"http://localhost:9090/proyectosESCOM-web/api/actividad/listarActividadEspecifica/\" + codigoActividad, {\n      headers: headers\n    }).then(response => {\n      dispatch({\n        type: INFORMACION_ACTIVIDAD,\n        informacionActividad: response.data\n      });\n    }).catch(error => {\n      if (error.request.response === '') {\n        dispatch({\n          type: MENSAJE_EDITAR,\n          mensaje: 'Servidor fuera de servicio temporalmente'\n        });\n      } else {\n        if (error.request) {\n          var o = JSON.parse(error.request.response);\n          let respuesta = mensajesDeError(o.respuesta);\n\n          if (respuesta !== '') {\n            dispatch({\n              type: MENSAJE_EDITAR,\n              mensaje: respuesta\n            });\n          } else {\n            dispatch({\n              type: MENSAJE_EDITAR,\n              mensaje: 'Sin acceso al servicio'\n            });\n          }\n        }\n      }\n    });\n  };\n}\nexport function actionEditarUsuario(actividad, token) {\n  const headers = {\n    'Content-Type': 'application/json',\n    'TokenAuto': desencriptar(token),\n    'Permiso': 'sa_Editar informacion de la actividad'\n  };\n  return (dispatch, getState) => {\n    axios.put(\"http://localhost:9090/proyectosESCOM-web/api/actividad/editarActividad\", actividad, {\n      headers: headers\n    }).then(response => {\n      dispatch({\n        type: EDITAR_ACTIVIDAD,\n        informacionActividad: actividad\n      });\n      dispatch({\n        type: MENSAJE_EDITAR,\n        mensaje: 'Modificado'\n      });\n    }).catch(error => {\n      if (error.request.response === '') {\n        dispatch({\n          type: MENSAJE_EDITAR,\n          mensaje: 'Servidor fuera de servicio temporalmente'\n        });\n      } else {\n        if (error.request) {\n          var o = JSON.parse(error.request.response);\n          let respuesta = mensajesDeError(o.respuesta);\n\n          if (respuesta !== '') {\n            dispatch({\n              type: MENSAJE_EDITAR,\n              mensaje: respuesta\n            });\n          } else {\n            dispatch({\n              type: MENSAJE_EDITAR,\n              mensaje: 'Ya existen los datos registrados previamente'\n            });\n          }\n        }\n      }\n    });\n  };\n}","map":{"version":3,"sources":["C:/Users/jeiso/Desktop/proyectosESCOM/frontend/ESCOM-view/src/SuperAdministrador/actions/actionActividad.js"],"names":["axios","desencriptar","mensajesDeError","MOSTRAR_ACTIVIDADES","ESTADO_ACTIVIDADES","AGREGAR_ACTIVIDAD","EDITAR_USUARIO","MENSAJE_REGISTRAR","MENSAJE_SUSPENDER","MODULOS_REGISTRADOS","ACTUALIZAR_ACTIVIDADES","ANADIR_CODIGO_EDITAR","INFORMACION_ACTIVIDAD","MENSAJE_EDITAR","EDITAR_ACTIVIDAD","actionAsignarCodigoActividad","codigoActividad","dispatch","getState","type","codigo","actualizarMensajeRegistrar","mensaje","actualizarMensajeEditar","actualizarMensajeSuspender","actionConsultarActividades","token","tokenRequest","headers","get","then","response","respuesta","data","catch","error","request","o","JSON","parse","estado","actionAgregarActividad","actividad","post","actividadARegistrar","actionConsultarModulos","actionSuspenderActivarActividad","actualizados","console","log","actionCargarInformacionDeActividad","informacionActividad","actionEditarUsuario","put"],"mappings":"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","sourcesContent":["import axios from 'axios';\r\nimport {desencriptar } from '../componentes/general/Encriptar.js';\r\nimport {mensajesDeError} from '../utilitario/MensajesError.js';\r\n\r\nexport const MOSTRAR_ACTIVIDADES = 'MOSTRAR_ACTIVIDADES';\r\nexport const ESTADO_ACTIVIDADES  = 'ESTADO_ACTIVIDADES';\r\nexport const AGREGAR_ACTIVIDAD = 'AGREGAR_ACTIVIDAD';\r\nexport const EDITAR_USUARIO = \"EDITAR_USUARIO\";\r\nexport const MENSAJE_REGISTRAR = 'MENSAJE_REGISTRAR';\r\nexport const MENSAJE_SUSPENDER = 'MENSAJE_SUSPENDER';\r\nexport const MODULOS_REGISTRADOS='MODULOS_REGISTRADOS';\r\nexport const ACTUALIZAR_ACTIVIDADES = 'ACTUALIZAR_ACTIVIDADES';\r\nexport const ANADIR_CODIGO_EDITAR='ANADIR_CODIGO_EDITAR';\r\nexport const INFORMACION_ACTIVIDAD='INFORMACION_ACTIVIDAD';\r\nexport const MENSAJE_EDITAR='MENSAJE_EDITAR';\r\nexport const EDITAR_ACTIVIDAD='EDITAR_ACTIVIDAD';\r\n\r\nexport function actionAsignarCodigoActividad(codigoActividad) {\r\n    return (dispatch, getState) => {\r\n        dispatch({\r\n            type: ANADIR_CODIGO_EDITAR,\r\n            codigo: codigoActividad\r\n        });\r\n    }\r\n}\r\n\r\nexport function actualizarMensajeRegistrar(mensaje) {\r\n    return (dispatch, getState) => {\r\n        dispatch({\r\n            type: MENSAJE_REGISTRAR,\r\n            mensaje: mensaje\r\n        });\r\n    };\r\n}\r\n\r\n\r\nexport function actualizarMensajeEditar(mensaje) {\r\n    return (dispatch, getState) => {\r\n        dispatch({\r\n            type: MENSAJE_EDITAR,\r\n            mensaje: mensaje\r\n        });\r\n    };\r\n}\r\n\r\n\r\nexport function actualizarMensajeSuspender(mensaje) {\r\n    return (dispatch, getState) => {\r\n        dispatch({\r\n            type: MENSAJE_SUSPENDER,\r\n            mensaje: mensaje\r\n        });\r\n    };\r\n}\r\n\r\nexport function actionConsultarActividades(token) {\r\n    var tokenRequest = desencriptar(token);\r\n    const headers = {\r\n        'Content-Type': 'application/json',\r\n        'TokenAuto': tokenRequest,\r\n        'Permiso': 'sa_Consultar actividades registradas'\r\n    }\r\n    return (dispatch, getState) => {\r\n        axios.get(\"http://localhost:9090/proyectosESCOM-web/api/actividad/listarActividades\", { headers: headers })\r\n            .then(response => {\r\n                dispatch({\r\n                    type: MOSTRAR_ACTIVIDADES,\r\n                    respuesta: response.data\r\n                });\r\n            }).catch((error) => {\r\n                if (error.request.response === '') {\r\n                    \r\n                }else{\r\n                    if (error.request) {\r\n                        var o = JSON.parse(error.request.response);\r\n                        let respuesta=mensajesDeError(o.respuesta);\r\n                        if(respuesta==='Sin permiso'){\r\n\r\n                            dispatch({\r\n                                type: ESTADO_ACTIVIDADES,\r\n                                estado: true\r\n                            });\r\n                        }else{\r\n                            //\r\n                        }\r\n                    }\r\n                } \r\n            });\r\n    };\r\n}\r\n\r\nexport function actionAgregarActividad(actividad, token) {\r\n    var tokenRequest = desencriptar(token);\r\n    const headers = {\r\n        'Content-Type': 'application/json',\r\n        'TokenAuto': tokenRequest,\r\n        'Permiso': 'sa_Registrar actividad'\r\n    }\r\n    return (dispatch, getState) => {\r\n        axios.post(\"http://localhost:9090/proyectosESCOM-web/api/actividad/registrarActividad\", actividad, { headers: headers })\r\n            .then(response => {\r\n                debugger;\r\n                dispatch({\r\n                    type: AGREGAR_ACTIVIDAD,\r\n                    actividadARegistrar: actividad\r\n                });\r\n                dispatch({\r\n                    type: MENSAJE_REGISTRAR,\r\n                    mensaje: 'actividad registrada'\r\n                });\r\n            }).catch((error) => {\r\n                debugger;\r\n                if (error.request.response === '') {\r\n                    dispatch({\r\n                        type: MENSAJE_REGISTRAR,\r\n                        mensaje: 'Servidor fuera de servicio temporalmente'\r\n                    });\r\n                }else{\r\n                    if (error.request) {\r\n                        var o = JSON.parse(error.request.response);\r\n                        let respuesta=mensajesDeError(o.respuesta);\r\n                        if(respuesta!==''){\r\n                            dispatch({\r\n                                type: MENSAJE_REGISTRAR,\r\n                                mensaje: respuesta\r\n                            });\r\n                        }else{\r\n                            dispatch({\r\n                                type: MENSAJE_REGISTRAR,\r\n                                mensaje: 'Ya existen los datos registrados previamente'\r\n                            });\r\n                        }\r\n                    }\r\n                } \r\n                \r\n            });\r\n\r\n    }\r\n}\r\n\r\nexport function actionConsultarModulos(token) {\r\n    var tokenRequest = desencriptar(token);\r\n    const headers = {\r\n        'Content-Type': 'application/json',\r\n        'TokenAuto': tokenRequest,\r\n        'Permiso': 'sa_Consultar actividades registradas'\r\n    }\r\n    return (dispatch, getState) => {\r\n        axios.get(\"http://localhost:9090/proyectosESCOM-web/api/modulo/listarModulos\", { headers: headers })\r\n            .then(response => {\r\n                dispatch({\r\n                    type: MODULOS_REGISTRADOS,\r\n                    respuesta: response.data\r\n                });\r\n                \r\n            }).catch((error) => {\r\n                if (error.request.response === '') {\r\n                    \r\n\r\n                }else{\r\n                    if (error.request) {\r\n                        var o = JSON.parse(error.request.response);\r\n                        let respuesta=mensajesDeError(o.respuesta);\r\n                        if(respuesta==='Sin permiso'){\r\n                            dispatch({\r\n                                type: ESTADO_ACTIVIDADES,\r\n                                estado: true\r\n                            });\r\n                        }else{\r\n                            //\r\n                        }\r\n                    }\r\n                } \r\n            });\r\n    };\r\n}\r\n\r\nexport function actionSuspenderActivarActividad(codigoActividad, token,actualizados) {\r\n    var tokenRequest = desencriptar(token);\r\n    const headers = {\r\n        'Content-Type': 'application/json',\r\n        'TokenAuto': tokenRequest,\r\n        'Permiso': 'sa_Suspender/activar actividades de modulos'\r\n    }\r\n    return (dispatch, getState) => {\r\n        axios.get(\"http://localhost:9090/proyectosESCOM-web/api/actividad/cambiarEstadoActividad/\"+codigoActividad, { headers: headers })\r\n            .then(response => {\r\n                dispatch({\r\n                    type: MENSAJE_SUSPENDER,\r\n                    mensaje: 'Operacion hecha con exito'\r\n                });\r\n                dispatch({\r\n                    type: ACTUALIZAR_ACTIVIDADES,\r\n                    actividad: actualizados\r\n                });\r\n            }).catch((error) => {\r\n                console.log(error);\r\n\r\n                if (error.request.response === '') {\r\n                    dispatch({\r\n                        type: MENSAJE_SUSPENDER,\r\n                        mensaje: 'Servidor fuera de servicio temporalmente'\r\n                    });\r\n                }else{\r\n                    if (error.request) {\r\n                        var o = JSON.parse(error.request.response);\r\n                        let respuesta=mensajesDeError(o.respuesta);\r\n                        if(respuesta!==''){\r\n                            dispatch({\r\n                                type: MENSAJE_SUSPENDER,\r\n                                mensaje: respuesta\r\n                            });\r\n                        }else{\r\n                            dispatch({\r\n                                type: MENSAJE_SUSPENDER,\r\n                                mensaje: 'Sin acceso al servicio'\r\n                            });\r\n                        }\r\n                    }\r\n                } \r\n                \r\n            });\r\n\r\n    }\r\n}\r\n\r\n\r\nexport function actionCargarInformacionDeActividad(codigoActividad, token) {\r\n    const headers = {\r\n        'Content-Type': 'application/json',\r\n        'TokenAuto': desencriptar(token),\r\n        'Permiso': 'sa_Editar informacion de la actividad'\r\n    }\r\n    return (dispatch, getState) => {\r\n        axios.get(\"http://localhost:9090/proyectosESCOM-web/api/actividad/listarActividadEspecifica/\" + codigoActividad, { headers: headers })\r\n            .then(response => {\r\n                dispatch({\r\n                    type: INFORMACION_ACTIVIDAD,\r\n                    informacionActividad: response.data\r\n                });\r\n            }).catch((error) => {\r\n                if (error.request.response === '') {\r\n                    dispatch({\r\n                        type: MENSAJE_EDITAR,\r\n                        mensaje: 'Servidor fuera de servicio temporalmente'\r\n                    });\r\n                }else{\r\n                    if (error.request) {\r\n                        var o = JSON.parse(error.request.response);\r\n                        let respuesta=mensajesDeError(o.respuesta);\r\n                        if(respuesta!==''){\r\n                            dispatch({\r\n                                type: MENSAJE_EDITAR,\r\n                                mensaje: respuesta\r\n                            });\r\n                        }else{\r\n                            dispatch({\r\n                                type: MENSAJE_EDITAR,\r\n                                mensaje: 'Sin acceso al servicio'\r\n                            });\r\n                        }\r\n                    }\r\n                } \r\n            });\r\n    };\r\n}\r\n\r\n\r\nexport function actionEditarUsuario(actividad, token) {\r\n    const headers = {\r\n        'Content-Type': 'application/json',\r\n        'TokenAuto': desencriptar(token),\r\n        'Permiso': 'sa_Editar informacion de la actividad'\r\n    }\r\n    return (dispatch, getState) => {\r\n        axios.put(\"http://localhost:9090/proyectosESCOM-web/api/actividad/editarActividad\" , actividad, { headers: headers })\r\n            .then(response => {\r\n                dispatch({\r\n                    type: EDITAR_ACTIVIDAD,\r\n                    informacionActividad: actividad\r\n                });\r\n                dispatch({\r\n                    type: MENSAJE_EDITAR,\r\n                    mensaje: 'Modificado'\r\n                });\r\n            }).catch((error) => {\r\n                if (error.request.response === '') {\r\n                    dispatch({\r\n                        type: MENSAJE_EDITAR,\r\n                        mensaje: 'Servidor fuera de servicio temporalmente'\r\n                    });\r\n                }else{\r\n                    if (error.request) {\r\n                        var o = JSON.parse(error.request.response);\r\n                        let respuesta=mensajesDeError(o.respuesta);\r\n                        if(respuesta!==''){\r\n                            dispatch({\r\n                                type: MENSAJE_EDITAR,\r\n                                mensaje: respuesta\r\n                            });\r\n                        }else{\r\n                            dispatch({\r\n                                type: MENSAJE_EDITAR,\r\n                                mensaje: 'Ya existen los datos registrados previamente'\r\n                            });\r\n                        }\r\n                    }\r\n                } \r\n                \r\n            });\r\n    }\r\n}"]},"metadata":{},"sourceType":"module"}