{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\jeiso\\\\Desktop\\\\proyectosESCOM\\\\frontend\\\\ESCOM-view\\\\src\\\\SuperAdministrador\\\\componentes\\\\administrar\\\\ContenidoConfiguracion.js\";\nimport React from 'react'; //estilos\n\nimport '../../css/business-casual.css';\nimport '../../css/estilos.css';\nimport '../../css/bootstrap.min.css';\nimport '../../css/menu.css'; //componentes\n\nimport { reduxForm, Field } from 'redux-form';\nimport { SketchPicker } from 'react-color';\nimport { Button } from 'reactstrap'; //redux conexion\n\nimport { connect } from 'react-redux';\nimport { consultarConfiguracion, actionActualizarBarraLateral } from '../../actions/actionConfiguracion.js';\n\nclass Configuracion extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      background: '#fff'\n    };\n\n    this.handleSubmit = formValues => {\n      console.log(\"formularios \", formValues);\n    };\n\n    this.handleChangeComplete = color => {\n      console.log('PROPS', this.props.configuracion.prueba.fondoBarra);\n      console.log('cambio', color);\n    };\n  }\n\n  async componentDidMount() {\n    this.props.consultarConfiguracion('esta es una prueba');\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 40\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"text-left titulo\",\n      style: estiloLetrero,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 41\n      },\n      __self: this\n    }, React.createElement(\"h4\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 42\n      },\n      __self: this\n    }, \"Administrar usuarios\")), React.createElement(\"div\", {\n      className: \"container\",\n      style: {\n        paddingTop: \"7px\",\n        paddingRight: \"12px\",\n        paddingLeft: \"40px\",\n        paddingBottom: \"20px\",\n        margin: \"0px 0px 32px\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 44\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"container shadow\",\n      style: fondoBarraSuperior,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 51\n      },\n      __self: this\n    }, React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 52\n      },\n      __self: this\n    }), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 53\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      className: \"jumbotron p-1 jumbotron-fluid\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 54\n      },\n      __self: this\n    }, React.createElement(\"form\", {\n      onSubmit: this.props.handleSubmit(this.handleSubmit),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 55\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"contenedor-inputs\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 56\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"row\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 57\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"col-sm-12\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 58\n      },\n      __self: this\n    }, React.createElement(\"span\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 59\n      },\n      __self: this\n    }, \"Barra lateral: \"), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 60\n      },\n      __self: this\n    }), React.createElement(SketchPicker, {\n      color: this.props.configuracion.prueba.fondoBarra,\n      onChangeComplete: this.handleChangeComplete(),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 61\n      },\n      __self: this\n    }))), React.createElement(\"div\", {\n      className: \"row\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 64\n      },\n      __self: this\n    }), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 72\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      className: \"row\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 73\n      },\n      __self: this\n    }), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 81\n      },\n      __self: this\n    })), React.createElement(Button, {\n      style: {\n        background: \"blue\"\n      },\n      type: \"submit\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 83\n      },\n      __self: this\n    }, \"Registrar\"), '')))));\n  }\n\n}\n\nconst generarInput = ({\n  input,\n  label,\n  type,\n  meta: {\n    touched,\n    error,\n    warning\n  }\n}) => React.createElement(\"div\", {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 95\n  },\n  __self: this\n}, React.createElement(\"div\", {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 96\n  },\n  __self: this\n}, React.createElement(\"input\", Object.assign({}, input, {\n  placeholder: label,\n  type: type,\n  className: \"form-control letra form-control-solid placeholder-no-fix\",\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 97\n  },\n  __self: this\n})), touched && (error && React.createElement(\"span\", {\n  className: \"text-danger letra form-group\",\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 98\n  },\n  __self: this\n}, error) || warning && React.createElement(\"span\", {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 98\n  },\n  __self: this\n}, warning))));\n\nconst validate = values => {\n  const errors = {};\n\n  if (!values.nombre) {\n    errors.nombre = 'Este campo es obligatorio';\n  } else if (values.nombre.length < 2) {\n    errors.nombre = 'Minimum be 2 characters or more';\n  }\n\n  if (!values.email) {\n    errors.email = 'Required';\n  } else if (!/^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,4}$/i.test(values.email)) {\n    errors.email = 'Invalid email address';\n  }\n\n  return errors;\n};\n\nconst fondoBoton = {\n  background: \"#ec671d\",\n  fontSize: \"14px\",\n  fontFamily: \"Open sans, sans-serif\"\n};\nconst estiloLetrero = {\n  paddingTop: \"20px\",\n  paddingRight: \"12px\",\n  paddingLeft: \"40px\",\n  paddingBottom: \"1px\"\n};\nconst fondoBarraSuperior = {\n  background: \"#FFFFFF\"\n};\nconst fondoTabla = {\n  background: \"#EAF2F2\"\n};\n\nfunction mapStateToProps(state) {\n  return {\n    configuracion: state.prueba\n  };\n}\n\nlet formulario = reduxForm({\n  form: 'registrarConfiguracion',\n  validate\n})(Configuracion);\nexport default connect(mapStateToProps, {\n  consultarConfiguracion,\n  actionActualizarBarraLateral\n})(formulario);","map":{"version":3,"sources":["C:\\Users\\jeiso\\Desktop\\proyectosESCOM\\frontend\\ESCOM-view\\src\\SuperAdministrador\\componentes\\administrar\\ContenidoConfiguracion.js"],"names":["React","reduxForm","Field","SketchPicker","Button","connect","consultarConfiguracion","actionActualizarBarraLateral","Configuracion","Component","state","background","handleSubmit","formValues","console","log","handleChangeComplete","color","props","configuracion","prueba","fondoBarra","componentDidMount","render","estiloLetrero","paddingTop","paddingRight","paddingLeft","paddingBottom","margin","fondoBarraSuperior","generarInput","input","label","type","meta","touched","error","warning","validate","values","errors","nombre","length","email","test","fondoBoton","fontSize","fontFamily","fondoTabla","mapStateToProps","formulario","form"],"mappings":"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","sourcesContent":["import React from 'react';\r\n\r\n//estilos\r\nimport '../../css/business-casual.css'\r\nimport '../../css/estilos.css'\r\nimport '../../css/bootstrap.min.css'\r\nimport '../../css/menu.css'\r\n\r\n//componentes\r\nimport { reduxForm, Field } from 'redux-form';\r\nimport { SketchPicker } from 'react-color';\r\nimport { Button } from 'reactstrap';\r\n//redux conexion\r\nimport { connect } from 'react-redux';\r\nimport { consultarConfiguracion, actionActualizarBarraLateral } from '../../actions/actionConfiguracion.js'\r\n\r\nclass Configuracion extends React.Component {\r\n\r\n    state={\r\n        background: '#fff'\r\n    }\r\n\r\n\r\n    async componentDidMount() {\r\n        this.props.consultarConfiguracion('esta es una prueba')\r\n    }\r\n\r\n    handleSubmit = formValues => {\r\n        console.log(\"formularios \", formValues);\r\n    }\r\n\r\n\r\n    handleChangeComplete = (color) => {\r\n        console.log('PROPS',this.props.configuracion.prueba.fondoBarra);\r\n        console.log('cambio', color);\r\n    };\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                <div className=\"text-left titulo\" style={estiloLetrero}>\r\n                    <h4>Administrar usuarios</h4>\r\n                </div>\r\n                <div className=\"container\" style={{\r\n                    paddingTop: \"7px\",\r\n                    paddingRight: \"12px\",\r\n                    paddingLeft: \"40px\",\r\n                    paddingBottom: \"20px\",\r\n                    margin: \"0px 0px 32px\"\r\n                }}>\r\n                    <div className=\"container shadow\" style={fondoBarraSuperior}>\r\n                        <br />\r\n                        <br />\r\n                        <div className=\"jumbotron p-1 jumbotron-fluid\">\r\n                            <form onSubmit={this.props.handleSubmit(this.handleSubmit)}>\r\n                                <div className=\"contenedor-inputs\">\r\n                                    <div className=\"row\">\r\n                                        <div className=\"col-sm-12\">\r\n                                            <span>Barra lateral: </span>\r\n                                            <br />\r\n                                            <SketchPicker color={this.props.configuracion.prueba.fondoBarra} onChangeComplete={this.handleChangeComplete()} />\r\n                                        </div>\r\n                                    </div>\r\n                                    <div className=\"row\">\r\n                                        {/* <div className=\"col-sm-5\">\r\n                                            <span>Logo </span>\r\n                                        </div>\r\n                                        <div className=\"col-sm-7\">\r\n                                            <input type=\"file\" name=\"files[]\" multiple=\"\" width=\"200\" height=\"40\" />\r\n                                        </div> */}\r\n                                    </div>\r\n                                    <br />\r\n                                    <div className=\"row\">\r\n                                        {/* <div className=\"col-sm-5\">\r\n                                            <span>Login </span>\r\n                                        </div>\r\n                                        <div className=\"col-sm-7\">\r\n                                            <input type=\"file\" name=\"files[]\" multiple=\"\" width=\"200\" height=\"40\" />\r\n                                        </div> */}\r\n                                    </div>\r\n                                    <br />\r\n                                </div>\r\n                                <Button style={{ background: \"blue\" }} type=\"submit\">Registrar</Button>{''}\r\n                            </form>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n\r\n}\r\n\r\nconst generarInput = ({ input, label, type, meta: { touched, error, warning } }) => (\r\n    <div>\r\n        <div>\r\n            <input {...input} placeholder={label} type={type} className=\"form-control letra form-control-solid placeholder-no-fix\" />\r\n            {touched && ((error && <span className=\"text-danger letra form-group\">{error}</span>) || (warning && <span>{warning}</span>))}\r\n        </div>\r\n    </div>\r\n)\r\n\r\nconst validate = values => {\r\n    const errors = {}\r\n    if (!values.nombre) {\r\n        errors.nombre = 'Este campo es obligatorio'\r\n    } else if (values.nombre.length < 2) {\r\n        errors.nombre = 'Minimum be 2 characters or more'\r\n    }\r\n\r\n    if (!values.email) {\r\n        errors.email = 'Required'\r\n    } else if (!/^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,4}$/i.test(values.email)) {\r\n        errors.email = 'Invalid email address'\r\n    }\r\n    return errors\r\n}\r\n\r\nconst fondoBoton = {\r\n    background: \"#ec671d\",\r\n    fontSize: \"14px\",\r\n    fontFamily: \"Open sans, sans-serif\"\r\n\r\n}\r\n\r\nconst estiloLetrero = {\r\n    paddingTop: \"20px\",\r\n    paddingRight: \"12px\",\r\n    paddingLeft: \"40px\",\r\n    paddingBottom: \"1px\"\r\n}\r\n\r\nconst fondoBarraSuperior = {\r\n    background: \"#FFFFFF\"\r\n\r\n}\r\n\r\nconst fondoTabla = {\r\n    background: \"#EAF2F2\"\r\n}\r\n\r\n\r\nfunction mapStateToProps(state) {\r\n    return {\r\n        configuracion: state.prueba\r\n    }\r\n}\r\n\r\nlet formulario = reduxForm({\r\n    form: 'registrarConfiguracion', validate\r\n})(Configuracion)\r\n\r\nexport default connect(mapStateToProps, { consultarConfiguracion, actionActualizarBarraLateral })(formulario);\r\n"]},"metadata":{},"sourceType":"module"}