{"ast":null,"code":"import axios from 'axios';\nimport { desencriptar } from '../../../SuperAdministrador/componentes/general/Encriptar.js';\nexport const GET_LIST_CONDITIONS = 'GET_LIST_CONDITIONS';\nexport const GET_CONDITIONS_PER = 'GET_CONDITIONS_PER';\nexport const GET_CONDITION_ID = 'GET_CONDITION_ID';\nexport const ADD_CONDITION = 'ADD_CONDITION';\nexport const EDIT_CONDITION = 'EDIT_CONDITION';\nexport const DISABLE_CONDITION = 'DISABLE_CONDITION';\nexport const ADD_MESSAGE_ADD = 'ADD_MESSAGE_ADD';\nexport const ADD_MESSAGE_EDIT = 'ADD_MESSAGE_EDIT';\nexport const ADD_MESSAGE_DISABLE = 'ADD_MESSAGE_DISABLE';\nexport const ADD_MESSAGE = 'ADD_MESSAGE';\nconst URL_BASE = 'http://localhost:9090/proyectosESCOM-web';\nconst PERMIT_LIST_CONDITIONS = 'MD_Lista condiciones';\nconst PERMIT_LIST_CONDITIONS_PER = 'MD_Lista condiciones porcentaje';\nconst PERMIT_GET_CONDITION = 'MD_Obtiene condicion';\nconst PERMIT_ADD_CONDITION = 'MD_Agregar condicion';\nconst PERMIT_EDIT_CONDITION = 'MD_Editar condicion';\nconst PERMIT_DISABLE_CONDITION = 'MD_Inhabilitar condicion';\nexport function addMessageEdit(mensaje) {\n  return (dispatch, getState) => {\n    dispatch({\n      type: ADD_MESSAGE_EDIT,\n      mensaje: mensaje\n    });\n  };\n}\nexport function addMessageAdd(mensaje) {\n  return (dispatch, getState) => {\n    dispatch({\n      type: ADD_MESSAGE_ADD,\n      mensaje: mensaje\n    });\n  };\n}\nexport function addMessageDisable(mensaje) {\n  return (dispatch, getState) => {\n    dispatch({\n      type: ADD_MESSAGE_DISABLE,\n      mensaje: mensaje\n    });\n  };\n} //MD_Lista condiciones\n//returns the list of conditions of the selected document\n\nexport function getListConditions(token, idD) {\n  const headers = {\n    'Content-Type': 'application/json',\n    'TokenAuto': desencriptar(token),\n    'Permiso': PERMIT_LIST_CONDITIONS\n  };\n  return (dispatch, getState) => {\n    axios.get(`${URL_BASE}/api/condition/list/${idD}`, {\n      headers: headers\n    }).then(response => {\n      dispatch({\n        type: GET_LIST_CONDITIONS,\n        payload: response.data\n      });\n    }).catch(error => {\n      if (error.request.response === '') {\n        dispatch({\n          type: ADD_MESSAGE,\n          payload: 'error server'\n        });\n      } else {\n        if (error.request) {\n          dispatch({\n            type: ADD_MESSAGE,\n            payload: 'error server'\n          });\n        }\n      }\n    });\n  };\n} //MD_Lista condiciones porcentaje\n//returns the list of conditions of the selected \n//document with the percentage of activities completed\n\nexport function getConditionsPer(token, idP) {\n  const headers = {\n    'Content-Type': 'application/json',\n    'TokenAuto': desencriptar(token),\n    'Permiso': PERMIT_LIST_CONDITIONS_PER\n  };\n  return (dispatch, getState) => {\n    axios.get(`${URL_BASE}/api/condition/listPercentage/${idP}`, {\n      headers: headers\n    }).then(response => {\n      dispatch({\n        type: GET_CONDITIONS_PER,\n        payload: response.data\n      });\n    }).catch(error => {\n      if (error.request.response === '') {\n        dispatch({\n          type: ADD_MESSAGE,\n          payload: 'error server'\n        });\n      } else {\n        if (error.request) {\n          dispatch({\n            type: ADD_MESSAGE,\n            payload: 'error server'\n          });\n        }\n      }\n    });\n  };\n} //MD_Obtiene condicion\n//returns the information of the selected condition\n\nexport function getConditionId(token, id) {\n  const headers = {\n    'Content-Type': 'application/json',\n    'TokenAuto': desencriptar(token),\n    'Permiso': PERMIT_GET_CONDITION\n  };\n  return (dispatch, getState) => {\n    axios.get(`${URL_BASE}/api/condition/getCondition/${id}`, {\n      headers: headers\n    }).then(response => {\n      console.log(response);\n      dispatch({\n        type: GET_CONDITION_ID,\n        payload: response.data\n      });\n    }).catch(error => {\n      if (error.request.response === '') {\n        dispatch({\n          type: ADD_MESSAGE,\n          payload: 'error server'\n        });\n      } else {\n        if (error.request) {\n          dispatch({\n            type: ADD_MESSAGE,\n            payload: 'error server'\n          });\n        }\n      }\n    });\n  };\n} //MD_Agregar condicion\n//add a new condition\n\nexport function addCondition(token, conditionN) {\n  const headers = {\n    'Content-Type': 'application/json',\n    'TokenAuto': desencriptar(token),\n    'Permiso': PERMIT_ADD_CONDITION\n  };\n  conditionN.requestData = {\n    'ip': localStorage.getItem('Ip'),\n    'token': desencriptar(token),\n    'operacion': PERMIT_ADD_CONDITION\n  };\n  return (dispatch, getState) => {\n    axios.post(`${URL_BASE}/api/condition/add`, conditionN, {\n      headers: headers\n    }).then(response => {\n      dispatch({\n        type: ADD_CONDITION,\n        payload: response.data.data\n      });\n    }).catch(error => {\n      if (error.request.response === '') {\n        dispatch({\n          type: ADD_MESSAGE_ADD,\n          payload: 'error server'\n        });\n      } else {\n        if (error.request) {\n          dispatch({\n            type: ADD_MESSAGE_ADD,\n            payload: 'error server'\n          });\n        }\n      }\n    });\n  };\n} //MD_Editar condicion\n//edit condition\n\nexport function editCondition(token, conditionE) {\n  const headers = {\n    'Content-Type': 'application/json',\n    'TokenAuto': desencriptar(token),\n    'Permiso': PERMIT_EDIT_CONDITION\n  };\n  conditionE.requestData = {\n    'ip': localStorage.getItem('Ip'),\n    'token': desencriptar(token),\n    'operacion': PERMIT_EDIT_CONDITION\n  };\n  return (dispatch, getState) => {\n    axios.put(`${URL_BASE}/api/condition/edit`, conditionE, {\n      headers: headers\n    }).then(response => {\n      dispatch({\n        type: EDIT_CONDITION,\n        payload: response.data.data\n      });\n    }).catch(error => {\n      if (error.request.response === '') {\n        dispatch({\n          type: ADD_MESSAGE_EDIT,\n          payload: 'error server'\n        });\n      } else {\n        if (error.request) {\n          dispatch({\n            type: ADD_MESSAGE_EDIT,\n            payload: 'error server'\n          });\n        }\n      }\n    });\n  };\n} //MD_Inhabilitar condicion\n//disable the selected condition\n\nexport function disableCondition(token, id) {\n  const headers = {\n    'Content-Type': 'application/json',\n    'TokenAuto': desencriptar(token),\n    'Permiso': PERMIT_DISABLE_CONDITION\n  };\n  const requestData = {\n    'ip': localStorage.getItem('Ip'),\n    'token': desencriptar(token),\n    'operacion': PERMIT_DISABLE_CONDITION\n  };\n  return (dispatch, getState) => {\n    axios.put(`${URL_BASE}/api/condition/disable/${id}`, requestData, {\n      headers: headers\n    }).then(response => {\n      dispatch({\n        type: DISABLE_CONDITION,\n        payload: response.data.data\n      });\n    }).catch(error => {\n      if (error.request.response === '') {\n        dispatch({\n          type: ADD_MESSAGE_DISABLE,\n          payload: 'error server'\n        });\n      } else {\n        if (error.request) {\n          dispatch({\n            type: ADD_MESSAGE_DISABLE,\n            payload: 'error server'\n          });\n        }\n      }\n    });\n  };\n}","map":{"version":3,"sources":["C:/Users/jeiso/Desktop/proyectosESCOM/frontend/ESCOM-view/src/ModuloDocumental/redux/actions/conditionA.js"],"names":["axios","desencriptar","GET_LIST_CONDITIONS","GET_CONDITIONS_PER","GET_CONDITION_ID","ADD_CONDITION","EDIT_CONDITION","DISABLE_CONDITION","ADD_MESSAGE_ADD","ADD_MESSAGE_EDIT","ADD_MESSAGE_DISABLE","ADD_MESSAGE","URL_BASE","PERMIT_LIST_CONDITIONS","PERMIT_LIST_CONDITIONS_PER","PERMIT_GET_CONDITION","PERMIT_ADD_CONDITION","PERMIT_EDIT_CONDITION","PERMIT_DISABLE_CONDITION","addMessageEdit","mensaje","dispatch","getState","type","addMessageAdd","addMessageDisable","getListConditions","token","idD","headers","get","then","response","payload","data","catch","error","request","getConditionsPer","idP","getConditionId","id","console","log","addCondition","conditionN","requestData","localStorage","getItem","post","editCondition","conditionE","put","disableCondition"],"mappings":"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","sourcesContent":["import axios from 'axios';\r\n\r\nimport { desencriptar } from '../../../SuperAdministrador/componentes/general/Encriptar.js';\r\n\r\nexport const GET_LIST_CONDITIONS = 'GET_LIST_CONDITIONS';\r\nexport const GET_CONDITIONS_PER = 'GET_CONDITIONS_PER';\r\nexport const GET_CONDITION_ID = 'GET_CONDITION_ID';\r\nexport const ADD_CONDITION = 'ADD_CONDITION';\r\nexport const EDIT_CONDITION = 'EDIT_CONDITION';\r\nexport const DISABLE_CONDITION = 'DISABLE_CONDITION';\r\n\r\nexport const ADD_MESSAGE_ADD = 'ADD_MESSAGE_ADD';\r\nexport const ADD_MESSAGE_EDIT = 'ADD_MESSAGE_EDIT';\r\nexport const ADD_MESSAGE_DISABLE = 'ADD_MESSAGE_DISABLE';\r\nexport const ADD_MESSAGE = 'ADD_MESSAGE';\r\n\r\nconst URL_BASE = 'http://localhost:9090/proyectosESCOM-web';\r\nconst PERMIT_LIST_CONDITIONS = 'MD_Lista condiciones';\r\nconst PERMIT_LIST_CONDITIONS_PER = 'MD_Lista condiciones porcentaje';\r\nconst PERMIT_GET_CONDITION = 'MD_Obtiene condicion';\r\nconst PERMIT_ADD_CONDITION = 'MD_Agregar condicion';\r\nconst PERMIT_EDIT_CONDITION = 'MD_Editar condicion';\r\nconst PERMIT_DISABLE_CONDITION = 'MD_Inhabilitar condicion';\r\n\r\nexport function addMessageEdit(mensaje) {\r\n  return (dispatch, getState) => {\r\n    dispatch({\r\n      type: ADD_MESSAGE_EDIT,\r\n      mensaje: mensaje\r\n    });\r\n  };\r\n}\r\n\r\nexport function addMessageAdd(mensaje) {\r\n  return (dispatch, getState) => {\r\n    dispatch({\r\n      type: ADD_MESSAGE_ADD,\r\n      mensaje: mensaje\r\n    });\r\n  };\r\n}\r\n\r\nexport function addMessageDisable(mensaje) {\r\n  return (dispatch, getState) => {\r\n    dispatch({\r\n      type: ADD_MESSAGE_DISABLE,\r\n      mensaje: mensaje\r\n    });\r\n  };\r\n}\r\n\r\n//MD_Lista condiciones\r\n//returns the list of conditions of the selected document\r\nexport function getListConditions(token, idD) {\r\n  const headers = {\r\n    'Content-Type': 'application/json',\r\n    'TokenAuto': desencriptar(token),\r\n    'Permiso': PERMIT_LIST_CONDITIONS\r\n  }\r\n  return (dispatch, getState) => {\r\n    axios.get(`${URL_BASE}/api/condition/list/${idD}`, { headers: headers })\r\n      .then(response => {\r\n        dispatch({\r\n          type: GET_LIST_CONDITIONS,\r\n          payload: response.data\r\n        });\r\n      }).catch(error => {\r\n        if (error.request.response === '') {\r\n          dispatch({\r\n            type: ADD_MESSAGE,\r\n            payload: 'error server'\r\n          });\r\n        } else {\r\n          if (error.request) {\r\n            dispatch({\r\n              type: ADD_MESSAGE,\r\n              payload: 'error server'\r\n            });\r\n          }\r\n        }\r\n      });\r\n  }\r\n}\r\n\r\n//MD_Lista condiciones porcentaje\r\n//returns the list of conditions of the selected \r\n//document with the percentage of activities completed\r\nexport function getConditionsPer(token, idP) {\r\n  const headers = {\r\n    'Content-Type': 'application/json',\r\n    'TokenAuto': desencriptar(token),\r\n    'Permiso': PERMIT_LIST_CONDITIONS_PER\r\n  }\r\n  return (dispatch, getState) => {\r\n    axios.get(`${URL_BASE}/api/condition/listPercentage/${idP}`, { headers: headers })\r\n      .then(response => {\r\n        dispatch({\r\n          type: GET_CONDITIONS_PER,\r\n          payload: response.data\r\n        })\r\n      }).catch(error => {\r\n        if (error.request.response === '') {\r\n          dispatch({\r\n            type: ADD_MESSAGE,\r\n            payload: 'error server'\r\n          });\r\n        } else {\r\n          if (error.request) {\r\n            dispatch({\r\n              type: ADD_MESSAGE,\r\n              payload: 'error server'\r\n            });\r\n          }\r\n        }\r\n      });\r\n  }\r\n}\r\n\r\n//MD_Obtiene condicion\r\n//returns the information of the selected condition\r\nexport function getConditionId(token, id) {\r\n  const headers = {\r\n    'Content-Type': 'application/json',\r\n    'TokenAuto': desencriptar(token),\r\n    'Permiso': PERMIT_GET_CONDITION\r\n  }\r\n  return (dispatch, getState) => {\r\n    axios.get(`${URL_BASE}/api/condition/getCondition/${id}`, { headers: headers })\r\n      .then(response => {\r\n        console.log(response)\r\n        dispatch({\r\n          type: GET_CONDITION_ID,\r\n          payload: response.data\r\n        })\r\n      }).catch(error => {\r\n        if (error.request.response === '') {\r\n          dispatch({\r\n            type: ADD_MESSAGE,\r\n            payload: 'error server'\r\n          });\r\n        } else {\r\n          if (error.request) {\r\n            dispatch({\r\n              type: ADD_MESSAGE,\r\n              payload: 'error server'\r\n            });\r\n          }\r\n        }\r\n\r\n      });\r\n  }\r\n}\r\n\r\n//MD_Agregar condicion\r\n//add a new condition\r\nexport function addCondition(token, conditionN) {\r\n  const headers = {\r\n    'Content-Type': 'application/json',\r\n    'TokenAuto': desencriptar(token),\r\n    'Permiso': PERMIT_ADD_CONDITION\r\n  }\r\n  conditionN.requestData = {\r\n    'ip': localStorage.getItem('Ip'),\r\n    'token': desencriptar(token),\r\n    'operacion': PERMIT_ADD_CONDITION\r\n  };\r\n  return (dispatch, getState) => {\r\n    axios.post(`${URL_BASE}/api/condition/add`, conditionN, { headers: headers })\r\n      .then(response => {\r\n        dispatch({\r\n          type: ADD_CONDITION,\r\n          payload: response.data.data\r\n        });\r\n      }).catch(error => {\r\n        if (error.request.response === '') {\r\n          dispatch({\r\n            type: ADD_MESSAGE_ADD,\r\n            payload: 'error server'\r\n          });\r\n        } else {\r\n          if (error.request) {\r\n            dispatch({\r\n              type: ADD_MESSAGE_ADD,\r\n              payload: 'error server'\r\n            });\r\n          }\r\n        }\r\n\r\n      });\r\n\r\n  }\r\n}\r\n\r\n//MD_Editar condicion\r\n//edit condition\r\nexport function editCondition(token, conditionE) {\r\n  const headers = {\r\n    'Content-Type': 'application/json',\r\n    'TokenAuto': desencriptar(token),\r\n    'Permiso': PERMIT_EDIT_CONDITION\r\n  }\r\n  conditionE.requestData = {\r\n    'ip': localStorage.getItem('Ip'),\r\n    'token': desencriptar(token),\r\n    'operacion': PERMIT_EDIT_CONDITION\r\n  };\r\n  return (dispatch, getState) => {\r\n    axios.put(`${URL_BASE}/api/condition/edit`, conditionE, { headers: headers })\r\n      .then(response => {\r\n        dispatch({\r\n          type: EDIT_CONDITION,\r\n          payload: response.data.data\r\n        });\r\n      }).catch(error => {\r\n        if (error.request.response === '') {\r\n          dispatch({\r\n            type: ADD_MESSAGE_EDIT,\r\n            payload: 'error server'\r\n          });\r\n        } else {\r\n          if (error.request) {\r\n            dispatch({\r\n              type: ADD_MESSAGE_EDIT,\r\n              payload: 'error server'\r\n            });\r\n          }\r\n        }\r\n\r\n      });\r\n  }\r\n}\r\n\r\n//MD_Inhabilitar condicion\r\n//disable the selected condition\r\nexport function disableCondition(token, id) {\r\n  const headers = {\r\n    'Content-Type': 'application/json',\r\n    'TokenAuto': desencriptar(token),\r\n    'Permiso': PERMIT_DISABLE_CONDITION\r\n  }\r\n  const requestData = {\r\n    'ip': localStorage.getItem('Ip'),\r\n    'token': desencriptar(token),\r\n    'operacion': PERMIT_DISABLE_CONDITION\r\n  };\r\n  return (dispatch, getState) => {\r\n    axios.put(`${URL_BASE}/api/condition/disable/${id}`,requestData, { headers: headers })\r\n      .then(response => {\r\n        dispatch({\r\n          type: DISABLE_CONDITION,\r\n          payload: response.data.data\r\n        })\r\n      }).catch(error => {\r\n        if (error.request.response === '') {\r\n          dispatch({\r\n            type: ADD_MESSAGE_DISABLE,\r\n            payload: 'error server'\r\n          });\r\n        } else {\r\n          if (error.request) {\r\n            dispatch({\r\n              type: ADD_MESSAGE_DISABLE,\r\n              payload: 'error server'\r\n            });\r\n          }\r\n        }\r\n\r\n      });\r\n  }\r\n}\r\n"]},"metadata":{},"sourceType":"module"}