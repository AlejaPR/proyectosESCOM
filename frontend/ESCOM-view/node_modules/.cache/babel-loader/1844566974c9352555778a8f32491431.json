{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\jeiso\\\\Desktop\\\\proyectosESCOM\\\\frontend\\\\ESCOM-view\\\\src\\\\SuperAdministrador\\\\componentes\\\\administrar\\\\ContenidoConfiguracion.js\";\nimport React from 'react';\nimport 'react-notifications/lib/notifications.css';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Stepper from '@material-ui/core/Stepper';\nimport Step from '@material-ui/core/Step';\nimport StepButton from '@material-ui/core/StepButton';\nimport Button from '@material-ui/core/Button';\nimport Typography from '@material-ui/core/Typography';\nimport { SketchPicker } from 'react-color';\nimport { Field, reduxForm } from \"redux-form\";\nimport PropTypes from \"prop-types\";\nimport Barra from '../general/BarraDirecciones.js';\nimport { connect } from 'react-redux';\nimport { consultarConfiguracion, actionActualizarBarraLateral, actualizarMensaje, actualizarFotoLogin, actualizarFotoLogo, actionActualizarConfiguracion, actionActualizarBarraSuperior, actionActualizarBotones, actionConsultarConfiguracionCompleta } from '../../actions/actionConfiguracion.js';\nimport { campo } from '../../utilitario/GenerarInputs.js';\nimport { NotificationContainer, NotificationManager } from 'react-notifications';\nimport Alert from '@material-ui/lab/Alert';\nimport AlertTitle from '@material-ui/lab/AlertTitle';\nimport ArrowBackIosIcon from '@material-ui/icons/ArrowBackIos';\nimport NavigateNextIcon from '@material-ui/icons/NavigateNext';\nimport SaveIcon from '@material-ui/icons/Save';\nimport PhotoCamera from '@material-ui/icons/PhotoCamera';\n\nclass Configuracion extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      activeStep: 0,\n      completed: {},\n      configuracion: null,\n      imagenLogin: null,\n      imagenLogo: null\n    };\n\n    this.completedSteps = () => {\n      return Object.keys(this.state.completed).length;\n    };\n\n    this.handleChangeComplete = color => {\n      this.props.actionActualizarBarraLateral(color.hex);\n    };\n\n    this.handleChangeCompleteSuperior = color => {\n      this.props.actionActualizarBarraSuperior(color.hex);\n    };\n\n    this.handleChangeCompleteBotones = color => {\n      this.props.actionActualizarBotones(color.hex);\n    };\n\n    this.allStepsCompleted = () => {\n      return this.completedSteps() === this.totalSteps();\n    };\n\n    this.totalSteps = () => {\n      return this.getSteps().length;\n    };\n\n    this.isLastStep = () => {\n      return this.state.activeStep === this.totalSteps() - 1;\n    };\n\n    this.useStyles = makeStyles(theme => ({\n      root: {\n        width: '100%'\n      },\n      button: {\n        marginRight: theme.spacing(1)\n      },\n      completed: {\n        display: 'inline-block'\n      },\n      instructions: {\n        marginTop: theme.spacing(1),\n        marginBottom: theme.spacing(1)\n      }\n    }));\n\n    this.handleReset = () => {\n      this.setState({\n        activeStep: 0,\n        completed: {}\n      });\n    };\n\n    this.handleComplete = () => {\n      const newCompleted = this.state.completed;\n      newCompleted[this.state.activeStep] = true;\n      this.setState({\n        completed: newCompleted\n      });\n\n      if (this.allStepsCompleted()) {\n        let configuracion = {\n          logo: this.props.configuracionCompleta.logo,\n          imagenLogin: this.props.configuracionCompleta.imagenLogin,\n          barraLateral: this.props.configuracionCompleta.barraLateral,\n          barraSuperior: this.props.configuracionCompleta.barraSuperior,\n          botones: this.props.configuracionCompleta.botones\n        };\n        let validacion = this.validateImageWeight(this.props.configuracionCompleta.imagenLogin);\n        debugger;\n        this.props.actionActualizarConfiguracion(configuracion, localStorage.getItem('Token'));\n      }\n\n      this.handleNext();\n    };\n\n    this.handleNext = () => {\n      const newActiveStep = this.isLastStep() && !this.allStepsCompleted() ? // It's the last step, but not all steps have been completed,\n      // find the first step that has been completed\n      this.getSteps().findIndex((step, i) => !(i in this.state.completed)) : this.state.activeStep + 1;\n      this.setState({\n        activeStep: newActiveStep\n      });\n    };\n\n    this.handleStep = step => () => {\n      this.setState({\n        activeStep: step\n      });\n    };\n\n    this.handleBack = () => {\n      let cuenta = this.state.activeStep - 1;\n      this.setState({\n        activeStep: cuenta\n      });\n    };\n\n    this.validateImageWeight = imageFile => {\n      if (imageFile && imageFile.size) {\n        const imageFileKb = imageFile.size / 1024;\n        const pesoMaximo = this.props.pesoMaximo;\n\n        if (imageFileKb > pesoMaximo) {\n          return `El peso de la imagen debe ser menor o igual a ${pesoMaximo}kb`;\n        }\n      }\n    };\n\n    this.validarAnchoImagenLogin = imageFile => {\n      if (imageFile) {\n        if (imageFile.width > 750) {\n          return `El ancho de la imagen debe ser menor o igual a 750px`;\n        }\n      }\n    };\n\n    this.validarAltoImagenLogin = imageFile => {\n      if (imageFile) {\n        if (imageFile.height > 780) {\n          return `La altura de la imagen debe ser menor o igual a 780px`;\n        }\n      }\n    };\n\n    this.validarAnchoImagenLogo = imageFile => {\n      if (imageFile) {\n        if (imageFile.width > 400) {\n          return `El ancho de la imagen debe ser menor o igual a 400px`;\n        }\n      }\n    };\n\n    this.validarAltoImagenLogo = imageFile => {\n      if (imageFile) {\n        if (imageFile.height > 170) {\n          return `La altura de la imagen debe ser menor o igual a 170px`;\n        }\n      }\n    };\n\n    this.validateImageWidth = imageFile => {\n      if (imageFile) {\n        const anchuraMaxima = this.props.anchuraMaxima;\n\n        if (imageFile.width > anchuraMaxima) {\n          return `El ancho de la imagen debe ser menor o igual a ${anchuraMaxima}px`;\n        }\n      }\n    };\n\n    this.validateImageHeight = imageFile => {\n      if (imageFile) {\n        const alturaMaxima = this.props.alturaMaxima;\n\n        if (imageFile.height > alturaMaxima) {\n          return `La altura de la imagen debe ser menor o igual a ${alturaMaxima}px`;\n        }\n      }\n    };\n\n    this.validateImageFormat = imageFile => {\n      if (imageFile) {\n        const tipoDeImagen = this.props.tipoDeImagen;\n\n        if (!tipoDeImagen.includes(imageFile.type)) {\n          return `El tipo de imagen debe ser ${tipoDeImagen}`;\n        }\n      }\n    };\n\n    this.handlePreview = imageUrl => {\n      const previewImageDom = document.querySelector(\".preview-image\");\n      previewImageDom.src = imageUrl;\n    };\n\n    this.handleChange = (event, input) => {\n      event.preventDefault();\n      let imageFile = event.target.files[0];\n      const tipoDeImagen = this.props.tipoDeImagen;\n\n      if (imageFile) {\n        if (!tipoDeImagen.includes(imageFile.type)) {\n          NotificationManager.error('Seleccione un archivo de imagen .jpg o .png');\n          event.target.value = null;\n        } else {\n          const localImageUrl = URL.createObjectURL(imageFile);\n          const imageObject = new window.Image();\n\n          imageObject.onload = () => {\n            imageFile.width = imageObject.naturalWidth;\n            imageFile.height = imageObject.naturalHeight;\n            input.onChange(imageFile);\n            URL.revokeObjectURL(imageFile);\n          };\n\n          imageObject.src = localImageUrl;\n          this.getBase64(imageFile, result => {\n            this.props.actualizarFotoLogin(result);\n          });\n          this.handlePreview(localImageUrl);\n        }\n      }\n    };\n\n    this.handlePreviewLogo = imageUrl => {\n      const previewImageDom = document.querySelector(\".preview-image-dos\");\n      previewImageDom.src = imageUrl;\n    };\n\n    this.handleChangeLogo = (event, input) => {\n      event.preventDefault();\n      let imageFile = event.target.files[0];\n      const tipoDeImagen = this.props.tipoDeImagen;\n\n      if (imageFile) {\n        var leto = this.validateImageWeight(imageFile);\n        debugger;\n\n        if (!tipoDeImagen.includes(imageFile.type)) {\n          NotificationManager.error('Seleccione un archivo de imagen .jpg o .png');\n          event.target.value = null;\n        } else {\n          const localImageUrl = URL.createObjectURL(imageFile);\n          const imageObject = new window.Image();\n\n          imageObject.onload = () => {\n            imageFile.width = imageObject.naturalWidth;\n            imageFile.height = imageObject.naturalHeight;\n            input.onChange(imageFile);\n            URL.revokeObjectURL(imageFile);\n          };\n\n          imageObject.src = localImageUrl;\n          this.getBase64(imageFile, result => {\n            this.props.actualizarFotoLogo(result);\n          });\n          this.handlePreviewLogo(localImageUrl);\n        }\n      }\n    };\n\n    this.renderFileInput = ({\n      input,\n      type,\n      meta\n    }) => {\n      const tipoDeImagen = this.props.tipoDeImagen;\n      const touched = meta.touched,\n            error = meta.error,\n            warning = meta.warning;\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 390\n        },\n        __self: this\n      }, React.createElement(\"input\", {\n        id: \"numeroUno\",\n        style: {\n          display: 'none'\n        },\n        name: input.name,\n        type: type,\n        accept: tipoDeImagen,\n        onChange: event => this.handleChange(event, input),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 392\n        },\n        __self: this\n      }), React.createElement(\"label\", {\n        htmlFor: \"numeroUno\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 400\n        },\n        __self: this\n      }, React.createElement(Button, {\n        component: \"span\",\n        startIcon: React.createElement(PhotoCamera, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 401\n          },\n          __self: this\n        }),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 401\n        },\n        __self: this\n      }, \"Seleccionar imagen\")), touched && (error && React.createElement(\"span\", {\n        className: \"text-danger letra form-group\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 403\n        },\n        __self: this\n      }, error) || warning && React.createElement(\"span\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 403\n        },\n        __self: this\n      }, warning)));\n    };\n\n    this.renderFileInputLogo = ({\n      input,\n      type,\n      meta\n    }) => {\n      const tipoDeImagen = this.props.tipoDeImagen;\n      const touched = meta.touched,\n            error = meta.error,\n            warning = meta.warning;\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 412\n        },\n        __self: this\n      }, React.createElement(\"input\", {\n        id: \"numeroDos\",\n        style: {\n          display: 'none'\n        },\n        name: input.name,\n        type: type,\n        accept: tipoDeImagen,\n        onChange: event => this.handleChangeLogo(event, input),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 413\n        },\n        __self: this\n      }), React.createElement(\"label\", {\n        htmlFor: \"numeroDos\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 421\n        },\n        __self: this\n      }, React.createElement(Button, {\n        component: \"span\",\n        startIcon: React.createElement(PhotoCamera, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 422\n          },\n          __self: this\n        }),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 422\n        },\n        __self: this\n      }, \"Seleccionar imagen\")), touched && (error && React.createElement(\"span\", {\n        className: \"text-danger letra form-group\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 424\n        },\n        __self: this\n      }, error) || warning && React.createElement(\"span\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 424\n        },\n        __self: this\n      }, warning)));\n    };\n\n    this.handleSubmitForm = values => {\n      // if(this.completedSteps() === this.totalSteps() - 1){\n      //     debugger;\n      // }\n      console.log(this.state.completed);\n    };\n  }\n\n  componentDidMount() {\n    this.props.actionConsultarConfiguracionCompleta(localStorage.getItem('Token'));\n  }\n\n  componentDidUpdate() {\n    switch (this.props.mensaje) {\n      case 'Configuracion actualizada':\n        NotificationManager.success('Configuracion de aspecto actualizada');\n        break;\n\n      case '':\n        break;\n\n      default:\n        break;\n    }\n\n    this.props.actualizarMensaje('');\n  }\n\n  getSteps() {\n    return ['Color barra lateral', 'Color barra superior', 'Color de botones', 'Imagen del login', 'Imagen del logo'];\n  }\n\n  //\n  getStepContent(step) {\n    switch (step) {\n      case 0:\n        return React.createElement(\"div\", {\n          style: {\n            paddingTop: '3px',\n            paddingBottom: '25px',\n            paddingLeft: '267px'\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 78\n          },\n          __self: this\n        }, React.createElement(SketchPicker, {\n          disableAlpha: true,\n          color: this.props.configuracionCompleta.barraLateral,\n          onChangeComplete: this.handleChangeComplete,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 83\n          },\n          __self: this\n        }));\n\n      case 1:\n        return React.createElement(\"div\", {\n          style: {\n            paddingTop: '3px',\n            paddingBottom: '25px',\n            paddingLeft: '267px'\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 88\n          },\n          __self: this\n        }, React.createElement(SketchPicker, {\n          disableAlpha: true,\n          color: this.props.configuracionCompleta.barraSuperior,\n          onChangeComplete: this.handleChangeCompleteSuperior,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 93\n          },\n          __self: this\n        }));\n\n      case 2:\n        return React.createElement(\"div\", {\n          style: {\n            paddingTop: '3px',\n            paddingBottom: '25px',\n            paddingLeft: '267px'\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 98\n          },\n          __self: this\n        }, React.createElement(SketchPicker, {\n          disableAlpha: true,\n          color: this.props.configuracionCompleta.botones,\n          onChangeComplete: this.handleChangeCompleteBotones,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 103\n          },\n          __self: this\n        }));\n\n      case 3:\n        return React.createElement(React.Fragment, null, React.createElement(\"div\", {\n          style: {\n            paddingTop: '3px',\n            paddingBottom: '25px',\n            paddingLeft: '57px'\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 108\n          },\n          __self: this\n        }, React.createElement(\"img\", {\n          src: campo(this.props.configuracionCompleta.imagenLogin),\n          alt: \"preview\",\n          className: \"preview-image\",\n          style: {\n            height: \"780px\",\n            borderRadius: \"2%\",\n            width: \"750px\",\n            objectFit: \"cover\"\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 113\n          },\n          __self: this\n        }), React.createElement(Field, {\n          name: \"image\",\n          type: \"file\",\n          validate: [this.validateImageWeight, this.validarAnchoImagenLogin, this.validarAltoImagenLogin, this.validateImageFormat],\n          component: this.renderFileInput,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 116\n          },\n          __self: this\n        })));\n\n      case 4:\n        return React.createElement(React.Fragment, null, React.createElement(\"div\", {\n          style: {\n            paddingTop: '3px',\n            paddingBottom: '25px',\n            paddingLeft: '241px'\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 133\n          },\n          __self: this\n        }, React.createElement(\"img\", {\n          src: campo(this.props.configuracionCompleta.logo),\n          alt: \"preview\",\n          className: \"preview-image-dos\",\n          style: {\n            height: \"170px\",\n            width: \"400px\",\n            borderRadius: \"2%\",\n            objectFit: \"cover\"\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 138\n          },\n          __self: this\n        }), React.createElement(Field, {\n          name: \"imagenDos\",\n          type: \"file\",\n          validate: [this.validateImageWeight, this.validarAnchoImagenLogo, this.validarAltoImagenLogo, this.validateImageFormat],\n          component: this.renderFileInputLogo,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 141\n          },\n          __self: this\n        })));\n\n      default:\n        return 'Unknown step';\n    }\n  }\n\n  getBase64(file, cb) {\n    let reader = new FileReader();\n    reader.readAsDataURL(file);\n\n    reader.onload = function () {\n      cb(reader.result);\n    };\n\n    reader.onerror = function (error) {\n      console.log('Error: ', error);\n    };\n  }\n\n  render() {\n    return React.createElement(React.Fragment, null, React.createElement(\"div\", {\n      className: \"text-left titulo\",\n      style: estiloLetrero,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 452\n      },\n      __self: this\n    }, React.createElement(\"h4\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 453\n      },\n      __self: this\n    }, \"Configuracion de aspecto\")), React.createElement(Barra, {\n      texto: \"Inicio > Configuracion de aspecto\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 455\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      className: \"col-sm-12\",\n      style: {\n        paddingTop: \"20px\",\n        paddingRight: \"46px\",\n        paddingLeft: \"40px\",\n        paddingBottom: \"7px\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 456\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"container shadow\",\n      style: {\n        background: \"white\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 462\n      },\n      __self: this\n    }, this.props.habilitado ? React.createElement(\"div\", {\n      className: \"col-sm-12\",\n      style: {\n        padding: \"50px\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 464\n      },\n      __self: this\n    }, React.createElement(Alert, {\n      severity: \"error\",\n      variant: \"outlined\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 465\n      },\n      __self: this\n    }, React.createElement(AlertTitle, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 466\n      },\n      __self: this\n    }, \"Sin permiso\"), \"No tiene permisos suficientes para configurar el aspecto\")) : React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 469\n      },\n      __self: this\n    }, React.createElement(Stepper, {\n      activeStep: this.state.activeStep,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 470\n      },\n      __self: this\n    }, this.getSteps().map((label, index) => React.createElement(Step, {\n      key: label,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 472\n      },\n      __self: this\n    }, React.createElement(StepButton, {\n      onClick: this.handleStep(index),\n      completed: this.state.completed[index],\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 473\n      },\n      __self: this\n    }, label)))), React.createElement(\"div\", {\n      className: \"container\",\n      style: {\n        paddingTop: \"7px\",\n        paddingRight: \"12px\",\n        paddingLeft: \"40px\",\n        paddingBottom: \"20px\",\n        margin: \"0px 0px 32px\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 480\n      },\n      __self: this\n    }, React.createElement(\"form\", {\n      onSubmit: this.props.handleSubmit(this.handleSubmitForm),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 487\n      },\n      __self: this\n    }, this.allStepsCompleted() ? React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 489\n      },\n      __self: this\n    }, React.createElement(Typography, {\n      className: this.useStyles.instructions,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 490\n      },\n      __self: this\n    }, \"Todos los cambios han sido guardados\"), React.createElement(Button, {\n      onClick: this.handleReset,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 493\n      },\n      __self: this\n    }, \"Aceptar\")) : React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 496\n      },\n      __self: this\n    }, React.createElement(Typography, {\n      className: this.useStyles.instructions,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 497\n      },\n      __self: this\n    }, this.getStepContent(this.state.activeStep)), React.createElement(\"div\", {\n      className: \"row\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 498\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"col-md-4\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 499\n      },\n      __self: this\n    }, React.createElement(Button, {\n      disabled: this.state.activeStep === 0,\n      startIcon: React.createElement(ArrowBackIosIcon, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 500\n        },\n        __self: this\n      }),\n      onClick: this.handleBack,\n      className: this.useStyles.button,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 500\n      },\n      __self: this\n    }, \"Volver\")), React.createElement(\"div\", {\n      className: \"col-md-4\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 504\n      },\n      __self: this\n    }, React.createElement(Button, {\n      variant: \"contained\",\n      type: \"submit\",\n      onClick: this.handleNext,\n      startIcon: React.createElement(NavigateNextIcon, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 509\n        },\n        __self: this\n      }),\n      className: \"btn btn-dark\",\n      style: {\n        background: this.props.configuracionCompleta.botones,\n        fontSize: \"13px\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 505\n      },\n      __self: this\n    }, \"Siguiente\")), this.state.activeStep !== this.getSteps().length && (this.state.completed[this.state.activeStep] ? React.createElement(\"div\", {\n      className: \"col-md-4\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 517\n      },\n      __self: this\n    }, React.createElement(Alert, {\n      severity: \"success\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 518\n      },\n      __self: this\n    }, \"Paso \", this.state.activeStep + 1, \" guardado\")) : React.createElement(\"div\", {\n      className: \"col-md-4\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 521\n      },\n      __self: this\n    }, React.createElement(Button, {\n      variant: \"contained\",\n      type: \"submit\",\n      startIcon: React.createElement(SaveIcon, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 524\n        },\n        __self: this\n      }),\n      className: \"btn btn-dark\",\n      style: {\n        background: this.props.configuracionCompleta.botones,\n        fontSize: \"13px\"\n      },\n      onClick: this.handleComplete,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 522\n      },\n      __self: this\n    }, this.completedSteps() === this.totalSteps() - 1 ? 'Confirmar cambios' : 'Guardar')))))))))), React.createElement(NotificationContainer, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 542\n      },\n      __self: this\n    }));\n  }\n\n}\n\nConfiguracion.propTypes = {\n  previewLogoUrl: PropTypes.string,\n  tipoDeImagen: PropTypes.string,\n  pesoMaximo: PropTypes.number,\n  anchuraMaxima: PropTypes.number,\n  alturaMaxima: PropTypes.number,\n  handleSubmit: PropTypes.func.isRequired\n};\nConfiguracion.defaultProps = {\n  previewLogoUrl: \"https://imgplaceholder.com/400x300\",\n  tipoDeImagen: \"image/jpeg, image/png\",\n  pesoMaximo: 100,\n  anchuraMaxima: 100,\n  alturaMaxima: 100\n};\nconst estiloLetrero = {\n  paddingTop: \"20px\",\n  paddingRight: \"12px\",\n  paddingLeft: \"40px\",\n  paddingBottom: \"1px\"\n};\n\nfunction mapStateToProps(state) {\n  return {\n    configuracionCompleta: state.conf.configuracion,\n    mensaje: state.conf.mensaje,\n    habilitado: state.conf.estadoConfiguracion\n  };\n}\n\nlet formularioConfiguracion = reduxForm({\n  form: \"formularioConfiguracion\"\n})(Configuracion);\nexport default connect(mapStateToProps, {\n  consultarConfiguracion,\n  actualizarMensaje,\n  actionActualizarBarraLateral,\n  actualizarFotoLogin,\n  actualizarFotoLogo,\n  actionActualizarConfiguracion,\n  actionActualizarBarraSuperior,\n  actionActualizarBotones,\n  actionConsultarConfiguracionCompleta\n})(formularioConfiguracion);","map":{"version":3,"sources":["C:/Users/jeiso/Desktop/proyectosESCOM/frontend/ESCOM-view/src/SuperAdministrador/componentes/administrar/ContenidoConfiguracion.js"],"names":["React","makeStyles","Stepper","Step","StepButton","Button","Typography","SketchPicker","Field","reduxForm","PropTypes","Barra","connect","consultarConfiguracion","actionActualizarBarraLateral","actualizarMensaje","actualizarFotoLogin","actualizarFotoLogo","actionActualizarConfiguracion","actionActualizarBarraSuperior","actionActualizarBotones","actionConsultarConfiguracionCompleta","campo","NotificationContainer","NotificationManager","Alert","AlertTitle","ArrowBackIosIcon","NavigateNextIcon","SaveIcon","PhotoCamera","Configuracion","Component","state","activeStep","completed","configuracion","imagenLogin","imagenLogo","completedSteps","Object","keys","length","handleChangeComplete","color","props","hex","handleChangeCompleteSuperior","handleChangeCompleteBotones","allStepsCompleted","totalSteps","getSteps","isLastStep","useStyles","theme","root","width","button","marginRight","spacing","display","instructions","marginTop","marginBottom","handleReset","setState","handleComplete","newCompleted","logo","configuracionCompleta","barraLateral","barraSuperior","botones","validacion","validateImageWeight","localStorage","getItem","handleNext","newActiveStep","findIndex","step","i","handleStep","handleBack","cuenta","imageFile","size","imageFileKb","pesoMaximo","validarAnchoImagenLogin","validarAltoImagenLogin","height","validarAnchoImagenLogo","validarAltoImagenLogo","validateImageWidth","anchuraMaxima","validateImageHeight","alturaMaxima","validateImageFormat","tipoDeImagen","includes","type","handlePreview","imageUrl","previewImageDom","document","querySelector","src","handleChange","event","input","preventDefault","target","files","error","value","localImageUrl","URL","createObjectURL","imageObject","window","Image","onload","naturalWidth","naturalHeight","onChange","revokeObjectURL","getBase64","result","handlePreviewLogo","handleChangeLogo","leto","renderFileInput","meta","touched","warning","name","renderFileInputLogo","handleSubmitForm","values","console","log","componentDidMount","componentDidUpdate","mensaje","success","getStepContent","paddingTop","paddingBottom","paddingLeft","borderRadius","objectFit","file","cb","reader","FileReader","readAsDataURL","onerror","render","estiloLetrero","paddingRight","background","habilitado","padding","map","label","index","margin","handleSubmit","fontSize","propTypes","previewLogoUrl","string","number","func","isRequired","defaultProps","mapStateToProps","conf","estadoConfiguracion","formularioConfiguracion","form"],"mappings":"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","sourcesContent":["import React from 'react';\r\n\r\nimport 'react-notifications/lib/notifications.css';\r\n\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Stepper from '@material-ui/core/Stepper';\r\nimport Step from '@material-ui/core/Step';\r\nimport StepButton from '@material-ui/core/StepButton';\r\nimport Button from '@material-ui/core/Button';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport { SketchPicker } from 'react-color';\r\nimport { Field, reduxForm } from \"redux-form\";\r\nimport PropTypes from \"prop-types\";\r\nimport Barra from '../general/BarraDirecciones.js';\r\nimport { connect } from 'react-redux';\r\nimport { consultarConfiguracion, actionActualizarBarraLateral,actualizarMensaje, actualizarFotoLogin, actualizarFotoLogo, actionActualizarConfiguracion, actionActualizarBarraSuperior, actionActualizarBotones, actionConsultarConfiguracionCompleta } from '../../actions/actionConfiguracion.js'\r\nimport { campo } from '../../utilitario/GenerarInputs.js'\r\nimport { NotificationContainer, NotificationManager } from 'react-notifications';\r\nimport Alert from '@material-ui/lab/Alert';\r\nimport AlertTitle from '@material-ui/lab/AlertTitle';\r\n\r\nimport ArrowBackIosIcon from '@material-ui/icons/ArrowBackIos';\r\nimport NavigateNextIcon from '@material-ui/icons/NavigateNext';\r\nimport SaveIcon from '@material-ui/icons/Save';\r\nimport PhotoCamera from '@material-ui/icons/PhotoCamera';\r\n\r\nclass Configuracion extends React.Component {\r\n\r\n    state = {\r\n        activeStep: 0,\r\n        completed: {},\r\n        configuracion: null,\r\n        imagenLogin: null,\r\n        imagenLogo: null\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.props.actionConsultarConfiguracionCompleta(localStorage.getItem('Token'));\r\n    }\r\n\r\n    componentDidUpdate() {\r\n        switch (this.props.mensaje) {\r\n            case 'Configuracion actualizada':\r\n                NotificationManager.success('Configuracion de aspecto actualizada');\r\n                break;\r\n            case '':\r\n                break;\r\n            default:\r\n                break;\r\n        }\r\n        this.props.actualizarMensaje('');\r\n    }\r\n\r\n    getSteps() {\r\n        return ['Color barra lateral', 'Color barra superior', 'Color de botones', 'Imagen del login', 'Imagen del logo'];\r\n    }\r\n\r\n    completedSteps = () => {\r\n        return Object.keys(this.state.completed).length;\r\n    };\r\n\r\n    handleChangeComplete = (color) => {\r\n        this.props.actionActualizarBarraLateral(color.hex);\r\n    };\r\n\r\n    handleChangeCompleteSuperior = (color) => {\r\n        this.props.actionActualizarBarraSuperior(color.hex);\r\n    };\r\n\r\n    handleChangeCompleteBotones = (color) => {\r\n        this.props.actionActualizarBotones(color.hex);\r\n    };\r\n    //\r\n    getStepContent(step) {\r\n        switch (step) {\r\n            case 0:\r\n                return (\r\n                    <div style={{\r\n                        paddingTop: '3px',\r\n                        paddingBottom: '25px',\r\n                        paddingLeft: '267px'\r\n                    }}>\r\n                        <SketchPicker disableAlpha={true} color={this.props.configuracionCompleta.barraLateral} onChangeComplete={this.handleChangeComplete} />\r\n                    </div>\r\n                )\r\n            case 1:\r\n                return (\r\n                    <div style={{\r\n                        paddingTop: '3px',\r\n                        paddingBottom: '25px',\r\n                        paddingLeft: '267px'\r\n                    }}>\r\n                        <SketchPicker disableAlpha={true} color={this.props.configuracionCompleta.barraSuperior} onChangeComplete={this.handleChangeCompleteSuperior} />\r\n                    </div>\r\n                )\r\n            case 2:\r\n                return (\r\n                    <div style={{\r\n                        paddingTop: '3px',\r\n                        paddingBottom: '25px',\r\n                        paddingLeft: '267px'\r\n                    }}>\r\n                        <SketchPicker disableAlpha={true} color={this.props.configuracionCompleta.botones} onChangeComplete={this.handleChangeCompleteBotones} />\r\n                    </div>\r\n                );\r\n            case 3:\r\n                return (<>\r\n                    <div style={{\r\n                        paddingTop: '3px',\r\n                        paddingBottom: '25px',\r\n                        paddingLeft: '57px'\r\n                    }}>\r\n                        <img src={campo(this.props.configuracionCompleta.imagenLogin)} alt=\"preview\"\r\n                            className=\"preview-image\"\r\n                            style={{ height: \"780px\", borderRadius: \"2%\", width: \"750px\", objectFit: \"cover\" }} />\r\n                        <Field\r\n                            name=\"image\"\r\n                            type=\"file\"\r\n                            validate={[\r\n                                this.validateImageWeight,\r\n                                this.validarAnchoImagenLogin,\r\n                                this.validarAltoImagenLogin,\r\n                                this.validateImageFormat\r\n                            ]}\r\n                            component={this.renderFileInput}\r\n                        />\r\n                    </div>\r\n\r\n                </>);\r\n            case 4:\r\n                return (\r\n                    <>\r\n                        <div style={{\r\n                            paddingTop: '3px',\r\n                            paddingBottom: '25px',\r\n                            paddingLeft: '241px'\r\n                        }}>\r\n                            <img src={campo(this.props.configuracionCompleta.logo)} alt=\"preview\"\r\n                                className=\"preview-image-dos\"\r\n                                style={{ height: \"170px\", width: \"400px\", borderRadius: \"2%\", objectFit: \"cover\" }} />\r\n                            <Field\r\n                                name=\"imagenDos\"\r\n                                type=\"file\"\r\n                                validate={[\r\n                                    this.validateImageWeight,\r\n                                    this.validarAnchoImagenLogo,\r\n                                    this.validarAltoImagenLogo,\r\n                                    this.validateImageFormat\r\n                                ]}\r\n                                component={this.renderFileInputLogo}\r\n                            />\r\n                        </div>\r\n\r\n                    </>)\r\n\r\n            default:\r\n                return 'Unknown step';\r\n        }\r\n    }\r\n\r\n    allStepsCompleted = () => {\r\n        return this.completedSteps() === this.totalSteps();\r\n    };\r\n\r\n    totalSteps = () => {\r\n        return this.getSteps().length;\r\n    };\r\n\r\n    isLastStep = () => {\r\n        return this.state.activeStep === this.totalSteps() - 1;\r\n    };\r\n\r\n    useStyles = makeStyles(theme => ({\r\n        root: {\r\n            width: '100%',\r\n        },\r\n        button: {\r\n            marginRight: theme.spacing(1),\r\n        },\r\n        completed: {\r\n            display: 'inline-block',\r\n        },\r\n        instructions: {\r\n            marginTop: theme.spacing(1),\r\n            marginBottom: theme.spacing(1),\r\n        },\r\n    }));\r\n\r\n    handleReset = () => {\r\n        this.setState({ activeStep: 0, completed: {} })\r\n    };\r\n\r\n    handleComplete = () => {\r\n        const newCompleted = this.state.completed;\r\n        newCompleted[this.state.activeStep] = true;\r\n        this.setState({ completed: newCompleted })\r\n        if (this.allStepsCompleted()) {\r\n            let configuracion = {\r\n                logo: this.props.configuracionCompleta.logo,\r\n                imagenLogin: this.props.configuracionCompleta.imagenLogin,\r\n                barraLateral: this.props.configuracionCompleta.barraLateral,\r\n                barraSuperior: this.props.configuracionCompleta.barraSuperior,\r\n                botones: this.props.configuracionCompleta.botones\r\n            }\r\n            let validacion=this.validateImageWeight(this.props.configuracionCompleta.imagenLogin);\r\n            debugger;\r\n            this.props.actionActualizarConfiguracion(configuracion, localStorage.getItem('Token'));\r\n        }\r\n        this.handleNext();\r\n    };\r\n\r\n    handleNext = () => {\r\n        const newActiveStep =\r\n            this.isLastStep() && !this.allStepsCompleted()\r\n                ? // It's the last step, but not all steps have been completed,\r\n                // find the first step that has been completed\r\n                this.getSteps().findIndex((step, i) => !(i in this.state.completed))\r\n                : this.state.activeStep + 1;\r\n        this.setState({ activeStep: newActiveStep })\r\n    };\r\n\r\n    handleStep = step => () => {\r\n        this.setState({ activeStep: step })\r\n    };\r\n\r\n    handleBack = () => {\r\n        let cuenta = this.state.activeStep - 1;\r\n        this.setState({ activeStep: cuenta })\r\n    };\r\n\r\n    static propTypes = {\r\n        previewLogoUrl: PropTypes.string,\r\n        tipoDeImagen: PropTypes.string,\r\n        pesoMaximo: PropTypes.number,\r\n        anchuraMaxima: PropTypes.number,\r\n        alturaMaxima: PropTypes.number,\r\n        handleSubmit: PropTypes.func.isRequired\r\n    };\r\n\r\n    static defaultProps = {\r\n        previewLogoUrl: \"https://imgplaceholder.com/400x300\",\r\n        tipoDeImagen: \"image/jpeg, image/png\",\r\n        pesoMaximo: 100,\r\n        anchuraMaxima: 100,\r\n        alturaMaxima: 100\r\n    };\r\n    validateImageWeight = imageFile => {\r\n        if (imageFile && imageFile.size) {\r\n            const imageFileKb = imageFile.size / 1024;\r\n            const { pesoMaximo } = this.props;\r\n\r\n            if (imageFileKb > pesoMaximo) {\r\n                return `El peso de la imagen debe ser menor o igual a ${pesoMaximo}kb`;\r\n            }\r\n        }\r\n    };\r\n    validarAnchoImagenLogin = imageFile => {\r\n        if (imageFile) {\r\n            if (imageFile.width > 750) {\r\n                return `El ancho de la imagen debe ser menor o igual a 750px`;\r\n            }\r\n        }\r\n    };\r\n\r\n    validarAltoImagenLogin = imageFile => {\r\n        if (imageFile) {\r\n            if (imageFile.height > 780) {\r\n                return `La altura de la imagen debe ser menor o igual a 780px`;\r\n            }\r\n        }\r\n    };\r\n\r\n    validarAnchoImagenLogo = imageFile => {\r\n        if (imageFile) {\r\n            if (imageFile.width > 400) {\r\n                return `El ancho de la imagen debe ser menor o igual a 400px`;\r\n            }\r\n        }\r\n    };\r\n\r\n    validarAltoImagenLogo = imageFile => {\r\n        if (imageFile) {\r\n            if (imageFile.height > 170) {\r\n                return `La altura de la imagen debe ser menor o igual a 170px`;\r\n            }\r\n        }\r\n    };\r\n\r\n    validateImageWidth = imageFile => {\r\n        if (imageFile) {\r\n            const { anchuraMaxima } = this.props;\r\n            if (imageFile.width > anchuraMaxima) {\r\n                return `El ancho de la imagen debe ser menor o igual a ${anchuraMaxima}px`;\r\n            }\r\n        }\r\n    };\r\n    validateImageHeight = imageFile => {\r\n        if (imageFile) {\r\n            const { alturaMaxima } = this.props;\r\n\r\n            if (imageFile.height > alturaMaxima) {\r\n                return `La altura de la imagen debe ser menor o igual a ${alturaMaxima}px`;\r\n            }\r\n        }\r\n    };\r\n\r\n    validateImageFormat = imageFile => {\r\n        if (imageFile) {\r\n            const { tipoDeImagen } = this.props;\r\n            if (!tipoDeImagen.includes(imageFile.type)) {\r\n                return `El tipo de imagen debe ser ${tipoDeImagen}`;\r\n            }\r\n        }\r\n    };\r\n\r\n    handlePreview = imageUrl => {\r\n        const previewImageDom = document.querySelector(\".preview-image\");\r\n        previewImageDom.src = imageUrl;\r\n    };\r\n\r\n    handleChange = (event, input) => {\r\n        event.preventDefault();\r\n        let imageFile = event.target.files[0];\r\n        const { tipoDeImagen } = this.props;\r\n        if (imageFile) {\r\n            if (!tipoDeImagen.includes(imageFile.type)) {\r\n                NotificationManager.error('Seleccione un archivo de imagen .jpg o .png');\r\n                event.target.value = null;\r\n            } else {\r\n\r\n                const localImageUrl = URL.createObjectURL(imageFile);\r\n                const imageObject = new window.Image();\r\n\r\n                imageObject.onload = () => {\r\n                    imageFile.width = imageObject.naturalWidth;\r\n                    imageFile.height = imageObject.naturalHeight;\r\n                    input.onChange(imageFile);\r\n                    URL.revokeObjectURL(imageFile);\r\n                };\r\n                imageObject.src = localImageUrl;\r\n                this.getBase64(imageFile, (result) => {\r\n                    this.props.actualizarFotoLogin(result);\r\n                });\r\n\r\n                this.handlePreview(localImageUrl);\r\n            }\r\n        }\r\n    };\r\n\r\n    handlePreviewLogo = imageUrl => {\r\n        const previewImageDom = document.querySelector(\".preview-image-dos\");\r\n        previewImageDom.src = imageUrl;\r\n    };\r\n\r\n    handleChangeLogo = (event, input) => {\r\n        event.preventDefault();\r\n        let imageFile = event.target.files[0];\r\n        const { tipoDeImagen } = this.props;\r\n        if (imageFile) {\r\n            var leto=this.validateImageWeight(imageFile);\r\n            debugger;\r\n            if (!tipoDeImagen.includes(imageFile.type)) {\r\n                NotificationManager.error('Seleccione un archivo de imagen .jpg o .png');\r\n                event.target.value = null;\r\n            } else {\r\n\r\n                const localImageUrl = URL.createObjectURL(imageFile);\r\n                const imageObject = new window.Image();\r\n\r\n                imageObject.onload = () => {\r\n                    imageFile.width = imageObject.naturalWidth;\r\n                    imageFile.height = imageObject.naturalHeight;\r\n                    input.onChange(imageFile);\r\n                    URL.revokeObjectURL(imageFile);\r\n                };\r\n                imageObject.src = localImageUrl;\r\n                this.getBase64(imageFile, (result) => {\r\n                    this.props.actualizarFotoLogo(result);                   \r\n                });\r\n                this.handlePreviewLogo(localImageUrl);\r\n            }\r\n        }\r\n    };\r\n\r\n\r\n    renderFileInput = ({ input, type, meta }) => {\r\n        const { tipoDeImagen } = this.props;\r\n        const { touched, error, warning } = meta;\r\n        return (\r\n            <div>\r\n\r\n                <input\r\n                    id=\"numeroUno\"\r\n                    style={{ display: 'none' }}\r\n                    name={input.name}\r\n                    type={type}\r\n                    accept={tipoDeImagen}\r\n                    onChange={event => this.handleChange(event, input)}\r\n                />\r\n                <label htmlFor=\"numeroUno\">\r\n                    <Button component=\"span\" startIcon={<PhotoCamera />}>Seleccionar imagen</Button>\r\n                </label>\r\n                {touched && ((error && <span className=\"text-danger letra form-group\">{error}</span>) || (warning && <span>{warning}</span>))}\r\n            </div>\r\n        );\r\n    };\r\n\r\n    renderFileInputLogo = ({ input, type, meta }) => {\r\n        const { tipoDeImagen } = this.props;\r\n        const { touched, error, warning } = meta;\r\n        return (\r\n            <div>\r\n                <input\r\n                    id=\"numeroDos\"\r\n                    style={{ display: 'none' }}\r\n                    name={input.name}\r\n                    type={type}\r\n                    accept={tipoDeImagen}\r\n                    onChange={event => this.handleChangeLogo(event, input)}\r\n                />\r\n                <label htmlFor=\"numeroDos\">\r\n                    <Button component=\"span\" startIcon={<PhotoCamera />}>Seleccionar imagen</Button>\r\n                </label>\r\n                {touched && ((error && <span className=\"text-danger letra form-group\">{error}</span>) || (warning && <span>{warning}</span>))}\r\n            </div>\r\n        );\r\n    };\r\n\r\n    getBase64(file, cb) {\r\n        let reader = new FileReader();\r\n        reader.readAsDataURL(file);\r\n        reader.onload = function () {\r\n            cb(reader.result)\r\n        };\r\n        reader.onerror = function (error) {\r\n            console.log('Error: ', error);\r\n        };\r\n    }\r\n\r\n\r\n    handleSubmitForm = values => {\r\n        // if(this.completedSteps() === this.totalSteps() - 1){\r\n        //     debugger;\r\n        // }\r\n        console.log(this.state.completed);\r\n    }\r\n\r\n\r\n    render() {\r\n        return (\r\n            <>\r\n                <div className=\"text-left titulo\" style={estiloLetrero}>\r\n                    <h4>Configuracion de aspecto</h4>\r\n                </div>\r\n                <Barra texto=\"Inicio > Configuracion de aspecto\" />\r\n                <div className=\"col-sm-12\" style={{\r\n                    paddingTop: \"20px\",\r\n                    paddingRight: \"46px\",\r\n                    paddingLeft: \"40px\",\r\n                    paddingBottom: \"7px\"\r\n                }}>\r\n                    <div className=\"container shadow\" style={{ background: \"white\" }} >\r\n                        {\r\n                            this.props.habilitado ? <div className=\"col-sm-12\" style={{padding:\"50px\"}}>\r\n                                <Alert severity=\"error\" variant=\"outlined\">\r\n                                    <AlertTitle>Sin permiso</AlertTitle>\r\n                                    No tiene permisos suficientes para configurar el aspecto</Alert>\r\n                            </div> :\r\n                                <div>\r\n                                    <Stepper activeStep={this.state.activeStep}>\r\n                                        {this.getSteps().map((label, index) => (\r\n                                            <Step key={label}>\r\n                                                <StepButton onClick={this.handleStep(index)} completed={this.state.completed[index]}>\r\n                                                    {label}\r\n                                                </StepButton>\r\n                                            </Step>\r\n                                        ))}\r\n                                    </Stepper>\r\n\r\n                                    <div className=\"container\" style={{\r\n                                        paddingTop: \"7px\",\r\n                                        paddingRight: \"12px\",\r\n                                        paddingLeft: \"40px\",\r\n                                        paddingBottom: \"20px\",\r\n                                        margin: \"0px 0px 32px\"\r\n                                    }}>\r\n                                        <form onSubmit={this.props.handleSubmit(this.handleSubmitForm)}>\r\n                                            {this.allStepsCompleted() ? (\r\n                                                <div>\r\n                                                    <Typography className={this.useStyles.instructions}>\r\n                                                        Todos los cambios han sido guardados\r\n                                                    </Typography>\r\n                                                    <Button onClick={this.handleReset}>Aceptar</Button>\r\n                                                </div>\r\n                                            ) : (\r\n                                                    <div>\r\n                                                        <Typography className={this.useStyles.instructions}>{this.getStepContent(this.state.activeStep)}</Typography>\r\n                                                        <div className=\"row\">\r\n                                                            <div className=\"col-md-4\">\r\n                                                                <Button disabled={this.state.activeStep === 0} startIcon={<ArrowBackIosIcon />} onClick={this.handleBack} className={this.useStyles.button}>\r\n                                                                    Volver\r\n                                                        </Button>\r\n                                                            </div>\r\n                                                            <div className=\"col-md-4\">\r\n                                                                <Button\r\n                                                                    variant=\"contained\"\r\n                                                                    type='submit'\r\n                                                                    onClick={this.handleNext}\r\n                                                                    startIcon={<NavigateNextIcon />}\r\n                                                                    className=\"btn btn-dark\"\r\n                                                                    style={{ background: this.props.configuracionCompleta.botones, fontSize: \"13px\" }}>\r\n                                                                    Siguiente\r\n                                                        </Button>\r\n                                                            </div>\r\n                                                            {this.state.activeStep !== this.getSteps().length &&\r\n                                                                (this.state.completed[this.state.activeStep] ? (\r\n                                                                    <div className=\"col-md-4\">\r\n                                                                        <Alert severity=\"success\">Paso {this.state.activeStep + 1} guardado</Alert>\r\n                                                                    </div>\r\n                                                                ) : (\r\n                                                                        <div className=\"col-md-4\">\r\n                                                                            <Button variant=\"contained\"\r\n                                                                                type=\"submit\"\r\n                                                                                startIcon={<SaveIcon />}\r\n                                                                                className=\"btn btn-dark\"\r\n                                                                                style={{ background: this.props.configuracionCompleta.botones, fontSize: \"13px\" }}\r\n                                                                                onClick={this.handleComplete}>\r\n                                                                                {this.completedSteps() === this.totalSteps() - 1 ? 'Confirmar cambios' : 'Guardar'}\r\n                                                                            </Button>\r\n                                                                        </div>\r\n\r\n                                                                    ))}\r\n                                                        </div>\r\n                                                    </div>\r\n                                                )}\r\n                                        </form>\r\n                                    </div>\r\n                                </div>\r\n                        }\r\n                    </div >\r\n                </div>\r\n                <NotificationContainer />\r\n            </>\r\n        );\r\n    }\r\n}\r\nconst estiloLetrero = {\r\n    paddingTop: \"20px\",\r\n    paddingRight: \"12px\",\r\n    paddingLeft: \"40px\",\r\n    paddingBottom: \"1px\"\r\n}\r\n\r\nfunction mapStateToProps(state) {\r\n    return {\r\n        configuracionCompleta: state.conf.configuracion,\r\n        mensaje: state.conf.mensaje,\r\n        habilitado: state.conf.estadoConfiguracion\r\n    }\r\n}\r\n\r\nlet formularioConfiguracion = reduxForm({\r\n    form: \"formularioConfiguracion\"\r\n})(Configuracion);\r\n\r\n\r\nexport default connect(mapStateToProps, { consultarConfiguracion,actualizarMensaje, actionActualizarBarraLateral, actualizarFotoLogin, actualizarFotoLogo, actionActualizarConfiguracion, actionActualizarBarraSuperior, actionActualizarBotones, actionConsultarConfiguracionCompleta })(formularioConfiguracion);\r\n\r\n"]},"metadata":{},"sourceType":"module"}