{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\jeiso\\\\Desktop\\\\proyectosESCOM\\\\frontend\\\\ESCOM-view\\\\src\\\\ModuloDocumental\\\\components\\\\Leader\\\\Setting\\\\Document\\\\add.js\";\nimport React from 'react';\nimport { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { reduxForm, Field } from 'redux-form';\nimport { withRouter } from 'react-router-dom';\nimport { getListPrograms } from '../../../../redux/actions/programA.js';\nimport { addDocument } from '../../../../redux/actions/documentA.js';\nimport { required, thousand, twoHundred, minimum, select } from '../../../utilitarian/validations.js';\n\nclass Add extends Component {\n  constructor(...args) {\n    super(...args);\n\n    this.handleSubmit = formValues => {\n      let documentN = {\n        id: 0,\n        description: formValues.description,\n        idUser: formValues.idUser,\n        state: 1,\n        program: formValues.program,\n        type: formValues.type,\n        requestData: null\n      };\n      this.props.addDocument(localStorage.getItem('Token'), documentN);\n      formValues.description = '';\n      formValues.idUser = '';\n      formValues.program = '';\n      formValues.type = '';\n    };\n  }\n\n  componentWillMount() {\n    this.props.getListPrograms(localStorage.getItem('Token'));\n  }\n\n  loadProgram() {\n    return this.props.listProgram.map(program => {\n      return React.createElement(\"option\", {\n        value: program.id,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 37\n        },\n        __self: this\n      }, program.name);\n    });\n  }\n\n  loadUser() {\n    return React.createElement(\"option\", {\n      value: \"1\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 44\n      },\n      __self: this\n    }, \"Cristian Estevez\");\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 50\n      },\n      __self: this\n    }, React.createElement(\"button\", {\n      type: \"button\",\n      className: \"btn text-light btn-sm float-right naranja \",\n      \"data-toggle\": \"modal\",\n      \"data-target\": \"#addModal\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 51\n      },\n      __self: this\n    }, React.createElement(\"i\", {\n      class: \"fas fa-plus\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 52\n      },\n      __self: this\n    }), \" Agregar\"), React.createElement(\"div\", {\n      class: \"modal fade\",\n      id: \"addModal\",\n      tabindex: \"-1\",\n      role: \"dialog\",\n      \"aria-labelledby\": \"exampleModalLabel\",\n      \"aria-hidden\": \"true\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 55\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      class: \"modal-dialog\",\n      role: \"document\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 56\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      class: \"modal-content\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 57\n      },\n      __self: this\n    }, React.createElement(\"form\", {\n      className: \"form-horizontal\",\n      onSubmit: this.props.handleSubmit(this.handleSubmit),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 58\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      class: \"modal-header\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 59\n      },\n      __self: this\n    }, React.createElement(\"h4\", {\n      class: \"modal-title\",\n      id: \"exampleModalLabel\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 60\n      },\n      __self: this\n    }, \"NUEVO DOCUMENTO\"), React.createElement(\"button\", {\n      type: \"button\",\n      class: \"close\",\n      \"data-dismiss\": \"modal\",\n      \"aria-label\": \"Close\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 61\n      },\n      __self: this\n    }, React.createElement(\"span\", {\n      \"aria-hidden\": \"true\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 62\n      },\n      __self: this\n    }, \"\\xD7\"))), React.createElement(\"div\", {\n      class: \"modal-body\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 65\n      },\n      __self: this\n    }, React.createElement(\"label\", {\n      for: \"form_control_1\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 66\n      },\n      __self: this\n    }, \"Programa academico: \"), React.createElement(\"div\", {\n      className: \"row\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 67\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"col-sm-8\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 68\n      },\n      __self: this\n    }, React.createElement(Field, {\n      name: \"program\",\n      validate: [select],\n      className: \"bs-select form-control\",\n      component: \"select\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 69\n      },\n      __self: this\n    }, React.createElement(\"option\", {\n      selected: true,\n      value: \"0\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 70\n      },\n      __self: this\n    }, \"Seleccione...\"), this.loadProgram()))), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 75\n      },\n      __self: this\n    }), React.createElement(\"label\", {\n      for: \"form_control_1\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 77\n      },\n      __self: this\n    }, \"Descripci\\xF3n: \"), React.createElement(\"div\", {\n      className: \"row\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 78\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"col-sm-8\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 79\n      },\n      __self: this\n    }, React.createElement(Field, {\n      name: \"description\",\n      validate: [required, minimum, thousand],\n      component: generarText,\n      label: \"Denominaci\\xF3n del programa\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 80\n      },\n      __self: this\n    }))), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 83\n      },\n      __self: this\n    }), React.createElement(\"label\", {\n      for: \"form_control_1\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 85\n      },\n      __self: this\n    }, \"Usuario encargado: \"), React.createElement(\"div\", {\n      className: \"row\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 86\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"col-sm-8\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 87\n      },\n      __self: this\n    }, React.createElement(Field, {\n      name: \"idUser\",\n      validate: [select],\n      className: \"bs-select form-control\",\n      component: \"select\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 88\n      },\n      __self: this\n    }, React.createElement(\"option\", {\n      selected: true,\n      value: \"0\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 89\n      },\n      __self: this\n    }, \"Seleccione...\"), this.loadUser()))), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 94\n      },\n      __self: this\n    }), React.createElement(\"label\", {\n      for: \"form_control_1\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 96\n      },\n      __self: this\n    }, \"Tipo Documento: \"), React.createElement(\"div\", {\n      className: \"row\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 97\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"col-sm-8\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 98\n      },\n      __self: this\n    }, React.createElement(Field, {\n      name: \"type\",\n      validate: [required, minimum, twoHundred],\n      component: generarInput,\n      label: \"Denominaci\\xF3n del programa\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 99\n      },\n      __self: this\n    })))), React.createElement(\"div\", {\n      class: \"modal-footer\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 104\n      },\n      __self: this\n    }, React.createElement(\"button\", {\n      type: \"button\",\n      class: \"btn btn-secondary\",\n      \"data-dismiss\": \"modal\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 105\n      },\n      __self: this\n    }, \"Close\"), React.createElement(\"button\", {\n      type: \"submit\",\n      className: \"btn btn-default naranja\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 106\n      },\n      __self: this\n    }, \"Agregar\")))))));\n  }\n\n}\n\nconst generarInput = ({\n  input,\n  placeholder,\n  label,\n  type,\n  meta: {\n    touched,\n    warning,\n    error\n  }\n}) => React.createElement(\"div\", {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 120\n  },\n  __self: this\n}, React.createElement(\"div\", {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 121\n  },\n  __self: this\n}, React.createElement(\"input\", Object.assign({}, input, {\n  type: type,\n  className: \"form-control letra form-control-solid placeholder-no-fix\",\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 122\n  },\n  __self: this\n})), touched && (error && React.createElement(\"span\", {\n  className: \"text-danger letra form-group\",\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 123\n  },\n  __self: this\n}, error) || warning && React.createElement(\"span\", {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 123\n  },\n  __self: this\n}, warning))));\n\nconst generarText = ({\n  input,\n  placeholder,\n  label,\n  type,\n  meta: {\n    touched,\n    warning,\n    error\n  }\n}) => React.createElement(\"div\", {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 129\n  },\n  __self: this\n}, React.createElement(\"div\", {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 130\n  },\n  __self: this\n}, React.createElement(\"textarea\", Object.assign({}, input, {\n  className: \"form-control letra form-control-solid placeholder-no-fix\",\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 131\n  },\n  __self: this\n})), touched && (error && React.createElement(\"span\", {\n  className: \"text-danger letra form-group\",\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 132\n  },\n  __self: this\n}, error) || warning && React.createElement(\"span\", {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 132\n  },\n  __self: this\n}, warning))));\n\nfunction mapStateToProps(state) {\n  return {\n    listProgram: state.program.listProgramR\n  };\n}\n\nlet formAdd = reduxForm({\n  form: 'addDocument',\n  enableReinitialize: true\n})(Add);\nexport default withRouter(connect(mapStateToProps, {\n  getListPrograms,\n  addDocument\n})(formAdd));","map":{"version":3,"sources":["C:/Users/jeiso/Desktop/proyectosESCOM/frontend/ESCOM-view/src/ModuloDocumental/components/Leader/Setting/Document/add.js"],"names":["React","Component","connect","reduxForm","Field","withRouter","getListPrograms","addDocument","required","thousand","twoHundred","minimum","select","Add","handleSubmit","formValues","documentN","id","description","idUser","state","program","type","requestData","props","localStorage","getItem","componentWillMount","loadProgram","listProgram","map","name","loadUser","render","generarText","generarInput","input","placeholder","label","meta","touched","warning","error","mapStateToProps","listProgramR","formAdd","form","enableReinitialize"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,SAAT,QAA0B,OAA1B;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,SAAT,EAAoBC,KAApB,QAAiC,YAAjC;AACA,SAASC,UAAT,QAA2B,kBAA3B;AACA,SAASC,eAAT,QAAgC,uCAAhC;AACA,SAASC,WAAT,QAA4B,wCAA5B;AACA,SAASC,QAAT,EAAmBC,QAAnB,EAA6BC,UAA7B,EAAyCC,OAAzC,EAAkDC,MAAlD,QAAgE,qCAAhE;;AAEA,MAAMC,GAAN,SAAkBZ,SAAlB,CAA4B;AAAA;AAAA;;AAAA,SAOxBa,YAPwB,GAOTC,UAAU,IAAI;AACzB,UAAIC,SAAS,GAAG;AACZC,QAAAA,EAAE,EAAE,CADQ;AAEZC,QAAAA,WAAW,EAAEH,UAAU,CAACG,WAFZ;AAGZC,QAAAA,MAAM,EAAEJ,UAAU,CAACI,MAHP;AAIZC,QAAAA,KAAK,EAAE,CAJK;AAKZC,QAAAA,OAAO,EAAEN,UAAU,CAACM,OALR;AAMZC,QAAAA,IAAI,EAAEP,UAAU,CAACO,IANL;AAOZC,QAAAA,WAAW,EAAE;AAPD,OAAhB;AASA,WAAKC,KAAL,CAAWjB,WAAX,CAAuBkB,YAAY,CAACC,OAAb,CAAqB,OAArB,CAAvB,EAAsDV,SAAtD;AACAD,MAAAA,UAAU,CAACG,WAAX,GAAyB,EAAzB;AACAH,MAAAA,UAAU,CAACI,MAAX,GAAoB,EAApB;AACAJ,MAAAA,UAAU,CAACM,OAAX,GAAqB,EAArB;AACAN,MAAAA,UAAU,CAACO,IAAX,GAAkB,EAAlB;AACH,KAtBuB;AAAA;;AAExBK,EAAAA,kBAAkB,GAAG;AACjB,SAAKH,KAAL,CAAWlB,eAAX,CAA2BmB,YAAY,CAACC,OAAb,CAAqB,OAArB,CAA3B;AACH;;AAoBDE,EAAAA,WAAW,GAAG;AACV,WAAO,KAAKJ,KAAL,CAAWK,WAAX,CAAuBC,GAAvB,CAA4BT,OAAD,IAAa;AAC3C,aACI;AAAQ,QAAA,KAAK,EAAEA,OAAO,CAACJ,EAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAA4BI,OAAO,CAACU,IAApC,CADJ;AAGH,KAJM,CAAP;AAKH;;AAEDC,EAAAA,QAAQ,GAAG;AACP,WACI;AAAQ,MAAA,KAAK,EAAC,GAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,0BADJ;AAGH;;AAEDC,EAAAA,MAAM,GAAG;AACL,WACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI;AAAQ,MAAA,IAAI,EAAC,QAAb;AAAsB,MAAA,SAAS,EAAC,4CAAhC;AAA6E,qBAAY,OAAzF;AAAiG,qBAAY,WAA7G;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI;AAAG,MAAA,KAAK,EAAC,aAAT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADJ,aADJ,EAKI;AAAK,MAAA,KAAK,EAAC,YAAX;AAAwB,MAAA,EAAE,EAAC,UAA3B;AAAsC,MAAA,QAAQ,EAAC,IAA/C;AAAoD,MAAA,IAAI,EAAC,QAAzD;AAAkE,yBAAgB,mBAAlF;AAAsG,qBAAY,MAAlH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI;AAAK,MAAA,KAAK,EAAC,cAAX;AAA0B,MAAA,IAAI,EAAC,UAA/B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI;AAAK,MAAA,KAAK,EAAC,eAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI;AAAM,MAAA,SAAS,EAAC,iBAAhB;AAAkC,MAAA,QAAQ,EAAE,KAAKT,KAAL,CAAWV,YAAX,CAAwB,KAAKA,YAA7B,CAA5C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI;AAAK,MAAA,KAAK,EAAC,cAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI;AAAI,MAAA,KAAK,EAAC,aAAV;AAAwB,MAAA,EAAE,EAAC,mBAA3B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,yBADJ,EAEI;AAAQ,MAAA,IAAI,EAAC,QAAb;AAAsB,MAAA,KAAK,EAAC,OAA5B;AAAoC,sBAAa,OAAjD;AAAyD,oBAAW,OAApE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI;AAAM,qBAAY,MAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADJ,CAFJ,CADJ,EAOI;AAAK,MAAA,KAAK,EAAC,YAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI;AAAO,MAAA,GAAG,EAAC,gBAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,8BADJ,EAEI;AAAK,MAAA,SAAS,EAAC,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI;AAAK,MAAA,SAAS,EAAC,UAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI,oBAAC,KAAD;AAAO,MAAA,IAAI,EAAC,SAAZ;AAAsB,MAAA,QAAQ,EAAE,CAACF,MAAD,CAAhC;AAA0C,MAAA,SAAS,EAAC,wBAApD;AAA6E,MAAA,SAAS,EAAC,QAAvF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI;AAAQ,MAAA,QAAQ,MAAhB;AAAiB,MAAA,KAAK,EAAC,GAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uBADJ,EAEK,KAAKgB,WAAL,EAFL,CADJ,CADJ,CAFJ,EAUI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAVJ,EAYI;AAAO,MAAA,GAAG,EAAC,gBAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,0BAZJ,EAaI;AAAK,MAAA,SAAS,EAAC,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI;AAAK,MAAA,SAAS,EAAC,UAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI,oBAAC,KAAD;AAAO,MAAA,IAAI,EAAC,aAAZ;AAA0B,MAAA,QAAQ,EAAE,CAACpB,QAAD,EAAWG,OAAX,EAAoBF,QAApB,CAApC;AAAmE,MAAA,SAAS,EAAEyB,WAA9E;AAA2F,MAAA,KAAK,EAAC,8BAAjG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADJ,CADJ,CAbJ,EAkBI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAlBJ,EAoBI;AAAO,MAAA,GAAG,EAAC,gBAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,6BApBJ,EAqBI;AAAK,MAAA,SAAS,EAAC,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI;AAAK,MAAA,SAAS,EAAC,UAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI,oBAAC,KAAD;AAAO,MAAA,IAAI,EAAC,QAAZ;AAAqB,MAAA,QAAQ,EAAE,CAACtB,MAAD,CAA/B;AAAyC,MAAA,SAAS,EAAC,wBAAnD;AAA4E,MAAA,SAAS,EAAC,QAAtF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI;AAAQ,MAAA,QAAQ,MAAhB;AAAiB,MAAA,KAAK,EAAC,GAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uBADJ,EAEK,KAAKoB,QAAL,EAFL,CADJ,CADJ,CArBJ,EA6BI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MA7BJ,EA+BI;AAAO,MAAA,GAAG,EAAC,gBAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,0BA/BJ,EAgCI;AAAK,MAAA,SAAS,EAAC,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI;AAAK,MAAA,SAAS,EAAC,UAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI,oBAAC,KAAD;AAAO,MAAA,IAAI,EAAC,MAAZ;AAAmB,MAAA,QAAQ,EAAE,CAACxB,QAAD,EAAWG,OAAX,EAAoBD,UAApB,CAA7B;AAA8D,MAAA,SAAS,EAAEyB,YAAzE;AAAuF,MAAA,KAAK,EAAC,8BAA7F;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADJ,CADJ,CAhCJ,CAPJ,EA8CI;AAAK,MAAA,KAAK,EAAC,cAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI;AAAQ,MAAA,IAAI,EAAC,QAAb;AAAsB,MAAA,KAAK,EAAC,mBAA5B;AAAgD,sBAAa,OAA7D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eADJ,EAEI;AAAQ,MAAA,IAAI,EAAC,QAAb;AAAsB,MAAA,SAAS,EAAC,yBAAhC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBAFJ,CA9CJ,CADJ,CADJ,CADJ,CALJ,CADJ;AAkEH;;AAzGuB;;AA6G5B,MAAMA,YAAY,GAAG,CAAC;AAAEC,EAAAA,KAAF;AAASC,EAAAA,WAAT;AAAsBC,EAAAA,KAAtB;AAA6BhB,EAAAA,IAA7B;AAAmCiB,EAAAA,IAAI,EAAE;AAAEC,IAAAA,OAAF;AAAWC,IAAAA,OAAX;AAAoBC,IAAAA;AAApB;AAAzC,CAAD,KACjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GACI,+CAAWN,KAAX;AAAkB,EAAA,IAAI,EAAEd,IAAxB;AAA8B,EAAA,SAAS,EAAC,0DAAxC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GADJ,EAEKkB,OAAO,KAAME,KAAK,IAAI;AAAM,EAAA,SAAS,EAAC,8BAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAgDA,KAAhD,CAAV,IAA6ED,OAAO,IAAI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAOA,OAAP,CAA7F,CAFZ,CADJ,CADJ;;AASA,MAAMP,WAAW,GAAG,CAAC;AAAEE,EAAAA,KAAF;AAASC,EAAAA,WAAT;AAAsBC,EAAAA,KAAtB;AAA6BhB,EAAAA,IAA7B;AAAmCiB,EAAAA,IAAI,EAAE;AAAEC,IAAAA,OAAF;AAAWC,IAAAA,OAAX;AAAoBC,IAAAA;AAApB;AAAzC,CAAD,KAChB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GACI,kDAAcN,KAAd;AAAqB,EAAA,SAAS,EAAC,0DAA/B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GADJ,EAEKI,OAAO,KAAME,KAAK,IAAI;AAAM,EAAA,SAAS,EAAC,8BAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAgDA,KAAhD,CAAV,IAA6ED,OAAO,IAAI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAOA,OAAP,CAA7F,CAFZ,CADJ,CADJ;;AASA,SAASE,eAAT,CAAyBvB,KAAzB,EAAgC;AAC5B,SAAO;AACHS,IAAAA,WAAW,EAAET,KAAK,CAACC,OAAN,CAAcuB;AADxB,GAAP;AAGH;;AAED,IAAIC,OAAO,GAAG1C,SAAS,CAAC;AACpB2C,EAAAA,IAAI,EAAE,aADc;AAEpBC,EAAAA,kBAAkB,EAAE;AAFA,CAAD,CAAT,CAGXlC,GAHW,CAAd;AAKA,eAAeR,UAAU,CAACH,OAAO,CAACyC,eAAD,EAAkB;AAAErC,EAAAA,eAAF;AAAmBC,EAAAA;AAAnB,CAAlB,CAAP,CAA2DsC,OAA3D,CAAD,CAAzB","sourcesContent":["import React from 'react';\r\nimport { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { reduxForm, Field } from 'redux-form';\r\nimport { withRouter } from 'react-router-dom';\r\nimport { getListPrograms } from '../../../../redux/actions/programA.js';\r\nimport { addDocument } from '../../../../redux/actions/documentA.js';\r\nimport { required, thousand, twoHundred, minimum, select } from '../../../utilitarian/validations.js';\r\n\r\nclass Add extends Component {\r\n\r\n    componentWillMount() {\r\n        this.props.getListPrograms(localStorage.getItem('Token'))\r\n    }\r\n\r\n\r\n    handleSubmit = formValues => {\r\n        let documentN = {\r\n            id: 0,\r\n            description: formValues.description,\r\n            idUser: formValues.idUser,\r\n            state: 1,\r\n            program: formValues.program,\r\n            type: formValues.type,\r\n            requestData: null\r\n        }\r\n        this.props.addDocument(localStorage.getItem('Token'), documentN);\r\n        formValues.description = '';\r\n        formValues.idUser = '';\r\n        formValues.program = '';\r\n        formValues.type = '';\r\n    }\r\n\r\n    loadProgram() {\r\n        return this.props.listProgram.map((program) => {\r\n            return (\r\n                <option value={program.id}>{program.name}</option>\r\n            )\r\n        })\r\n    }\r\n\r\n    loadUser() {\r\n        return (\r\n            <option value=\"1\">Cristian Estevez</option>\r\n        )\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div >\r\n                <button type=\"button\" className=\"btn text-light btn-sm float-right naranja \" data-toggle=\"modal\" data-target=\"#addModal\" >\r\n                    <i class=\"fas fa-plus\"></i> Agregar\r\n                </button>\r\n\r\n                <div class=\"modal fade\" id=\"addModal\" tabindex=\"-1\" role=\"dialog\" aria-labelledby=\"exampleModalLabel\" aria-hidden=\"true\">\r\n                    <div class=\"modal-dialog\" role=\"document\">\r\n                        <div class=\"modal-content\">\r\n                            <form className=\"form-horizontal\" onSubmit={this.props.handleSubmit(this.handleSubmit)}>\r\n                                <div class=\"modal-header\">\r\n                                    <h4 class=\"modal-title\" id=\"exampleModalLabel\">NUEVO DOCUMENTO</h4>\r\n                                    <button type=\"button\" class=\"close\" data-dismiss=\"modal\" aria-label=\"Close\">\r\n                                        <span aria-hidden=\"true\">&times;</span>\r\n                                    </button>\r\n                                </div>\r\n                                <div class=\"modal-body\">\r\n                                    <label for=\"form_control_1\">Programa academico: </label>\r\n                                    <div className=\"row\">\r\n                                        <div className=\"col-sm-8\">\r\n                                            <Field name=\"program\" validate={[select]} className=\"bs-select form-control\" component=\"select\">\r\n                                                <option selected value=\"0\">Seleccione...</option>\r\n                                                {this.loadProgram()}\r\n                                            </Field>\r\n                                        </div>\r\n                                    </div>\r\n                                    <br />\r\n\r\n                                    <label for=\"form_control_1\">Descripción: </label>\r\n                                    <div className=\"row\">\r\n                                        <div className=\"col-sm-8\">\r\n                                            <Field name=\"description\" validate={[required, minimum, thousand]} component={generarText} label=\"Denominación del programa\" />\r\n                                        </div>\r\n                                    </div>\r\n                                    <br />\r\n\r\n                                    <label for=\"form_control_1\">Usuario encargado: </label>\r\n                                    <div className=\"row\">\r\n                                        <div className=\"col-sm-8\">\r\n                                            <Field name=\"idUser\" validate={[select]} className=\"bs-select form-control\" component=\"select\">\r\n                                                <option selected value=\"0\">Seleccione...</option>\r\n                                                {this.loadUser()}\r\n                                            </Field>\r\n                                        </div>\r\n                                    </div>\r\n                                    <br />\r\n\r\n                                    <label for=\"form_control_1\">Tipo Documento: </label>\r\n                                    <div className=\"row\">\r\n                                        <div className=\"col-sm-8\">\r\n                                            <Field name=\"type\" validate={[required, minimum, twoHundred]} component={generarInput} label=\"Denominación del programa\" />\r\n                                        </div>\r\n\r\n                                    </div>\r\n                                </div>\r\n                                <div class=\"modal-footer\">\r\n                                    <button type=\"button\" class=\"btn btn-secondary\" data-dismiss=\"modal\">Close</button>\r\n                                    <button type=\"submit\" className=\"btn btn-default naranja\">Agregar</button>\r\n\r\n                                </div>\r\n                            </form>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\n\r\nconst generarInput = ({ input, placeholder, label, type, meta: { touched, warning, error } }) => (\r\n    <div>\r\n        <div>\r\n            <input {...input} type={type} className=\"form-control letra form-control-solid placeholder-no-fix\" />\r\n            {touched && ((error && <span className=\"text-danger letra form-group\">{error}</span>) || (warning && <span>{warning}</span>))}\r\n        </div>\r\n    </div>\r\n)\r\n\r\nconst generarText = ({ input, placeholder, label, type, meta: { touched, warning, error } }) => (\r\n    <div>\r\n        <div>\r\n            <textarea {...input} className=\"form-control letra form-control-solid placeholder-no-fix\" />\r\n            {touched && ((error && <span className=\"text-danger letra form-group\">{error}</span>) || (warning && <span>{warning}</span>))}\r\n        </div>\r\n    </div>\r\n)\r\n\r\nfunction mapStateToProps(state) {\r\n    return {\r\n        listProgram: state.program.listProgramR\r\n    }\r\n}\r\n\r\nlet formAdd = reduxForm({\r\n    form: 'addDocument',\r\n    enableReinitialize: true\r\n})(Add)\r\n\r\nexport default withRouter(connect(mapStateToProps, { getListPrograms, addDocument })(formAdd));"]},"metadata":{},"sourceType":"module"}