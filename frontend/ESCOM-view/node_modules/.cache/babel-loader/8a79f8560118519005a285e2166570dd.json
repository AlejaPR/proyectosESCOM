{"ast":null,"code":"import axios from 'axios';\nimport { desencriptar } from '../componentes/general/Encriptar.js';\nimport { mensajesDeError } from '../utilitario/MensajesError.js';\nexport const MOSTRAR_CONFIGURACION = 'MOSTRAR_CONFIGURACION';\nexport const ACTUALIZAR_BARRALATERAL = 'ACTUALIZAR_BARRALATERAL';\nexport const ACTUALIZAR_BARRASUPERIOR = 'ACTUALIZAR_BARRASUPERIOR';\nexport const ACTUALIZAR_FOTO_LOGIN = 'ACTUALIZAR_FOTO_LOGIN';\nexport const ACTUALIZAR_FOTO_LOGO = 'ACTUALIZAR_FOTO_LOGO';\nexport const ACTUALIZAR_BOTONES = 'ACTUALIZAR_BOTONES';\nexport const MENSAJE_CONFIGURACION = 'MENSAJE_CONFIGURACION';\nexport const CARGAR_CONFIGURACION = 'CARGAR_CONFIGURACION';\nexport function actionAgregarConfiguracion(configuracion, token) {\n  var tokenRequest = desencriptar(token);\n  const headers = {\n    'Content-Type': 'application/json',\n    'TokenAuto': tokenRequest,\n    'Permiso': 'sa_Administrar configuracion de aspecto'\n  };\n  return (dispatch, getState) => {\n    axios.post(\"http://localhost:9090/proyectosESCOM-web/api/configuracion/registrarConfiguracion\", configuracion, {\n      headers: headers\n    }).then(response => {\n      dispatch({\n        type: MENSAJE_CONFIGURACION,\n        mensaje: 'Usuario registrado'\n      });\n      dispatch({\n        type: CARGAR_CONFIGURACION,\n        configuracion: configuracion\n      });\n    }).catch(error => {\n      if (error.request.response === '') {\n        dispatch({\n          type: MENSAJE_CONFIGURACION,\n          mensaje: 'Servidor fuera de servicio temporalmente'\n        });\n      } else {\n        if (error.request) {\n          var o = JSON.parse(error.request.response);\n          let respuesta = mensajesDeError(o.respuesta);\n\n          if (respuesta !== '') {\n            dispatch({\n              type: MENSAJE_CONFIGURACION,\n              mensaje: respuesta\n            });\n          } else {\n            dispatch({\n              type: MENSAJE_CONFIGURACION,\n              mensaje: 'Ya existen los datos registrados previamente'\n            });\n          }\n        }\n      }\n    });\n  };\n}\nexport function consultarConfiguracion() {\n  const headers = {\n    'Content-Type': 'application/json'\n  };\n  return (dispatch, getState) => {\n    axios.get(\"http://localhost:9090/proyectosESCOM-web/api/configuracion/listarEntorno\", {\n      headers: headers\n    }).then(response => {\n      dispatch({\n        type: MOSTRAR_CONFIGURACION,\n        configuracion: response.data[0]\n      });\n    }).catch(error => {\n      if (error.request.response === '') {\n        dispatch({\n          type: MOSTRAR_CONFIGURACION,\n          configuracion: {\n            barraLateral: \"#164D14\",\n            barraSuperior: \"white\",\n            botones: \"#164D14\"\n          }\n        });\n      } else {\n        if (error.request) {\n          var o = JSON.parse(error.request.response);\n          let respuesta = mensajesDeError(o.respuesta);\n\n          if (respuesta !== '') {\n            dispatch({\n              type: MOSTRAR_CONFIGURACION,\n              configuracion: {\n                barraLateral: \"#164D14\",\n                barraSuperior: \"#FFFFFF\",\n                botones: \"#164D14\"\n              }\n            });\n          } else {\n            dispatch({\n              type: MOSTRAR_CONFIGURACION,\n              configuracion: {\n                barraLateral: \"#164D14\",\n                fondoSuperior: \"#FFFFFF\",\n                botones: \"#164D14\"\n              }\n            });\n          }\n        }\n      }\n    });\n  };\n}\nexport function actionConsultarConfiguracionCompleta(token) {\n  var tokenRequest = desencriptar(token);\n  const headers = {\n    'Content-Type': 'application/json',\n    'TokenAuto': tokenRequest,\n    'Permiso': 'sa_Administrar configuracion de aspecto'\n  };\n  return (dispatch, getState) => {\n    axios.get(\"http://localhost:9090/proyectosESCOM-web/api/configuracion/listarConfiguracionCompleta\", {\n      headers: headers\n    }).then(response => {\n      dispatch({\n        type: MENSAJE_CONFIGURACION,\n        mensaje: 'Operacion hecha con exito'\n      });\n      dispatch({\n        type: CARGAR_CONFIGURACION,\n        configuracion: response.data[0]\n      });\n    }).catch(error => {\n      if (error.request.response === '') {\n        dispatch({\n          type: MENSAJE_CONFIGURACION,\n          mensaje: 'Servidor fuera de servicio temporalmente'\n        });\n      } else {\n        if (error.request) {\n          var o = JSON.parse(error.request.response);\n          let respuesta = mensajesDeError(o.respuesta);\n\n          if (respuesta !== '') {\n            dispatch({\n              type: MENSAJE_CONFIGURACION,\n              mensaje: respuesta\n            });\n          } else {\n            dispatch({\n              type: MENSAJE_CONFIGURACION,\n              mensaje: 'Sin acceso al servicio'\n            });\n          }\n        }\n      }\n    });\n  };\n}\nexport function actionActualizarBarraLateral(color) {\n  return (dispatch, getState) => {\n    dispatch({\n      type: ACTUALIZAR_BARRALATERAL,\n      color: color\n    });\n  };\n}\nexport function actionActualizarBarraSuperior(color) {\n  return (dispatch, getState) => {\n    dispatch({\n      type: ACTUALIZAR_BARRASUPERIOR,\n      color: color\n    });\n  };\n}\nexport function actualizarFotoLogin(foto) {\n  return (dispatch, getState) => {\n    dispatch({\n      type: ACTUALIZAR_FOTO_LOGIN,\n      fotoLogin: foto\n    });\n  };\n}\nexport function actualizarFotoLogo(foto) {\n  return (dispatch, getState) => {\n    dispatch({\n      type: ACTUALIZAR_FOTO_LOGIN,\n      fotoLogin: foto\n    });\n  };\n}\nexport function actionActualizarBotones(color) {\n  return (dispatch, getState) => {\n    dispatch({\n      type: ACTUALIZAR_BOTONES,\n      color: color\n    });\n  };\n}","map":{"version":3,"sources":["C:/Users/jeiso/Desktop/proyectosESCOM/frontend/ESCOM-view/src/SuperAdministrador/actions/actionConfiguracion.js"],"names":["axios","desencriptar","mensajesDeError","MOSTRAR_CONFIGURACION","ACTUALIZAR_BARRALATERAL","ACTUALIZAR_BARRASUPERIOR","ACTUALIZAR_FOTO_LOGIN","ACTUALIZAR_FOTO_LOGO","ACTUALIZAR_BOTONES","MENSAJE_CONFIGURACION","CARGAR_CONFIGURACION","actionAgregarConfiguracion","configuracion","token","tokenRequest","headers","dispatch","getState","post","then","response","type","mensaje","catch","error","request","o","JSON","parse","respuesta","consultarConfiguracion","get","data","barraLateral","barraSuperior","botones","fondoSuperior","actionConsultarConfiguracionCompleta","actionActualizarBarraLateral","color","actionActualizarBarraSuperior","actualizarFotoLogin","foto","fotoLogin","actualizarFotoLogo","actionActualizarBotones"],"mappings":"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","sourcesContent":["import axios from 'axios';\r\nimport {desencriptar } from '../componentes/general/Encriptar.js';\r\nimport {mensajesDeError} from '../utilitario/MensajesError.js';\r\n\r\n\r\nexport const MOSTRAR_CONFIGURACION = 'MOSTRAR_CONFIGURACION'\r\nexport const ACTUALIZAR_BARRALATERAL= 'ACTUALIZAR_BARRALATERAL'\r\nexport const ACTUALIZAR_BARRASUPERIOR= 'ACTUALIZAR_BARRASUPERIOR'\r\nexport const ACTUALIZAR_FOTO_LOGIN= 'ACTUALIZAR_FOTO_LOGIN'\r\nexport const ACTUALIZAR_FOTO_LOGO= 'ACTUALIZAR_FOTO_LOGO'\r\nexport const ACTUALIZAR_BOTONES='ACTUALIZAR_BOTONES';\r\nexport const MENSAJE_CONFIGURACION='MENSAJE_CONFIGURACION';\r\nexport const CARGAR_CONFIGURACION='CARGAR_CONFIGURACION';\r\n\r\nexport function actionAgregarConfiguracion(configuracion, token) {\r\n    var tokenRequest = desencriptar(token);\r\n    const headers = {\r\n        'Content-Type': 'application/json',\r\n        'TokenAuto': tokenRequest,\r\n        'Permiso': 'sa_Administrar configuracion de aspecto'\r\n    }\r\n    return (dispatch, getState) => {\r\n        axios.post(\"http://localhost:9090/proyectosESCOM-web/api/configuracion/registrarConfiguracion\", configuracion, { headers: headers })\r\n            .then(response => {\r\n                dispatch({\r\n                    type: MENSAJE_CONFIGURACION,\r\n                    mensaje: 'Usuario registrado'\r\n                });\r\n                dispatch({\r\n                    type: CARGAR_CONFIGURACION,\r\n                    configuracion: configuracion\r\n                });\r\n\r\n            }).catch((error) => {\r\n                if (error.request.response === '') {\r\n                    dispatch({\r\n                        type: MENSAJE_CONFIGURACION,\r\n                        mensaje: 'Servidor fuera de servicio temporalmente'\r\n                    });\r\n                }else{\r\n                    if (error.request) {\r\n                        var o = JSON.parse(error.request.response);\r\n                        let respuesta=mensajesDeError(o.respuesta);\r\n                        if(respuesta!==''){\r\n                            dispatch({\r\n                                type: MENSAJE_CONFIGURACION,\r\n                                mensaje: respuesta\r\n                            });\r\n                        }else{\r\n                            dispatch({\r\n                                type: MENSAJE_CONFIGURACION,\r\n                                mensaje: 'Ya existen los datos registrados previamente'\r\n                            });\r\n                        }\r\n                    }\r\n                } \r\n                \r\n            });\r\n    }\r\n}\r\n\r\nexport function consultarConfiguracion() {\r\n    const headers = {\r\n        'Content-Type': 'application/json'\r\n    }\r\n    return (dispatch, getState) => {\r\n        axios.get(\"http://localhost:9090/proyectosESCOM-web/api/configuracion/listarEntorno\", { headers: headers })\r\n            .then(response => {\r\n                dispatch({\r\n                    type: MOSTRAR_CONFIGURACION,\r\n                    configuracion: response.data[0]\r\n                });\r\n            }).catch((error) => {\r\n                if (error.request.response === '') {\r\n                    dispatch({\r\n                        type: MOSTRAR_CONFIGURACION,\r\n                        configuracion:{\r\n                            barraLateral: \"#164D14\",\r\n                            barraSuperior:\"white\",\r\n                            botones:\"#164D14\"\r\n                        }\r\n                    });\r\n                }else{\r\n                    if (error.request) {\r\n                        var o = JSON.parse(error.request.response);\r\n                        let respuesta=mensajesDeError(o.respuesta);\r\n                        if(respuesta!==''){\r\n                            dispatch({\r\n                                type: MOSTRAR_CONFIGURACION,\r\n                                configuracion:{\r\n                                    barraLateral: \"#164D14\",\r\n                                    barraSuperior:\"#FFFFFF\",\r\n                                    botones:\"#164D14\"\r\n                                }\r\n                            });\r\n                        }else{\r\n                            dispatch({\r\n                                type: MOSTRAR_CONFIGURACION,\r\n                                configuracion:{\r\n                                    barraLateral: \"#164D14\",\r\n                                    fondoSuperior:\"#FFFFFF\",\r\n                                    botones:\"#164D14\"\r\n                                }\r\n                            });\r\n                        }\r\n                    }\r\n                } \r\n                \r\n            });\r\n    }\r\n}\r\n\r\nexport function actionConsultarConfiguracionCompleta(token) {\r\n    var tokenRequest = desencriptar(token);\r\n    const headers = {\r\n        'Content-Type': 'application/json',\r\n        'TokenAuto': tokenRequest,\r\n        'Permiso': 'sa_Administrar configuracion de aspecto'\r\n    }\r\n    return (dispatch, getState) => {\r\n        axios.get(\"http://localhost:9090/proyectosESCOM-web/api/configuracion/listarConfiguracionCompleta\", { headers: headers })\r\n            .then(response => {\r\n                dispatch({\r\n                    type: MENSAJE_CONFIGURACION,\r\n                    mensaje: 'Operacion hecha con exito'\r\n                });\r\n                dispatch({\r\n                    type: CARGAR_CONFIGURACION,\r\n                    configuracion: response.data[0]\r\n                });\r\n            }).catch((error) => {\r\n                if (error.request.response === '') {\r\n                    dispatch({\r\n                        type: MENSAJE_CONFIGURACION,\r\n                        mensaje: 'Servidor fuera de servicio temporalmente'\r\n                    });\r\n                }else{\r\n                    if (error.request) {\r\n                        var o = JSON.parse(error.request.response);\r\n                        let respuesta=mensajesDeError(o.respuesta);\r\n                        if(respuesta!==''){\r\n                            dispatch({\r\n                                type: MENSAJE_CONFIGURACION,\r\n                                mensaje: respuesta\r\n                            });\r\n                        }else{\r\n                            dispatch({\r\n                                type: MENSAJE_CONFIGURACION,\r\n                                mensaje: 'Sin acceso al servicio'\r\n                            });\r\n                        }\r\n                    }\r\n                } \r\n                \r\n            });\r\n    }\r\n}\r\n\r\nexport function actionActualizarBarraLateral(color) {\r\n    return (dispatch, getState) => {\r\n        dispatch({\r\n            type: ACTUALIZAR_BARRALATERAL,\r\n            color:color\r\n        });\r\n    }\r\n}\r\n\r\nexport function actionActualizarBarraSuperior(color) {\r\n    return (dispatch, getState) => {\r\n        dispatch({\r\n            type: ACTUALIZAR_BARRASUPERIOR,\r\n            color:color\r\n        });\r\n    }\r\n}\r\n\r\nexport function actualizarFotoLogin(foto) {\r\n    return (dispatch, getState) => {\r\n        dispatch({\r\n            type: ACTUALIZAR_FOTO_LOGIN,\r\n            fotoLogin:foto\r\n        });\r\n    }\r\n}\r\n\r\nexport function actualizarFotoLogo(foto) {\r\n    return (dispatch, getState) => {\r\n        dispatch({\r\n            type: ACTUALIZAR_FOTO_LOGIN,\r\n            fotoLogin:foto\r\n        });\r\n    }\r\n}\r\n\r\nexport function actionActualizarBotones(color) {\r\n    return (dispatch, getState) => {\r\n        dispatch({\r\n            type: ACTUALIZAR_BOTONES,\r\n            color:color\r\n        });\r\n    }\r\n}"]},"metadata":{},"sourceType":"module"}