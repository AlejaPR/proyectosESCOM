{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\jeiso\\\\Desktop\\\\REACT\\\\proyectosESCOM\\\\frontend\\\\ESCOM-view\\\\src\\\\SuperAdministrador\\\\componentes\\\\popup\\\\PopUpUsuario.js\";\nimport React from 'react'; //estilos\n\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport 'bootstrap/dist/js/bootstrap.bundle.min';\nimport '../../css/business-casual.css';\nimport '../../css/estilos.css';\nimport '../../css/bootstrap.min.css';\nimport '../../css/menu.css';\nimport 'react-notifications/lib/notifications.css'; //componentes\n\nimport { Button, Modal, ModalHeader, ModalBody, ModalFooter } from 'reactstrap';\nimport { NotificationContainer, NotificationManager } from 'react-notifications';\nimport { reduxForm, Field } from 'redux-form'; //redux\n\nimport { actionAgregarUsuario, actionConsultarDocumentos } from '../../actions/actionsUsuario.js';\nimport { connect } from 'react-redux';\nimport { fechaNacimiento } from '../../utilitario/validacionCampos.js';\n\nclass PopUpUsuario extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.handleSubmit = formValues => {\n      try {\n        var crypto = require('crypto');\n\n        var contrasenaEncryp = crypto.createHmac('sha256', formValues.correo).update(formValues.contrasena).digest('hex');\n        let date = new Date(formValues.fechaNacimiento);\n        let usuario = {\n          'nombre': formValues.nombre,\n          'apellido': formValues.apellido,\n          'tipoDocumento': 1,\n          'numeroDocumento': formValues.numeroDocumento,\n          'correoElectronico': formValues.correo,\n          'contrasena': contrasenaEncryp,\n          'fechaNacimiento': date\n        };\n        this.props.actionAgregarUsuario(usuario, localStorage.getItem('Token')); // this.props.reset();\n\n        NotificationManager.info('Usuario registrado');\n      } catch (error) {\n        NotificationManager.error('Ingrese todos los datos');\n      }\n    };\n\n    this.state = {\n      modal: false\n    };\n    this.toggle = this.toggle.bind(this);\n  }\n\n  componentWillUpdate() {\n    if (this.props.mensaje === 'Ya existen los datos registrados previamente') {\n      console.log('ya esta registrado');\n    }\n  }\n\n  componentWillMount() {\n    this.props.actionConsultarDocumentos(localStorage.getItem('Token'));\n  }\n\n  toggle() {\n    this.setState(prevState => ({\n      modal: !prevState.modal\n    }));\n    this.props.reset();\n  }\n\n  cargarDocumentos() {\n    return this.props.documentos.map((documento, index) => {\n      const idTipoDocumento = documento.idTipoDocumento,\n            tipoDocumento = documento.tipoDocumento; //destructuring\n\n      return React.createElement(\"option\", {\n        className: \"letra\",\n        style: {\n          height: \"35px\",\n          fontSize: \"13px\"\n        },\n        value: idTipoDocumento,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 77\n        },\n        __self: this\n      }, tipoDocumento);\n    });\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 86\n      },\n      __self: this\n    }, React.createElement(Button, {\n      color: \"danger\",\n      className: \"btn btn-dark letra\",\n      style: fondoBoton,\n      onClick: this.toggle,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 87\n      },\n      __self: this\n    }, \"Crear usuario +\"), React.createElement(Modal, {\n      isOpen: this.state.modal,\n      toggle: this.toggle,\n      style: {\n        width: \"400px\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 88\n      },\n      __self: this\n    }, React.createElement(ModalHeader, {\n      toggle: this.toggle,\n      style: {\n        height: \"50px\",\n        width: \"400px\"\n      },\n      className: \"center\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 92\n      },\n      __self: this\n    }, \"Crear usuario\"), React.createElement(ModalBody, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 93\n      },\n      __self: this\n    }, React.createElement(\"form\", {\n      onSubmit: this.props.handleSubmit(this.handleSubmit),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 94\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"contenedor-inputs\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 95\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"row\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 96\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"col-sm-12\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 97\n      },\n      __self: this\n    }, React.createElement(Field, {\n      name: \"nombre\",\n      component: generarInput,\n      label: \"Nombre\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 98\n      },\n      __self: this\n    }), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 99\n      },\n      __self: this\n    }), React.createElement(Field, {\n      name: \"apellido\",\n      component: generarInput,\n      label: \"Apellido\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 100\n      },\n      __self: this\n    }), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 101\n      },\n      __self: this\n    }))), React.createElement(\"div\", {\n      className: \"row\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 104\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"col-sm-5\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 105\n      },\n      __self: this\n    }, React.createElement(\"span\", {\n      className: \"letra\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 106\n      },\n      __self: this\n    }, \"Tipo de documento \")), React.createElement(\"div\", {\n      className: \"col-sm-7\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 108\n      },\n      __self: this\n    }, React.createElement(Field, {\n      name: \"favoriteColor\",\n      style: {\n        height: \"35px\",\n        fontSize: \"13px\"\n      },\n      className: \"form-control\",\n      component: \"select\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 109\n      },\n      __self: this\n    }, this.cargarDocumentos()))), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 114\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      className: \"row\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 115\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"col-sm-12\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 116\n      },\n      __self: this\n    }, React.createElement(Field, {\n      name: \"numeroDocumento\",\n      component: generarInput,\n      label: \"Numero de documento\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 117\n      },\n      __self: this\n    }))), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 120\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      className: \"row\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 121\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"col-sm-12\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 122\n      },\n      __self: this\n    }, React.createElement(Field, {\n      name: \"correo\",\n      component: generarInput,\n      label: \"Correo electronico\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 123\n      },\n      __self: this\n    }))), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 126\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      className: \"row\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 127\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"col-sm-12\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 128\n      },\n      __self: this\n    }, React.createElement(Field, {\n      name: \"contrasena\",\n      type: \"password\",\n      component: generarInput,\n      label: \"Contrase\\xF1a\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 129\n      },\n      __self: this\n    }))), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 132\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      className: \"row\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 133\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"col-sm-12\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 134\n      },\n      __self: this\n    }, React.createElement(Field, {\n      name: \"fechaNacimiento\",\n      type: \"date\",\n      validate: [fechaNacimiento],\n      component: generarInput,\n      label: \"Fecha de nacimiento\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 135\n      },\n      __self: this\n    })))), React.createElement(ModalFooter, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 139\n      },\n      __self: this\n    }, React.createElement(Button, {\n      style: fondoBoton,\n      type: \"submit\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 140\n      },\n      __self: this\n    }, \"Registrar\"), '', React.createElement(Button, {\n      color: \"secondary\",\n      style: fondoBotonCancelar,\n      className: \"letra\",\n      onClick: this.toggle,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 141\n      },\n      __self: this\n    }, \"Cancelar\"))))), React.createElement(NotificationContainer, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 146\n      },\n      __self: this\n    }));\n  }\n\n}\n\nconst generarInput = ({\n  input,\n  label,\n  type,\n  meta: {\n    touched,\n    error,\n    warning\n  }\n}) => React.createElement(\"div\", {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 153\n  },\n  __self: this\n}, React.createElement(\"div\", {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 154\n  },\n  __self: this\n}, React.createElement(\"input\", Object.assign({}, input, {\n  placeholder: label,\n  type: type,\n  style: {\n    height: \"35px\",\n    fontSize: \"12px\"\n  },\n  className: \"form-control letra placeholder-no-fix\",\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 155\n  },\n  __self: this\n})), touched && (error && React.createElement(\"span\", {\n  className: \"text-danger letra form-group\",\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 156\n  },\n  __self: this\n}, error) || warning && React.createElement(\"span\", {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 156\n  },\n  __self: this\n}, warning))));\n\nconst validate = values => {\n  const errors = {};\n\n  if (!values.nombre) {\n    errors.nombre = 'Este campo es obligatorio *';\n  } else if (values.nombre.length < 2) {\n    errors.nombre = 'Ingrese mas de dos caracteres';\n  }\n\n  if (!values.apellido) {\n    errors.apellido = 'Este campo es obligatorio *';\n  } else if (values.apellido.length < 2) {\n    errors.apellido = 'Ingrese mas de dos caracteres';\n  }\n\n  if (!values.numeroDocumento) {\n    errors.numeroDocumento = 'Este campo es obligatorio *';\n  } else if (values.numeroDocumento.length < 6) {\n    errors.numeroDocumento = 'El documento no es valido';\n  }\n\n  if (!values.correo) {\n    errors.correo = 'Este campo es obligatorio *';\n  } else if (!/^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,4}$/i.test(values.correo)) {\n    errors.correo = 'El correo no tiene el formato correcto';\n  }\n\n  if (!values.contrasena) {\n    errors.contrasena = 'Este campo es obligatorio *';\n  } else if (!/^(?=\\w*\\d)(?=\\w*[A-Z])(?=\\w*[a-z])\\S{8,16}$/i.test(values.contrasena)) {\n    errors.contrasena = 'La contraseña debe tener entre 8 y 16 caracteres, al menos un dígito, al menos una minúscula y al menos una mayúscula.';\n  }\n\n  return errors;\n};\n\nconst fondoBoton = {\n  background: \"#ec671d\",\n  fontSize: \"12px\",\n  fontFamily: \"Open sans, sans-serif\"\n};\nconst fondoBotonCancelar = {\n  background: \"gray\",\n  fontSize: \"12px\",\n  fontFamily: \"Open sans, sans-serif\"\n};\n\nfunction mapStateToProps(state) {\n  return {\n    users: state.user.list,\n    token: state.user.token,\n    documentos: state.user.tiposDocumento,\n    mensaje: state.user.mensajeRegistrar\n  };\n}\n\nlet formulario = reduxForm({\n  form: 'registrarUsuario',\n  validate\n})(PopUpUsuario);\nexport default connect(mapStateToProps, {\n  actionAgregarUsuario,\n  actionConsultarDocumentos\n})(formulario);","map":{"version":3,"sources":["C:/Users/jeiso/Desktop/REACT/proyectosESCOM/frontend/ESCOM-view/src/SuperAdministrador/componentes/popup/PopUpUsuario.js"],"names":["React","Button","Modal","ModalHeader","ModalBody","ModalFooter","NotificationContainer","NotificationManager","reduxForm","Field","actionAgregarUsuario","actionConsultarDocumentos","connect","fechaNacimiento","PopUpUsuario","Component","constructor","props","handleSubmit","formValues","crypto","require","contrasenaEncryp","createHmac","correo","update","contrasena","digest","date","Date","usuario","nombre","apellido","numeroDocumento","localStorage","getItem","info","error","state","modal","toggle","bind","componentWillUpdate","mensaje","console","log","componentWillMount","setState","prevState","reset","cargarDocumentos","documentos","map","documento","index","idTipoDocumento","tipoDocumento","height","fontSize","render","fondoBoton","width","generarInput","fondoBotonCancelar","input","label","type","meta","touched","warning","validate","values","errors","length","test","background","fontFamily","mapStateToProps","users","user","list","token","tiposDocumento","mensajeRegistrar","formulario","form"],"mappings":"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","sourcesContent":["import React from 'react';\r\n\r\n//estilos\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\nimport 'bootstrap/dist/js/bootstrap.bundle.min';\r\nimport '../../css/business-casual.css'\r\nimport '../../css/estilos.css'\r\nimport '../../css/bootstrap.min.css'\r\nimport '../../css/menu.css'\r\nimport 'react-notifications/lib/notifications.css';\r\n\r\n//componentes\r\nimport { Button, Modal, ModalHeader, ModalBody, ModalFooter } from 'reactstrap';\r\nimport { NotificationContainer, NotificationManager } from 'react-notifications';\r\nimport { reduxForm, Field } from 'redux-form';\r\n\r\n//redux\r\nimport { actionAgregarUsuario, actionConsultarDocumentos } from '../../actions/actionsUsuario.js'\r\nimport { connect } from 'react-redux';\r\nimport { fechaNacimiento } from '../../utilitario/validacionCampos.js';\r\n\r\nclass PopUpUsuario extends React.Component {\r\n  constructor(props) {\r\n\r\n    super(props);\r\n    this.state = {\r\n      modal: false\r\n    }\r\n    this.toggle = this.toggle.bind(this);\r\n  }\r\n\r\n  componentWillUpdate() {\r\n    if (this.props.mensaje === 'Ya existen los datos registrados previamente') {\r\n      console.log('ya esta registrado');\r\n    }\r\n  }\r\n\r\n  componentWillMount() {\r\n    this.props.actionConsultarDocumentos(localStorage.getItem('Token'));\r\n  }\r\n\r\n  toggle() {\r\n    this.setState(prevState => ({\r\n      modal: !prevState.modal\r\n    }));\r\n    this.props.reset();\r\n  }\r\n\r\n  handleSubmit = formValues => {\r\n    try {\r\n      var crypto = require('crypto');\r\n      var contrasenaEncryp = crypto.createHmac('sha256', formValues.correo).update(formValues.contrasena).digest('hex');\r\n      let date = new Date(formValues.fechaNacimiento);\r\n      let usuario = {\r\n        'nombre': formValues.nombre,\r\n        'apellido': formValues.apellido,\r\n        'tipoDocumento': 1,\r\n        'numeroDocumento': formValues.numeroDocumento,\r\n        'correoElectronico': formValues.correo,\r\n        'contrasena': contrasenaEncryp,\r\n        'fechaNacimiento': date\r\n      };\r\n      this.props.actionAgregarUsuario(usuario, localStorage.getItem('Token'));\r\n      // this.props.reset();\r\n      NotificationManager.info('Usuario registrado');\r\n\r\n    } catch (error) {\r\n      NotificationManager.error('Ingrese todos los datos');\r\n    }\r\n\r\n  }\r\n\r\n  cargarDocumentos() {\r\n    return this.props.documentos.map((documento, index) => {\r\n      const { idTipoDocumento, tipoDocumento } = documento //destructuring\r\n      return (\r\n        <option className=\"letra\" style={{ height: \"35px\", fontSize: \"13px\" }} value={idTipoDocumento}>{tipoDocumento}</option>\r\n      )\r\n    })\r\n\r\n  }\r\n\r\n\r\n  render() {\r\n    return (\r\n      <div>\r\n        <Button color=\"danger\" className=\"btn btn-dark letra\" style={fondoBoton} onClick={this.toggle}>Crear usuario +</Button>\r\n        <Modal isOpen={this.state.modal}\r\n          toggle={this.toggle}\r\n          style={{ width: \"400px\" }}\r\n        >\r\n          <ModalHeader toggle={this.toggle} style={{ height: \"50px\", width: \"400px\" }} className=\"center\">Crear usuario</ModalHeader>\r\n          <ModalBody>\r\n            <form onSubmit={this.props.handleSubmit(this.handleSubmit)}>\r\n              <div className=\"contenedor-inputs\">\r\n                <div className=\"row\">\r\n                  <div className=\"col-sm-12\">\r\n                    <Field name=\"nombre\" component={generarInput} label=\"Nombre\" />\r\n                    <br />\r\n                    <Field name=\"apellido\" component={generarInput} label=\"Apellido\" />\r\n                    <br />\r\n                  </div>\r\n                </div>\r\n                <div className=\"row\">\r\n                  <div className=\"col-sm-5\">\r\n                    <span className=\"letra\">Tipo de documento </span>\r\n                  </div>\r\n                  <div className=\"col-sm-7\">\r\n                    <Field name=\"favoriteColor\" style={{ height: \"35px\", fontSize: \"13px\" }} className=\"form-control\" component=\"select\">\r\n                      {this.cargarDocumentos()}\r\n                    </Field>\r\n                  </div>\r\n                </div>\r\n                <br />\r\n                <div className=\"row\">\r\n                  <div className=\"col-sm-12\">\r\n                    <Field name=\"numeroDocumento\" component={generarInput} label=\"Numero de documento\" />\r\n                  </div>\r\n                </div>\r\n                <br />\r\n                <div className=\"row\">\r\n                  <div className=\"col-sm-12\">\r\n                    <Field name=\"correo\" component={generarInput} label=\"Correo electronico\" />\r\n                  </div>\r\n                </div>\r\n                <br />\r\n                <div className=\"row\">\r\n                  <div className=\"col-sm-12\">\r\n                    <Field name=\"contrasena\" type=\"password\" component={generarInput} label=\"Contraseña\" />\r\n                  </div>\r\n                </div>\r\n                <br />\r\n                <div className=\"row\">\r\n                  <div className=\"col-sm-12\">\r\n                    <Field name=\"fechaNacimiento\" type=\"date\" validate={[fechaNacimiento]} component={generarInput} label=\"Fecha de nacimiento\" />\r\n                  </div>\r\n                </div>\r\n              </div>\r\n              <ModalFooter>\r\n                <Button style={fondoBoton} type=\"submit\">Registrar</Button>{''}\r\n                <Button color=\"secondary\" style={fondoBotonCancelar} className=\"letra\" onClick={this.toggle}>Cancelar</Button>\r\n              </ModalFooter>\r\n            </form>\r\n          </ModalBody>\r\n        </Modal>\r\n        <NotificationContainer />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst generarInput = ({ input, label, type, meta: { touched, error, warning } }) => (\r\n  <div>\r\n    <div>\r\n      <input {...input} placeholder={label} type={type} style={{ height: \"35px\", fontSize: \"12px\" }} className=\"form-control letra placeholder-no-fix\" />\r\n      {touched && ((error && <span className=\"text-danger letra form-group\">{error}</span>) || (warning && <span>{warning}</span>))}\r\n    </div>\r\n  </div>\r\n)\r\n\r\nconst validate = values => {\r\n  const errors = {}\r\n  if (!values.nombre) {\r\n    errors.nombre = 'Este campo es obligatorio *'\r\n  } else if (values.nombre.length < 2) {\r\n    errors.nombre = 'Ingrese mas de dos caracteres'\r\n  }\r\n  if (!values.apellido) {\r\n    errors.apellido = 'Este campo es obligatorio *'\r\n  } else if (values.apellido.length < 2) {\r\n    errors.apellido = 'Ingrese mas de dos caracteres'\r\n  }\r\n  if (!values.numeroDocumento) {\r\n    errors.numeroDocumento = 'Este campo es obligatorio *'\r\n  } else if (values.numeroDocumento.length < 6) {\r\n    errors.numeroDocumento = 'El documento no es valido'\r\n  }\r\n  if (!values.correo) {\r\n    errors.correo = 'Este campo es obligatorio *'\r\n  } else if (!/^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,4}$/i.test(values.correo)) {\r\n    errors.correo = 'El correo no tiene el formato correcto'\r\n  }\r\n  if (!values.contrasena) {\r\n    errors.contrasena = 'Este campo es obligatorio *'\r\n  } else if (!/^(?=\\w*\\d)(?=\\w*[A-Z])(?=\\w*[a-z])\\S{8,16}$/i.test(values.contrasena)) {\r\n    errors.contrasena = 'La contraseña debe tener entre 8 y 16 caracteres, al menos un dígito, al menos una minúscula y al menos una mayúscula.'\r\n  }\r\n  return errors\r\n}\r\n\r\nconst fondoBoton = {\r\n  background: \"#ec671d\",\r\n  fontSize: \"12px\",\r\n  fontFamily: \"Open sans, sans-serif\"\r\n\r\n}\r\n\r\nconst fondoBotonCancelar = {\r\n  background: \"gray\",\r\n  fontSize: \"12px\",\r\n  fontFamily: \"Open sans, sans-serif\"\r\n\r\n}\r\n\r\nfunction mapStateToProps(state) {\r\n\r\n  return {\r\n    users: state.user.list,\r\n    token: state.user.token,\r\n    documentos: state.user.tiposDocumento,\r\n    mensaje: state.user.mensajeRegistrar\r\n  }\r\n}\r\n\r\nlet formulario = reduxForm({\r\n  form: 'registrarUsuario', validate\r\n})(PopUpUsuario)\r\n\r\nexport default connect(mapStateToProps, { actionAgregarUsuario, actionConsultarDocumentos })(formulario);\r\n"]},"metadata":{},"sourceType":"module"}