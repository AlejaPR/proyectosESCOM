{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\hashy\\\\Desktop\\\\proyectosESCOM\\\\frontend\\\\ESCOM-view\\\\src\\\\ModuloDocumental\\\\components\\\\Leader\\\\Process\\\\processProgram.js\";\nimport React from 'react';\nimport { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { withRouter } from 'react-router-dom';\nimport { getConditionsPer } from '../../../redux/actions/conditionA.js';\nimport { getAllInformation } from '../../../redux/actions/activityA.js';\n\nclass ProcessPrograma extends Component {\n  componentWillMount() {\n    this.props.getConditionsPer(localStorage.getItem('Token'), sessionStorage.getItem('processP'));\n    this.props.getAllInformation(localStorage.getItem('Token'), sessionStorage.getItem('processP'));\n  }\n\n  convertHtmlToPdf() {\n    fetch('https://v2018.api2pdf.com/chrome/html', {\n      method: 'post',\n      headers: {\n        'Accept': 'application/json',\n        'Content-Type': 'application/json',\n        'Authorization': '65f55388-ac76-43a3-b28b-ea4720dfe2f2' //Get your API key from https://portal.api2pdf.com\n\n      },\n      body: JSON.stringify({\n        html: this.props.allInformation.data,\n        inlinePdf: true,\n        fileName: 'test.pdf'\n      })\n    }).then(res => res.json()).then(res => {\n      var downloadLink = document.createElement(\"a\");\n      document.body.appendChild(downloadLink);\n      downloadLink.href = res.pdf;\n      downloadLink.target = \"_blank\";\n      downloadLink.download = \"nombres\";\n      downloadLink.click();\n      document.body.removeChild(downloadLink);\n    });\n  }\n\n  convertHtmlToWord() {\n    var preHtml = \"<html xmlns:o='urn:schemas-microsoft-com:office:office' xmlns:w='urn:schemas-microsoft-com:office:word' xmlns='http://www.w3.org/TR/REC-html40'><head><meta charset='utf-8'><title>Export HTML To Doc</title></head><body>\";\n    var postHtml = \"</body></html>\";\n    var html = preHtml + this.props.allInformation.data + postHtml;\n    var blob = new Blob(['ufeff', html], {\n      type: 'application/msword'\n    }); // Specify link url\n\n    var url = 'data:application/vnd.ms-word;charset=utf-8,' + encodeURIComponent(html); // Specify file name\n\n    var filename = 'document.doc'; // Create download link element\n\n    var downloadLink = document.createElement(\"a\");\n    document.body.appendChild(downloadLink);\n\n    if (navigator.msSaveOrOpenBlob) {\n      navigator.msSaveOrOpenBlob(blob, filename);\n    } else {\n      // Create a link to the file\n      downloadLink.href = url; // Setting the file name\n\n      downloadLink.download = filename; //triggering the function\n\n      downloadLink.click();\n    }\n\n    document.body.removeChild(downloadLink);\n  }\n\n  save(id) {\n    sessionStorage.setItem('condition', id);\n    this.props.history.push('/ProcessCondition');\n  }\n\n  load() {\n    return this.props.conditions.map(ConditionView => {\n      return React.createElement(\"tr\", {\n        key: ConditionView.id,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 83\n        },\n        __self: this\n      }, React.createElement(\"td\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 84\n        },\n        __self: this\n      }, ConditionView.number), React.createElement(\"td\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 85\n        },\n        __self: this\n      }, ConditionView.name), React.createElement(\"td\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 86\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"progress\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 87\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"progress-bar\",\n        style: bar(ConditionView.percentage),\n        role: \"progressbar\",\n        \"aria-valuenow\": \"50\",\n        \"aria-valuemin\": \"0\",\n        \"aria-valuemax\": \"100\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 88\n        },\n        __self: this\n      }, ConditionView.percentage, \"%\"))), React.createElement(\"td\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 91\n        },\n        __self: this\n      }, React.createElement(\"button\", {\n        onClick: () => this.save(ConditionView.id),\n        className: \"btn btn-sm text-light naranja\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 92\n        },\n        __self: this\n      }, \"Ver\")));\n    });\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      className: \"container color\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 103\n      },\n      __self: this\n    }, React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 104\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      class: \"card\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 105\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      class: \"card-body\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 106\n      },\n      __self: this\n    }, React.createElement(\"h3\", {\n      class: \"card-title text-center\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 107\n      },\n      __self: this\n    }, React.createElement(\"strong\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 107\n      },\n      __self: this\n    }, \"Lista de condiciones\")), React.createElement(\"table\", {\n      class: \"table border\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 108\n      },\n      __self: this\n    }, React.createElement(\"thead\", {\n      class: \"colorBlue text-light\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 109\n      },\n      __self: this\n    }, React.createElement(\"tr\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 110\n      },\n      __self: this\n    }, React.createElement(\"th\", {\n      scope: \"col\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 111\n      },\n      __self: this\n    }, \"#\"), React.createElement(\"th\", {\n      scope: \"col\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 112\n      },\n      __self: this\n    }, \"Condici\\xF3n\"), React.createElement(\"th\", {\n      scope: \"col\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 113\n      },\n      __self: this\n    }, \"Proceso\"), React.createElement(\"th\", {\n      scope: \"col\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 114\n      },\n      __self: this\n    }))), React.createElement(\"tbody\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 117\n      },\n      __self: this\n    }, this.load())))), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 123\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      class: \"card\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 124\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      class: \"card-body\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 125\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"row\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 126\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 127\n      },\n      __self: this\n    }, React.createElement(\"h5\", {\n      class: \"card-title\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 127\n      },\n      __self: this\n    }, \"Card title\")), React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 128\n      },\n      __self: this\n    }, React.createElement(\"button\", {\n      onClick: () => this.convertHtmlToPdf(),\n      className: \"btn btn-sm text-light naranja\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 129\n      },\n      __self: this\n    }, \"PDF\")), React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 133\n      },\n      __self: this\n    }, React.createElement(\"button\", {\n      onClick: () => this.convertHtmlToWord(),\n      className: \"btn btn-sm text-light naranja\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 134\n      },\n      __self: this\n    }, \"WORD\"))))));\n  }\n\n}\n\nfunction bar(value) {\n  return {\n    border: \"1\",\n    color: \"#000\",\n    width: value + \"%\"\n  };\n}\n\nfunction mapStateToProps(state) {\n  return {\n    conditions: state.condition.listConditionsPer,\n    pro: state.condition.processId,\n    allInformation: state.activity.allInformation\n  };\n}\n\nexport default withRouter(connect(mapStateToProps, {\n  getConditionsPer,\n  getAllInformation\n})(ProcessPrograma));","map":{"version":3,"sources":["C:/Users/hashy/Desktop/proyectosESCOM/frontend/ESCOM-view/src/ModuloDocumental/components/Leader/Process/processProgram.js"],"names":["React","Component","connect","withRouter","getConditionsPer","getAllInformation","ProcessPrograma","componentWillMount","props","localStorage","getItem","sessionStorage","convertHtmlToPdf","fetch","method","headers","body","JSON","stringify","html","allInformation","data","inlinePdf","fileName","then","res","json","downloadLink","document","createElement","appendChild","href","pdf","target","download","click","removeChild","convertHtmlToWord","preHtml","postHtml","blob","Blob","type","url","encodeURIComponent","filename","navigator","msSaveOrOpenBlob","save","id","setItem","history","push","load","conditions","map","ConditionView","number","name","bar","percentage","render","value","border","color","width","mapStateToProps","state","condition","listConditionsPer","pro","processId","activity"],"mappings":"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","sourcesContent":["import React from 'react';\r\nimport { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { withRouter } from 'react-router-dom';\r\nimport { getConditionsPer } from '../../../redux/actions/conditionA.js';\r\nimport { getAllInformation } from '../../../redux/actions/activityA.js'\r\n\r\nclass ProcessPrograma extends Component {\r\n\r\n    componentWillMount() {\r\n        this.props.getConditionsPer(localStorage.getItem('Token'),sessionStorage.getItem('processP'))\r\n        this.props.getAllInformation(localStorage.getItem('Token'),sessionStorage.getItem('processP'))\r\n    }\r\n\r\n    convertHtmlToPdf() {\r\n        fetch('https://v2018.api2pdf.com/chrome/html', {\r\n            method: 'post',\r\n            headers: {\r\n                'Accept': 'application/json',\r\n                'Content-Type': 'application/json',\r\n                'Authorization': '65f55388-ac76-43a3-b28b-ea4720dfe2f2' //Get your API key from https://portal.api2pdf.com\r\n            },\r\n            body: JSON.stringify({ html: this.props.allInformation.data, inlinePdf: true, fileName: 'test.pdf' })\r\n        }).then(res => res.json())\r\n            .then(res => {\r\n                var downloadLink = document.createElement(\"a\");\r\n                document.body.appendChild(downloadLink);\r\n                downloadLink.href = res.pdf;\r\n                downloadLink.target = \"_blank\";\r\n                downloadLink.download = \"nombres\";\r\n                downloadLink.click();\r\n                document.body.removeChild(downloadLink);\r\n\r\n            }\r\n            )\r\n    }\r\n\r\n    convertHtmlToWord() {\r\n        var preHtml = \"<html xmlns:o='urn:schemas-microsoft-com:office:office' xmlns:w='urn:schemas-microsoft-com:office:word' xmlns='http://www.w3.org/TR/REC-html40'><head><meta charset='utf-8'><title>Export HTML To Doc</title></head><body>\";\r\n        var postHtml = \"</body></html>\";\r\n        var html = preHtml + this.props.allInformation.data + postHtml;\r\n\r\n        var blob = new Blob(['ufeff', html], {\r\n            type: 'application/msword'\r\n        });\r\n\r\n        // Specify link url\r\n        var url = 'data:application/vnd.ms-word;charset=utf-8,' + encodeURIComponent(html);\r\n\r\n        // Specify file name\r\n        var filename = 'document.doc';\r\n\r\n        // Create download link element\r\n        var downloadLink = document.createElement(\"a\");\r\n\r\n        document.body.appendChild(downloadLink);\r\n\r\n        if (navigator.msSaveOrOpenBlob) {\r\n            navigator.msSaveOrOpenBlob(blob, filename);\r\n        } else {\r\n            // Create a link to the file\r\n            downloadLink.href = url;\r\n\r\n            // Setting the file name\r\n            downloadLink.download = filename;\r\n\r\n            //triggering the function\r\n            downloadLink.click();\r\n        }\r\n\r\n        document.body.removeChild(downloadLink);\r\n\r\n    }\r\n\r\n    save(id) {\r\n        sessionStorage.setItem('condition', id)\r\n        this.props.history.push('/ProcessCondition')\r\n    }\r\n\r\n    load() {\r\n        return this.props.conditions.map((ConditionView) => {\r\n            return (\r\n                <tr key={ConditionView.id}>\r\n                    <td>{ConditionView.number}</td>\r\n                    <td>{ConditionView.name}</td>\r\n                    <td>\r\n                        <div className=\"progress\">\r\n                            <div className=\"progress-bar\" style={bar(ConditionView.percentage)} role=\"progressbar\" aria-valuenow=\"50\" aria-valuemin=\"0\" aria-valuemax=\"100\">{ConditionView.percentage}%</div>\r\n                        </div>\r\n                    </td>\r\n                    <td>\r\n                        <button onClick={() => this.save(ConditionView.id)} className=\"btn btn-sm text-light naranja\">\r\n                            Ver\r\n                        </button>\r\n                    </td>\r\n                </tr >\r\n            )\r\n        })\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"container color\">\r\n                <br />\r\n                <div class=\"card\">\r\n                    <div class=\"card-body\">\r\n                        <h3 class=\"card-title text-center\"><strong>Lista de condiciones</strong></h3>\r\n                        <table class=\"table border\">\r\n                            <thead class=\"colorBlue text-light\">\r\n                                <tr>\r\n                                    <th scope=\"col\">#</th>\r\n                                    <th scope=\"col\">Condición</th>\r\n                                    <th scope=\"col\">Proceso</th>\r\n                                    <th scope=\"col\"></th>\r\n                                </tr>\r\n                            </thead>\r\n                            <tbody>\r\n                                {this.load()}\r\n                            </tbody>\r\n                        </table>\r\n                    </div>\r\n                </div>\r\n                <br />\r\n                <div class=\"card\">\r\n                    <div class=\"card-body\">\r\n                        <div className=\"row\">\r\n                            <div><h5 class=\"card-title\">Card title</h5></div>\r\n                            <div>\r\n                                <button onClick={() => this.convertHtmlToPdf()} className=\"btn btn-sm text-light naranja\">\r\n                                    PDF\r\n                                </button>\r\n                            </div>\r\n                            <div>\r\n                                <button onClick={() => this.convertHtmlToWord()} className=\"btn btn-sm text-light naranja\">\r\n                                    WORD\r\n                                </button>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n\r\n}\r\n\r\nfunction bar(value) {\r\n    return {\r\n        border: \"1\",\r\n        color: \"#000\",\r\n        width: value + \"%\"\r\n    }\r\n\r\n}\r\n\r\nfunction mapStateToProps(state) {\r\n    return {\r\n        conditions: state.condition.listConditionsPer,\r\n        pro: state.condition.processId,\r\n        allInformation: state.activity.allInformation\r\n    }\r\n}\r\n\r\n\r\nexport default withRouter(connect(mapStateToProps, { getConditionsPer, getAllInformation })(ProcessPrograma));"]},"metadata":{},"sourceType":"module"}