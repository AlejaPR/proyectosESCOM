{"ast":null,"code":"import axios from 'axios';\nimport { encriptar, desencriptar } from '../componentes/general/Encriptar.js';\nimport { mensajesDeError } from '../utilitario/MensajesError.js'; // import axios from 'axios';\n\nexport const MOSTRAR_CONFIGURACION = 'MOSTRAR_CONFIGURACION';\nexport const ACTUALIZAR_BARRALATERAL = 'ACTUALIZAR_BARRALATERAL';\nexport const ACTUALIZAR_BARRASUPERIOR = 'ACTUALIZAR_BARRASUPERIOR';\nexport const ACTUALIZAR_BOTONES = 'ACTUALIZAR_BOTONES';\nexport const MENSAJE_CONFIGURACION = 'MENSAJE_CONFIGURACION';\nexport const CARGAR_CONFIGURACION = 'CARGAR_CONFIGURACION';\nexport function consultarConfiguracion() {\n  return (dispatch, getState) => {\n    // axios.get(\"http://localhost:9090/SuperadministradorESCOM-web/api/usu/\")\n    // .then(response => {\n    //     dispatch({\n    //         type: MOSTRAR_USUARIOS,\n    //         respuesta: response.data\n    //     });\n    dispatch({\n      type: MOSTRAR_CONFIGURACION,\n      configuracion: {\n        fondoBarra: \"#0E3D38\",\n        fondoSuperior: \"white\",\n        botones: \"blue\"\n      }\n    });\n  };\n}\nexport function actionConsultarConfiguracionCompleta(token) {\n  var tokenRequest = desencriptar(token);\n  const headers = {\n    'Content-Type': 'application/json',\n    'TokenAuto': tokenRequest,\n    'Permiso': 'sa_Administrar configuracion de aspecto'\n  };\n  return (dispatch, getState) => {\n    axios.get(\"http://localhost:9090/proyectosESCOM-web/api/configuracion/listarConfiguracionCompleta\", {\n      headers: headers\n    }).then(response => {\n      dispatch({\n        type: MENSAJE_CONFIGURACION,\n        mensaje: 'Operacion hecha con exito'\n      });\n      dispatch({\n        type: CARGAR_CONFIGURACION,\n        configuracion: response.data\n      });\n    }).catch(error => {\n      if (error.request.response === '') {\n        dispatch({\n          type: MENSAJE_CONFIGURACION,\n          mensaje: 'Servidor fuera de servicio temporalmente'\n        });\n      } else {\n        if (error.request) {\n          var o = JSON.parse(error.request.response);\n          let respuesta = mensajesDeError(o.respuesta);\n\n          if (respuesta !== '') {\n            dispatch({\n              type: MENSAJE_CONFIGURACION,\n              mensaje: respuesta\n            });\n          } else {\n            dispatch({\n              type: MENSAJE_CONFIGURACION,\n              mensaje: 'Sin acceso al servicio'\n            });\n          }\n        }\n      }\n    });\n  };\n}\nexport function actionActualizarBarraLateral(color) {\n  return (dispatch, getState) => {\n    dispatch({\n      type: ACTUALIZAR_BARRALATERAL,\n      color: color\n    });\n  };\n}\nexport function actionActualizarBarraSuperior(color) {\n  return (dispatch, getState) => {\n    dispatch({\n      type: ACTUALIZAR_BARRASUPERIOR,\n      color: color\n    });\n  };\n}\nexport function actionActualizarBotones(color) {\n  return (dispatch, getState) => {\n    dispatch({\n      type: ACTUALIZAR_BOTONES,\n      color: color\n    });\n  };\n}","map":{"version":3,"sources":["C:/Users/jeiso/Desktop/REACT/proyectosESCOM/frontend/ESCOM-view/src/SuperAdministrador/actions/actionConfiguracion.js"],"names":["axios","encriptar","desencriptar","mensajesDeError","MOSTRAR_CONFIGURACION","ACTUALIZAR_BARRALATERAL","ACTUALIZAR_BARRASUPERIOR","ACTUALIZAR_BOTONES","MENSAJE_CONFIGURACION","CARGAR_CONFIGURACION","consultarConfiguracion","dispatch","getState","type","configuracion","fondoBarra","fondoSuperior","botones","actionConsultarConfiguracionCompleta","token","tokenRequest","headers","get","then","response","mensaje","data","catch","error","request","o","JSON","parse","respuesta","actionActualizarBarraLateral","color","actionActualizarBarraSuperior","actionActualizarBotones"],"mappings":"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","sourcesContent":["import axios from 'axios';\r\nimport { encriptar, desencriptar } from '../componentes/general/Encriptar.js';\r\nimport {mensajesDeError} from '../utilitario/MensajesError.js';\r\n// import axios from 'axios';\r\n\r\nexport const MOSTRAR_CONFIGURACION = 'MOSTRAR_CONFIGURACION'\r\nexport const ACTUALIZAR_BARRALATERAL= 'ACTUALIZAR_BARRALATERAL'\r\nexport const ACTUALIZAR_BARRASUPERIOR= 'ACTUALIZAR_BARRASUPERIOR'\r\nexport const ACTUALIZAR_BOTONES='ACTUALIZAR_BOTONES';\r\nexport const MENSAJE_CONFIGURACION='MENSAJE_CONFIGURACION';\r\nexport const CARGAR_CONFIGURACION='CARGAR_CONFIGURACION';\r\n\r\n\r\nexport function consultarConfiguracion() {\r\n    return (dispatch, getState) => {\r\n        // axios.get(\"http://localhost:9090/SuperadministradorESCOM-web/api/usu/\")\r\n        // .then(response => {\r\n        //     dispatch({\r\n        //         type: MOSTRAR_USUARIOS,\r\n        //         respuesta: response.data\r\n        //     });\r\n        dispatch({\r\n            type: MOSTRAR_CONFIGURACION,\r\n            configuracion:{\r\n                fondoBarra: \"#0E3D38\",\r\n                fondoSuperior:\"white\",\r\n                botones:\"blue\"\r\n            }\r\n        });\r\n    }\r\n}\r\n\r\nexport function actionConsultarConfiguracionCompleta(token) {\r\n    var tokenRequest = desencriptar(token);\r\n    const headers = {\r\n        'Content-Type': 'application/json',\r\n        'TokenAuto': tokenRequest,\r\n        'Permiso': 'sa_Administrar configuracion de aspecto'\r\n    }\r\n    return (dispatch, getState) => {\r\n        axios.get(\"http://localhost:9090/proyectosESCOM-web/api/configuracion/listarConfiguracionCompleta\", { headers: headers })\r\n            .then(response => {\r\n                dispatch({\r\n                    type: MENSAJE_CONFIGURACION,\r\n                    mensaje: 'Operacion hecha con exito'\r\n                });\r\n                dispatch({\r\n                    type: CARGAR_CONFIGURACION,\r\n                    configuracion: response.data\r\n                });\r\n            }).catch((error) => {\r\n                if (error.request.response === '') {\r\n                    dispatch({\r\n                        type: MENSAJE_CONFIGURACION,\r\n                        mensaje: 'Servidor fuera de servicio temporalmente'\r\n                    });\r\n                }else{\r\n                    if (error.request) {\r\n                        var o = JSON.parse(error.request.response);\r\n                        let respuesta=mensajesDeError(o.respuesta);\r\n                        if(respuesta!==''){\r\n                            dispatch({\r\n                                type: MENSAJE_CONFIGURACION,\r\n                                mensaje: respuesta\r\n                            });\r\n                        }else{\r\n                            dispatch({\r\n                                type: MENSAJE_CONFIGURACION,\r\n                                mensaje: 'Sin acceso al servicio'\r\n                            });\r\n                        }\r\n                    }\r\n                } \r\n                \r\n            });\r\n    }\r\n}\r\n\r\nexport function actionActualizarBarraLateral(color) {\r\n    return (dispatch, getState) => {\r\n        dispatch({\r\n            type: ACTUALIZAR_BARRALATERAL,\r\n            color:color\r\n        });\r\n    }\r\n}\r\n\r\nexport function actionActualizarBarraSuperior(color) {\r\n    return (dispatch, getState) => {\r\n        dispatch({\r\n            type: ACTUALIZAR_BARRASUPERIOR,\r\n            color:color\r\n        });\r\n    }\r\n}\r\n\r\nexport function actionActualizarBotones(color) {\r\n    return (dispatch, getState) => {\r\n        dispatch({\r\n            type: ACTUALIZAR_BOTONES,\r\n            color:color\r\n        });\r\n    }\r\n}"]},"metadata":{},"sourceType":"module"}