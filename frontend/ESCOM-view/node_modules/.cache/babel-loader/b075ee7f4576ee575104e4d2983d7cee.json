{"ast":null,"code":"import _slicedToArray from \"C:\\\\Users\\\\jeiso\\\\Desktop\\\\REACT\\\\proyectosESCOM\\\\frontend\\\\ESCOM-view\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"C:\\\\Users\\\\jeiso\\\\Desktop\\\\REACT\\\\proyectosESCOM\\\\frontend\\\\ESCOM-view\\\\src\\\\SuperAdministrador\\\\componentes\\\\color.js\";\nimport React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Stepper from '@material-ui/core/Stepper';\nimport Step from '@material-ui/core/Step';\nimport StepButton from '@material-ui/core/StepButton';\nimport Button from '@material-ui/core/Button';\nimport Typography from '@material-ui/core/Typography';\nimport { SketchPicker } from 'react-color';\nexport default class Configuracion extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.useStyles = makeStyles(theme => ({\n      root: {\n        width: '100%'\n      },\n      button: {\n        marginRight: theme.spacing(1)\n      },\n      completed: {\n        display: 'inline-block'\n      },\n      instructions: {\n        marginTop: theme.spacing(1),\n        marginBottom: theme.spacing(1)\n      }\n    }));\n  }\n\n  getSteps() {\n    return ['Select campaign settings', 'Create an ad group', 'Create an ad', 'Create an ad group', 'Create an ad group'];\n  }\n\n  getStepContent(step) {\n    switch (step) {\n      case 0:\n        return React.createElement(SketchPicker, {\n          disableAlpha: true,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 34\n          },\n          __self: this\n        });\n\n      case 1:\n        return 'Step 2: What is an ad group anyways?';\n\n      case 2:\n        return 'Step 3: This is the bit I really care about!';\n\n      default:\n        return 'Unknown step';\n    }\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      className: classes.root,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 46\n      },\n      __self: this\n    }, React.createElement(Stepper, {\n      nonLinear: true,\n      activeStep: activeStep,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 47\n      },\n      __self: this\n    }, steps.map((label, index) => React.createElement(Step, {\n      key: label,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 49\n      },\n      __self: this\n    }, React.createElement(StepButton, {\n      onClick: handleStep(index),\n      completed: completed[index],\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 50\n      },\n      __self: this\n    }, label)))), React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 56\n      },\n      __self: this\n    }, allStepsCompleted() ? React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 58\n      },\n      __self: this\n    }, React.createElement(Typography, {\n      className: classes.instructions,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 59\n      },\n      __self: this\n    }, \"All steps completed - you're finished\"), React.createElement(Button, {\n      onClick: handleReset,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 62\n      },\n      __self: this\n    }, \"Reset\")) : React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 65\n      },\n      __self: this\n    }, React.createElement(Typography, {\n      className: classes.instructions,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 66\n      },\n      __self: this\n    }, getStepContent(activeStep)), React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 67\n      },\n      __self: this\n    }, React.createElement(Button, {\n      disabled: activeStep === 0,\n      onClick: handleBack,\n      className: classes.button,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 68\n      },\n      __self: this\n    }, \"Back\"), React.createElement(Button, {\n      variant: \"contained\",\n      color: \"primary\",\n      onClick: handleNext,\n      className: classes.button,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 71\n      },\n      __self: this\n    }, \"Next\"), activeStep !== steps.length && (completed[activeStep] ? React.createElement(Typography, {\n      variant: \"caption\",\n      className: classes.completed,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 81\n      },\n      __self: this\n    }, \"Step \", activeStep + 1, \" already completed\") : React.createElement(Button, {\n      variant: \"contained\",\n      color: \"primary\",\n      onClick: handleComplete,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 85\n      },\n      __self: this\n    }, completedSteps() === totalSteps() - 1 ? 'Finish' : 'Complete Step'))))));\n  }\n\n}\n\nconst _React$useState = React.useState(0),\n      _React$useState2 = _slicedToArray(_React$useState, 2),\n      activeStep = _React$useState2[0],\n      setActiveStep = _React$useState2[1];\n\nconst classes = useStyles();\n\nconst _React$useState3 = React.useState({}),\n      _React$useState4 = _slicedToArray(_React$useState3, 2),\n      completed = _React$useState4[0],\n      setCompleted = _React$useState4[1];\n\nconst steps = getSteps();\n\nconst totalSteps = () => {\n  return steps.length;\n};\n\nconst completedSteps = () => {\n  return Object.keys(completed).length;\n};\n\nconst isLastStep = () => {\n  return activeStep === totalSteps() - 1;\n};\n\nconst allStepsCompleted = () => {\n  return completedSteps() === totalSteps();\n};\n\nconst handleNext = () => {\n  const newActiveStep = isLastStep() && !allStepsCompleted() ? // It's the last step, but not all steps have been completed,\n  // find the first step that has been completed\n  steps.findIndex((step, i) => !(i in completed)) : activeStep + 1;\n  setActiveStep(newActiveStep);\n};\n\nconst handleBack = () => {\n  setActiveStep(prevActiveStep => prevActiveStep - 1);\n};\n\nconst handleStep = step => () => {\n  setActiveStep(step);\n};\n\nconst handleComplete = () => {\n  const newCompleted = completed;\n  newCompleted[activeStep] = true;\n  setCompleted(newCompleted);\n  handleNext();\n};\n\nconst handleReset = () => {\n  setActiveStep(0);\n  setCompleted({});\n};","map":{"version":3,"sources":["C:/Users/jeiso/Desktop/REACT/proyectosESCOM/frontend/ESCOM-view/src/SuperAdministrador/componentes/color.js"],"names":["React","makeStyles","Stepper","Step","StepButton","Button","Typography","SketchPicker","Configuracion","Component","useStyles","theme","root","width","button","marginRight","spacing","completed","display","instructions","marginTop","marginBottom","getSteps","getStepContent","step","render","classes","activeStep","steps","map","label","index","handleStep","allStepsCompleted","handleReset","handleBack","handleNext","length","handleComplete","completedSteps","totalSteps","useState","setActiveStep","setCompleted","Object","keys","isLastStep","newActiveStep","findIndex","i","prevActiveStep","newCompleted"],"mappings":"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","sourcesContent":["import React from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Stepper from '@material-ui/core/Stepper';\r\nimport Step from '@material-ui/core/Step';\r\nimport StepButton from '@material-ui/core/StepButton';\r\nimport Button from '@material-ui/core/Button';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport { SketchPicker } from 'react-color';\r\n\r\n\r\nexport default class Configuracion extends React.Component {\r\n\tuseStyles = makeStyles(theme => ({\r\n\t\troot: {\r\n\t\t\twidth: '100%',\r\n\t\t},\r\n\t\tbutton: {\r\n\t\t\tmarginRight: theme.spacing(1),\r\n\t\t},\r\n\t\tcompleted: {\r\n\t\t\tdisplay: 'inline-block',\r\n\t\t},\r\n\t\tinstructions: {\r\n\t\t\tmarginTop: theme.spacing(1),\r\n\t\t\tmarginBottom: theme.spacing(1),\r\n\t\t},\r\n\t}));\r\n\tgetSteps() {\r\n\t\treturn ['Select campaign settings', 'Create an ad group', 'Create an ad', 'Create an ad group', 'Create an ad group'];\r\n\t}\r\n\r\n\tgetStepContent(step) {\r\n\t\tswitch (step) {\r\n\t\t\tcase 0:\r\n\t\t\t\treturn (<SketchPicker disableAlpha={true} />)\r\n\t\t\tcase 1:\r\n\t\t\t\treturn 'Step 2: What is an ad group anyways?';\r\n\t\t\tcase 2:\r\n\t\t\t\treturn 'Step 3: This is the bit I really care about!';\r\n\t\t\tdefault:\r\n\t\t\t\treturn 'Unknown step';\r\n\t\t}\r\n\t}\r\n\t\r\n\trender() {\r\n\t\treturn (\r\n\t\t\t<div className={classes.root}>\r\n\t\t\t\t<Stepper nonLinear activeStep={activeStep}>\r\n\t\t\t\t\t{steps.map((label, index) => (\r\n\t\t\t\t\t\t<Step key={label}>\r\n\t\t\t\t\t\t\t<StepButton onClick={handleStep(index)} completed={completed[index]}>\r\n\t\t\t\t\t\t\t\t{label}\r\n\t\t\t\t\t\t\t</StepButton>\r\n\t\t\t\t\t\t</Step>\r\n\t\t\t\t\t))}\r\n\t\t\t\t</Stepper>\r\n\t\t\t\t<div>\r\n\t\t\t\t\t{allStepsCompleted() ? (\r\n\t\t\t\t\t\t<div>\r\n\t\t\t\t\t\t\t<Typography className={classes.instructions}>\r\n\t\t\t\t\t\t\t\tAll steps completed - you&apos;re finished\r\n\t\t\t\t</Typography>\r\n\t\t\t\t\t\t\t<Button onClick={handleReset}>Reset</Button>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t) : (\r\n\t\t\t\t\t\t\t<div>\r\n\t\t\t\t\t\t\t\t<Typography className={classes.instructions}>{getStepContent(activeStep)}</Typography>\r\n\t\t\t\t\t\t\t\t<div>\r\n\t\t\t\t\t\t\t\t\t<Button disabled={activeStep === 0} onClick={handleBack} className={classes.button}>\r\n\t\t\t\t\t\t\t\t\t\tBack\r\n\t\t\t\t  </Button>\r\n\t\t\t\t\t\t\t\t\t<Button\r\n\t\t\t\t\t\t\t\t\t\tvariant=\"contained\"\r\n\t\t\t\t\t\t\t\t\t\tcolor=\"primary\"\r\n\t\t\t\t\t\t\t\t\t\tonClick={handleNext}\r\n\t\t\t\t\t\t\t\t\t\tclassName={classes.button}\r\n\t\t\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t\t\tNext\r\n\t\t\t\t  </Button>\r\n\t\t\t\t\t\t\t\t\t{activeStep !== steps.length &&\r\n\t\t\t\t\t\t\t\t\t\t(completed[activeStep] ? (\r\n\t\t\t\t\t\t\t\t\t\t\t<Typography variant=\"caption\" className={classes.completed}>\r\n\t\t\t\t\t\t\t\t\t\t\t\tStep {activeStep + 1} already completed\r\n\t\t\t\t\t  </Typography>\r\n\t\t\t\t\t\t\t\t\t\t) : (\r\n\t\t\t\t\t\t\t\t\t\t\t\t<Button variant=\"contained\" color=\"primary\" onClick={handleComplete}>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t{completedSteps() === totalSteps() - 1 ? 'Finish' : 'Complete Step'}\r\n\t\t\t\t\t\t\t\t\t\t\t\t</Button>\r\n\t\t\t\t\t\t\t\t\t\t\t))}\r\n\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t)}\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t);\r\n\t}\r\n}\r\n\r\nconst [activeStep, setActiveStep] = React.useState(0);\r\n\r\nconst classes = useStyles();\r\n\r\nconst [completed, setCompleted] = React.useState({});\r\n\tconst steps = getSteps();\r\n\r\n\tconst totalSteps = () => {\r\n\t\treturn steps.length;\r\n\t};\r\n\r\n\tconst completedSteps = () => {\r\n\t\treturn Object.keys(completed).length;\r\n\t};\r\n\r\n\tconst isLastStep = () => {\r\n\t\treturn activeStep === totalSteps() - 1;\r\n\t};\r\n\r\n\tconst allStepsCompleted = () => {\r\n\t\treturn completedSteps() === totalSteps();\r\n\t};\r\n\r\n\tconst handleNext = () => {\r\n\t\tconst newActiveStep =\r\n\t\t\tisLastStep() && !allStepsCompleted()\r\n\t\t\t\t? // It's the last step, but not all steps have been completed,\r\n\t\t\t\t// find the first step that has been completed\r\n\t\t\t\tsteps.findIndex((step, i) => !(i in completed))\r\n\t\t\t\t: activeStep + 1;\r\n\t\tsetActiveStep(newActiveStep);\r\n\t};\r\n\r\n\tconst handleBack = () => {\r\n\t\tsetActiveStep(prevActiveStep => prevActiveStep - 1);\r\n\t};\r\n\r\n\tconst handleStep = step => () => {\r\n\t\tsetActiveStep(step);\r\n\t};\r\n\r\n\tconst handleComplete = () => {\r\n\t\tconst newCompleted = completed;\r\n\t\tnewCompleted[activeStep] = true;\r\n\t\tsetCompleted(newCompleted);\r\n\t\thandleNext();\r\n\t};\r\n\r\n\tconst handleReset = () => {\r\n\t\tsetActiveStep(0);\r\n\t\tsetCompleted({});\r\n\t};"]},"metadata":{},"sourceType":"module"}