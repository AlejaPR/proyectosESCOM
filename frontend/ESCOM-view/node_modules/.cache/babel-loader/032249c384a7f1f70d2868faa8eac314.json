{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\hashy\\\\Desktop\\\\proyectosESCOM\\\\frontend\\\\ESCOM-view\\\\src\\\\ModuloDocumental\\\\components\\\\Setting\\\\Program\\\\listProgramS.js\";\nimport React from 'react';\nimport { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { withRouter } from 'react-router-dom';\nimport { getListPrograms, getProgramId, disableProgram, addMessageDisable } from '../../../redux/actions/programA.js';\nimport { ToastContainer, toast } from 'react-toastify';\nimport { confirmAlert } from 'react-confirm-alert';\nimport Alert from '@material-ui/lab/Alert';\nimport AlertTitle from '@material-ui/lab/AlertTitle';\nimport Add from './add.js';\nimport Edit from './edit.js';\nimport View from './view.js';\nimport MaterialTable from 'material-table';\nimport EditIcon from '@material-ui/icons/Edit';\nimport VisibilityIcon from '@material-ui/icons/Visibility';\nimport DeleteForeverIcon from '@material-ui/icons/DeleteForever';\n\nclass ListPrograms extends Component {\n  componentDidMount() {\n    this.props.getListPrograms(localStorage.getItem('Token'));\n  }\n\n  componentDidUpdate() {\n    if (this.props.messageDisableP !== '') {\n      switch (this.props.messageDisableP) {\n        case 'disable':\n          toast.success('Se inhabilito con éxito.');\n          this.props.addMessageDisable('');\n          this.props.getListPrograms(localStorage.getItem('Token'));\n          break;\n\n        case 'Sin permiso':\n          toast.success('No tiene permisos suficientes para inhabilitar.');\n          this.props.addMessageDisable('');\n          break;\n\n        case 'error server':\n          toast.error('Se presento un error, intentelo mas tarde.');\n          this.props.addMessageDisable('');\n          break;\n\n        default:\n          break;\n      }\n    }\n  }\n\n  save(id) {\n    this.props.getProgramId(localStorage.getItem('Token'), id);\n  }\n\n  disable(id) {\n    confirmAlert({\n      title: '',\n      message: '¿Esta seguro?',\n      buttons: [{\n        label: 'Si',\n        onClick: () => {\n          this.props.disableProgram(localStorage.getItem('Token'), id);\n        }\n      }, {\n        label: 'No',\n        onClick: () => {}\n      }]\n    });\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      className: \"container\",\n      style: {\n        width: \"90%\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 75\n      },\n      __self: this\n    }, React.createElement(ToastContainer, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 76\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      className: \"text-left titulo\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 77\n      },\n      __self: this\n    }, React.createElement(\"h4\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 78\n      },\n      __self: this\n    }, \"Lista de programas\")), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 80\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      className: \"shadow\",\n      style: {\n        background: \"#FFFFFF\",\n        padding: \"30px\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 81\n      },\n      __self: this\n    }, this.props.enabled ? React.createElement(\"div\", {\n      className: \"col-sm-12\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 83\n      },\n      __self: this\n    }, React.createElement(Alert, {\n      severity: \"error\",\n      variant: \"outlined\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 84\n      },\n      __self: this\n    }, React.createElement(AlertTitle, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 85\n      },\n      __self: this\n    }, \"Sin permiso\"), \"No tiene permisos suficientes para listar los programas.\")) : React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 88\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 89\n      },\n      __self: this\n    }, React.createElement(Add, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 90\n      },\n      __self: this\n    })), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 92\n      },\n      __self: this\n    }), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 93\n      },\n      __self: this\n    }), React.createElement(MaterialTable, {\n      title: \"\",\n      localization: {\n        header: {\n          actions: ' '\n        },\n        pagination: {\n          nextTooltip: 'Siguiente ',\n          previousTooltip: 'Anterior',\n          labelDisplayedRows: '{from}-{to} de {count}',\n          lastTooltip: 'Ultima pagina',\n          firstTooltip: 'Primera pagina',\n          labelRowsSelect: 'Registros',\n          firstAriaLabel: 'oooo'\n        },\n        body: {\n          emptyDataSourceMessage: 'Aun no hay ningun programa registrado'\n        },\n        toolbar: {\n          searchTooltip: 'Buscar',\n          searchPlaceholder: 'Buscar'\n        }\n      },\n      columns: [{\n        title: 'Nombre del programa',\n        field: 'name',\n        render: rowData => {\n          return rowData.name + \"-\" + rowData.campus;\n        }\n      }, {\n        title: 'Nivel educativo',\n        field: 'levelEducation'\n      }, {\n        title: '',\n        field: 'id',\n        render: rowData => {\n          return React.createElement(\"div\", {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 130\n            },\n            __self: this\n          }, React.createElement(\"a\", {\n            onClick: () => this.save(rowData.id),\n            \"data-toggle\": \"modal\",\n            \"data-target\": \"#viewModal\",\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 131\n            },\n            __self: this\n          }, React.createElement(VisibilityIcon, {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 132\n            },\n            __self: this\n          })), React.createElement(View, {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 134\n            },\n            __self: this\n          }));\n        }\n      }, {\n        title: '',\n        field: 'id',\n        render: rowData => {\n          return React.createElement(\"div\", {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 143\n            },\n            __self: this\n          }, React.createElement(\"a\", {\n            onClick: () => this.save(rowData.id),\n            \"data-toggle\": \"modal\",\n            \"data-target\": \"#editModal\",\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 144\n            },\n            __self: this\n          }, React.createElement(EditIcon, {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 145\n            },\n            __self: this\n          })), React.createElement(Edit, {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 147\n            },\n            __self: this\n          }));\n        }\n      }, {\n        title: '',\n        field: 'id',\n        render: rowData => {\n          return React.createElement(\"div\", {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 156\n            },\n            __self: this\n          }, React.createElement(\"a\", {\n            onClick: () => this.disable(rowData.id),\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 157\n            },\n            __self: this\n          }, React.createElement(DeleteForeverIcon, {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 158\n            },\n            __self: this\n          })));\n        }\n      }],\n      data: this.props.listProgram,\n      options: {\n        search: true\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 94\n      },\n      __self: this\n    }))));\n  }\n\n}\n\nfunction mapStateToProps(state) {\n  return {\n    listProgram: state.program.listProgramR,\n    messageDisableP: state.program.messageDisable,\n    enabled: state.program.stateProgram\n  };\n}\n\nexport default withRouter(connect(mapStateToProps, {\n  getListPrograms,\n  getProgramId,\n  disableProgram,\n  addMessageDisable\n})(ListPrograms));","map":{"version":3,"sources":["C:/Users/hashy/Desktop/proyectosESCOM/frontend/ESCOM-view/src/ModuloDocumental/components/Setting/Program/listProgramS.js"],"names":["React","Component","connect","withRouter","getListPrograms","getProgramId","disableProgram","addMessageDisable","ToastContainer","toast","confirmAlert","Alert","AlertTitle","Add","Edit","View","MaterialTable","EditIcon","VisibilityIcon","DeleteForeverIcon","ListPrograms","componentDidMount","props","localStorage","getItem","componentDidUpdate","messageDisableP","success","error","save","id","disable","title","message","buttons","label","onClick","render","width","background","padding","enabled","header","actions","pagination","nextTooltip","previousTooltip","labelDisplayedRows","lastTooltip","firstTooltip","labelRowsSelect","firstAriaLabel","body","emptyDataSourceMessage","toolbar","searchTooltip","searchPlaceholder","field","rowData","name","campus","listProgram","search","mapStateToProps","state","program","listProgramR","messageDisable","stateProgram"],"mappings":"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","sourcesContent":["import React from 'react';\r\nimport { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { withRouter } from 'react-router-dom';\r\nimport { getListPrograms, getProgramId, disableProgram, addMessageDisable } from '../../../redux/actions/programA.js';\r\nimport { ToastContainer, toast } from 'react-toastify';\r\nimport { confirmAlert } from 'react-confirm-alert';\r\n\r\nimport Alert from '@material-ui/lab/Alert';\r\nimport AlertTitle from '@material-ui/lab/AlertTitle';\r\n\r\nimport Add from './add.js';\r\nimport Edit from './edit.js';\r\nimport View from './view.js';\r\n\r\nimport MaterialTable from 'material-table';\r\n\r\nimport EditIcon from '@material-ui/icons/Edit';\r\nimport VisibilityIcon from '@material-ui/icons/Visibility';\r\nimport DeleteForeverIcon from '@material-ui/icons/DeleteForever';\r\n\r\nclass ListPrograms extends Component {\r\n\r\n    componentDidMount() {\r\n        this.props.getListPrograms(localStorage.getItem('Token'))\r\n    }\r\n\r\n    componentDidUpdate() {\r\n        if (this.props.messageDisableP !== '') {\r\n            switch (this.props.messageDisableP) {\r\n                case 'disable':\r\n                    toast.success('Se inhabilito con éxito.');\r\n                    this.props.addMessageDisable('');\r\n                    this.props.getListPrograms(localStorage.getItem('Token'));\r\n                    break;\r\n                case 'Sin permiso':\r\n                    toast.success('No tiene permisos suficientes para inhabilitar.');\r\n                    this.props.addMessageDisable('');\r\n                    break;\r\n                case 'error server':\r\n                    toast.error('Se presento un error, intentelo mas tarde.');\r\n                    this.props.addMessageDisable('');\r\n                    break;\r\n                default:\r\n                    break;\r\n            }\r\n        }\r\n    }\r\n\r\n    save(id) {\r\n        this.props.getProgramId(localStorage.getItem('Token'), id)\r\n    }\r\n\r\n    disable(id) {\r\n        confirmAlert({\r\n            title: '',\r\n            message: '¿Esta seguro?',\r\n            buttons: [\r\n                {\r\n                    label: 'Si',\r\n                    onClick: () => {\r\n                        this.props.disableProgram(localStorage.getItem('Token'), id)\r\n                    }\r\n                },\r\n                {\r\n                    label: 'No',\r\n                    onClick: () => { }\r\n                }\r\n            ]\r\n        });\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"container\" style={{ width: \"90%\" }}>\r\n                <ToastContainer />\r\n                <div className=\"text-left titulo\">\r\n                    <h4>Lista de programas</h4>\r\n                </div>\r\n                <br />\r\n                <div className=\"shadow\" style={{ background: \"#FFFFFF\", padding: \"30px\" }}>\r\n                    {\r\n                        this.props.enabled ? <div className=\"col-sm-12\">\r\n                            <Alert severity=\"error\" variant=\"outlined\">\r\n                                <AlertTitle>Sin permiso</AlertTitle>\r\n                                No tiene permisos suficientes para listar los programas.</Alert>\r\n                        </div> :\r\n                            <div>\r\n                                <div>\r\n                                    <Add />\r\n                                </div>\r\n                                <br />\r\n                                <br />\r\n                                <MaterialTable\r\n                                    title=\"\"\r\n                                    localization={{\r\n                                        header: {\r\n                                            actions: ' '\r\n                                        },\r\n                                        pagination: {\r\n                                            nextTooltip: 'Siguiente ',\r\n                                            previousTooltip: 'Anterior',\r\n                                            labelDisplayedRows: '{from}-{to} de {count}',\r\n                                            lastTooltip: 'Ultima pagina',\r\n                                            firstTooltip: 'Primera pagina',\r\n                                            labelRowsSelect: 'Registros',\r\n                                            firstAriaLabel: 'oooo'\r\n                                        },\r\n                                        body: {\r\n                                            emptyDataSourceMessage: 'Aun no hay ningun programa registrado'\r\n                                        },\r\n                                        toolbar: {\r\n                                            searchTooltip: 'Buscar',\r\n                                            searchPlaceholder: 'Buscar'\r\n                                        }\r\n                                    }}\r\n                                    columns={[\r\n\r\n                                        {\r\n                                            title: 'Nombre del programa', field: 'name',\r\n                                            render: rowData => {\r\n                                                return (rowData.name + \"-\" + rowData.campus)\r\n                                            }\r\n                                        },\r\n                                        { title: 'Nivel educativo', field: 'levelEducation' },\r\n                                        {\r\n                                            title: '', field: 'id',\r\n                                            render: rowData => {\r\n                                                return (\r\n                                                    <div>\r\n                                                        <a onClick={() => this.save(rowData.id)} data-toggle=\"modal\" data-target=\"#viewModal\">\r\n                                                            <VisibilityIcon />\r\n                                                        </a>\r\n                                                        <View />\r\n                                                    </div>\r\n                                                )\r\n                                            }\r\n                                        },\r\n                                        {\r\n                                            title: '', field: 'id',\r\n                                            render: rowData => {\r\n                                                return (\r\n                                                    <div>\r\n                                                        <a onClick={() => this.save(rowData.id)} data-toggle=\"modal\" data-target=\"#editModal\">\r\n                                                            <EditIcon />\r\n                                                        </a>\r\n                                                        <Edit />\r\n                                                    </div>\r\n                                                )\r\n                                            }\r\n                                        },\r\n                                        {\r\n                                            title: '', field: 'id',\r\n                                            render: rowData => {\r\n                                                return (\r\n                                                    <div>\r\n                                                        <a onClick={() => this.disable(rowData.id)}>\r\n                                                            <DeleteForeverIcon />\r\n                                                        </a>\r\n                                                    </div>\r\n                                                )\r\n                                            }\r\n                                        }\r\n\r\n                                    ]}\r\n                                    data={this.props.listProgram}\r\n                                    options={{\r\n                                        search: true\r\n                                    }}\r\n\r\n                                />\r\n                            </div>\r\n                    }\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n\r\n}\r\n\r\nfunction mapStateToProps(state) {\r\n    return {\r\n        listProgram: state.program.listProgramR,\r\n        messageDisableP: state.program.messageDisable,\r\n        enabled: state.program.stateProgram\r\n    }\r\n}\r\n\r\nexport default withRouter(connect(mapStateToProps, { getListPrograms, getProgramId, disableProgram, addMessageDisable })(ListPrograms));\r\n"]},"metadata":{},"sourceType":"module"}