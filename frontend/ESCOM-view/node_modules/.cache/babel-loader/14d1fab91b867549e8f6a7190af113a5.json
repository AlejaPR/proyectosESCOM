{"ast":null,"code":"import axios from 'axios';\nimport { desencriptar } from '../../../SuperAdministrador/componentes/general/Encriptar.js';\nexport const GET_ANNEX_VERSIONS = 'GET_ANNEX_VERSIONS';\nexport const ADD_ANNEX_VERSION = 'ADD_ANNEX_VERSION';\nconst URL_BASE = 'http://localhost:9090/proyectosESCOM-web';\nconst PERMIT_GET_ANNEX_VERSION = 'MD_Lista version anexo';\nconst PERMIT_ADD_ANNEX_VERSION = 'MD_Agregar version anexo';\nexport const ADD_MESSAGE_ADD = 'ADD_MESSAGE_ADD';\nexport function addMessageAdd(mensaje) {\n  return (dispatch, getState) => {\n    dispatch({\n      type: ADD_MESSAGE_ADD,\n      mensaje: mensaje\n    });\n  };\n} //MD_Lista version anexo\n\nexport function getAnnexVersions(token, id) {\n  const headers = {\n    'Content-Type': 'application/json',\n    'TokenAuto': desencriptar(token),\n    'Permiso': PERMIT_GET_ANNEX_VERSION\n  };\n  return (dispatch, getState) => {\n    axios.get(`${URL_BASE}/api/annexVersion/list/${id}`, {\n      headers: headers\n    }).then(response => {\n      dispatch({\n        type: GET_ANNEX_VERSIONS,\n        payload: response.data\n      });\n    });\n  };\n} //MD_Agregar version anexo\n\nexport function addAnnexVersion(token, data, annexN) {\n  const headers = {\n    'Content-Type': 'application/json; charset= UTF-8',\n    'TokenAuto': desencriptar(token),\n    'Permiso': PERMIT_ADD_ANNEX_VERSION\n  };\n  annexN.requestData = {\n    'ip': localStorage.getItem('Ip'),\n    'token': desencriptar(token),\n    'operacion': PERMIT_ADD_ANNEX_VERSION\n  };\n  return (dispatch, getState) => {\n    axios.post(\"http://localhost:8000/upload\", data).then(res => {\n      annexN.location = res.data;\n      axios.post(`${URL_BASE}/api/annexVersion/add/`, annexN, {\n        headers: headers\n      }).then(response => {\n        dispatch({\n          type: ADD_ANNEX_VERSION,\n          payload: response.data.respuesta\n        });\n      });\n    }).catch(err => {\n      dispatch({\n        type: ADD_ANNEX_VERSION,\n        payload: err.data\n      });\n    });\n  };\n}","map":{"version":3,"sources":["C:/Users/hashy/Desktop/proyectosESCOM/frontend/ESCOM-view/src/ModuloDocumental/redux/actions/annexVersionA.js"],"names":["axios","desencriptar","GET_ANNEX_VERSIONS","ADD_ANNEX_VERSION","URL_BASE","PERMIT_GET_ANNEX_VERSION","PERMIT_ADD_ANNEX_VERSION","ADD_MESSAGE_ADD","addMessageAdd","mensaje","dispatch","getState","type","getAnnexVersions","token","id","headers","get","then","response","payload","data","addAnnexVersion","annexN","requestData","localStorage","getItem","post","res","location","respuesta","catch","err"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AAEA,SAASC,YAAT,QAA6B,8DAA7B;AAEA,OAAO,MAAMC,kBAAkB,GAAG,oBAA3B;AACP,OAAO,MAAMC,iBAAiB,GAAG,mBAA1B;AAEP,MAAMC,QAAQ,GAAG,0CAAjB;AACA,MAAMC,wBAAwB,GAAG,wBAAjC;AACA,MAAMC,wBAAwB,GAAG,0BAAjC;AAEA,OAAO,MAAMC,eAAe,GAAG,iBAAxB;AAEP,OAAO,SAASC,aAAT,CAAuBC,OAAvB,EAAgC;AACnC,SAAO,CAACC,QAAD,EAAWC,QAAX,KAAwB;AAC3BD,IAAAA,QAAQ,CAAC;AACLE,MAAAA,IAAI,EAAEL,eADD;AAELE,MAAAA,OAAO,EAAEA;AAFJ,KAAD,CAAR;AAIH,GALD;AAMH,C,CAED;;AACA,OAAO,SAASI,gBAAT,CAA0BC,KAA1B,EAAiCC,EAAjC,EAAqC;AACxC,QAAMC,OAAO,GAAG;AACZ,oBAAgB,kBADJ;AAEZ,iBAAaf,YAAY,CAACa,KAAD,CAFb;AAGZ,eAAWT;AAHC,GAAhB;AAKA,SAAO,CAACK,QAAD,EAAWC,QAAX,KAAwB;AAC3BX,IAAAA,KAAK,CAACiB,GAAN,CAAW,GAAEb,QAAS,0BAAyBW,EAAG,EAAlD,EAAqD;AAAEC,MAAAA,OAAO,EAAEA;AAAX,KAArD,EACKE,IADL,CACUC,QAAQ,IAAI;AACdT,MAAAA,QAAQ,CAAC;AACLE,QAAAA,IAAI,EAAEV,kBADD;AAELkB,QAAAA,OAAO,EAAED,QAAQ,CAACE;AAFb,OAAD,CAAR;AAIH,KANL;AAOH,GARD;AASH,C,CAED;;AACA,OAAO,SAASC,eAAT,CAAyBR,KAAzB,EAAgCO,IAAhC,EAAsCE,MAAtC,EAA8C;AACjD,QAAMP,OAAO,GAAG;AACZ,oBAAgB,kCADJ;AAEZ,iBAAaf,YAAY,CAACa,KAAD,CAFb;AAGZ,eAAWR;AAHC,GAAhB;AAKAiB,EAAAA,MAAM,CAACC,WAAP,GAAqB;AACjB,UAAMC,YAAY,CAACC,OAAb,CAAqB,IAArB,CADW;AAEjB,aAASzB,YAAY,CAACa,KAAD,CAFJ;AAGjB,iBAAaR;AAHI,GAArB;AAKA,SAAO,CAACI,QAAD,EAAWC,QAAX,KAAwB;AAC3BX,IAAAA,KAAK,CAAC2B,IAAN,CAAW,8BAAX,EAA2CN,IAA3C,EACKH,IADL,CACUU,GAAG,IAAI;AACTL,MAAAA,MAAM,CAACM,QAAP,GAAkBD,GAAG,CAACP,IAAtB;AACArB,MAAAA,KAAK,CAAC2B,IAAN,CAAY,GAAEvB,QAAS,wBAAvB,EAAgDmB,MAAhD,EAAwD;AAAEP,QAAAA,OAAO,EAAEA;AAAX,OAAxD,EACKE,IADL,CACUC,QAAQ,IAAI;AACdT,QAAAA,QAAQ,CAAC;AACLE,UAAAA,IAAI,EAAET,iBADD;AAELiB,UAAAA,OAAO,EAAED,QAAQ,CAACE,IAAT,CAAcS;AAFlB,SAAD,CAAR;AAIH,OANL;AAOH,KAVL,EAUOC,KAVP,CAUaC,GAAG,IAAI;AACZtB,MAAAA,QAAQ,CAAC;AACLE,QAAAA,IAAI,EAAET,iBADD;AAELiB,QAAAA,OAAO,EAAEY,GAAG,CAACX;AAFR,OAAD,CAAR;AAIH,KAfL;AAgBH,GAjBD;AAkBH","sourcesContent":["import axios from 'axios'\r\n\r\nimport { desencriptar } from '../../../SuperAdministrador/componentes/general/Encriptar.js';\r\n\r\nexport const GET_ANNEX_VERSIONS = 'GET_ANNEX_VERSIONS';\r\nexport const ADD_ANNEX_VERSION = 'ADD_ANNEX_VERSION';\r\n\r\nconst URL_BASE = 'http://localhost:9090/proyectosESCOM-web';\r\nconst PERMIT_GET_ANNEX_VERSION = 'MD_Lista version anexo';\r\nconst PERMIT_ADD_ANNEX_VERSION = 'MD_Agregar version anexo';\r\n\r\nexport const ADD_MESSAGE_ADD = 'ADD_MESSAGE_ADD';\r\n\r\nexport function addMessageAdd(mensaje) {\r\n    return (dispatch, getState) => {\r\n        dispatch({\r\n            type: ADD_MESSAGE_ADD,\r\n            mensaje: mensaje\r\n        });\r\n    };\r\n}\r\n\r\n//MD_Lista version anexo\r\nexport function getAnnexVersions(token, id) {\r\n    const headers = {\r\n        'Content-Type': 'application/json',\r\n        'TokenAuto': desencriptar(token),\r\n        'Permiso': PERMIT_GET_ANNEX_VERSION\r\n    }\r\n    return (dispatch, getState) => {\r\n        axios.get(`${URL_BASE}/api/annexVersion/list/${id}`, { headers: headers })\r\n            .then(response => {\r\n                dispatch({\r\n                    type: GET_ANNEX_VERSIONS,\r\n                    payload: response.data\r\n                });\r\n            });\r\n    }\r\n}\r\n\r\n//MD_Agregar version anexo\r\nexport function addAnnexVersion(token, data, annexN) {\r\n    const headers = {\r\n        'Content-Type': 'application/json; charset= UTF-8',\r\n        'TokenAuto': desencriptar(token),\r\n        'Permiso': PERMIT_ADD_ANNEX_VERSION\r\n    }\r\n    annexN.requestData = {\r\n        'ip': localStorage.getItem('Ip'),\r\n        'token': desencriptar(token),\r\n        'operacion': PERMIT_ADD_ANNEX_VERSION\r\n    };\r\n    return (dispatch, getState) => {\r\n        axios.post(\"http://localhost:8000/upload\", data)\r\n            .then(res => {\r\n                annexN.location = res.data\r\n                axios.post(`${URL_BASE}/api/annexVersion/add/`, annexN, { headers: headers })\r\n                    .then(response => {\r\n                        dispatch({\r\n                            type: ADD_ANNEX_VERSION,\r\n                            payload: response.data.respuesta\r\n                        });\r\n                    });\r\n            }).catch(err => {\r\n                dispatch({\r\n                    type: ADD_ANNEX_VERSION,\r\n                    payload: err.data\r\n                });\r\n            })\r\n    }\r\n}\r\n"]},"metadata":{},"sourceType":"module"}