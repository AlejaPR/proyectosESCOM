{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\jeiso\\\\Desktop\\\\proyectosESCOM\\\\frontend\\\\ESCOM-view\\\\src\\\\SuperAdministrador\\\\componentes\\\\asignar\\\\asignarActividadModulo.js\";\nimport React from 'react'; //estilos\n\nimport '../../css/business-casual.css';\nimport '../../css/estilos.css';\nimport '../../css/bootstrap.min.css';\nimport '../../css/menu.css';\nimport { NotificationContainer, NotificationManager } from 'react-notifications';\nimport { withRouter } from 'react-router-dom';\nimport MaterialTable from 'material-table'; //componentes\n\nimport Barra from '../general/BarraDirecciones.js';\nimport Alert from '@material-ui/lab/Alert';\nimport AlertTitle from '@material-ui/lab/AlertTitle';\nimport DoneOutlineIcon from '@material-ui/icons/DoneOutline';\nimport Button from '@material-ui/core/Button'; //redux\n\nimport { actionConsultarActividadesModulo, actionCambiarEstadoActividades, actualizarMensajeActividades } from '../../actions/actionsModulo';\nimport { connect } from 'react-redux';\n\nclass AsignarActividadModulo extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      actividadesSeleccionadas: [],\n      habilitado: false\n    };\n  }\n\n  componentDidMount() {\n    if (this.props.codigoModulo === undefined || this.props.codigoModulo.length === 0) {\n      this.props.history.push('/adminModulo');\n    } else {\n      this.props.actionConsultarActividadesModulo(this.props.codigoModulo, localStorage.getItem('Token'));\n    }\n  }\n\n  componentDidUpdate() {\n    switch (this.props.mensaje) {\n      case 'Operacion hecha con exito':\n        NotificationManager.success('Hecho');\n        this.props.actionConsultarActividadesModulo(this.props.codigoModulo, localStorage.getItem('Token'));\n        this.props.actualizarMensajeActividades('');\n        break;\n\n      case 'Sin permiso':\n        if (!this.state.habilitado) {\n          this.setState({\n            habilitado: true\n          });\n        }\n\n        ;\n        break;\n\n      default:\n        break;\n    }\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 56\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      class: \"text-left titulo\",\n      style: estiloLetrero,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 57\n      },\n      __self: this\n    }, React.createElement(\"h4\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 58\n      },\n      __self: this\n    }, \"Asignar actividad a modulo\")), React.createElement(Barra, {\n      texto: \"Inicio > Asignaci\\xF3n de actividad a modulo\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 60\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      className: \"col-sm-12\",\n      style: {\n        paddingTop: \"7px\",\n        paddingRight: \"40px\",\n        paddingLeft: \"40px\",\n        paddingBottom: \"20px\",\n        margin: \"0px 0px 32px\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 64\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"container shadow\",\n      style: fondoBarraSuperior,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 72\n      },\n      __self: this\n    }, React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 73\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      className: \"jumbotron p-1 jumbotron-fluid\",\n      style: fondoTabla,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 74\n      },\n      __self: this\n    }, this.props.habilitado ? React.createElement(\"div\", {\n      className: \"col-sm-12\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 76\n      },\n      __self: this\n    }, React.createElement(Alert, {\n      severity: \"error\",\n      variant: \"outlined\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 77\n      },\n      __self: this\n    }, React.createElement(AlertTitle, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 78\n      },\n      __self: this\n    }, \"Sin permiso\"), \"No tiene permisos suficientes para administrar las actividades de los modulos\"), React.createElement(\"div\", {\n      style: {\n        padding: \"25px 44px 25px 395px\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 80\n      },\n      __self: this\n    }, React.createElement(Button, {\n      style: {\n        background: this.props.configuracion.botones,\n        fontSize: \"14px\",\n        fontFamily: \"sans-serif\",\n        textTransform: \"none\"\n      },\n      className: \"btn btn-dark\",\n      variant: \"contained\",\n      onClick: this.onClickCancelar,\n      startIcon: React.createElement(DoneOutlineIcon, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 81\n        },\n        __self: this\n      }),\n      type: \"submit\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 81\n      },\n      __self: this\n    }, \"Aceptar\"), '')) : React.createElement(MaterialTable, {\n      title: \"Actividades actualmente asociadas al modulo\",\n      localization: {\n        header: {\n          actions: ' '\n        },\n        pagination: {\n          nextTooltip: 'Siguiente ',\n          previousTooltip: 'Anterior',\n          labelDisplayedRows: '{from}-{to} de {count}',\n          lastTooltip: 'Ultima pagina',\n          firstTooltip: 'Primera pagina',\n          labelRowsSelect: 'Registros',\n          firstAriaLabel: 'oooo'\n        },\n        body: {\n          emptyDataSourceMessage: 'Aun no hay ningun modulo registrado'\n        },\n        toolbar: {\n          searchTooltip: 'Buscar',\n          searchPlaceholder: 'Buscar',\n          nRowsSelected: '{0} actividades seleccionadas'\n        }\n      },\n      columns: [{\n        title: 'Nombre de modulo',\n        field: 'idActividad',\n        headerStyle: estiloCabecera,\n        cellStyle: estiloFila\n      }, {\n        title: 'Descripcion del modulo',\n        field: 'nombre',\n        headerStyle: estiloCabecera,\n        cellStyle: estiloFila\n      }, {\n        title: 'Estado',\n        field: 'estado',\n        render: rowData => {\n          if (rowData.estado === 'Suspendido') {\n            return React.createElement(\"span\", {\n              className: \"label label-sm letra\",\n              style: {\n                textShadow: \"none!important\",\n                fontSize: \"12px\",\n                fontFamily: \"Open Sans,sans-serif\",\n                fontWeight: \"300\",\n                padding: \"3px 6px\",\n                color: \"#fff\",\n                background: \"#ED6B75\"\n              },\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 115\n              },\n              __self: this\n            }, rowData.estado);\n          } else {\n            return React.createElement(\"span\", {\n              className: \"label label-sm letra\",\n              style: {\n                textShadow: \"none!important\",\n                fontSize: \"12px\",\n                fontFamily: \"Open Sans,sans-serif\",\n                fontWeight: \"300\",\n                padding: \"3px 6px\",\n                color: \"#fff\",\n                background: \"#408725\"\n              },\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 126\n              },\n              __self: this\n            }, rowData.estado);\n          }\n        },\n        headerStyle: estiloCabecera,\n        cellStyle: estiloFila\n      }],\n      data: this.props.actividades,\n      options: {\n        search: true,\n        rowStyle: estiloFila,\n        selection: true\n      },\n      onSelectionChange: rows => {\n        this.setState({\n          actividadesSeleccionadas: rows\n        });\n      },\n      actions: [{\n        tooltip: 'Activar/Suspender actividades seleccionadas',\n        icon: 'restore',\n        onClick: (evt, data) => this.props.actionCambiarEstadoActividades(this.state.actividadesSeleccionadas, localStorage.getItem('Token'))\n      }],\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 84\n      },\n      __self: this\n    }))), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 161\n      },\n      __self: this\n    })), React.createElement(NotificationContainer, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 163\n      },\n      __self: this\n    }));\n  }\n\n}\n\nconst estiloLetrero = {\n  paddingTop: \"20px\",\n  paddingRight: \"12px\",\n  paddingLeft: \"40px\",\n  paddingBottom: \"1px\"\n};\nconst estiloCabecera = {\n  fontSize: '13px',\n  fontFamily: 'sans-serif',\n  padding: '8px',\n  background: '#e7ecf1'\n};\nconst estiloFila = {\n  fontSize: '12px',\n  fontFamily: 'sans-serif',\n  padding: '8px'\n};\nconst fondoBarraSuperior = {\n  background: \"#FFFFFF\",\n  padding: \"25px\"\n};\nconst fondoTabla = {\n  background: \"#EAF2F2\"\n};\n\nfunction mapStateToProps(state) {\n  return {\n    codigoModulo: state.mod.codigoModulo,\n    actividades: state.mod.actividadesModulos,\n    mensaje: state.mod.mensajeActividadesModulo,\n    configuracion: state.conf.configuracion\n  };\n}\n\nexport default withRouter(connect(mapStateToProps, {\n  actionConsultarActividadesModulo,\n  actionCambiarEstadoActividades,\n  actualizarMensajeActividades\n})(AsignarActividadModulo));","map":{"version":3,"sources":["C:/Users/jeiso/Desktop/proyectosESCOM/frontend/ESCOM-view/src/SuperAdministrador/componentes/asignar/asignarActividadModulo.js"],"names":["React","NotificationContainer","NotificationManager","withRouter","MaterialTable","Barra","Alert","AlertTitle","DoneOutlineIcon","Button","actionConsultarActividadesModulo","actionCambiarEstadoActividades","actualizarMensajeActividades","connect","AsignarActividadModulo","Component","state","actividadesSeleccionadas","habilitado","componentDidMount","props","codigoModulo","undefined","length","history","push","localStorage","getItem","componentDidUpdate","mensaje","success","setState","render","estiloLetrero","paddingTop","paddingRight","paddingLeft","paddingBottom","margin","fondoBarraSuperior","fondoTabla","padding","background","configuracion","botones","fontSize","fontFamily","textTransform","onClickCancelar","header","actions","pagination","nextTooltip","previousTooltip","labelDisplayedRows","lastTooltip","firstTooltip","labelRowsSelect","firstAriaLabel","body","emptyDataSourceMessage","toolbar","searchTooltip","searchPlaceholder","nRowsSelected","title","field","headerStyle","estiloCabecera","cellStyle","estiloFila","rowData","estado","textShadow","fontWeight","color","actividades","search","rowStyle","selection","rows","tooltip","icon","onClick","evt","data","mapStateToProps","mod","actividadesModulos","mensajeActividadesModulo","conf"],"mappings":"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","sourcesContent":["import React from 'react';\r\n\r\n//estilos\r\nimport '../../css/business-casual.css'\r\nimport '../../css/estilos.css'\r\nimport '../../css/bootstrap.min.css'\r\nimport '../../css/menu.css'\r\n\r\nimport { NotificationContainer, NotificationManager } from 'react-notifications';\r\nimport { withRouter } from 'react-router-dom';\r\nimport MaterialTable from 'material-table';\r\n\r\n//componentes\r\nimport Barra from '../general/BarraDirecciones.js';\r\nimport Alert from '@material-ui/lab/Alert';\r\nimport AlertTitle from '@material-ui/lab/AlertTitle';\r\nimport DoneOutlineIcon from '@material-ui/icons/DoneOutline';\r\nimport Button from '@material-ui/core/Button';\r\n\r\n\r\n//redux\r\nimport { actionConsultarActividadesModulo, actionCambiarEstadoActividades, actualizarMensajeActividades } from '../../actions/actionsModulo'\r\nimport { connect } from 'react-redux';\r\n\r\nclass AsignarActividadModulo extends React.Component {\r\n\r\n    state = {\r\n        actividadesSeleccionadas: [],\r\n        habilitado: false\r\n    }\r\n    componentDidMount() {\r\n        if (this.props.codigoModulo === undefined || this.props.codigoModulo.length === 0) {\r\n            this.props.history.push('/adminModulo');\r\n        } else {\r\n            this.props.actionConsultarActividadesModulo(this.props.codigoModulo, localStorage.getItem('Token'));\r\n        }\r\n    }\r\n\r\n    componentDidUpdate() {\r\n        switch (this.props.mensaje) {\r\n            case 'Operacion hecha con exito':\r\n                NotificationManager.success('Hecho');\r\n                this.props.actionConsultarActividadesModulo(this.props.codigoModulo, localStorage.getItem('Token'));\r\n                this.props.actualizarMensajeActividades('');\r\n                break;\r\n            case 'Sin permiso':\r\n                if (!this.state.habilitado) { this.setState({ habilitado: true }) };\r\n                break;\r\n            default:\r\n                break;\r\n        }\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                <div class=\"text-left titulo\" style={estiloLetrero}>\r\n                    <h4>Asignar actividad a modulo</h4>\r\n                </div>\r\n                <Barra texto=\"Inicio > Asignación de actividad a modulo\" />\r\n\r\n\r\n\r\n                <div className=\"col-sm-12\" style={{\r\n                    paddingTop: \"7px\",\r\n                    paddingRight: \"40px\",\r\n                    paddingLeft: \"40px\",\r\n                    paddingBottom: \"20px\",\r\n                    margin: \"0px 0px 32px\"\r\n\r\n                }}>\r\n                    <div className=\"container shadow\" style={fondoBarraSuperior}>\r\n                        <br />\r\n                        <div className=\"jumbotron p-1 jumbotron-fluid\" style={fondoTabla}>\r\n                            {\r\n                                this.props.habilitado ? <div className=\"col-sm-12\">\r\n                                    <Alert severity=\"error\" variant=\"outlined\">\r\n                                        <AlertTitle>Sin permiso</AlertTitle>\r\n                                        No tiene permisos suficientes para administrar las actividades de los modulos</Alert>\r\n                                    <div style={{ padding: \"25px 44px 25px 395px\" }}>\r\n                                        <Button style={{ background: this.props.configuracion.botones, fontSize: \"14px\", fontFamily: \"sans-serif\", textTransform: \"none\" }} className=\"btn btn-dark\" variant=\"contained\" onClick={this.onClickCancelar} startIcon={<DoneOutlineIcon />} type=\"submit\">Aceptar</Button>{''}\r\n                                    </div>\r\n                                </div> :\r\n                                    <MaterialTable\r\n                                        title=\"Actividades actualmente asociadas al modulo\"\r\n                                        localization={{\r\n                                            header: {\r\n                                                actions: ' '\r\n                                            },\r\n                                            pagination: {\r\n                                                nextTooltip: 'Siguiente ',\r\n                                                previousTooltip: 'Anterior',\r\n                                                labelDisplayedRows: '{from}-{to} de {count}',\r\n                                                lastTooltip: 'Ultima pagina',\r\n                                                firstTooltip: 'Primera pagina',\r\n                                                labelRowsSelect: 'Registros',\r\n                                                firstAriaLabel: 'oooo'\r\n                                            },\r\n                                            body: {\r\n                                                emptyDataSourceMessage: 'Aun no hay ningun modulo registrado'\r\n                                            },\r\n                                            toolbar: {\r\n                                                searchTooltip: 'Buscar',\r\n                                                searchPlaceholder: 'Buscar',\r\n                                                nRowsSelected: '{0} actividades seleccionadas'\r\n                                            }\r\n                                        }}\r\n                                        columns={[\r\n                                            { title: 'Nombre de modulo', field: 'idActividad', headerStyle: estiloCabecera, cellStyle: estiloFila },\r\n                                            { title: 'Descripcion del modulo', field: 'nombre', headerStyle: estiloCabecera, cellStyle: estiloFila },\r\n                                            {\r\n                                                title: 'Estado', field: 'estado',\r\n                                                render: rowData => {\r\n                                                    if (rowData.estado === 'Suspendido') {\r\n                                                        return <span className=\"label label-sm letra\"\r\n                                                            style={{\r\n                                                                textShadow: \"none!important\",\r\n                                                                fontSize: \"12px\",\r\n                                                                fontFamily: \"Open Sans,sans-serif\",\r\n                                                                fontWeight: \"300\",\r\n                                                                padding: \"3px 6px\",\r\n                                                                color: \"#fff\",\r\n                                                                background: \"#ED6B75\"\r\n                                                            }}>{rowData.estado}</span>\r\n                                                    } else {\r\n                                                        return <span className=\"label label-sm letra\"\r\n                                                            style={{\r\n                                                                textShadow: \"none!important\",\r\n                                                                fontSize: \"12px\",\r\n                                                                fontFamily: \"Open Sans,sans-serif\",\r\n                                                                fontWeight: \"300\",\r\n                                                                padding: \"3px 6px\",\r\n                                                                color: \"#fff\",\r\n                                                                background: \"#408725\"\r\n                                                            }}>{rowData.estado}</span>\r\n                                                    }\r\n                                                }, headerStyle: estiloCabecera, cellStyle: estiloFila\r\n                                            }\r\n\r\n                                        ]}\r\n                                        data={this.props.actividades}\r\n                                        options={{\r\n                                            search: true,\r\n                                            rowStyle: estiloFila,\r\n                                            selection: true\r\n                                        }}\r\n                                        onSelectionChange={(rows) => {\r\n                                            this.setState({ actividadesSeleccionadas: rows });\r\n                                        }}\r\n                                        actions={[\r\n                                            {\r\n                                                tooltip: 'Activar/Suspender actividades seleccionadas',\r\n                                                icon: 'restore',\r\n                                                onClick: (evt, data) => this.props.actionCambiarEstadoActividades(this.state.actividadesSeleccionadas, localStorage.getItem('Token'))\r\n                                            }\r\n                                        ]}\r\n                                    />\r\n                            }\r\n                        </div>\r\n                    </div>\r\n                    <br />\r\n                </div>\r\n                <NotificationContainer />\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\n\r\nconst estiloLetrero = {\r\n    paddingTop: \"20px\",\r\n    paddingRight: \"12px\",\r\n    paddingLeft: \"40px\",\r\n    paddingBottom: \"1px\"\r\n}\r\n\r\nconst estiloCabecera = {\r\n    fontSize: '13px',\r\n    fontFamily: 'sans-serif',\r\n    padding: '8px',\r\n    background: '#e7ecf1'\r\n\r\n}\r\n\r\nconst estiloFila = {\r\n    fontSize: '12px',\r\n    fontFamily: 'sans-serif',\r\n    padding: '8px',\r\n}\r\n\r\nconst fondoBarraSuperior = {\r\n    background: \"#FFFFFF\",\r\n    padding: \"25px\"\r\n\r\n}\r\n\r\nconst fondoTabla = {\r\n    background: \"#EAF2F2\"\r\n}\r\n\r\n\r\nfunction mapStateToProps(state) {\r\n    return {\r\n        codigoModulo: state.mod.codigoModulo,\r\n        actividades: state.mod.actividadesModulos,\r\n        mensaje: state.mod.mensajeActividadesModulo,\r\n        configuracion: state.conf.configuracion\r\n    }\r\n}\r\n\r\nexport default withRouter(connect(mapStateToProps, { actionConsultarActividadesModulo, actionCambiarEstadoActividades, actualizarMensajeActividades })(AsignarActividadModulo));\r\n\r\n"]},"metadata":{},"sourceType":"module"}