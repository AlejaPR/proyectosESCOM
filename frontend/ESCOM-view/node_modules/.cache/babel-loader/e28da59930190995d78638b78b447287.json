{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\jeiso\\\\Desktop\\\\REACT\\\\proyectosESCOM\\\\frontend\\\\ESCOM-view\\\\src\\\\SuperAdministrador\\\\componentes\\\\color.js\";\nimport React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Stepper from '@material-ui/core/Stepper';\nimport Step from '@material-ui/core/Step';\nimport StepButton from '@material-ui/core/StepButton';\nimport Button from '@material-ui/core/Button';\nimport Typography from '@material-ui/core/Typography';\n\nfunction getSteps() {\n  return ['Select campaign settings', 'Create an ad group', 'Create an ad'];\n}\n\nfunction getStepContent(step) {\n  switch (step) {\n    case 0:\n      return 'Step 1: Select campaign settings...';\n\n    case 1:\n      return 'Step 2: What is an ad group anyways?';\n\n    case 2:\n      return 'Step 3: This is the bit I really care about!';\n\n    default:\n      return 'Unknown step';\n  }\n}\n\nexport default class Configuracion extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      activeStep: 0,\n      completed: {}\n    };\n    this.useStyles = makeStyles(theme => ({\n      root: {\n        width: '100%'\n      },\n      button: {\n        marginRight: theme.spacing(1)\n      },\n      completed: {\n        display: 'inline-block'\n      },\n      instructions: {\n        marginTop: theme.spacing(1),\n        marginBottom: theme.spacing(1)\n      }\n    }));\n  }\n\n  render() {\n    const steps = getSteps();\n\n    const totalSteps = () => {\n      return steps.length;\n    };\n\n    const completedSteps = () => {\n      return Object.keys(completed).length;\n    };\n\n    const isLastStep = () => {\n      return activeStep === totalSteps() - 1;\n    };\n\n    const allStepsCompleted = () => {\n      return completedSteps() === totalSteps();\n    };\n\n    const handleNext = () => {\n      const newActiveStep = isLastStep() && !allStepsCompleted() ? // It's the last step, but not all steps have been completed,\n      // find the first step that has been completed\n      steps.findIndex((step, i) => !(i in completed)) : activeStep + 1;\n      setActiveStep(newActiveStep);\n    };\n\n    const handleBack = () => {\n      setActiveStep(prevActiveStep => prevActiveStep - 1);\n    };\n\n    const handleStep = step => () => {\n      setActiveStep(step);\n    };\n\n    const handleComplete = () => {\n      const newCompleted = completed;\n      newCompleted[activeStep] = true;\n      setCompleted(newCompleted);\n      handleNext();\n    };\n\n    const handleReset = () => {\n      setActiveStep(0);\n      setCompleted({});\n    };\n\n    return React.createElement(\"div\", {\n      className: this.useStyles.root,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 102\n      },\n      __self: this\n    }, React.createElement(Stepper, {\n      nonLinear: true,\n      activeStep: activeStep,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 103\n      },\n      __self: this\n    }, steps.map((label, index) => React.createElement(Step, {\n      key: label,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 105\n      },\n      __self: this\n    }, React.createElement(StepButton, {\n      onClick: handleStep(index),\n      completed: completed[index],\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 106\n      },\n      __self: this\n    }, label)))), React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 112\n      },\n      __self: this\n    }, allStepsCompleted() ? React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 114\n      },\n      __self: this\n    }, React.createElement(Typography, {\n      className: this.useStyles.instructions,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 115\n      },\n      __self: this\n    }, \"All steps completed - you're finished\"), React.createElement(Button, {\n      onClick: handleReset,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 118\n      },\n      __self: this\n    }, \"Reset\")) : React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 121\n      },\n      __self: this\n    }, React.createElement(Typography, {\n      className: this.useStyles.instructions,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 122\n      },\n      __self: this\n    }, getStepContent(activeStep)), React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 123\n      },\n      __self: this\n    }, React.createElement(Button, {\n      disabled: activeStep === 0,\n      onClick: handleBack,\n      className: this.useStyles.button,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 124\n      },\n      __self: this\n    }, \"Back\"), React.createElement(Button, {\n      variant: \"contained\",\n      color: \"primary\",\n      onClick: handleNext,\n      className: classes.button,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 127\n      },\n      __self: this\n    }, \"Next\"), activeStep !== steps.length && (completed[activeStep] ? React.createElement(Typography, {\n      variant: \"caption\",\n      className: this.useStyles.completed,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 137\n      },\n      __self: this\n    }, \"Step \", activeStep + 1, \" already completed\") : React.createElement(Button, {\n      variant: \"contained\",\n      color: \"primary\",\n      onClick: handleComplete,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 141\n      },\n      __self: this\n    }, completedSteps() === totalSteps() - 1 ? 'Finish' : 'Complete Step'))))));\n  }\n\n}","map":{"version":3,"sources":["C:/Users/jeiso/Desktop/REACT/proyectosESCOM/frontend/ESCOM-view/src/SuperAdministrador/componentes/color.js"],"names":["React","makeStyles","Stepper","Step","StepButton","Button","Typography","getSteps","getStepContent","step","Configuracion","Component","state","activeStep","completed","useStyles","theme","root","width","button","marginRight","spacing","display","instructions","marginTop","marginBottom","render","steps","totalSteps","length","completedSteps","Object","keys","isLastStep","allStepsCompleted","handleNext","newActiveStep","findIndex","i","setActiveStep","handleBack","prevActiveStep","handleStep","handleComplete","newCompleted","setCompleted","handleReset","map","label","index","classes"],"mappings":"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","sourcesContent":["import React from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Stepper from '@material-ui/core/Stepper';\r\nimport Step from '@material-ui/core/Step';\r\nimport StepButton from '@material-ui/core/StepButton';\r\nimport Button from '@material-ui/core/Button';\r\nimport Typography from '@material-ui/core/Typography';\r\n\r\n\r\nfunction getSteps() {\r\n\treturn ['Select campaign settings', 'Create an ad group', 'Create an ad'];\r\n}\r\n\r\nfunction getStepContent(step) {\r\n\tswitch (step) {\r\n\t\tcase 0:\r\n\t\t\treturn 'Step 1: Select campaign settings...';\r\n\t\tcase 1:\r\n\t\t\treturn 'Step 2: What is an ad group anyways?';\r\n\t\tcase 2:\r\n\t\t\treturn 'Step 3: This is the bit I really care about!';\r\n\t\tdefault:\r\n\t\t\treturn 'Unknown step';\r\n\t}\r\n}\r\n\r\nexport default class Configuracion extends React.Component {\r\n\r\n\tstate={\r\n\t\tactiveStep:0,\r\n\t\tcompleted:{}\r\n\t}\r\n\r\n\tuseStyles = makeStyles(theme => ({\r\n\t\troot: {\r\n\t\t\twidth: '100%',\r\n\t\t},\r\n\t\tbutton: {\r\n\t\t\tmarginRight: theme.spacing(1),\r\n\t\t},\r\n\t\tcompleted: {\r\n\t\t\tdisplay: 'inline-block',\r\n\t\t},\r\n\t\tinstructions: {\r\n\t\t\tmarginTop: theme.spacing(1),\r\n\t\t\tmarginBottom: theme.spacing(1),\r\n\t\t},\r\n\t}));\r\n\r\n\trender() {\r\n\r\n\t\tconst steps = getSteps();\r\n\r\n\t\tconst totalSteps = () => {\r\n\t\t\treturn steps.length;\r\n\t\t};\r\n\r\n\t\tconst completedSteps = () => {\r\n\t\t\treturn Object.keys(completed).length;\r\n\t\t};\r\n\r\n\t\tconst isLastStep = () => {\r\n\t\t\treturn activeStep === totalSteps() - 1;\r\n\t\t};\r\n\r\n\t\tconst allStepsCompleted = () => {\r\n\t\t\treturn completedSteps() === totalSteps();\r\n\t\t};\r\n\r\n\t\tconst handleNext = () => {\r\n\t\t\tconst newActiveStep =\r\n\t\t\t\tisLastStep() && !allStepsCompleted()\r\n\t\t\t\t\t? // It's the last step, but not all steps have been completed,\r\n\t\t\t\t\t// find the first step that has been completed\r\n\t\t\t\t\tsteps.findIndex((step, i) => !(i in completed))\r\n\t\t\t\t\t: activeStep + 1;\r\n\t\t\tsetActiveStep(newActiveStep);\r\n\t\t};\r\n\r\n\t\tconst handleBack = () => {\r\n\t\t\tsetActiveStep(prevActiveStep => prevActiveStep - 1);\r\n\t\t};\r\n\r\n\t\tconst handleStep = step => () => {\r\n\t\t\tsetActiveStep(step);\r\n\t\t};\r\n\r\n\t\tconst handleComplete = () => {\r\n\t\t\tconst newCompleted = completed;\r\n\t\t\tnewCompleted[activeStep] = true;\r\n\t\t\tsetCompleted(newCompleted);\r\n\t\t\thandleNext();\r\n\t\t};\r\n\r\n\t\tconst handleReset = () => {\r\n\t\t\tsetActiveStep(0);\r\n\t\t\tsetCompleted({});\r\n\t\t};\r\n\r\n\r\n\t\treturn (\r\n\t\t\t<div className={this.useStyles.root}>\r\n\t\t\t\t<Stepper nonLinear activeStep={activeStep}>\r\n\t\t\t\t\t{steps.map((label, index) => (\r\n\t\t\t\t\t\t<Step key={label}>\r\n\t\t\t\t\t\t\t<StepButton onClick={handleStep(index)} completed={completed[index]}>\r\n\t\t\t\t\t\t\t\t{label}\r\n\t\t\t\t\t\t\t</StepButton>\r\n\t\t\t\t\t\t</Step>\r\n\t\t\t\t\t))}\r\n\t\t\t\t</Stepper>\r\n\t\t\t\t<div>\r\n\t\t\t\t\t{allStepsCompleted() ? (\r\n\t\t\t\t\t\t<div>\r\n\t\t\t\t\t\t\t<Typography className={this.useStyles.instructions}>\r\n\t\t\t\t\t\t\t\tAll steps completed - you&apos;re finished\r\n            </Typography>\r\n\t\t\t\t\t\t\t<Button onClick={handleReset}>Reset</Button>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t) : (\r\n\t\t\t\t\t\t\t<div>\r\n\t\t\t\t\t\t\t\t<Typography className={this.useStyles.instructions}>{getStepContent(activeStep)}</Typography>\r\n\t\t\t\t\t\t\t\t<div>\r\n\t\t\t\t\t\t\t\t\t<Button disabled={activeStep === 0} onClick={handleBack} className={this.useStyles.button}>\r\n\t\t\t\t\t\t\t\t\t\tBack\r\n              </Button>\r\n\t\t\t\t\t\t\t\t\t<Button\r\n\t\t\t\t\t\t\t\t\t\tvariant=\"contained\"\r\n\t\t\t\t\t\t\t\t\t\tcolor=\"primary\"\r\n\t\t\t\t\t\t\t\t\t\tonClick={handleNext}\r\n\t\t\t\t\t\t\t\t\t\tclassName={classes.button}\r\n\t\t\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t\t\tNext\r\n              </Button>\r\n\t\t\t\t\t\t\t\t\t{activeStep !== steps.length &&\r\n\t\t\t\t\t\t\t\t\t\t(completed[activeStep] ? (\r\n\t\t\t\t\t\t\t\t\t\t\t<Typography variant=\"caption\" className={this.useStyles.completed}>\r\n\t\t\t\t\t\t\t\t\t\t\t\tStep {activeStep + 1} already completed\r\n                  </Typography>\r\n\t\t\t\t\t\t\t\t\t\t) : (\r\n\t\t\t\t\t\t\t\t\t\t\t\t<Button variant=\"contained\" color=\"primary\" onClick={handleComplete}>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t{completedSteps() === totalSteps() - 1 ? 'Finish' : 'Complete Step'}\r\n\t\t\t\t\t\t\t\t\t\t\t\t</Button>\r\n\t\t\t\t\t\t\t\t\t\t\t))}\r\n\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t)}\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t);\r\n\t}\r\n}"]},"metadata":{},"sourceType":"module"}