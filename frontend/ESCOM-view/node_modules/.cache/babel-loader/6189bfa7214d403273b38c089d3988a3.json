{"ast":null,"code":"import axios from 'axios';\nimport { desencriptar } from '../componentes/general/Encriptar.js';\nimport { campo } from '../utilitario/GenerarInputs.js';\nimport { URL_BASE } from '../utilitario/Configuracion.js';\nimport { mensajeCambiarEstadoDeActividades, mensajeDeRegistro, mensajeDeCambiarEstado, mensajeDeEditar, mensajeDeInformacion, mensajeDeListar, mensajeDeListarActividades } from '../mensajesDeError/MensajesDeErrorModulo';\nexport const MOSTRAR_MODULOS = 'MOSTRAR_USUARIOS';\nexport const ESTADO_MODULOS = 'ESTADO_MODULOS';\nexport const ANADIR_CODIGO_EDITAR = 'ANADIR_CODIGO_EDITAR';\nexport const INFORMACION_MODULO = 'INFORMACION_MODULO';\nexport const MENSAJE_EDITAR_MODULO = 'MENSAJE_EDITAR_MODULO';\nexport const MENSAJE_SUSPENDER_MODULO = 'MENSAJE_SUSPENDER_MODULO';\nexport const MENSAJE_ACTIVIDADES = 'MENSAJE_ACTIVIDADES';\nexport const ACTIVIDADES_MODULO = 'ACTIVIDADES_MODULO';\nexport const ACTUALIZAR_MODULOS = 'ACTUALIZAR_MODULOS';\nexport const AGREGAR_MODULO = 'AGREGAR_MODULO';\nexport const MENSAJE_REGISTRAR_MODULO = 'MENSAJE_REGISTRAR_MODULO';\nconst PERMISO_REGISTRAR_MODULOS = 'SA_Registrar modulos';\nconst PERMISO_CONSULTAR_MODULOS = 'SA_Consultar modulos registrados';\nconst PERMISO_EDITAR_MODULOS = 'SA_Editar informacion de los modulos';\nconst PERMISO_SUSPENDER_ACTIVAR_ACTIVIDADES = 'SA_Suspender/activar actividades de modulos';\nconst PERMISO_SUSPENDER_ACTIVAR_MODULOS = 'SA_Suspender/activar modulos';\nexport function actionAgregarModulo(modulo, token) {\n  var tokenRequest = desencriptar(token);\n  const headers = {\n    'Content-Type': 'application/json; charset=UTF-8',\n    'TokenAuto': tokenRequest,\n    'Permiso': PERMISO_REGISTRAR_MODULOS\n  };\n  modulo.datosSolicitud = {\n    'ip': localStorage.getItem('Ip'),\n    'token': desencriptar(token),\n    'operacion': PERMISO_REGISTRAR_MODULOS\n  };\n  return (dispatch, getState) => {\n    axios.post(`${URL_BASE}/proyectosESCOM-web/api/modulos/registrar`, modulo, {\n      headers: headers\n    }).then(response => {\n      dispatch({\n        type: AGREGAR_MODULO,\n        moduloARegistrar: modulo\n      });\n      dispatch({\n        type: MENSAJE_REGISTRAR_MODULO,\n        mensaje: 'modulo registrado'\n      });\n    }).catch(error => {\n      try {\n        if (error.request.response === '') {\n          dispatch({\n            type: MENSAJE_REGISTRAR_MODULO,\n            mensaje: 'Servidor fuera de servicio temporalmente'\n          });\n        } else {\n          if (error.request) {\n            var o = JSON.parse(error.request.response);\n            let respuesta = mensajeDeRegistro(o.respuesta);\n\n            if (respuesta !== '') {\n              dispatch({\n                type: MENSAJE_REGISTRAR_MODULO,\n                mensaje: respuesta\n              });\n            }\n          }\n        }\n      } catch (error) {\n        dispatch({\n          type: MENSAJE_REGISTRAR_MODULO,\n          mensaje: 'Ocurrio un error en el servidor'\n        });\n      }\n    });\n  };\n}\nexport function actionConsultarModulos(token) {\n  var tokenRequest = desencriptar(token);\n  const headers = {\n    'Content-Type': 'application/json',\n    'TokenAuto': tokenRequest,\n    'Permiso': PERMISO_CONSULTAR_MODULOS\n  };\n  return (dispatch, getState) => {\n    axios.get(`${URL_BASE}/proyectosESCOM-web/api/modulos/listar`, {\n      headers: headers\n    }).then(response => {\n      dispatch({\n        type: MOSTRAR_MODULOS,\n        respuesta: response.data\n      });\n    }).catch(error => {\n      try {\n        if (error.request.response === '') {\n          dispatch({\n            type: MENSAJE_SUSPENDER,\n            mensaje: 'Servidor fuera de servicio temporalmente'\n          });\n        } else {\n          if (error.request) {\n            var o = JSON.parse(error.request.response);\n            let respuesta = mensajeDeListar(o.respuesta);\n\n            if (respuesta === 'Sin permiso') {\n              dispatch({\n                type: ESTADO_MODULOS,\n                estado: true\n              });\n            } else {\n              dispatch({\n                type: MENSAJE_SUSPENDER,\n                mensaje: respuesta\n              });\n            }\n          }\n        }\n      } catch (error) {\n        dispatch({\n          type: MENSAJE_SUSPENDER,\n          mensaje: 'Ocurrio un error en el servidor'\n        });\n      }\n    });\n  };\n}\nexport function actionCargarInformacionDeModulo(codigoModulo, token) {\n  const headers = {\n    'Content-Type': 'application/json',\n    'TokenAuto': desencriptar(token),\n    'Permiso': PERMISO_EDITAR_MODULOS\n  };\n  return (dispatch, getState) => {\n    axios.get(`${URL_BASE}/proyectosESCOM-web/api/modulos/datos/${codigoModulo}`, {\n      headers: headers\n    }).then(response => {\n      let info = {\n        'descripcionModulo': response.data.descripcionModulo,\n        'estadoModulo': response.data.estadoModulo,\n        'idModulo': response.data.idModulo,\n        'imagenModulo': campo(response.data.imagenModulo),\n        'nombreModulo': response.data.nombreModulo,\n        'url': response.data.url.replace('/', '')\n      };\n      dispatch({\n        type: INFORMACION_MODULO,\n        informacionModulo: info\n      });\n    }).catch(error => {\n      try {\n        if (error.request.response === '') {\n          dispatch({\n            type: MENSAJE_EDITAR_MODULO,\n            mensaje: 'Servidor fuera de servicio temporalmente'\n          });\n        } else {\n          if (error.request) {\n            var o = JSON.parse(error.request.response);\n            let respuesta = mensajeDeInformacion(o.respuesta);\n\n            if (respuesta !== '') {\n              dispatch({\n                type: MENSAJE_EDITAR_MODULO,\n                mensaje: respuesta\n              });\n            }\n          }\n        }\n      } catch (error) {\n        dispatch({\n          type: MENSAJE_EDITAR_MODULO,\n          mensaje: 'Ocurrio un error en el servidor'\n        });\n      }\n    });\n  };\n}\nexport function actionConsultarActividadesModulo(codigoModulo, token) {\n  const headers = {\n    'Content-Type': 'application/json',\n    'TokenAuto': desencriptar(token),\n    'Permiso': PERMISO_SUSPENDER_ACTIVAR_ACTIVIDADES\n  };\n  return (dispatch, getState) => {\n    axios.get(`${URL_BASE}/proyectosESCOM-web/api/modulos/listarActividades/${codigoModulo}`, {\n      headers: headers\n    }).then(response => {\n      dispatch({\n        type: ACTIVIDADES_MODULO,\n        actividades: response.data\n      });\n    }).catch(error => {\n      try {\n        if (error.request.response === '') {\n          dispatch({\n            type: MENSAJE_ACTIVIDADES,\n            mensaje: 'Servidor fuera de servicio temporalmente'\n          });\n        } else {\n          if (error.request) {\n            var o = JSON.parse(error.request.response);\n            let respuesta = mensajeDeListarActividades(o.respuesta);\n\n            if (respuesta !== '') {\n              dispatch({\n                type: MENSAJE_ACTIVIDADES,\n                mensaje: respuesta\n              });\n            }\n          }\n        }\n      } catch (error) {\n        dispatch({\n          type: MENSAJE_ACTIVIDADES,\n          mensaje: 'Ocurrio un error en el servidor'\n        });\n      }\n    });\n  };\n}\nexport function actionSuspenderActivarModulo(codigoModulo, token, actualizados) {\n  var tokenRequest = desencriptar(token);\n  const headers = {\n    'Content-Type': 'application/json',\n    'TokenAuto': tokenRequest,\n    'Permiso': PERMISO_SUSPENDER_ACTIVAR_MODULOS\n  };\n  let datosSolicitud = {\n    'ip': localStorage.getItem('Ip'),\n    'token': desencriptar(token),\n    'operacion': PERMISO_SUSPENDER_ACTIVAR_MODULOS\n  };\n  return (dispatch, getState) => {\n    axios.put(`${URL_BASE}/proyectosESCOM-web/api/modulos/cambiarEstado/${codigoModulo}`, datosSolicitud, {\n      headers: headers\n    }).then(response => {\n      dispatch({\n        type: ACTUALIZAR_MODULOS,\n        modulo: actualizados\n      });\n      dispatch({\n        type: MENSAJE_SUSPENDER_MODULO,\n        mensaje: 'Operacion hecha con exito'\n      });\n    }).catch(error => {\n      try {\n        if (error.request.response === '') {\n          dispatch({\n            type: MENSAJE_SUSPENDER_MODULO,\n            mensaje: 'Servidor fuera de servicio temporalmente'\n          });\n        } else {\n          if (error.request) {\n            var o = JSON.parse(error.request.response);\n            let respuesta = mensajeDeCambiarEstado(o.respuesta);\n\n            if (respuesta !== '') {\n              dispatch({\n                type: MENSAJE_SUSPENDER_MODULO,\n                mensaje: respuesta\n              });\n            }\n          }\n        }\n      } catch (error) {\n        dispatch({\n          type: MENSAJE_SUSPENDER_MODULO,\n          mensaje: 'Ocurrio un error en el servidor'\n        });\n      }\n    });\n  };\n}\nexport function actionCambiarEstadoActividades(actividades, token) {\n  var tokenRequest = desencriptar(token);\n  const headers = {\n    'Content-Type': 'application/json',\n    'TokenAuto': tokenRequest,\n    'Permiso': PERMISO_SUSPENDER_ACTIVAR_ACTIVIDADES\n  };\n  actividades[0].datosSolicitud = {\n    'ip': localStorage.getItem('Ip'),\n    'token': desencriptar(token),\n    'operacion': PERMISO_SUSPENDER_ACTIVAR_ACTIVIDADES\n  };\n  return (dispatch, getState) => {\n    axios.put(`${URL_BASE}/proyectosESCOM-web/api/modulos/cambiarEstadoActividad/`, actividades, {\n      headers: headers\n    }).then(response => {\n      dispatch({\n        type: MENSAJE_ACTIVIDADES,\n        mensaje: 'Operacion hecha con exito'\n      });\n    }).catch(error => {\n      try {\n        if (error.request.response === '') {\n          dispatch({\n            type: MENSAJE_ACTIVIDADES,\n            mensaje: 'Servidor fuera de servicio temporalmente'\n          });\n        } else {\n          if (error.request) {\n            var o = JSON.parse(error.request.response);\n            let respuesta = mensajeCambiarEstadoDeActividades(o.respuesta);\n\n            if (respuesta !== '') {\n              dispatch({\n                type: MENSAJE_ACTIVIDADES,\n                mensaje: respuesta\n              });\n            }\n          }\n        }\n      } catch (error) {\n        dispatch({\n          type: MENSAJE_ACTIVIDADES,\n          mensaje: 'Ocurrio un error en el servidor'\n        });\n      }\n    });\n  };\n}\nexport function actionEditarModulo(modulo, codigoModulo, token) {\n  const headers = {\n    'Content-Type': 'application/json; charset=UTF-8',\n    'TokenAuto': desencriptar(token),\n    'Permiso': PERMISO_EDITAR_MODULOS\n  };\n  modulo.datosSolicitud = {\n    'ip': localStorage.getItem('Ip'),\n    'token': desencriptar(token),\n    'operacion': PERMISO_EDITAR_MODULOS\n  };\n  return (dispatch, getState) => {\n    axios.put(`${URL_BASE}/proyectosESCOM-web/api/modulos/editar/${codigoModulo}`, modulo, {\n      headers: headers\n    }).then(response => {\n      dispatch({\n        type: MENSAJE_EDITAR_MODULO,\n        mensaje: 'modulo editado'\n      });\n    }).catch(error => {\n      try {\n        if (error.request.response === '') {\n          dispatch({\n            type: MENSAJE_EDITAR_MODULO,\n            mensaje: 'Sin acceso al servicio'\n          });\n        } else {\n          if (error.request) {\n            var o = JSON.parse(error.request.response);\n            let respuesta = mensajeDeEditar(o.respuesta);\n\n            if (respuesta !== '') {\n              dispatch({\n                type: MENSAJE_EDITAR_MODULO,\n                mensaje: respuesta\n              });\n            }\n          }\n        }\n      } catch (error) {\n        dispatch({\n          type: MENSAJE_EDITAR_MODULO,\n          mensaje: 'Ocurrio un error en el servidor'\n        });\n      }\n    });\n  };\n}\nexport function actualizarMensajeSuspenderModulo(mensaje) {\n  return (dispatch, getState) => {\n    dispatch({\n      type: MENSAJE_SUSPENDER_MODULO,\n      mensaje: mensaje\n    });\n  };\n}\nexport function actualizarMensajeActividades(mensaje) {\n  return (dispatch, getState) => {\n    dispatch({\n      type: MENSAJE_ACTIVIDADES,\n      mensaje: mensaje\n    });\n  };\n}\nexport function actionAsignarCodigoModulo(codigoModulo) {\n  return (dispatch, getState) => {\n    dispatch({\n      type: ANADIR_CODIGO_EDITAR,\n      codigo: codigoModulo\n    });\n  };\n}\nexport function actionAsignarModulo(info) {\n  return (dispatch, getState) => {\n    dispatch({\n      type: INFORMACION_MODULO,\n      informacionModulo: info\n    });\n  };\n}\nexport function actualizarMensajeEditar(mensaje) {\n  return (dispatch, getState) => {\n    dispatch({\n      type: MENSAJE_EDITAR_MODULO,\n      mensaje: mensaje\n    });\n  };\n}\nexport function actualizarMensajeRegistrar(mensaje) {\n  return (dispatch, getState) => {\n    dispatch({\n      type: MENSAJE_REGISTRAR_MODULO,\n      mensaje: mensaje\n    });\n  };\n}","map":{"version":3,"sources":["C:/Users/jeiso/Desktop/proyectosESCOM/frontend/ESCOM-view/src/SuperAdministrador/actions/actionsModulo.js"],"names":["axios","desencriptar","campo","URL_BASE","mensajeCambiarEstadoDeActividades","mensajeDeRegistro","mensajeDeCambiarEstado","mensajeDeEditar","mensajeDeInformacion","mensajeDeListar","mensajeDeListarActividades","MOSTRAR_MODULOS","ESTADO_MODULOS","ANADIR_CODIGO_EDITAR","INFORMACION_MODULO","MENSAJE_EDITAR_MODULO","MENSAJE_SUSPENDER_MODULO","MENSAJE_ACTIVIDADES","ACTIVIDADES_MODULO","ACTUALIZAR_MODULOS","AGREGAR_MODULO","MENSAJE_REGISTRAR_MODULO","PERMISO_REGISTRAR_MODULOS","PERMISO_CONSULTAR_MODULOS","PERMISO_EDITAR_MODULOS","PERMISO_SUSPENDER_ACTIVAR_ACTIVIDADES","PERMISO_SUSPENDER_ACTIVAR_MODULOS","actionAgregarModulo","modulo","token","tokenRequest","headers","datosSolicitud","localStorage","getItem","dispatch","getState","post","then","response","type","moduloARegistrar","mensaje","catch","error","request","o","JSON","parse","respuesta","actionConsultarModulos","get","data","MENSAJE_SUSPENDER","estado","actionCargarInformacionDeModulo","codigoModulo","info","descripcionModulo","estadoModulo","idModulo","imagenModulo","nombreModulo","url","replace","informacionModulo","actionConsultarActividadesModulo","actividades","actionSuspenderActivarModulo","actualizados","put","actionCambiarEstadoActividades","actionEditarModulo","actualizarMensajeSuspenderModulo","actualizarMensajeActividades","actionAsignarCodigoModulo","codigo","actionAsignarModulo","actualizarMensajeEditar","actualizarMensajeRegistrar"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,YAAT,QAA6B,qCAA7B;AACA,SAASC,KAAT,QAAsB,gCAAtB;AACA,SAASC,QAAT,QAAyB,gCAAzB;AACA,SACIC,iCADJ,EAEIC,iBAFJ,EAGIC,sBAHJ,EAIIC,eAJJ,EAKIC,oBALJ,EAMIC,eANJ,EAOIC,0BAPJ,QAQO,0CARP;AAUA,OAAO,MAAMC,eAAe,GAAG,kBAAxB;AACP,OAAO,MAAMC,cAAc,GAAG,gBAAvB;AACP,OAAO,MAAMC,oBAAoB,GAAG,sBAA7B;AAEP,OAAO,MAAMC,kBAAkB,GAAG,oBAA3B;AACP,OAAO,MAAMC,qBAAqB,GAAG,uBAA9B;AACP,OAAO,MAAMC,wBAAwB,GAAG,0BAAjC;AACP,OAAO,MAAMC,mBAAmB,GAAG,qBAA5B;AACP,OAAO,MAAMC,kBAAkB,GAAG,oBAA3B;AACP,OAAO,MAAMC,kBAAkB,GAAG,oBAA3B;AACP,OAAO,MAAMC,cAAc,GAAG,gBAAvB;AACP,OAAO,MAAMC,wBAAwB,GAAG,0BAAjC;AAEP,MAAMC,yBAAyB,GAAG,sBAAlC;AACA,MAAMC,yBAAyB,GAAG,kCAAlC;AACA,MAAMC,sBAAsB,GAAG,sCAA/B;AACA,MAAMC,qCAAqC,GAAG,6CAA9C;AACA,MAAMC,iCAAiC,GAAG,8BAA1C;AAEA,OAAO,SAASC,mBAAT,CAA6BC,MAA7B,EAAqCC,KAArC,EAA4C;AAC/C,MAAIC,YAAY,GAAG7B,YAAY,CAAC4B,KAAD,CAA/B;AACA,QAAME,OAAO,GAAG;AACZ,oBAAgB,iCADJ;AAEZ,iBAAaD,YAFD;AAGZ,eAAWR;AAHC,GAAhB;AAKAM,EAAAA,MAAM,CAACI,cAAP,GAAwB;AACpB,UAAMC,YAAY,CAACC,OAAb,CAAqB,IAArB,CADc;AAEpB,aAASjC,YAAY,CAAC4B,KAAD,CAFD;AAGpB,iBAAaP;AAHO,GAAxB;AAKA,SAAO,CAACa,QAAD,EAAWC,QAAX,KAAwB;AAC3BpC,IAAAA,KAAK,CAACqC,IAAN,CAAY,GAAElC,QAAS,2CAAvB,EAAmEyB,MAAnE,EAA2E;AAAEG,MAAAA,OAAO,EAAEA;AAAX,KAA3E,EACKO,IADL,CACUC,QAAQ,IAAI;AACdJ,MAAAA,QAAQ,CAAC;AACLK,QAAAA,IAAI,EAAEpB,cADD;AAELqB,QAAAA,gBAAgB,EAAEb;AAFb,OAAD,CAAR;AAIAO,MAAAA,QAAQ,CAAC;AACLK,QAAAA,IAAI,EAAEnB,wBADD;AAELqB,QAAAA,OAAO,EAAE;AAFJ,OAAD,CAAR;AAIH,KAVL,EAUOC,KAVP,CAUcC,KAAD,IAAW;AAChB,UAAI;AACA,YAAIA,KAAK,CAACC,OAAN,CAAcN,QAAd,KAA2B,EAA/B,EAAmC;AAC/BJ,UAAAA,QAAQ,CAAC;AACLK,YAAAA,IAAI,EAAEnB,wBADD;AAELqB,YAAAA,OAAO,EAAE;AAFJ,WAAD,CAAR;AAIH,SALD,MAKO;AACH,cAAIE,KAAK,CAACC,OAAV,EAAmB;AACf,gBAAIC,CAAC,GAAGC,IAAI,CAACC,KAAL,CAAWJ,KAAK,CAACC,OAAN,CAAcN,QAAzB,CAAR;AACA,gBAAIU,SAAS,GAAG5C,iBAAiB,CAACyC,CAAC,CAACG,SAAH,CAAjC;;AACA,gBAAIA,SAAS,KAAK,EAAlB,EAAsB;AAClBd,cAAAA,QAAQ,CAAC;AACLK,gBAAAA,IAAI,EAAEnB,wBADD;AAELqB,gBAAAA,OAAO,EAAEO;AAFJ,eAAD,CAAR;AAIH;AACJ;AACJ;AACJ,OAlBD,CAkBE,OAAOL,KAAP,EAAc;AACZT,QAAAA,QAAQ,CAAC;AACLK,UAAAA,IAAI,EAAEnB,wBADD;AAELqB,UAAAA,OAAO,EAAE;AAFJ,SAAD,CAAR;AAIH;AACJ,KAnCL;AAoCH,GArCD;AAsCH;AAID,OAAO,SAASQ,sBAAT,CAAgCrB,KAAhC,EAAuC;AAC1C,MAAIC,YAAY,GAAG7B,YAAY,CAAC4B,KAAD,CAA/B;AACA,QAAME,OAAO,GAAG;AACZ,oBAAgB,kBADJ;AAEZ,iBAAaD,YAFD;AAGZ,eAAWP;AAHC,GAAhB;AAKA,SAAO,CAACY,QAAD,EAAWC,QAAX,KAAwB;AAC3BpC,IAAAA,KAAK,CAACmD,GAAN,CAAW,GAAEhD,QAAS,wCAAtB,EAA+D;AAAE4B,MAAAA,OAAO,EAAEA;AAAX,KAA/D,EACKO,IADL,CACUC,QAAQ,IAAI;AACdJ,MAAAA,QAAQ,CAAC;AACLK,QAAAA,IAAI,EAAE7B,eADD;AAELsC,QAAAA,SAAS,EAAEV,QAAQ,CAACa;AAFf,OAAD,CAAR;AAKH,KAPL,EAOOT,KAPP,CAOcC,KAAD,IAAW;AAChB,UAAI;AACA,YAAIA,KAAK,CAACC,OAAN,CAAcN,QAAd,KAA2B,EAA/B,EAAmC;AAC/BJ,UAAAA,QAAQ,CAAC;AACLK,YAAAA,IAAI,EAAEa,iBADD;AAELX,YAAAA,OAAO,EAAE;AAFJ,WAAD,CAAR;AAIH,SALD,MAKO;AACH,cAAIE,KAAK,CAACC,OAAV,EAAmB;AACf,gBAAIC,CAAC,GAAGC,IAAI,CAACC,KAAL,CAAWJ,KAAK,CAACC,OAAN,CAAcN,QAAzB,CAAR;AACA,gBAAIU,SAAS,GAAGxC,eAAe,CAACqC,CAAC,CAACG,SAAH,CAA/B;;AACA,gBAAIA,SAAS,KAAK,aAAlB,EAAiC;AAC7Bd,cAAAA,QAAQ,CAAC;AACLK,gBAAAA,IAAI,EAAE5B,cADD;AAEL0C,gBAAAA,MAAM,EAAE;AAFH,eAAD,CAAR;AAIH,aALD,MAKO;AACHnB,cAAAA,QAAQ,CAAC;AACLK,gBAAAA,IAAI,EAAEa,iBADD;AAELX,gBAAAA,OAAO,EAAEO;AAFJ,eAAD,CAAR;AAIH;AACJ;AACJ;AACJ,OAvBD,CAuBE,OAAOL,KAAP,EAAc;AACZT,QAAAA,QAAQ,CAAC;AACLK,UAAAA,IAAI,EAAEa,iBADD;AAELX,UAAAA,OAAO,EAAE;AAFJ,SAAD,CAAR;AAIH;AACJ,KArCL;AAsCH,GAvCD;AAwCH;AAED,OAAO,SAASa,+BAAT,CAAyCC,YAAzC,EAAuD3B,KAAvD,EAA8D;AACjE,QAAME,OAAO,GAAG;AACZ,oBAAgB,kBADJ;AAEZ,iBAAa9B,YAAY,CAAC4B,KAAD,CAFb;AAGZ,eAAWL;AAHC,GAAhB;AAKA,SAAO,CAACW,QAAD,EAAWC,QAAX,KAAwB;AAC3BpC,IAAAA,KAAK,CAACmD,GAAN,CAAW,GAAEhD,QAAS,yCAAwCqD,YAAa,EAA3E,EAA8E;AAAEzB,MAAAA,OAAO,EAAEA;AAAX,KAA9E,EACKO,IADL,CACUC,QAAQ,IAAI;AACd,UAAIkB,IAAI,GAAG;AACP,6BAAqBlB,QAAQ,CAACa,IAAT,CAAcM,iBAD5B;AAEP,wBAAgBnB,QAAQ,CAACa,IAAT,CAAcO,YAFvB;AAGP,oBAAYpB,QAAQ,CAACa,IAAT,CAAcQ,QAHnB;AAIP,wBAAgB1D,KAAK,CAACqC,QAAQ,CAACa,IAAT,CAAcS,YAAf,CAJd;AAKP,wBAAgBtB,QAAQ,CAACa,IAAT,CAAcU,YALvB;AAMP,eAAOvB,QAAQ,CAACa,IAAT,CAAcW,GAAd,CAAkBC,OAAlB,CAA0B,GAA1B,EAA+B,EAA/B;AANA,OAAX;AAQA7B,MAAAA,QAAQ,CAAC;AACLK,QAAAA,IAAI,EAAE1B,kBADD;AAELmD,QAAAA,iBAAiB,EAAER;AAFd,OAAD,CAAR;AAIH,KAdL,EAcOd,KAdP,CAccC,KAAD,IAAW;AAChB,UAAI;AACA,YAAIA,KAAK,CAACC,OAAN,CAAcN,QAAd,KAA2B,EAA/B,EAAmC;AAC/BJ,UAAAA,QAAQ,CAAC;AACLK,YAAAA,IAAI,EAAEzB,qBADD;AAEL2B,YAAAA,OAAO,EAAE;AAFJ,WAAD,CAAR;AAIH,SALD,MAKO;AACH,cAAIE,KAAK,CAACC,OAAV,EAAmB;AACf,gBAAIC,CAAC,GAAGC,IAAI,CAACC,KAAL,CAAWJ,KAAK,CAACC,OAAN,CAAcN,QAAzB,CAAR;AACA,gBAAIU,SAAS,GAAGzC,oBAAoB,CAACsC,CAAC,CAACG,SAAH,CAApC;;AACA,gBAAIA,SAAS,KAAK,EAAlB,EAAsB;AAClBd,cAAAA,QAAQ,CAAC;AACLK,gBAAAA,IAAI,EAAEzB,qBADD;AAEL2B,gBAAAA,OAAO,EAAEO;AAFJ,eAAD,CAAR;AAIH;AACJ;AACJ;AACJ,OAlBD,CAkBE,OAAOL,KAAP,EAAc;AACZT,QAAAA,QAAQ,CAAC;AACLK,UAAAA,IAAI,EAAEzB,qBADD;AAEL2B,UAAAA,OAAO,EAAE;AAFJ,SAAD,CAAR;AAIH;AACJ,KAvCL;AAwCH,GAzCD;AA0CH;AAED,OAAO,SAASwB,gCAAT,CAA0CV,YAA1C,EAAwD3B,KAAxD,EAA+D;AAClE,QAAME,OAAO,GAAG;AACZ,oBAAgB,kBADJ;AAEZ,iBAAa9B,YAAY,CAAC4B,KAAD,CAFb;AAGZ,eAAWJ;AAHC,GAAhB;AAMA,SAAO,CAACU,QAAD,EAAWC,QAAX,KAAwB;AAC3BpC,IAAAA,KAAK,CAACmD,GAAN,CAAW,GAAEhD,QAAS,qDAAoDqD,YAAa,EAAvF,EAA0F;AAAEzB,MAAAA,OAAO,EAAEA;AAAX,KAA1F,EACKO,IADL,CACUC,QAAQ,IAAI;AACdJ,MAAAA,QAAQ,CAAC;AACLK,QAAAA,IAAI,EAAEtB,kBADD;AAELiD,QAAAA,WAAW,EAAE5B,QAAQ,CAACa;AAFjB,OAAD,CAAR;AAIH,KANL,EAMOT,KANP,CAMcC,KAAD,IAAW;AAChB,UAAI;AACA,YAAIA,KAAK,CAACC,OAAN,CAAcN,QAAd,KAA2B,EAA/B,EAAmC;AAC/BJ,UAAAA,QAAQ,CAAC;AACLK,YAAAA,IAAI,EAAEvB,mBADD;AAELyB,YAAAA,OAAO,EAAE;AAFJ,WAAD,CAAR;AAIH,SALD,MAKO;AACH,cAAIE,KAAK,CAACC,OAAV,EAAmB;AACf,gBAAIC,CAAC,GAAGC,IAAI,CAACC,KAAL,CAAWJ,KAAK,CAACC,OAAN,CAAcN,QAAzB,CAAR;AACA,gBAAIU,SAAS,GAAGvC,0BAA0B,CAACoC,CAAC,CAACG,SAAH,CAA1C;;AACA,gBAAIA,SAAS,KAAK,EAAlB,EAAsB;AAClBd,cAAAA,QAAQ,CAAC;AACLK,gBAAAA,IAAI,EAAEvB,mBADD;AAELyB,gBAAAA,OAAO,EAAEO;AAFJ,eAAD,CAAR;AAIH;AACJ;AACJ;AACJ,OAlBD,CAkBE,OAAOL,KAAP,EAAc;AACZT,QAAAA,QAAQ,CAAC;AACLK,UAAAA,IAAI,EAAEvB,mBADD;AAELyB,UAAAA,OAAO,EAAE;AAFJ,SAAD,CAAR;AAIH;AACJ,KA/BL;AAgCH,GAjCD;AAkCH;AAED,OAAO,SAAS0B,4BAAT,CAAsCZ,YAAtC,EAAoD3B,KAApD,EAA2DwC,YAA3D,EAAyE;AAC5E,MAAIvC,YAAY,GAAG7B,YAAY,CAAC4B,KAAD,CAA/B;AACA,QAAME,OAAO,GAAG;AACZ,oBAAgB,kBADJ;AAEZ,iBAAaD,YAFD;AAGZ,eAAWJ;AAHC,GAAhB;AAKA,MAAIM,cAAc,GAAG;AACjB,UAAMC,YAAY,CAACC,OAAb,CAAqB,IAArB,CADW;AAEjB,aAASjC,YAAY,CAAC4B,KAAD,CAFJ;AAGjB,iBAAaH;AAHI,GAArB;AAKA,SAAO,CAACS,QAAD,EAAWC,QAAX,KAAwB;AAC3BpC,IAAAA,KAAK,CAACsE,GAAN,CAAW,GAAEnE,QAAS,iDAAgDqD,YAAa,EAAnF,EAAsFxB,cAAtF,EAAsG;AAAED,MAAAA,OAAO,EAAEA;AAAX,KAAtG,EACKO,IADL,CACUC,QAAQ,IAAI;AACdJ,MAAAA,QAAQ,CAAC;AACLK,QAAAA,IAAI,EAAErB,kBADD;AAELS,QAAAA,MAAM,EAAEyC;AAFH,OAAD,CAAR;AAIAlC,MAAAA,QAAQ,CAAC;AACLK,QAAAA,IAAI,EAAExB,wBADD;AAEL0B,QAAAA,OAAO,EAAE;AAFJ,OAAD,CAAR;AAIH,KAVL,EAUOC,KAVP,CAUcC,KAAD,IAAW;AAChB,UAAI;AACA,YAAIA,KAAK,CAACC,OAAN,CAAcN,QAAd,KAA2B,EAA/B,EAAmC;AAC/BJ,UAAAA,QAAQ,CAAC;AACLK,YAAAA,IAAI,EAAExB,wBADD;AAEL0B,YAAAA,OAAO,EAAE;AAFJ,WAAD,CAAR;AAIH,SALD,MAKO;AACH,cAAIE,KAAK,CAACC,OAAV,EAAmB;AACf,gBAAIC,CAAC,GAAGC,IAAI,CAACC,KAAL,CAAWJ,KAAK,CAACC,OAAN,CAAcN,QAAzB,CAAR;AACA,gBAAIU,SAAS,GAAG3C,sBAAsB,CAACwC,CAAC,CAACG,SAAH,CAAtC;;AACA,gBAAIA,SAAS,KAAK,EAAlB,EAAsB;AAClBd,cAAAA,QAAQ,CAAC;AACLK,gBAAAA,IAAI,EAAExB,wBADD;AAEL0B,gBAAAA,OAAO,EAAEO;AAFJ,eAAD,CAAR;AAIH;AACJ;AACJ;AACJ,OAlBD,CAkBE,OAAOL,KAAP,EAAc;AACZT,QAAAA,QAAQ,CAAC;AACLK,UAAAA,IAAI,EAAExB,wBADD;AAEL0B,UAAAA,OAAO,EAAE;AAFJ,SAAD,CAAR;AAIH;AAEJ,KApCL;AAsCH,GAvCD;AAwCH;AAED,OAAO,SAAS6B,8BAAT,CAAwCJ,WAAxC,EAAqDtC,KAArD,EAA4D;AAC/D,MAAIC,YAAY,GAAG7B,YAAY,CAAC4B,KAAD,CAA/B;AACA,QAAME,OAAO,GAAG;AACZ,oBAAgB,kBADJ;AAEZ,iBAAaD,YAFD;AAGZ,eAAWL;AAHC,GAAhB;AAKA0C,EAAAA,WAAW,CAAC,CAAD,CAAX,CAAenC,cAAf,GAAgC;AAC5B,UAAMC,YAAY,CAACC,OAAb,CAAqB,IAArB,CADsB;AAE5B,aAASjC,YAAY,CAAC4B,KAAD,CAFO;AAG5B,iBAAaJ;AAHe,GAAhC;AAKA,SAAO,CAACU,QAAD,EAAWC,QAAX,KAAwB;AAC3BpC,IAAAA,KAAK,CAACsE,GAAN,CAAW,GAAEnE,QAAS,yDAAtB,EAAgFgE,WAAhF,EAA6F;AAAEpC,MAAAA,OAAO,EAAEA;AAAX,KAA7F,EACKO,IADL,CACUC,QAAQ,IAAI;AACdJ,MAAAA,QAAQ,CAAC;AACLK,QAAAA,IAAI,EAAEvB,mBADD;AAELyB,QAAAA,OAAO,EAAE;AAFJ,OAAD,CAAR;AAIH,KANL,EAMOC,KANP,CAMcC,KAAD,IAAW;AAChB,UAAI;AACA,YAAIA,KAAK,CAACC,OAAN,CAAcN,QAAd,KAA2B,EAA/B,EAAmC;AAC/BJ,UAAAA,QAAQ,CAAC;AACLK,YAAAA,IAAI,EAAEvB,mBADD;AAELyB,YAAAA,OAAO,EAAE;AAFJ,WAAD,CAAR;AAIH,SALD,MAKO;AACH,cAAIE,KAAK,CAACC,OAAV,EAAmB;AACf,gBAAIC,CAAC,GAAGC,IAAI,CAACC,KAAL,CAAWJ,KAAK,CAACC,OAAN,CAAcN,QAAzB,CAAR;AACA,gBAAIU,SAAS,GAAG7C,iCAAiC,CAAC0C,CAAC,CAACG,SAAH,CAAjD;;AACA,gBAAIA,SAAS,KAAK,EAAlB,EAAsB;AAClBd,cAAAA,QAAQ,CAAC;AACLK,gBAAAA,IAAI,EAAEvB,mBADD;AAELyB,gBAAAA,OAAO,EAAEO;AAFJ,eAAD,CAAR;AAIH;AACJ;AACJ;AACJ,OAlBD,CAkBE,OAAOL,KAAP,EAAc;AACZT,QAAAA,QAAQ,CAAC;AACLK,UAAAA,IAAI,EAAEvB,mBADD;AAELyB,UAAAA,OAAO,EAAE;AAFJ,SAAD,CAAR;AAIH;AACJ,KA/BL;AAgCH,GAjCD;AAkCH;AAID,OAAO,SAAS8B,kBAAT,CAA4B5C,MAA5B,EAAoC4B,YAApC,EAAkD3B,KAAlD,EAAyD;AAC5D,QAAME,OAAO,GAAG;AACZ,oBAAgB,iCADJ;AAEZ,iBAAa9B,YAAY,CAAC4B,KAAD,CAFb;AAGZ,eAAWL;AAHC,GAAhB;AAKAI,EAAAA,MAAM,CAACI,cAAP,GAAwB;AACpB,UAAMC,YAAY,CAACC,OAAb,CAAqB,IAArB,CADc;AAEpB,aAASjC,YAAY,CAAC4B,KAAD,CAFD;AAGpB,iBAAaL;AAHO,GAAxB;AAKA,SAAO,CAACW,QAAD,EAAWC,QAAX,KAAwB;AAC3BpC,IAAAA,KAAK,CAACsE,GAAN,CAAW,GAAEnE,QAAS,0CAAyCqD,YAAa,EAA5E,EAA+E5B,MAA/E,EAAuF;AAAEG,MAAAA,OAAO,EAAEA;AAAX,KAAvF,EACKO,IADL,CACUC,QAAQ,IAAI;AACdJ,MAAAA,QAAQ,CAAC;AACLK,QAAAA,IAAI,EAAEzB,qBADD;AAEL2B,QAAAA,OAAO,EAAE;AAFJ,OAAD,CAAR;AAIH,KANL,EAMOC,KANP,CAMcC,KAAD,IAAW;AAChB,UAAI;AACA,YAAIA,KAAK,CAACC,OAAN,CAAcN,QAAd,KAA2B,EAA/B,EAAmC;AAC/BJ,UAAAA,QAAQ,CAAC;AACLK,YAAAA,IAAI,EAAEzB,qBADD;AAEL2B,YAAAA,OAAO,EAAE;AAFJ,WAAD,CAAR;AAIH,SALD,MAKO;AACH,cAAIE,KAAK,CAACC,OAAV,EAAmB;AACf,gBAAIC,CAAC,GAAGC,IAAI,CAACC,KAAL,CAAWJ,KAAK,CAACC,OAAN,CAAcN,QAAzB,CAAR;AACA,gBAAIU,SAAS,GAAG1C,eAAe,CAACuC,CAAC,CAACG,SAAH,CAA/B;;AACA,gBAAIA,SAAS,KAAK,EAAlB,EAAsB;AAClBd,cAAAA,QAAQ,CAAC;AACLK,gBAAAA,IAAI,EAAEzB,qBADD;AAEL2B,gBAAAA,OAAO,EAAEO;AAFJ,eAAD,CAAR;AAIH;AACJ;AACJ;AACJ,OAlBD,CAkBE,OAAOL,KAAP,EAAc;AACZT,QAAAA,QAAQ,CAAC;AACLK,UAAAA,IAAI,EAAEzB,qBADD;AAEL2B,UAAAA,OAAO,EAAE;AAFJ,SAAD,CAAR;AAIH;AACJ,KA/BL;AAgCH,GAjCD;AAkCH;AAED,OAAO,SAAS+B,gCAAT,CAA0C/B,OAA1C,EAAmD;AACtD,SAAO,CAACP,QAAD,EAAWC,QAAX,KAAwB;AAC3BD,IAAAA,QAAQ,CAAC;AACLK,MAAAA,IAAI,EAAExB,wBADD;AAEL0B,MAAAA,OAAO,EAAEA;AAFJ,KAAD,CAAR;AAIH,GALD;AAMH;AAED,OAAO,SAASgC,4BAAT,CAAsChC,OAAtC,EAA+C;AAClD,SAAO,CAACP,QAAD,EAAWC,QAAX,KAAwB;AAC3BD,IAAAA,QAAQ,CAAC;AACLK,MAAAA,IAAI,EAAEvB,mBADD;AAELyB,MAAAA,OAAO,EAAEA;AAFJ,KAAD,CAAR;AAIH,GALD;AAMH;AAED,OAAO,SAASiC,yBAAT,CAAmCnB,YAAnC,EAAiD;AACpD,SAAO,CAACrB,QAAD,EAAWC,QAAX,KAAwB;AAC3BD,IAAAA,QAAQ,CAAC;AACLK,MAAAA,IAAI,EAAE3B,oBADD;AAEL+D,MAAAA,MAAM,EAAEpB;AAFH,KAAD,CAAR;AAIH,GALD;AAMH;AACD,OAAO,SAASqB,mBAAT,CAA6BpB,IAA7B,EAAmC;AACtC,SAAO,CAACtB,QAAD,EAAWC,QAAX,KAAwB;AAC3BD,IAAAA,QAAQ,CAAC;AACLK,MAAAA,IAAI,EAAE1B,kBADD;AAELmD,MAAAA,iBAAiB,EAAER;AAFd,KAAD,CAAR;AAIH,GALD;AAMH;AACD,OAAO,SAASqB,uBAAT,CAAiCpC,OAAjC,EAA0C;AAC7C,SAAO,CAACP,QAAD,EAAWC,QAAX,KAAwB;AAC3BD,IAAAA,QAAQ,CAAC;AACLK,MAAAA,IAAI,EAAEzB,qBADD;AAEL2B,MAAAA,OAAO,EAAEA;AAFJ,KAAD,CAAR;AAIH,GALD;AAMH;AAGD,OAAO,SAASqC,0BAAT,CAAoCrC,OAApC,EAA6C;AAChD,SAAO,CAACP,QAAD,EAAWC,QAAX,KAAwB;AAC3BD,IAAAA,QAAQ,CAAC;AACLK,MAAAA,IAAI,EAAEnB,wBADD;AAELqB,MAAAA,OAAO,EAAEA;AAFJ,KAAD,CAAR;AAIH,GALD;AAMH","sourcesContent":["import axios from 'axios';\r\nimport { desencriptar } from '../componentes/general/Encriptar.js';\r\nimport { campo } from '../utilitario/GenerarInputs.js'\r\nimport { URL_BASE } from '../utilitario/Configuracion.js';\r\nimport {\r\n    mensajeCambiarEstadoDeActividades,\r\n    mensajeDeRegistro,\r\n    mensajeDeCambiarEstado,\r\n    mensajeDeEditar,\r\n    mensajeDeInformacion,\r\n    mensajeDeListar,\r\n    mensajeDeListarActividades\r\n} from '../mensajesDeError/MensajesDeErrorModulo'\r\n\r\nexport const MOSTRAR_MODULOS = 'MOSTRAR_USUARIOS';\r\nexport const ESTADO_MODULOS = 'ESTADO_MODULOS';\r\nexport const ANADIR_CODIGO_EDITAR = 'ANADIR_CODIGO_EDITAR';\r\n\r\nexport const INFORMACION_MODULO = 'INFORMACION_MODULO';\r\nexport const MENSAJE_EDITAR_MODULO = 'MENSAJE_EDITAR_MODULO';\r\nexport const MENSAJE_SUSPENDER_MODULO = 'MENSAJE_SUSPENDER_MODULO';\r\nexport const MENSAJE_ACTIVIDADES = 'MENSAJE_ACTIVIDADES';\r\nexport const ACTIVIDADES_MODULO = 'ACTIVIDADES_MODULO';\r\nexport const ACTUALIZAR_MODULOS = 'ACTUALIZAR_MODULOS';\r\nexport const AGREGAR_MODULO = 'AGREGAR_MODULO';\r\nexport const MENSAJE_REGISTRAR_MODULO = 'MENSAJE_REGISTRAR_MODULO';\r\n\r\nconst PERMISO_REGISTRAR_MODULOS = 'SA_Registrar modulos';\r\nconst PERMISO_CONSULTAR_MODULOS = 'SA_Consultar modulos registrados';\r\nconst PERMISO_EDITAR_MODULOS = 'SA_Editar informacion de los modulos';\r\nconst PERMISO_SUSPENDER_ACTIVAR_ACTIVIDADES = 'SA_Suspender/activar actividades de modulos';\r\nconst PERMISO_SUSPENDER_ACTIVAR_MODULOS = 'SA_Suspender/activar modulos';\r\n\r\nexport function actionAgregarModulo(modulo, token) {\r\n    var tokenRequest = desencriptar(token);\r\n    const headers = {\r\n        'Content-Type': 'application/json; charset=UTF-8',\r\n        'TokenAuto': tokenRequest,\r\n        'Permiso': PERMISO_REGISTRAR_MODULOS\r\n    }\r\n    modulo.datosSolicitud = {\r\n        'ip': localStorage.getItem('Ip'),\r\n        'token': desencriptar(token),\r\n        'operacion': PERMISO_REGISTRAR_MODULOS\r\n    }\r\n    return (dispatch, getState) => {\r\n        axios.post(`${URL_BASE}/proyectosESCOM-web/api/modulos/registrar`, modulo, { headers: headers })\r\n            .then(response => {\r\n                dispatch({\r\n                    type: AGREGAR_MODULO,\r\n                    moduloARegistrar: modulo\r\n                });\r\n                dispatch({\r\n                    type: MENSAJE_REGISTRAR_MODULO,\r\n                    mensaje: 'modulo registrado'\r\n                });\r\n            }).catch((error) => {\r\n                try {\r\n                    if (error.request.response === '') {\r\n                        dispatch({\r\n                            type: MENSAJE_REGISTRAR_MODULO,\r\n                            mensaje: 'Servidor fuera de servicio temporalmente'\r\n                        });\r\n                    } else {\r\n                        if (error.request) {\r\n                            var o = JSON.parse(error.request.response);\r\n                            let respuesta = mensajeDeRegistro(o.respuesta);\r\n                            if (respuesta !== '') {\r\n                                dispatch({\r\n                                    type: MENSAJE_REGISTRAR_MODULO,\r\n                                    mensaje: respuesta\r\n                                });\r\n                            }\r\n                        }\r\n                    }\r\n                } catch (error) {\r\n                    dispatch({\r\n                        type: MENSAJE_REGISTRAR_MODULO,\r\n                        mensaje: 'Ocurrio un error en el servidor'\r\n                    });\r\n                }\r\n            });\r\n    }\r\n}\r\n\r\n\r\n\r\nexport function actionConsultarModulos(token) {\r\n    var tokenRequest = desencriptar(token);\r\n    const headers = {\r\n        'Content-Type': 'application/json',\r\n        'TokenAuto': tokenRequest,\r\n        'Permiso': PERMISO_CONSULTAR_MODULOS\r\n    }\r\n    return (dispatch, getState) => {\r\n        axios.get(`${URL_BASE}/proyectosESCOM-web/api/modulos/listar`, { headers: headers })\r\n            .then(response => {\r\n                dispatch({\r\n                    type: MOSTRAR_MODULOS,\r\n                    respuesta: response.data\r\n                });\r\n\r\n            }).catch((error) => {\r\n                try {\r\n                    if (error.request.response === '') {\r\n                        dispatch({\r\n                            type: MENSAJE_SUSPENDER,\r\n                            mensaje: 'Servidor fuera de servicio temporalmente'\r\n                        });\r\n                    } else {\r\n                        if (error.request) {\r\n                            var o = JSON.parse(error.request.response);\r\n                            let respuesta = mensajeDeListar(o.respuesta);\r\n                            if (respuesta === 'Sin permiso') {\r\n                                dispatch({\r\n                                    type: ESTADO_MODULOS,\r\n                                    estado: true\r\n                                });\r\n                            } else {\r\n                                dispatch({\r\n                                    type: MENSAJE_SUSPENDER,\r\n                                    mensaje: respuesta\r\n                                });\r\n                            }\r\n                        }\r\n                    }\r\n                } catch (error) {\r\n                    dispatch({\r\n                        type: MENSAJE_SUSPENDER,\r\n                        mensaje: 'Ocurrio un error en el servidor'\r\n                    });\r\n                }\r\n            });\r\n    };\r\n}\r\n\r\nexport function actionCargarInformacionDeModulo(codigoModulo, token) {\r\n    const headers = {\r\n        'Content-Type': 'application/json',\r\n        'TokenAuto': desencriptar(token),\r\n        'Permiso': PERMISO_EDITAR_MODULOS\r\n    }\r\n    return (dispatch, getState) => {\r\n        axios.get(`${URL_BASE}/proyectosESCOM-web/api/modulos/datos/${codigoModulo}`, { headers: headers })\r\n            .then(response => {\r\n                let info = {\r\n                    'descripcionModulo': response.data.descripcionModulo,\r\n                    'estadoModulo': response.data.estadoModulo,\r\n                    'idModulo': response.data.idModulo,\r\n                    'imagenModulo': campo(response.data.imagenModulo),\r\n                    'nombreModulo': response.data.nombreModulo,\r\n                    'url': response.data.url.replace('/', '')\r\n                }\r\n                dispatch({\r\n                    type: INFORMACION_MODULO,\r\n                    informacionModulo: info\r\n                });\r\n            }).catch((error) => {\r\n                try {\r\n                    if (error.request.response === '') {\r\n                        dispatch({\r\n                            type: MENSAJE_EDITAR_MODULO,\r\n                            mensaje: 'Servidor fuera de servicio temporalmente'\r\n                        });\r\n                    } else {\r\n                        if (error.request) {\r\n                            var o = JSON.parse(error.request.response);\r\n                            let respuesta = mensajeDeInformacion(o.respuesta);\r\n                            if (respuesta !== '') {\r\n                                dispatch({\r\n                                    type: MENSAJE_EDITAR_MODULO,\r\n                                    mensaje: respuesta\r\n                                });\r\n                            }\r\n                        }\r\n                    }\r\n                } catch (error) {\r\n                    dispatch({\r\n                        type: MENSAJE_EDITAR_MODULO,\r\n                        mensaje: 'Ocurrio un error en el servidor'\r\n                    });\r\n                }\r\n            });\r\n    };\r\n}\r\n\r\nexport function actionConsultarActividadesModulo(codigoModulo, token) {\r\n    const headers = {\r\n        'Content-Type': 'application/json',\r\n        'TokenAuto': desencriptar(token),\r\n        'Permiso': PERMISO_SUSPENDER_ACTIVAR_ACTIVIDADES\r\n    }\r\n\r\n    return (dispatch, getState) => {\r\n        axios.get(`${URL_BASE}/proyectosESCOM-web/api/modulos/listarActividades/${codigoModulo}`, { headers: headers })\r\n            .then(response => {\r\n                dispatch({\r\n                    type: ACTIVIDADES_MODULO,\r\n                    actividades: response.data\r\n                });\r\n            }).catch((error) => {\r\n                try {\r\n                    if (error.request.response === '') {\r\n                        dispatch({\r\n                            type: MENSAJE_ACTIVIDADES,\r\n                            mensaje: 'Servidor fuera de servicio temporalmente'\r\n                        });\r\n                    } else {\r\n                        if (error.request) {\r\n                            var o = JSON.parse(error.request.response);\r\n                            let respuesta = mensajeDeListarActividades(o.respuesta);\r\n                            if (respuesta !== '') {\r\n                                dispatch({\r\n                                    type: MENSAJE_ACTIVIDADES,\r\n                                    mensaje: respuesta\r\n                                });\r\n                            }\r\n                        }\r\n                    }\r\n                } catch (error) {\r\n                    dispatch({\r\n                        type: MENSAJE_ACTIVIDADES,\r\n                        mensaje: 'Ocurrio un error en el servidor'\r\n                    });\r\n                }\r\n            });\r\n    };\r\n}\r\n\r\nexport function actionSuspenderActivarModulo(codigoModulo, token, actualizados) {\r\n    var tokenRequest = desencriptar(token);\r\n    const headers = {\r\n        'Content-Type': 'application/json',\r\n        'TokenAuto': tokenRequest,\r\n        'Permiso': PERMISO_SUSPENDER_ACTIVAR_MODULOS\r\n    }\r\n    let datosSolicitud = {\r\n        'ip': localStorage.getItem('Ip'),\r\n        'token': desencriptar(token),\r\n        'operacion': PERMISO_SUSPENDER_ACTIVAR_MODULOS\r\n    }\r\n    return (dispatch, getState) => {\r\n        axios.put(`${URL_BASE}/proyectosESCOM-web/api/modulos/cambiarEstado/${codigoModulo}`, datosSolicitud, { headers: headers })\r\n            .then(response => {\r\n                dispatch({\r\n                    type: ACTUALIZAR_MODULOS,\r\n                    modulo: actualizados\r\n                });\r\n                dispatch({\r\n                    type: MENSAJE_SUSPENDER_MODULO,\r\n                    mensaje: 'Operacion hecha con exito'\r\n                });\r\n            }).catch((error) => {\r\n                try {\r\n                    if (error.request.response === '') {\r\n                        dispatch({\r\n                            type: MENSAJE_SUSPENDER_MODULO,\r\n                            mensaje: 'Servidor fuera de servicio temporalmente'\r\n                        });\r\n                    } else {\r\n                        if (error.request) {\r\n                            var o = JSON.parse(error.request.response);\r\n                            let respuesta = mensajeDeCambiarEstado(o.respuesta);\r\n                            if (respuesta !== '') {\r\n                                dispatch({\r\n                                    type: MENSAJE_SUSPENDER_MODULO,\r\n                                    mensaje: respuesta\r\n                                });\r\n                            }\r\n                        }\r\n                    }\r\n                } catch (error) {\r\n                    dispatch({\r\n                        type: MENSAJE_SUSPENDER_MODULO,\r\n                        mensaje: 'Ocurrio un error en el servidor'\r\n                    });\r\n                }\r\n\r\n            });\r\n\r\n    }\r\n}\r\n\r\nexport function actionCambiarEstadoActividades(actividades, token) {\r\n    var tokenRequest = desencriptar(token);\r\n    const headers = {\r\n        'Content-Type': 'application/json',\r\n        'TokenAuto': tokenRequest,\r\n        'Permiso': PERMISO_SUSPENDER_ACTIVAR_ACTIVIDADES\r\n    }\r\n    actividades[0].datosSolicitud = {\r\n        'ip': localStorage.getItem('Ip'),\r\n        'token': desencriptar(token),\r\n        'operacion': PERMISO_SUSPENDER_ACTIVAR_ACTIVIDADES\r\n    }\r\n    return (dispatch, getState) => {\r\n        axios.put(`${URL_BASE}/proyectosESCOM-web/api/modulos/cambiarEstadoActividad/`, actividades, { headers: headers })\r\n            .then(response => {\r\n                dispatch({\r\n                    type: MENSAJE_ACTIVIDADES,\r\n                    mensaje: 'Operacion hecha con exito'\r\n                });\r\n            }).catch((error) => {\r\n                try {\r\n                    if (error.request.response === '') {\r\n                        dispatch({\r\n                            type: MENSAJE_ACTIVIDADES,\r\n                            mensaje: 'Servidor fuera de servicio temporalmente'\r\n                        });\r\n                    } else {\r\n                        if (error.request) {\r\n                            var o = JSON.parse(error.request.response);\r\n                            let respuesta = mensajeCambiarEstadoDeActividades(o.respuesta);\r\n                            if (respuesta !== '') {\r\n                                dispatch({\r\n                                    type: MENSAJE_ACTIVIDADES,\r\n                                    mensaje: respuesta\r\n                                });\r\n                            }\r\n                        }\r\n                    }\r\n                } catch (error) {\r\n                    dispatch({\r\n                        type: MENSAJE_ACTIVIDADES,\r\n                        mensaje: 'Ocurrio un error en el servidor'\r\n                    });\r\n                }\r\n            });\r\n    }\r\n}\r\n\r\n\r\n\r\nexport function actionEditarModulo(modulo, codigoModulo, token) {\r\n    const headers = {\r\n        'Content-Type': 'application/json; charset=UTF-8',\r\n        'TokenAuto': desencriptar(token),\r\n        'Permiso': PERMISO_EDITAR_MODULOS\r\n    }\r\n    modulo.datosSolicitud = {\r\n        'ip': localStorage.getItem('Ip'),\r\n        'token': desencriptar(token),\r\n        'operacion': PERMISO_EDITAR_MODULOS\r\n    }\r\n    return (dispatch, getState) => {\r\n        axios.put(`${URL_BASE}/proyectosESCOM-web/api/modulos/editar/${codigoModulo}`, modulo, { headers: headers })\r\n            .then(response => {\r\n                dispatch({\r\n                    type: MENSAJE_EDITAR_MODULO,\r\n                    mensaje: 'modulo editado'\r\n                });\r\n            }).catch((error) => {\r\n                try {\r\n                    if (error.request.response === '') {\r\n                        dispatch({\r\n                            type: MENSAJE_EDITAR_MODULO,\r\n                            mensaje: 'Sin acceso al servicio'\r\n                        });\r\n                    } else {\r\n                        if (error.request) {\r\n                            var o = JSON.parse(error.request.response);\r\n                            let respuesta = mensajeDeEditar(o.respuesta);\r\n                            if (respuesta !== '') {\r\n                                dispatch({\r\n                                    type: MENSAJE_EDITAR_MODULO,\r\n                                    mensaje: respuesta\r\n                                });\r\n                            }\r\n                        }\r\n                    }\r\n                } catch (error) {\r\n                    dispatch({\r\n                        type: MENSAJE_EDITAR_MODULO,\r\n                        mensaje: 'Ocurrio un error en el servidor'\r\n                    });\r\n                }\r\n            });\r\n    }\r\n}\r\n\r\nexport function actualizarMensajeSuspenderModulo(mensaje) {\r\n    return (dispatch, getState) => {\r\n        dispatch({\r\n            type: MENSAJE_SUSPENDER_MODULO,\r\n            mensaje: mensaje\r\n        });\r\n    };\r\n}\r\n\r\nexport function actualizarMensajeActividades(mensaje) {\r\n    return (dispatch, getState) => {\r\n        dispatch({\r\n            type: MENSAJE_ACTIVIDADES,\r\n            mensaje: mensaje\r\n        });\r\n    };\r\n}\r\n\r\nexport function actionAsignarCodigoModulo(codigoModulo) {\r\n    return (dispatch, getState) => {\r\n        dispatch({\r\n            type: ANADIR_CODIGO_EDITAR,\r\n            codigo: codigoModulo\r\n        });\r\n    }\r\n}\r\nexport function actionAsignarModulo(info) {\r\n    return (dispatch, getState) => {\r\n        dispatch({\r\n            type: INFORMACION_MODULO,\r\n            informacionModulo: info\r\n        });\r\n    }\r\n}\r\nexport function actualizarMensajeEditar(mensaje) {\r\n    return (dispatch, getState) => {\r\n        dispatch({\r\n            type: MENSAJE_EDITAR_MODULO,\r\n            mensaje: mensaje\r\n        });\r\n    };\r\n}\r\n\r\n\r\nexport function actualizarMensajeRegistrar(mensaje) {\r\n    return (dispatch, getState) => {\r\n        dispatch({\r\n            type: MENSAJE_REGISTRAR_MODULO,\r\n            mensaje: mensaje\r\n        });\r\n    };\r\n}"]},"metadata":{},"sourceType":"module"}