{"ast":null,"code":"import axios from 'axios';\nimport { encriptar, desencriptar } from '../componentes/general/Encriptar.js';\nimport { mensajesDeError } from '../utilitario/MensajesError.js';\nexport const MOSTRAR_USUARIOS = 'MOSTRAR_USUARIOS';\nexport const ESTADO_USUARIOS = 'ESTADO_USUARIOS';\nexport const MOSTRAR_DOCUMENTOS = 'MOSTRAR_DOCUMENTOS';\nexport const ACTIVIDADES_SIN_ASIGNAR = 'ACTIVIDADES_SIN_ASIGNAR';\nexport const MOSTRAR_ACTIVIDADES_USUARIO = 'MOSTRAR_ACTIVIDADES_USUARIO';\nexport const AGREGAR_USUARIO = 'AGREGAR_USUARIO';\nexport const AGREGAR_ACTIVIDAD = 'AGREGAR_ACTIVIDAD';\nexport const INFORMACION_USUARIO = 'INFORMACION_USUARIO';\nexport const ANADIR_CEDULA_EDITAR = \"ANADIR_CEDULA_EDITAR\";\nexport const EDITAR_USUARIO = \"EDITAR_USUARIO\";\nexport const ACTUALIZAR_USUARIOS = 'ACTUALIZAR_USUARIOS';\nexport const MENSAJE_LOGIN = 'MENSAJE_LOGIN';\nexport const MENSAJE_REGISTRAR = 'MENSAJE_REGISTRAR';\nexport const MENSAJE_ASIGNAR = 'MENSAJE_ASIGNAR';\nexport const MENSAJE_EDITAR = 'MENSAJE_EDITAR';\nexport const MENSAJE_SUSPENDER = 'MENSAJE_SUSPENDER';\nexport const REDIRECCIONAR_LOGIN = 'REDIRECCIONAR_LOGIN';\nexport const ESTADO_ASIGNAR = 'ESTADO_ASIGNAR';\nexport const MODULOS_REGISTRADOS = 'MODULOS_REGISTRADOS';\nexport function actionLoginUsuario(correo, contrasena, cambiar) {\n  var crypto = require('crypto');\n\n  var contrasenaEncryp = crypto.createHmac('sha256', correo).update(contrasena).digest('hex');\n  cambiar(true);\n  return (dispatch, getState) => {\n    axios.get(\"http://localhost:9090/proyectosESCOM-web/api/login/\" + correo + '/' + contrasenaEncryp).then(response => {\n      if (response.status === 200) {\n        var token = encriptar(response.data.token);\n        localStorage.setItem('Token', token);\n        dispatch({\n          type: MENSAJE_LOGIN,\n          mensaje: 'Login correcto'\n        });\n      }\n    }).catch(error => {\n      if (error.request.response === '') {\n        dispatch({\n          type: MENSAJE_LOGIN,\n          mensaje: 'Servidor fuera de servicio temporalmente'\n        });\n        cambiar(false);\n      } else {\n        if (error.request) {\n          var o = JSON.parse(error.request.response);\n          cambiar(false);\n\n          switch (o.respuesta) {\n            case 'Credenciales incorrectas':\n              dispatch({\n                type: MENSAJE_LOGIN,\n                mensaje: 'Credenciales incorrectas'\n              });\n              break;\n\n            case 'Ocurrio un error en el servidor':\n              dispatch({\n                type: MENSAJE_LOGIN,\n                mensaje: 'Ocurrio un error en el servidor'\n              });\n              break;\n\n            default:\n              dispatch({\n                type: MENSAJE_LOGIN,\n                mensaje: 'Ocurrio un error en el servidor'\n              });\n              break;\n          }\n        }\n      }\n    });\n  };\n}\nexport function actionCerrarSesion(token) {\n  var tokenlim = desencriptar(token);\n  const headers = {\n    'Content-Type': 'application/json',\n    'TokenAuto': tokenlim\n  };\n  axios.delete(\"http://localhost:9090/SuperadministradorESCOM-web/api/usuario/\" + tokenlim, {\n    headers: headers\n  }).then(response => {\n    if (response.status === 200) {\n      console.log('cerrada');\n    }\n  }).catch(function (error) {\n    // handle error\n    console.log('error es: ', error);\n  });\n}\nexport function actualizarMensajeEditar(mensaje) {\n  return (dispatch, getState) => {\n    dispatch({\n      type: MENSAJE_EDITAR,\n      mensaje: mensaje\n    });\n  };\n}\nexport function actualizarMensajeLogin(mensaje) {\n  return (dispatch, getState) => {\n    dispatch({\n      type: MENSAJE_LOGIN,\n      mensaje: mensaje\n    });\n  };\n}\nexport function actualizarMensajeRegistrar(mensaje) {\n  return (dispatch, getState) => {\n    dispatch({\n      type: MENSAJE_REGISTRAR,\n      mensaje: mensaje\n    });\n  };\n}\nexport function actualizarMensajeSuspender(mensaje) {\n  return (dispatch, getState) => {\n    dispatch({\n      type: MENSAJE_SUSPENDER,\n      mensaje: mensaje\n    });\n  };\n}\nexport function actualizarMensajeAsignar(mensaje) {\n  return (dispatch, getState) => {\n    dispatch({\n      type: MENSAJE_ASIGNAR,\n      mensaje: mensaje\n    });\n  };\n}\nexport function actionConsultarUsuarios(token) {\n  var tokenRequest = desencriptar(token);\n  const headers = {\n    'Content-Type': 'application/json',\n    'TokenAuto': tokenRequest,\n    'Permiso': 'sa_Consultar usuarios registrados'\n  };\n  return (dispatch, getState) => {\n    axios.get(\"http://localhost:9090/proyectosESCOM-web/api/usuario/listarUsuarios\", {\n      headers: headers\n    }).then(response => {\n      dispatch({\n        type: MOSTRAR_USUARIOS,\n        respuesta: response.data\n      });\n    }).catch(error => {\n      if (error.request.response === '') {} else {\n        if (error.request) {\n          var o = JSON.parse(error.request.response);\n          let respuesta = mensajesDeError(o.respuesta);\n\n          if (respuesta === 'Sin permiso') {\n            dispatch({\n              type: ESTADO_USUARIOS,\n              estado: true\n            });\n          } else {//\n          }\n        }\n      }\n    });\n  };\n}\nexport function actionConsultarActividadesUsuario(numeroDocumento, token) {\n  var tokenRequest = desencriptar(token);\n  const headers = {\n    'Content-Type': 'application/json',\n    'TokenAuto': tokenRequest,\n    'Permiso': 'sa_Asignacion de actividades a los usuarios'\n  };\n  return (dispatch, getState) => {\n    axios.get(\"http://localhost:9090/proyectosESCOM-web/api/usuario/listarActividadesUsuario/\" + numeroDocumento, {\n      headers: headers\n    }).then(response => {\n      dispatch({\n        type: MOSTRAR_ACTIVIDADES_USUARIO,\n        respuesta: response.data\n      });\n    }).catch(error => {\n      console.log('errors', error);\n    });\n  };\n}\nexport function actionConsultarDocumentos(token) {\n  var tokenRequest = desencriptar(token);\n  const headers = {\n    'Content-Type': 'application/json',\n    'TokenAuto': tokenRequest,\n    'Permiso': 'sa_Consultar usuarios registrados'\n  };\n  return (dispatch, getState) => {\n    axios.get(\"http://localhost:9090/proyectosESCOM-web/api/usuario/tipoDocumento\", {\n      headers: headers\n    }).then(response => {\n      dispatch({\n        type: MOSTRAR_DOCUMENTOS,\n        respuesta: response.data\n      });\n    });\n  };\n}\nexport function actionAgregarUsuario(usuario, token) {\n  var tokenRequest = desencriptar(token);\n  const headers = {\n    'Content-Type': 'application/json',\n    'TokenAuto': tokenRequest,\n    'Permiso': 'sa_Registrar usuarios'\n  };\n  return (dispatch, getState) => {\n    axios.post(\"http://localhost:9090/proyectosESCOM-web/api/usuario/registrarUsuario\", usuario, {\n      headers: headers\n    }).then(response => {\n      dispatch({\n        type: AGREGAR_USUARIO,\n        usuarioARegistrar: usuario\n      });\n      dispatch({\n        type: MENSAJE_REGISTRAR,\n        mensaje: 'Usuario registrado'\n      });\n    }).catch(error => {\n      if (error.request.response === '') {\n        dispatch({\n          type: MENSAJE_REGISTRAR,\n          mensaje: 'Servidor fuera de servicio temporalmente'\n        });\n      } else {\n        if (error.request) {\n          var o = JSON.parse(error.request.response);\n          let respuesta = mensajesDeError(o.respuesta);\n\n          if (respuesta !== '') {\n            dispatch({\n              type: MENSAJE_REGISTRAR,\n              mensaje: respuesta\n            });\n          } else {\n            dispatch({\n              type: MENSAJE_REGISTRAR,\n              mensaje: 'Ya existen los datos registrados previamente'\n            });\n          }\n        }\n      }\n    });\n  };\n}\nexport function actionAsignarActividad(token, numeroDocumento, actividad) {\n  var tokenRequest = desencriptar(token);\n  const headers = {\n    'Content-Type': 'application/json',\n    'TokenAuto': tokenRequest,\n    'Permiso': 'sa_Asignacion de actividades a los usuarios'\n  };\n  return (dispatch, getState) => {\n    axios.post(\"http://localhost:9090/proyectosESCOM-web/api/usuario/asignarActividad/\" + numeroDocumento, actividad, {\n      headers: headers\n    }).then(response => {\n      dispatch({\n        type: MENSAJE_ASIGNAR,\n        mensaje: 'Actividad asignada'\n      });\n    }).catch(error => {\n      if (error.request.response === '') {\n        dispatch({\n          type: MENSAJE_ASIGNAR,\n          mensaje: 'Servidor fuera de servicio temporalmente'\n        });\n      } else {\n        if (error.request) {\n          var o = JSON.parse(error.request.response);\n          let respuesta = mensajesDeError(o.respuesta);\n\n          if (respuesta !== '') {\n            dispatch({\n              type: MENSAJE_ASIGNAR,\n              mensaje: respuesta\n            });\n          } else {\n            dispatch({\n              type: MENSAJE_ASIGNAR,\n              mensaje: 'Ya existen los datos registrados previamente'\n            });\n          }\n        }\n      }\n    });\n  };\n}\nexport function actionSuspenderActivarUsuario(cedula, token, actualizados) {\n  var tokenRequest = desencriptar(token);\n  const headers = {\n    'Content-Type': 'application/json',\n    'TokenAuto': tokenRequest,\n    'Permiso': 'sa_Suspender/activar usuarios'\n  };\n  return (dispatch, getState) => {\n    axios.get(\"http://localhost:9090/proyectosESCOM-web/api/usuario/cambiarEstadoUsuario/\" + cedula, {\n      headers: headers\n    }).then(response => {\n      dispatch({\n        type: MENSAJE_SUSPENDER,\n        mensaje: 'Operacion hecha con exito'\n      });\n      dispatch({\n        type: ACTUALIZAR_USUARIOS,\n        usuario: actualizados\n      });\n    }).catch(error => {\n      console.log(error);\n\n      if (error.request.response === '') {\n        dispatch({\n          type: MENSAJE_SUSPENDER,\n          mensaje: 'Servidor fuera de servicio temporalmente'\n        });\n      } else {\n        if (error.request) {\n          var o = JSON.parse(error.request.response);\n          let respuesta = mensajesDeError(o.respuesta);\n\n          if (respuesta !== '') {\n            dispatch({\n              type: MENSAJE_SUSPENDER,\n              mensaje: respuesta\n            });\n            console.log('get state', getState);\n            dispatch({\n              type: ACTUALIZAR_USUARIOS,\n              usuario: actualizados\n            });\n          } else {\n            dispatch({\n              type: MENSAJE_SUSPENDER,\n              mensaje: 'Sin acceso al servicio'\n            });\n          }\n        }\n      }\n    });\n  };\n}\nexport function actionCargarInformacionDeUsuario(cedula, token) {\n  const headers = {\n    'Content-Type': 'application/json',\n    'TokenAuto': desencriptar(token),\n    'Permiso': 'sa_Editar informacion de los usuarios'\n  };\n  return (dispatch, getState) => {\n    axios.get(\"http://localhost:9090/proyectosESCOM-web/api/usuario/datosUsuario/\" + cedula, {\n      headers: headers\n    }).then(response => {\n      dispatch({\n        type: INFORMACION_USUARIO,\n        informacionUsuario: response.data\n      });\n    }).catch(error => {\n      if (error.request.response === '') {\n        dispatch({\n          type: MENSAJE_EDITAR,\n          mensaje: 'Servidor fuera de servicio temporalmente'\n        });\n      } else {\n        if (error.request) {\n          var o = JSON.parse(error.request.response);\n          let respuesta = mensajesDeError(o.respuesta);\n\n          if (respuesta !== '') {\n            dispatch({\n              type: MENSAJE_EDITAR,\n              mensaje: respuesta\n            });\n          } else {\n            dispatch({\n              type: MENSAJE_EDITAR,\n              mensaje: 'Sin acceso al servicio'\n            });\n          }\n        }\n      }\n    });\n  };\n}\nexport function actionConsultarModulos(token) {\n  var tokenRequest = desencriptar(token);\n  const headers = {\n    'Content-Type': 'application/json',\n    'TokenAuto': tokenRequest,\n    'Permiso': 'sa_Asignacion de actividades a los usuarios'\n  };\n  return (dispatch, getState) => {\n    axios.get(\"http://localhost:9090/proyectosESCOM-web/api/modulo/listarModulos\", {\n      headers: headers\n    }).then(response => {\n      dispatch({\n        type: MODULOS_REGISTRADOS,\n        respuesta: response.data\n      });\n    }).catch(error => {\n      if (error.request.response === '') {} else {\n        if (error.request) {\n          var o = JSON.parse(error.request.response);\n          let respuesta = mensajesDeError(o.respuesta);\n\n          if (respuesta === 'Sin permiso') {\n            dispatch({\n              type: ESTADO_ASIGNAR,\n              estado: true\n            });\n          } else {//\n          }\n        }\n      }\n    });\n  };\n}\nexport function actionLimpiar() {\n  return (dispatch, getState) => {\n    dispatch({\n      type: ACTIVIDADES_SIN_ASIGNAR,\n      respuesta: undefined\n    });\n  };\n}\nexport function actionEliminarActividades(actividades, token, numeroDocumento) {\n  var tokenRequest = desencriptar(token);\n  const headers = {\n    'Content-Type': 'application/json',\n    'TokenAuto': tokenRequest,\n    'Permiso': 'sa_Asignacion de actividades a los usuarios'\n  };\n  return (dispatch, getState) => {\n    axios.put(\"http://localhost:9090/proyectosESCOM-web/api/usuario/eliminarActividadUsuario/\" + numeroDocumento, actividades, {\n      headers: headers\n    }).then(response => {\n      dispatch({\n        type: MENSAJE_ASIGNAR,\n        mensaje: 'Actividades eliminadas'\n      });\n    }).catch(error => {\n      console.log(error);\n\n      if (error.request.response === '') {\n        dispatch({\n          type: MENSAJE_ASIGNAR,\n          mensaje: 'Servidor fuera de servicio temporalmente'\n        });\n      } else {\n        if (error.request) {\n          var o = JSON.parse(error.request.response);\n          let respuesta = mensajesDeError(o.respuesta);\n          console.log('respuesta', respuesta);\n\n          if (respuesta !== '') {\n            dispatch({\n              type: MENSAJE_ASIGNAR,\n              mensaje: respuesta\n            });\n          } else {\n            dispatch({\n              type: MENSAJE_ASIGNAR,\n              mensaje: 'Sin acceso al servicio'\n            });\n          }\n        }\n      }\n    });\n  };\n}\nexport function actionConsultarActividadesSinAsignar(token, numeroDocumento, codigoModulo) {\n  var tokenRequest = desencriptar(token);\n  const headers = {\n    'Content-Type': 'application/json',\n    'TokenAuto': tokenRequest,\n    'Permiso': 'sa_Asignacion de actividades a los usuarios'\n  };\n  return (dispatch, getState) => {\n    axios.get(\"http://localhost:9090/proyectosESCOM-web/api/usuario/listarActividadesNoAsociadasUsuario/\" + numeroDocumento + \"/\" + codigoModulo, {\n      headers: headers\n    }).then(response => {\n      dispatch({\n        type: ACTIVIDADES_SIN_ASIGNAR,\n        respuesta: response.data\n      });\n    }).catch(error => {\n      if (error.request.response === '') {} else {\n        if (error.request) {\n          var o = JSON.parse(error.request.response);\n          let respuesta = mensajesDeError(o.respuesta);\n\n          if (respuesta === 'Sin permiso') {\n            dispatch({\n              type: ESTADO_ASIGNAR,\n              estado: true\n            });\n          } else {//\n          }\n        }\n      }\n    });\n  };\n}\nexport function actionAsignarCedula(cedula) {\n  return (dispatch, getState) => {\n    dispatch({\n      type: ANADIR_CEDULA_EDITAR,\n      cedula: cedula\n    });\n  };\n}\nexport function actionAsignarActividades() {\n  return (dispatch, getState) => {\n    dispatch({\n      type: ACTIVIDADES_SIN_ASIGNAR,\n      respuesta: null\n    });\n  };\n}\nexport function actionActualizarUsuarios(usuarios) {\n  return (dispatch, getState) => {\n    dispatch({\n      type: ACTUALIZAR_USUARIOS,\n      usuario: usuarios\n    });\n  };\n}\nexport function actionEditarUsuario(usuario, cedula, token) {\n  const headers = {\n    'Content-Type': 'application/json',\n    'TokenAuto': desencriptar(token),\n    'Permiso': 'sa_Editar informacion de los usuarios'\n  };\n  return (dispatch, getState) => {\n    axios.put(\"http://localhost:9090/proyectosESCOM-web/api/usuario/editarUsuario/\" + cedula, usuario, {\n      headers: headers\n    }).then(response => {\n      dispatch({\n        type: EDITAR_USUARIO,\n        payload: usuario\n      });\n      dispatch({\n        type: MENSAJE_EDITAR,\n        mensaje: 'Modificado'\n      });\n    }).catch(error => {\n      if (error.request.response === '') {\n        dispatch({\n          type: MENSAJE_EDITAR,\n          mensaje: 'Servidor fuera de servicio temporalmente'\n        });\n      } else {\n        if (error.request) {\n          var o = JSON.parse(error.request.response);\n          let respuesta = mensajesDeError(o.respuesta);\n\n          if (respuesta !== '') {\n            dispatch({\n              type: MENSAJE_EDITAR,\n              mensaje: respuesta\n            });\n          } else {\n            dispatch({\n              type: MENSAJE_EDITAR,\n              mensaje: 'Ya existen los datos registrados previamente'\n            });\n          }\n        }\n      }\n    });\n  };\n}","map":{"version":3,"sources":["C:/Users/jeiso/Desktop/proyectosESCOM/frontend/ESCOM-view/src/SuperAdministrador/actions/actionsUsuario.js"],"names":["axios","encriptar","desencriptar","mensajesDeError","MOSTRAR_USUARIOS","ESTADO_USUARIOS","MOSTRAR_DOCUMENTOS","ACTIVIDADES_SIN_ASIGNAR","MOSTRAR_ACTIVIDADES_USUARIO","AGREGAR_USUARIO","AGREGAR_ACTIVIDAD","INFORMACION_USUARIO","ANADIR_CEDULA_EDITAR","EDITAR_USUARIO","ACTUALIZAR_USUARIOS","MENSAJE_LOGIN","MENSAJE_REGISTRAR","MENSAJE_ASIGNAR","MENSAJE_EDITAR","MENSAJE_SUSPENDER","REDIRECCIONAR_LOGIN","ESTADO_ASIGNAR","MODULOS_REGISTRADOS","actionLoginUsuario","correo","contrasena","cambiar","crypto","require","contrasenaEncryp","createHmac","update","digest","dispatch","getState","get","then","response","status","token","data","localStorage","setItem","type","mensaje","catch","error","request","o","JSON","parse","respuesta","actionCerrarSesion","tokenlim","headers","delete","console","log","actualizarMensajeEditar","actualizarMensajeLogin","actualizarMensajeRegistrar","actualizarMensajeSuspender","actualizarMensajeAsignar","actionConsultarUsuarios","tokenRequest","estado","actionConsultarActividadesUsuario","numeroDocumento","actionConsultarDocumentos","actionAgregarUsuario","usuario","post","usuarioARegistrar","actionAsignarActividad","actividad","actionSuspenderActivarUsuario","cedula","actualizados","actionCargarInformacionDeUsuario","informacionUsuario","actionConsultarModulos","actionLimpiar","undefined","actionEliminarActividades","actividades","put","actionConsultarActividadesSinAsignar","codigoModulo","actionAsignarCedula","actionAsignarActividades","actionActualizarUsuarios","usuarios","actionEditarUsuario","payload"],"mappings":"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","sourcesContent":["import axios from 'axios';\r\nimport { encriptar, desencriptar } from '../componentes/general/Encriptar.js';\r\nimport {mensajesDeError} from '../utilitario/MensajesError.js';\r\n\r\nexport const MOSTRAR_USUARIOS = 'MOSTRAR_USUARIOS';\r\nexport const ESTADO_USUARIOS = 'ESTADO_USUARIOS';\r\nexport const MOSTRAR_DOCUMENTOS = 'MOSTRAR_DOCUMENTOS';\r\nexport const ACTIVIDADES_SIN_ASIGNAR='ACTIVIDADES_SIN_ASIGNAR';\r\nexport const MOSTRAR_ACTIVIDADES_USUARIO = 'MOSTRAR_ACTIVIDADES_USUARIO';\r\nexport const AGREGAR_USUARIO = 'AGREGAR_USUARIO';\r\nexport const AGREGAR_ACTIVIDAD = 'AGREGAR_ACTIVIDAD';\r\nexport const INFORMACION_USUARIO = 'INFORMACION_USUARIO';\r\nexport const ANADIR_CEDULA_EDITAR = \"ANADIR_CEDULA_EDITAR\";\r\nexport const EDITAR_USUARIO = \"EDITAR_USUARIO\";\r\nexport const ACTUALIZAR_USUARIOS = 'ACTUALIZAR_USUARIOS';\r\nexport const MENSAJE_LOGIN = 'MENSAJE_LOGIN';\r\nexport const MENSAJE_REGISTRAR = 'MENSAJE_REGISTRAR';\r\nexport const MENSAJE_ASIGNAR = 'MENSAJE_ASIGNAR';\r\nexport const MENSAJE_EDITAR = 'MENSAJE_EDITAR';\r\nexport const MENSAJE_SUSPENDER = 'MENSAJE_SUSPENDER';\r\nexport const REDIRECCIONAR_LOGIN = 'REDIRECCIONAR_LOGIN';\r\nexport const ESTADO_ASIGNAR='ESTADO_ASIGNAR';\r\nexport const MODULOS_REGISTRADOS='MODULOS_REGISTRADOS';\r\n\r\nexport function actionLoginUsuario(correo, contrasena, cambiar) {\r\n    var crypto = require('crypto');\r\n    var contrasenaEncryp = crypto.createHmac('sha256', correo).update(contrasena).digest('hex');\r\n    cambiar(true);\r\n    return (dispatch, getState) => {\r\n        axios.get(\"http://localhost:9090/proyectosESCOM-web/api/login/\" + correo + '/' + contrasenaEncryp)\r\n            .then(response => {\r\n                if (response.status === 200) {\r\n                    var token = encriptar(response.data.token);\r\n                    localStorage.setItem('Token', token);\r\n                    dispatch({\r\n                        type: MENSAJE_LOGIN,\r\n                        mensaje: 'Login correcto'\r\n                    });\r\n                }\r\n            }).catch((error) => {\r\n                if (error.request.response === '') {\r\n                    dispatch({\r\n                        type: MENSAJE_LOGIN,\r\n                        mensaje: 'Servidor fuera de servicio temporalmente'\r\n                    });\r\n                    cambiar(false);\r\n                } else {\r\n                    if (error.request) {\r\n                        var o = JSON.parse(error.request.response);\r\n                        cambiar(false);\r\n                        switch (o.respuesta) {\r\n                            case 'Credenciales incorrectas':\r\n                                dispatch({\r\n                                    type: MENSAJE_LOGIN,\r\n                                    mensaje: 'Credenciales incorrectas'\r\n                                });\r\n                                break;\r\n                            case 'Ocurrio un error en el servidor':\r\n                                dispatch({\r\n                                    type: MENSAJE_LOGIN,\r\n                                    mensaje: 'Ocurrio un error en el servidor'\r\n                                });\r\n                                break;\r\n                            default:\r\n                                dispatch({\r\n                                    type: MENSAJE_LOGIN,\r\n                                    mensaje: 'Ocurrio un error en el servidor'\r\n                                });\r\n                                break;\r\n                        }\r\n                    }\r\n                }\r\n            })\r\n    };\r\n}\r\n\r\nexport function actionCerrarSesion(token) {\r\n    var tokenlim = desencriptar(token);\r\n    const headers = {\r\n        'Content-Type': 'application/json',\r\n        'TokenAuto': tokenlim\r\n    }\r\n\r\n    axios.delete(\"http://localhost:9090/SuperadministradorESCOM-web/api/usuario/\" + tokenlim, { headers: headers })\r\n        .then(response => {\r\n            if (response.status === 200) {\r\n                console.log('cerrada')\r\n            }\r\n        }).catch(function (error) {\r\n            // handle error\r\n            console.log('error es: ', error)\r\n        });\r\n}\r\n\r\nexport function actualizarMensajeEditar(mensaje) {\r\n    return (dispatch, getState) => {\r\n        dispatch({\r\n            type: MENSAJE_EDITAR,\r\n            mensaje: mensaje\r\n        });\r\n    };\r\n}\r\n\r\nexport function actualizarMensajeLogin(mensaje) {\r\n    return (dispatch, getState) => {\r\n        dispatch({\r\n            type: MENSAJE_LOGIN,\r\n            mensaje: mensaje\r\n        });\r\n    };\r\n}\r\n\r\nexport function actualizarMensajeRegistrar(mensaje) {\r\n    return (dispatch, getState) => {\r\n        dispatch({\r\n            type: MENSAJE_REGISTRAR,\r\n            mensaje: mensaje\r\n        });\r\n    };\r\n}\r\n\r\nexport function actualizarMensajeSuspender(mensaje) {\r\n    return (dispatch, getState) => {\r\n        dispatch({\r\n            type: MENSAJE_SUSPENDER,\r\n            mensaje: mensaje\r\n        });\r\n    };\r\n}\r\n\r\nexport function actualizarMensajeAsignar(mensaje) {\r\n    return (dispatch, getState) => {\r\n        dispatch({\r\n            type: MENSAJE_ASIGNAR,\r\n            mensaje: mensaje\r\n        });\r\n    };\r\n}\r\n\r\n\r\nexport function actionConsultarUsuarios(token) {\r\n    var tokenRequest = desencriptar(token);\r\n    const headers = {\r\n        'Content-Type': 'application/json',\r\n        'TokenAuto': tokenRequest,\r\n        'Permiso': 'sa_Consultar usuarios registrados'\r\n    }\r\n    return (dispatch, getState) => {\r\n        axios.get(\"http://localhost:9090/proyectosESCOM-web/api/usuario/listarUsuarios\", { headers: headers })\r\n            .then(response => {\r\n                dispatch({\r\n                    type: MOSTRAR_USUARIOS,\r\n                    respuesta: response.data\r\n                });\r\n            }).catch((error) => {\r\n                if (error.request.response === '') {\r\n                    \r\n                }else{\r\n                    if (error.request) {\r\n                        var o = JSON.parse(error.request.response);\r\n                        let respuesta=mensajesDeError(o.respuesta);\r\n                        if(respuesta==='Sin permiso'){\r\n                            dispatch({\r\n                                type: ESTADO_USUARIOS,\r\n                                estado: true\r\n                            });\r\n                        }else{\r\n                            //\r\n                        }\r\n                    }\r\n                } \r\n            });\r\n    };\r\n}\r\n\r\nexport function actionConsultarActividadesUsuario(numeroDocumento, token) {\r\n    var tokenRequest = desencriptar(token);\r\n    const headers = {\r\n        'Content-Type': 'application/json',\r\n        'TokenAuto': tokenRequest,\r\n        'Permiso': 'sa_Asignacion de actividades a los usuarios'\r\n    }\r\n    return (dispatch, getState) => {\r\n        axios.get(\"http://localhost:9090/proyectosESCOM-web/api/usuario/listarActividadesUsuario/\" + numeroDocumento, { headers: headers })\r\n            .then(response => {\r\n                dispatch({\r\n                    type: MOSTRAR_ACTIVIDADES_USUARIO,\r\n                    respuesta: response.data\r\n                });\r\n            }).catch((error) => {\r\n                console.log('errors', error);\r\n            });\r\n    };\r\n}\r\n\r\nexport function actionConsultarDocumentos(token) {\r\n    var tokenRequest = desencriptar(token);\r\n    const headers = {\r\n        'Content-Type': 'application/json',\r\n        'TokenAuto': tokenRequest,\r\n        'Permiso': 'sa_Consultar usuarios registrados'\r\n    }\r\n    return (dispatch, getState) => {\r\n        axios.get(\"http://localhost:9090/proyectosESCOM-web/api/usuario/tipoDocumento\", { headers: headers })\r\n            .then(response => {\r\n                dispatch({\r\n                    type: MOSTRAR_DOCUMENTOS,\r\n                    respuesta: response.data\r\n                });\r\n            });\r\n    };\r\n}\r\n\r\nexport function actionAgregarUsuario(usuario, token) {\r\n    var tokenRequest = desencriptar(token);\r\n    const headers = {\r\n        'Content-Type': 'application/json',\r\n        'TokenAuto': tokenRequest,\r\n        'Permiso': 'sa_Registrar usuarios'\r\n    }\r\n    return (dispatch, getState) => {\r\n        axios.post(\"http://localhost:9090/proyectosESCOM-web/api/usuario/registrarUsuario\", usuario, { headers: headers })\r\n            .then(response => {\r\n                dispatch({\r\n                    type: AGREGAR_USUARIO,\r\n                    usuarioARegistrar: usuario\r\n                });\r\n                dispatch({\r\n                    type: MENSAJE_REGISTRAR,\r\n                    mensaje: 'Usuario registrado'\r\n                });\r\n            }).catch((error) => {\r\n                if (error.request.response === '') {\r\n                    dispatch({\r\n                        type: MENSAJE_REGISTRAR,\r\n                        mensaje: 'Servidor fuera de servicio temporalmente'\r\n                    });\r\n                }else{\r\n                    if (error.request) {\r\n                        var o = JSON.parse(error.request.response);\r\n                        let respuesta=mensajesDeError(o.respuesta);\r\n                        if(respuesta!==''){\r\n                            dispatch({\r\n                                type: MENSAJE_REGISTRAR,\r\n                                mensaje: respuesta\r\n                            });\r\n                        }else{\r\n                            dispatch({\r\n                                type: MENSAJE_REGISTRAR,\r\n                                mensaje: 'Ya existen los datos registrados previamente'\r\n                            });\r\n                        }\r\n                    }\r\n                } \r\n                \r\n            });\r\n\r\n    }\r\n}\r\n\r\nexport function actionAsignarActividad(token,numeroDocumento,actividad) {\r\n    var tokenRequest = desencriptar(token);\r\n    const headers = {\r\n        'Content-Type': 'application/json',\r\n        'TokenAuto': tokenRequest,\r\n        'Permiso': 'sa_Asignacion de actividades a los usuarios'\r\n    }\r\n    return (dispatch, getState) => {\r\n        axios.post(\"http://localhost:9090/proyectosESCOM-web/api/usuario/asignarActividad/\"+numeroDocumento,actividad, { headers: headers })\r\n            .then(response => {\r\n                dispatch({\r\n                    type: MENSAJE_ASIGNAR,\r\n                    mensaje: 'Actividad asignada'\r\n                });\r\n            }).catch((error) => {\r\n                if (error.request.response === '') {\r\n                    dispatch({\r\n                        type: MENSAJE_ASIGNAR,\r\n                        mensaje: 'Servidor fuera de servicio temporalmente'\r\n                    });\r\n                }else{\r\n                    if (error.request) {\r\n                        var o = JSON.parse(error.request.response);\r\n                        let respuesta=mensajesDeError(o.respuesta);\r\n                        if(respuesta!==''){\r\n                            dispatch({\r\n                                type: MENSAJE_ASIGNAR,\r\n                                mensaje: respuesta\r\n                            });\r\n                        }else{\r\n                            dispatch({\r\n                                type: MENSAJE_ASIGNAR,\r\n                                mensaje: 'Ya existen los datos registrados previamente'\r\n                            });\r\n                        }\r\n                    }\r\n                } \r\n                \r\n            });\r\n\r\n    }\r\n}\r\n\r\nexport function actionSuspenderActivarUsuario(cedula, token,actualizados) {\r\n    var tokenRequest = desencriptar(token);\r\n    const headers = {\r\n        'Content-Type': 'application/json',\r\n        'TokenAuto': tokenRequest,\r\n        'Permiso': 'sa_Suspender/activar usuarios'\r\n    }\r\n    return (dispatch, getState) => {\r\n        axios.get(\"http://localhost:9090/proyectosESCOM-web/api/usuario/cambiarEstadoUsuario/\"+cedula, { headers: headers })\r\n            .then(response => {\r\n                dispatch({\r\n                    type: MENSAJE_SUSPENDER,\r\n                    mensaje: 'Operacion hecha con exito'\r\n                });\r\n                dispatch({\r\n                    type: ACTUALIZAR_USUARIOS,\r\n                    usuario: actualizados\r\n                });\r\n            }).catch((error) => {\r\n                console.log(error);\r\n\r\n                if (error.request.response === '') {\r\n                    dispatch({\r\n                        type: MENSAJE_SUSPENDER,\r\n                        mensaje: 'Servidor fuera de servicio temporalmente'\r\n                    });\r\n                }else{\r\n                    if (error.request) {\r\n                        var o = JSON.parse(error.request.response);\r\n                        let respuesta=mensajesDeError(o.respuesta);\r\n                        if(respuesta!==''){\r\n                            dispatch({\r\n                                type: MENSAJE_SUSPENDER,\r\n                                mensaje: respuesta\r\n                            });\r\n                            console.log('get state',getState);\r\n                            dispatch({\r\n                                type: ACTUALIZAR_USUARIOS,\r\n                                usuario: actualizados\r\n                            });\r\n                        }else{\r\n                            dispatch({\r\n                                type: MENSAJE_SUSPENDER,\r\n                                mensaje: 'Sin acceso al servicio'\r\n                            });\r\n                        }\r\n                    }\r\n                } \r\n                \r\n            });\r\n\r\n    }\r\n}\r\n\r\nexport function actionCargarInformacionDeUsuario(cedula, token) {\r\n    const headers = {\r\n        'Content-Type': 'application/json',\r\n        'TokenAuto': desencriptar(token),\r\n        'Permiso': 'sa_Editar informacion de los usuarios'\r\n    }\r\n    return (dispatch, getState) => {\r\n        axios.get(\"http://localhost:9090/proyectosESCOM-web/api/usuario/datosUsuario/\" + cedula, { headers: headers })\r\n            .then(response => {\r\n                dispatch({\r\n                    type: INFORMACION_USUARIO,\r\n                    informacionUsuario: response.data\r\n                });\r\n            }).catch((error) => {\r\n                if (error.request.response === '') {\r\n                    dispatch({\r\n                        type: MENSAJE_EDITAR,\r\n                        mensaje: 'Servidor fuera de servicio temporalmente'\r\n                    });\r\n                }else{\r\n                    if (error.request) {\r\n                        var o = JSON.parse(error.request.response);\r\n                        let respuesta=mensajesDeError(o.respuesta);\r\n                        if(respuesta!==''){\r\n                            dispatch({\r\n                                type: MENSAJE_EDITAR,\r\n                                mensaje: respuesta\r\n                            });\r\n                        }else{\r\n                            dispatch({\r\n                                type: MENSAJE_EDITAR,\r\n                                mensaje: 'Sin acceso al servicio'\r\n                            });\r\n                        }\r\n                    }\r\n                } \r\n            });\r\n    };\r\n}\r\n\r\nexport function actionConsultarModulos(token) {\r\n    var tokenRequest = desencriptar(token);\r\n    const headers = {\r\n        'Content-Type': 'application/json',\r\n        'TokenAuto': tokenRequest,\r\n        'Permiso': 'sa_Asignacion de actividades a los usuarios'\r\n    }\r\n    return (dispatch, getState) => {\r\n        axios.get(\"http://localhost:9090/proyectosESCOM-web/api/modulo/listarModulos\", { headers: headers })\r\n            .then(response => {\r\n                dispatch({\r\n                    type: MODULOS_REGISTRADOS,\r\n                    respuesta: response.data\r\n                });\r\n                \r\n            }).catch((error) => {\r\n                if (error.request.response === '') {\r\n                    \r\n\r\n                }else{\r\n                    if (error.request) {\r\n                        var o = JSON.parse(error.request.response);\r\n                        let respuesta=mensajesDeError(o.respuesta);\r\n                        if(respuesta==='Sin permiso'){\r\n                            dispatch({\r\n                                type: ESTADO_ASIGNAR,\r\n                                estado: true\r\n                            });\r\n                        }else{\r\n                            //\r\n                        }\r\n                    }\r\n                } \r\n            });\r\n    };\r\n}\r\n\r\nexport function actionLimpiar() {\r\n    return (dispatch, getState) => {\r\n        dispatch({\r\n            type: ACTIVIDADES_SIN_ASIGNAR,\r\n            respuesta:undefined\r\n        });\r\n    };\r\n}\r\n\r\nexport function actionEliminarActividades(actividades, token,numeroDocumento) {\r\n    var tokenRequest = desencriptar(token);\r\n    const headers = {\r\n        'Content-Type': 'application/json',\r\n        'TokenAuto': tokenRequest,\r\n        'Permiso': 'sa_Asignacion de actividades a los usuarios'\r\n    }\r\n    return (dispatch, getState) => {\r\n        axios.put(\"http://localhost:9090/proyectosESCOM-web/api/usuario/eliminarActividadUsuario/\"+numeroDocumento,actividades, { headers: headers })\r\n            .then(response => {\r\n                dispatch({\r\n                    type: MENSAJE_ASIGNAR,\r\n                    mensaje: 'Actividades eliminadas'\r\n                });\r\n            }).catch((error) => {\r\n                console.log(error);\r\n\r\n                if (error.request.response === '') {\r\n                    dispatch({\r\n                        type: MENSAJE_ASIGNAR,\r\n                        mensaje: 'Servidor fuera de servicio temporalmente'\r\n                    });\r\n                }else{\r\n                    if (error.request) {\r\n                        var o = JSON.parse(error.request.response);\r\n                        let respuesta=mensajesDeError(o.respuesta);\r\n                        console.log('respuesta',respuesta);\r\n                        if(respuesta!==''){\r\n                            dispatch({\r\n                                type: MENSAJE_ASIGNAR,\r\n                                mensaje: respuesta\r\n                            });\r\n                        }else{\r\n                            dispatch({\r\n                                type: MENSAJE_ASIGNAR,\r\n                                mensaje: 'Sin acceso al servicio'\r\n                            });\r\n                        }\r\n                    }\r\n                } \r\n                \r\n            });\r\n\r\n    }\r\n}\r\n\r\nexport function actionConsultarActividadesSinAsignar(token,numeroDocumento,codigoModulo) {\r\n    var tokenRequest = desencriptar(token);\r\n    const headers = {\r\n        'Content-Type': 'application/json',\r\n        'TokenAuto': tokenRequest,\r\n        'Permiso': 'sa_Asignacion de actividades a los usuarios'\r\n    }\r\n    return (dispatch, getState) => {\r\n        axios.get(\"http://localhost:9090/proyectosESCOM-web/api/usuario/listarActividadesNoAsociadasUsuario/\"+numeroDocumento+\"/\"+codigoModulo, { headers: headers })\r\n            .then(response => {\r\n                dispatch({\r\n                    type: ACTIVIDADES_SIN_ASIGNAR,\r\n                    respuesta: response.data\r\n                });\r\n                \r\n            }).catch((error) => {\r\n                if (error.request.response === '') {\r\n                    \r\n\r\n                }else{\r\n                    if (error.request) {\r\n                        var o = JSON.parse(error.request.response);\r\n                        let respuesta=mensajesDeError(o.respuesta);\r\n                        if(respuesta==='Sin permiso'){\r\n                            dispatch({\r\n                                type: ESTADO_ASIGNAR,\r\n                                estado: true\r\n                            });\r\n                        }else{\r\n                            //\r\n                        }\r\n                    }\r\n                } \r\n            });\r\n    };\r\n}\r\n\r\n\r\n\r\n\r\nexport function actionAsignarCedula(cedula) {\r\n    return (dispatch, getState) => {\r\n        dispatch({\r\n            type: ANADIR_CEDULA_EDITAR,\r\n            cedula: cedula\r\n        });\r\n    }\r\n}\r\n\r\nexport function actionAsignarActividades() {\r\n    return (dispatch, getState) => {\r\n        dispatch({\r\n            type: ACTIVIDADES_SIN_ASIGNAR,\r\n            respuesta: null\r\n        });\r\n    }\r\n}\r\n\r\n\r\n\r\nexport function actionActualizarUsuarios(usuarios) {\r\n    return (dispatch, getState) => {\r\n        dispatch({\r\n            type: ACTUALIZAR_USUARIOS,\r\n            usuario: usuarios\r\n        });\r\n    }\r\n}\r\n\r\nexport function actionEditarUsuario(usuario, cedula, token) {\r\n    const headers = {\r\n        'Content-Type': 'application/json',\r\n        'TokenAuto': desencriptar(token),\r\n        'Permiso': 'sa_Editar informacion de los usuarios'\r\n    }\r\n    return (dispatch, getState) => {\r\n        axios.put(\"http://localhost:9090/proyectosESCOM-web/api/usuario/editarUsuario/\" + cedula, usuario, { headers: headers })\r\n            .then(response => {\r\n                dispatch({\r\n                    type: EDITAR_USUARIO,\r\n                    payload: usuario\r\n                });\r\n                dispatch({\r\n                    type: MENSAJE_EDITAR,\r\n                    mensaje: 'Modificado'\r\n                });\r\n            }).catch((error) => {\r\n                if (error.request.response === '') {\r\n                    dispatch({\r\n                        type: MENSAJE_EDITAR,\r\n                        mensaje: 'Servidor fuera de servicio temporalmente'\r\n                    });\r\n                }else{\r\n                    if (error.request) {\r\n                        var o = JSON.parse(error.request.response);\r\n                        let respuesta=mensajesDeError(o.respuesta);\r\n                        if(respuesta!==''){\r\n                            dispatch({\r\n                                type: MENSAJE_EDITAR,\r\n                                mensaje: respuesta\r\n                            });\r\n                        }else{\r\n                            dispatch({\r\n                                type: MENSAJE_EDITAR,\r\n                                mensaje: 'Ya existen los datos registrados previamente'\r\n                            });\r\n                        }\r\n                    }\r\n                } \r\n                \r\n            });\r\n    }\r\n}\r\n"]},"metadata":{},"sourceType":"module"}