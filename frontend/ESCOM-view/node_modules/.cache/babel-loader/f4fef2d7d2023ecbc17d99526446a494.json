{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\jeiso\\\\Desktop\\\\proyectosESCOM\\\\frontend\\\\ESCOM-view\\\\src\\\\SuperAdministrador\\\\componentes\\\\asignar\\\\AsignarActividadUsuario.js\";\nimport React from 'react'; //estilos\n\nimport '../../css/business-casual.css';\nimport '../../css/estilos.css';\nimport '../../css/bootstrap.min.css';\nimport '../../css/menu.css';\nimport 'react-notifications/lib/notifications.css'; //componentes\n\nimport { NotificationContainer, NotificationManager } from 'react-notifications';\nimport Button from '@material-ui/core/Button';\nimport Select from 'react-select';\nimport { reduxForm, Field } from 'redux-form';\nimport { withRouter } from 'react-router-dom';\nimport { seleccione } from '../../utilitario/validacionCampos.js';\nimport MaterialTable from 'material-table';\nimport Barra from '../general/BarraDirecciones.js';\nimport Divider from '@material-ui/core/Divider';\nimport Alerta from '@icons/material/AlertIcon.js';\nimport AddCircleOutlineIcon from '@material-ui/icons/AddCircleOutline';\nimport ExitToAppIcon from '@material-ui/icons/ExitToApp';\nimport Alert from '@material-ui/lab/Alert';\nimport AlertTitle from '@material-ui/lab/AlertTitle'; //componentes\n//redux\n\nimport { actionConsultarModulos, actionConsultarActividadesSinAsignar, actionEliminarActividades, actionLimpiar, actualizarMensajeAsignar, actionAsignarActividades, actionConsultarActividadesUsuario, actionAsignarActividad } from '../../actions/actionsUsuario.js';\nimport { connect } from 'react-redux';\n\nclass AsignarActividadUsuario extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      selectedOption: 0,\n      valor: null,\n      actividadesSeleccionadas: []\n    };\n\n    this.opciones = () => {\n      let respuesta = [];\n      this.props.modulos.forEach(modulo => {\n        let objeto = {\n          label: modulo.nombreModulo,\n          value: modulo.idModulo\n        };\n        respuesta.push(objeto);\n      });\n      return respuesta;\n    };\n\n    this.actividades = () => {\n      let respuesta = [];\n\n      if (this.props.actividadesSinAsignar !== null && this.props.actividadesSinAsignar !== undefined) {\n        this.props.actividadesSinAsignar.forEach(actividad => {\n          let objeto = {\n            label: actividad.nombre,\n            value: actividad.idActividad\n          };\n          respuesta.push(objeto);\n        });\n        return respuesta;\n      } else {\n        return null;\n      }\n    };\n\n    this.retornarValor = () => {\n      return this.state.valor;\n    };\n\n    this.handleChange = selectedOption => {\n      this.setState({\n        selectedOption: selectedOption\n      });\n      this.setState({\n        valor: null\n      });\n      this.props.actionConsultarActividadesSinAsignar(localStorage.getItem('Token'), this.props.cedula, selectedOption.value);\n    };\n\n    this.handleChangeDos = selectedOption => {\n      this.setState({\n        valor: selectedOption\n      });\n    };\n\n    this.onClickCancelar = event => {\n      event.preventDefault();\n      this.props.history.push('/adminUsuario');\n    };\n\n    this.handleSubmit = formValues => {\n      if (this.state.valor !== null) {\n        let actividad = {\n          idActividad: this.state.valor.value,\n          nombre: this.state.valor.label\n        };\n        this.setState({\n          valor: null\n        });\n        this.props.actionAsignarActividad(localStorage.getItem('Token'), this.props.cedula, actividad);\n      }\n    };\n  }\n\n  componentDidMount() {\n    if (this.props.cedula === undefined || this.props.cedula.length === 0) {\n      this.props.history.push('/adminUsuario');\n    }\n\n    this.props.actionConsultarModulos(localStorage.getItem('Token'));\n    this.props.actionConsultarActividadesUsuario(this.props.cedula, localStorage.getItem('Token'));\n  }\n\n  componentDidUpdate() {\n    switch (this.props.mensaje) {\n      case 'Actividad asignada':\n        NotificationManager.success('Actividad asignada');\n        this.setState({\n          valor: null\n        });\n        this.props.actualizarMensajeAsignar('');\n        this.props.actionConsultarActividadesUsuario(this.props.cedula, localStorage.getItem('Token'));\n        this.props.actionConsultarActividadesSinAsignar(localStorage.getItem('Token'), this.props.cedula, this.state.selectedOption.value);\n        break;\n\n      case 'Actividades eliminadas':\n        NotificationManager.success('Actividades eliminadas');\n        this.props.actualizarMensajeAsignar('');\n        this.props.actionConsultarActividadesUsuario(this.props.cedula, localStorage.getItem('Token'));\n\n        if (this.state.selectedOption.value !== undefined) {\n          debugger;\n          this.props.actionConsultarActividadesSinAsignar(localStorage.getItem('Token'), this.props.cedula, this.state.selectedOption.value);\n        }\n\n        break;\n\n      default:\n        break;\n    }\n  }\n\n  render() {\n    return React.createElement(React.Fragment, null, React.createElement(\"div\", {\n      className: \"text-left titulo\",\n      style: estiloLetrero,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 136\n      },\n      __self: this\n    }, React.createElement(\"h4\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 137\n      },\n      __self: this\n    }, \"Asignar actividad a usuario\")), React.createElement(Barra, {\n      texto: \"Inicio > Administracion de usuarios > Asignaci\\xF3n de actividad a usuario\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 139\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      className: \"container\",\n      style: {\n        paddingTop: \"7px\",\n        paddingRight: \"44px\",\n        paddingLeft: \"40px\",\n        paddingBottom: \"20px\",\n        margin: \"0px 0px 32px\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 140\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"container shadow\",\n      style: {\n        background: \"white\",\n        paddingTop: \"37px\",\n        paddingRight: \"31px\",\n        paddingLeft: \"31px\",\n        paddingBottom: \"21px\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 149\n      },\n      __self: this\n    }, this.props.habilitado ? React.createElement(\"div\", {\n      className: \"col-sm-12\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 158\n      },\n      __self: this\n    }, React.createElement(Alert, {\n      severity: \"error\",\n      variant: \"outlined\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 159\n      },\n      __self: this\n    }, React.createElement(AlertTitle, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 160\n      },\n      __self: this\n    }, \"Sin permiso\"), \"No tiene permisos suficientes para administrar las actividades de los usuarios\")) : React.createElement(React.Fragment, null, React.createElement(\"form\", {\n      onSubmit: this.props.handleSubmit(this.handleSubmit),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 164\n      },\n      __self: this\n    }, React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 165\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      className: \"row\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 166\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"col-md-6\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 167\n      },\n      __self: this\n    }, React.createElement(Field, {\n      name: \"modulo\",\n      validate: [seleccione],\n      onChange: this.handleChange,\n      component: ReduxFormSelect,\n      options: this.opciones(),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 168\n      },\n      __self: this\n    })), React.createElement(\"div\", {\n      className: \"col-md-6\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 170\n      },\n      __self: this\n    }, React.createElement(Field, {\n      name: \"actividad\",\n      validate: [seleccione],\n      valor: this.retornarValor(),\n      onChange: this.handleChangeDos,\n      component: ReduxFormSelectDos,\n      options: this.actividades(),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 171\n      },\n      __self: this\n    }))), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 174\n      },\n      __self: this\n    }), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 175\n      },\n      __self: this\n    }), React.createElement(Button, {\n      type: \"submit\",\n      variant: \"contained\",\n      color: \"primary\",\n      endIcon: React.createElement(AddCircleOutlineIcon, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 180\n        },\n        __self: this\n      }),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 176\n      },\n      __self: this\n    }, \"A\\xF1adir\"), React.createElement(Button, {\n      type: \"submit\",\n      variant: \"contained\",\n      color: \"secondary\",\n      onClick: this.onClickCancelar,\n      endIcon: React.createElement(ExitToAppIcon, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 187\n        },\n        __self: this\n      }),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 182\n      },\n      __self: this\n    }, \"Salir\"), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 189\n      },\n      __self: this\n    }), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 190\n      },\n      __self: this\n    }), React.createElement(Divider, {\n      variant: \"middle\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 191\n      },\n      __self: this\n    }), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 192\n      },\n      __self: this\n    })), React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 194\n      },\n      __self: this\n    }, React.createElement(MaterialTable, {\n      title: \"Actividades actualmente asignadas al usuario\",\n      localization: {\n        header: {\n          actions: ' '\n        },\n        pagination: {\n          nextTooltip: 'Siguiente ',\n          previousTooltip: 'Anterior',\n          labelDisplayedRows: '{from}-{to} de {count}',\n          lastTooltip: 'Ultima pagina',\n          firstTooltip: 'Primera pagina',\n          labelRowsSelect: 'Registros',\n          firstAriaLabel: 'oooo'\n        },\n        body: {\n          emptyDataSourceMessage: 'Aun no hay ningun modulo registrado'\n        },\n        toolbar: {\n          searchTooltip: 'Buscar',\n          searchPlaceholder: 'Buscar',\n          nRowsSelected: '{0} actividades seleccionadas'\n        }\n      },\n      columns: [{\n        title: 'Nombre de la actividad',\n        field: 'nombre',\n        headerStyle: estiloCabecera,\n        cellStyle: estiloFila\n      }],\n      data: this.props.actividades,\n      options: {\n        search: true,\n        rowStyle: estiloFila,\n        selection: true\n      },\n      onSelectionChange: rows => {\n        this.setState({\n          actividadesSeleccionadas: rows\n        });\n      },\n      actions: [{\n        tooltip: 'Remove All Selected Users',\n        icon: 'delete',\n        onClick: (evt, data) => this.props.actionEliminarActividades(this.state.actividadesSeleccionadas, localStorage.getItem('Token'), this.props.cedula)\n      }],\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 195\n      },\n      __self: this\n    }))), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 242\n      },\n      __self: this\n    }))), React.createElement(NotificationContainer, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 245\n      },\n      __self: this\n    }));\n  }\n\n}\n\nexport const ReduxFormSelect = props => {\n  const input = props.input,\n        options = props.options;\n  const _props$meta = props.meta,\n        touched = _props$meta.touched,\n        error = _props$meta.error;\n  return React.createElement(React.Fragment, null, React.createElement(Select, Object.assign({}, input, {\n    maxMenuHeight: 185,\n    isSearchable: true,\n    placeholder: \"Seleccione un modulo\",\n    onChange: value => input.onChange(value),\n    onBlur: () => input.onBlur(input.value),\n    noOptionsMessage: () => 'Aun no hay ningun modulo registrado',\n    options: options,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 257\n    },\n    __self: this\n  })), touched && error && React.createElement(\"span\", {\n    className: \"text-danger letra form-group\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 267\n    },\n    __self: this\n  }, error));\n};\nexport const ReduxFormSelectDos = props => {\n  const input = props.input,\n        options = props.options;\n  const _props$meta2 = props.meta,\n        touched = _props$meta2.touched,\n        error = _props$meta2.error;\n  return React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 276\n    },\n    __self: this\n  }, React.createElement(Select, Object.assign({}, input, {\n    maxMenuHeight: 185,\n    isSearchable: true,\n    value: props.valor,\n    placeholder: \"Seleccione una actividad\",\n    onChange: value => input.onChange(value),\n    onBlur: () => input.onBlur(input.value),\n    options: options,\n    noOptionsMessage: () => 'No hay ninguna actividad que mostrar',\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 277\n    },\n    __self: this\n  })), touched && error && React.createElement(\"span\", {\n    className: \"text-danger letra form-group\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 288\n    },\n    __self: this\n  }, error));\n};\nconst estiloCabecera = {\n  fontSize: '13px',\n  fontFamily: 'sans-serif',\n  padding: '8px',\n  background: '#e7ecf1'\n};\nconst estiloFila = {\n  fontSize: '12px',\n  fontFamily: 'sans-serif',\n  padding: '8px'\n};\nconst estiloLetrero = {\n  paddingTop: \"20px\",\n  paddingRight: \"12px\",\n  paddingLeft: \"40px\",\n  paddingBottom: \"1px\"\n};\n\nfunction mapStateToProps(state) {\n  return {\n    modulos: state.user.modulosAsignar,\n    mensaje: state.user.mensajeAsignar,\n    habilitado: state.user.estadoAsignar,\n    cedula: state.user.cedula,\n    actividades: state.user.actividadesUsuario,\n    actividadesSinAsignar: state.user.actividadesSinAsignar\n  };\n}\n\nlet asignarActividadUsuario = reduxForm({\n  form: 'asignarActividadUsuario'\n})(AsignarActividadUsuario);\nexport default withRouter(connect(mapStateToProps, {\n  actionConsultarModulos,\n  actionLimpiar,\n  actionEliminarActividades,\n  actionConsultarActividadesSinAsignar,\n  actualizarMensajeAsignar,\n  actionAsignarActividad,\n  actionAsignarActividades,\n  actionConsultarActividadesUsuario\n})(asignarActividadUsuario));","map":{"version":3,"sources":["C:/Users/jeiso/Desktop/proyectosESCOM/frontend/ESCOM-view/src/SuperAdministrador/componentes/asignar/AsignarActividadUsuario.js"],"names":["React","NotificationContainer","NotificationManager","Button","Select","reduxForm","Field","withRouter","seleccione","MaterialTable","Barra","Divider","Alerta","AddCircleOutlineIcon","ExitToAppIcon","Alert","AlertTitle","actionConsultarModulos","actionConsultarActividadesSinAsignar","actionEliminarActividades","actionLimpiar","actualizarMensajeAsignar","actionAsignarActividades","actionConsultarActividadesUsuario","actionAsignarActividad","connect","AsignarActividadUsuario","Component","state","selectedOption","valor","actividadesSeleccionadas","opciones","respuesta","props","modulos","forEach","modulo","objeto","label","nombreModulo","value","idModulo","push","actividades","actividadesSinAsignar","undefined","actividad","nombre","idActividad","retornarValor","handleChange","setState","localStorage","getItem","cedula","handleChangeDos","onClickCancelar","event","preventDefault","history","handleSubmit","formValues","componentDidMount","length","componentDidUpdate","mensaje","success","render","estiloLetrero","paddingTop","paddingRight","paddingLeft","paddingBottom","margin","background","habilitado","ReduxFormSelect","ReduxFormSelectDos","header","actions","pagination","nextTooltip","previousTooltip","labelDisplayedRows","lastTooltip","firstTooltip","labelRowsSelect","firstAriaLabel","body","emptyDataSourceMessage","toolbar","searchTooltip","searchPlaceholder","nRowsSelected","title","field","headerStyle","estiloCabecera","cellStyle","estiloFila","search","rowStyle","selection","rows","tooltip","icon","onClick","evt","data","input","options","meta","touched","error","onChange","onBlur","fontSize","fontFamily","padding","mapStateToProps","user","modulosAsignar","mensajeAsignar","estadoAsignar","actividadesUsuario","asignarActividadUsuario","form"],"mappings":"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","sourcesContent":["import React from 'react';\r\n\r\n//estilos\r\nimport '../../css/business-casual.css'\r\nimport '../../css/estilos.css'\r\nimport '../../css/bootstrap.min.css'\r\nimport '../../css/menu.css'\r\nimport 'react-notifications/lib/notifications.css';\r\n\r\n//componentes\r\nimport { NotificationContainer, NotificationManager } from 'react-notifications';\r\nimport Button from '@material-ui/core/Button';\r\nimport Select from 'react-select'\r\nimport { reduxForm, Field } from 'redux-form';\r\nimport { withRouter } from 'react-router-dom';\r\nimport { seleccione } from '../../utilitario/validacionCampos.js';\r\nimport MaterialTable from 'material-table';\r\nimport Barra from '../general/BarraDirecciones.js';\r\n\r\n\r\nimport Divider from '@material-ui/core/Divider';\r\nimport Alerta from '@icons/material/AlertIcon.js';\r\nimport AddCircleOutlineIcon from '@material-ui/icons/AddCircleOutline';\r\nimport ExitToAppIcon from '@material-ui/icons/ExitToApp';\r\nimport Alert from '@material-ui/lab/Alert';\r\nimport AlertTitle from '@material-ui/lab/AlertTitle';\r\n//componentes\r\n\r\n//redux\r\nimport { actionConsultarModulos, actionConsultarActividadesSinAsignar, actionEliminarActividades, actionLimpiar, actualizarMensajeAsignar, actionAsignarActividades, actionConsultarActividadesUsuario, actionAsignarActividad } from '../../actions/actionsUsuario.js'\r\nimport { connect } from 'react-redux';\r\n\r\nclass AsignarActividadUsuario extends React.Component {\r\n\r\n    state = {\r\n        selectedOption: 0,\r\n        valor: null,\r\n        actividadesSeleccionadas: []\r\n    }\r\n\r\n    componentDidMount() {\r\n        if (this.props.cedula === undefined || this.props.cedula.length === 0) {\r\n            this.props.history.push('/adminUsuario');\r\n        }\r\n        this.props.actionConsultarModulos(localStorage.getItem('Token'));\r\n        this.props.actionConsultarActividadesUsuario(this.props.cedula, localStorage.getItem('Token'));\r\n    }\r\n    componentDidUpdate() {\r\n        switch (this.props.mensaje) {\r\n            case 'Actividad asignada':\r\n                NotificationManager.success('Actividad asignada');\r\n                this.setState({ valor: null });\r\n                this.props.actualizarMensajeAsignar('');\r\n                this.props.actionConsultarActividadesUsuario(this.props.cedula, localStorage.getItem('Token'));\r\n                this.props.actionConsultarActividadesSinAsignar(localStorage.getItem('Token'), this.props.cedula, this.state.selectedOption.value);\r\n                break;\r\n            case 'Actividades eliminadas':\r\n                NotificationManager.success('Actividades eliminadas');\r\n                this.props.actualizarMensajeAsignar('');\r\n                this.props.actionConsultarActividadesUsuario(this.props.cedula, localStorage.getItem('Token'));\r\n                if (this.state.selectedOption.value !== undefined) {\r\n                    debugger;\r\n                    this.props.actionConsultarActividadesSinAsignar(localStorage.getItem('Token'), this.props.cedula, this.state.selectedOption.value);\r\n                }\r\n                break;\r\n            default:\r\n                break;\r\n        }\r\n\r\n    }\r\n\r\n    opciones = () => {\r\n        let respuesta = [];\r\n        this.props.modulos.forEach(\r\n            modulo => {\r\n                let objeto = {\r\n                    label: modulo.nombreModulo,\r\n                    value: modulo.idModulo,\r\n                }\r\n                respuesta.push(objeto);\r\n            }\r\n        )\r\n        return respuesta;\r\n    }\r\n\r\n    actividades = () => {\r\n        let respuesta = [];\r\n        if (this.props.actividadesSinAsignar !== null && this.props.actividadesSinAsignar !== undefined) {\r\n            this.props.actividadesSinAsignar.forEach(\r\n                actividad => {\r\n                    let objeto = {\r\n                        label: actividad.nombre,\r\n                        value: actividad.idActividad,\r\n                    }\r\n                    respuesta.push(objeto);\r\n                }\r\n            )\r\n            return respuesta;\r\n        } else {\r\n            return null;\r\n        }\r\n    }\r\n\r\n    retornarValor = () => {\r\n        return this.state.valor;\r\n    }\r\n\r\n    handleChange = selectedOption => {\r\n        this.setState({ selectedOption: selectedOption });\r\n        this.setState({ valor: null });\r\n        this.props.actionConsultarActividadesSinAsignar(localStorage.getItem('Token'), this.props.cedula, selectedOption.value);\r\n    };\r\n\r\n    handleChangeDos = selectedOption => {\r\n        this.setState({ valor: selectedOption });\r\n    };\r\n\r\n    onClickCancelar = (event) => {\r\n        event.preventDefault();\r\n        this.props.history.push('/adminUsuario');\r\n    }\r\n\r\n    handleSubmit = formValues => {\r\n        if (this.state.valor !== null) {\r\n            let actividad = {\r\n                idActividad: this.state.valor.value,\r\n                nombre: this.state.valor.label\r\n            }\r\n            this.setState({ valor: null });\r\n            this.props.actionAsignarActividad(localStorage.getItem('Token'), this.props.cedula, actividad);\r\n        }\r\n    }\r\n    render() {\r\n        return (\r\n            <>\r\n                <div className=\"text-left titulo\" style={estiloLetrero}>\r\n                    <h4>Asignar actividad a usuario</h4>\r\n                </div>\r\n                <Barra texto=\"Inicio > Administracion de usuarios > Asignación de actividad a usuario\" />\r\n                <div className=\"container\" style={{\r\n                    paddingTop: \"7px\",\r\n                    paddingRight: \"44px\",\r\n                    paddingLeft: \"40px\",\r\n                    paddingBottom: \"20px\",\r\n                    margin: \"0px 0px 32px\"\r\n\r\n                }}>\r\n\r\n                    <div className=\"container shadow\" style={\r\n                        {\r\n                            background: \"white\",\r\n                            paddingTop: \"37px\",\r\n                            paddingRight: \"31px\",\r\n                            paddingLeft: \"31px\",\r\n                            paddingBottom: \"21px\"\r\n                        }} >\r\n                        {\r\n                            this.props.habilitado ? <div className=\"col-sm-12\">\r\n                                <Alert severity=\"error\" variant=\"outlined\">\r\n                                    <AlertTitle>Sin permiso</AlertTitle>\r\n                                    No tiene permisos suficientes para administrar las actividades de los usuarios</Alert>\r\n                            </div> :\r\n                                <>\r\n                                    <form onSubmit={this.props.handleSubmit(this.handleSubmit)}>\r\n                                        <br />\r\n                                        <div className=\"row\">\r\n                                            <div className=\"col-md-6\">\r\n                                                <Field name=\"modulo\" validate={[seleccione]} onChange={this.handleChange} component={ReduxFormSelect} options={this.opciones()} />\r\n                                            </div>\r\n                                            <div className=\"col-md-6\">\r\n                                                <Field name=\"actividad\" validate={[seleccione]} valor={this.retornarValor()} onChange={this.handleChangeDos} component={ReduxFormSelectDos} options={this.actividades()} />\r\n                                            </div>\r\n                                        </div>\r\n                                        <br />\r\n                                        <br />\r\n                                        <Button\r\n                                            type=\"submit\"\r\n                                            variant=\"contained\"\r\n                                            color=\"primary\"\r\n                                            endIcon={<AddCircleOutlineIcon />}\r\n                                        >Añadir</Button>\r\n                                        <Button\r\n                                            type=\"submit\"\r\n                                            variant=\"contained\"\r\n                                            color=\"secondary\"\r\n                                            onClick={this.onClickCancelar}\r\n                                            endIcon={<ExitToAppIcon />}\r\n                                        >Salir</Button>\r\n                                        <br />\r\n                                        <br />\r\n                                        <Divider variant=\"middle\" />\r\n                                        <br />\r\n                                    </form>\r\n                                    <div>\r\n                                        <MaterialTable\r\n                                            title=\"Actividades actualmente asignadas al usuario\"\r\n                                            localization={{\r\n                                                header: {\r\n                                                    actions: ' '\r\n                                                },\r\n                                                pagination: {\r\n                                                    nextTooltip: 'Siguiente ',\r\n                                                    previousTooltip: 'Anterior',\r\n                                                    labelDisplayedRows: '{from}-{to} de {count}',\r\n                                                    lastTooltip: 'Ultima pagina',\r\n                                                    firstTooltip: 'Primera pagina',\r\n                                                    labelRowsSelect: 'Registros',\r\n                                                    firstAriaLabel: 'oooo'\r\n                                                },\r\n                                                body: {\r\n                                                    emptyDataSourceMessage: 'Aun no hay ningun modulo registrado'\r\n                                                },\r\n                                                toolbar: {\r\n                                                    searchTooltip: 'Buscar',\r\n                                                    searchPlaceholder: 'Buscar',\r\n                                                    nRowsSelected: '{0} actividades seleccionadas'\r\n                                                }\r\n                                            }}\r\n                                            columns={[\r\n                                                { title: 'Nombre de la actividad', field: 'nombre', headerStyle: estiloCabecera, cellStyle: estiloFila }\r\n                                            ]}\r\n                                            data={this.props.actividades}\r\n                                            options={{\r\n                                                search: true,\r\n                                                rowStyle: estiloFila,\r\n                                                selection: true\r\n                                            }}\r\n                                            onSelectionChange={(rows) => {\r\n                                                this.setState({ actividadesSeleccionadas: rows });\r\n                                            }}\r\n                                            actions={[\r\n                                                {\r\n                                                    tooltip: 'Remove All Selected Users',\r\n                                                    icon: 'delete',\r\n                                                    onClick: (evt, data) => this.props.actionEliminarActividades(this.state.actividadesSeleccionadas, localStorage.getItem('Token'), this.props.cedula)\r\n                                                }\r\n                                            ]}\r\n                                        />\r\n                                    </div>\r\n                                </>\r\n                        }\r\n                        <br />\r\n                    </div>\r\n                </div>\r\n                <NotificationContainer />\r\n            </>\r\n\r\n        )\r\n    }\r\n}\r\n\r\nexport const ReduxFormSelect = props => {\r\n    const { input, options } = props;\r\n    const { touched, error } = props.meta;\r\n    return (\r\n        <>\r\n            <Select\r\n                {...input}\r\n                maxMenuHeight={185}\r\n                isSearchable={true}\r\n                placeholder='Seleccione un modulo'\r\n                onChange={value => input.onChange(value)}\r\n                onBlur={() => input.onBlur(input.value)}\r\n                noOptionsMessage={() => 'Aun no hay ningun modulo registrado'}\r\n                options={options}\r\n            />\r\n            {touched && ((error && <span className=\"text-danger letra form-group\">{error}</span>))}\r\n        </>\r\n    )\r\n}\r\n\r\nexport const ReduxFormSelectDos = props => {\r\n    const { input, options } = props;\r\n    const { touched, error } = props.meta;\r\n    return (\r\n        <div>\r\n            <Select\r\n                {...input}\r\n                maxMenuHeight={185}\r\n                isSearchable={true}\r\n                value={props.valor}\r\n                placeholder='Seleccione una actividad'\r\n                onChange={value => input.onChange(value)}\r\n                onBlur={() => input.onBlur(input.value)}\r\n                options={options}\r\n                noOptionsMessage={() => 'No hay ninguna actividad que mostrar'}\r\n            />\r\n            {touched && ((error && <span className=\"text-danger letra form-group\">{error}</span>))}\r\n        </div>\r\n    )\r\n}\r\n\r\nconst estiloCabecera = {\r\n    fontSize: '13px',\r\n    fontFamily: 'sans-serif',\r\n    padding: '8px',\r\n    background: '#e7ecf1'\r\n\r\n}\r\n\r\nconst estiloFila = {\r\n    fontSize: '12px',\r\n    fontFamily: 'sans-serif',\r\n    padding: '8px',\r\n}\r\n\r\n\r\nconst estiloLetrero = {\r\n    paddingTop: \"20px\",\r\n    paddingRight: \"12px\",\r\n    paddingLeft: \"40px\",\r\n    paddingBottom: \"1px\"\r\n}\r\n\r\n\r\n\r\nfunction mapStateToProps(state) {\r\n    return {\r\n        modulos: state.user.modulosAsignar,\r\n        mensaje: state.user.mensajeAsignar,\r\n        habilitado: state.user.estadoAsignar,\r\n        cedula: state.user.cedula,\r\n        actividades: state.user.actividadesUsuario,\r\n        actividadesSinAsignar: state.user.actividadesSinAsignar\r\n    }\r\n}\r\n\r\nlet asignarActividadUsuario = reduxForm({\r\n    form: 'asignarActividadUsuario'\r\n})(AsignarActividadUsuario)\r\n\r\nexport default withRouter(connect(mapStateToProps, { actionConsultarModulos, actionLimpiar, actionEliminarActividades, actionConsultarActividadesSinAsignar, actualizarMensajeAsignar, actionAsignarActividad, actionAsignarActividades, actionConsultarActividadesUsuario })(asignarActividadUsuario));\r\n"]},"metadata":{},"sourceType":"module"}